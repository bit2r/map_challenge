---
title: "지도제작 대회"
subtitle: "국회의원 선거구"
description: |
  대한민국 선거구를 확인해보자.
author:
  - name: 이광춘
    url: https://www.linkedin.com/in/kwangchunlee/
    affiliation: 한국 R 사용자회
    affiliation-url: https://github.com/bit2r
title-block-banner: true
format:
  html:
    theme: flatly
    code-fold: true
    code-overflow: wrap
    toc: true
    toc-depth: 3
    toc-title: 목차
    number-sections: true
    highlight-style: github    
    self-contained: false
    default-image-extension: jpg
filters:
   - lightbox
lightbox: auto
link-citations: true
knitr:
  opts_chunk: 
    message: false
    warning: false
    collapse: true
    comment: "#>" 
    R.options:
      knitr.graphics.auto_pdf: true
editor_options: 
  chunk_output_type: console
---


# 오마이뉴스 선거구

[2020. 4. 15. 21대 국회의원 총선거 선거구 지도](https://github.com/OhmyNews/2020_21_elec_map)를 가져온다.

```{r}
library(sf)
library(tidyverse)

precinct <- st_read("data/2020_21_elec_253.json") |> 
  st_set_crs(4326)

st_geometry(precinct) |> plot()

```


## 데이터셋

```{r}
library(rvest)

wiki_url <- "https://ko.wikipedia.org/wiki/%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD_%EC%A0%9C21%EB%8C%80_%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90_%EC%84%A0%EA%B1%B0_%EB%8D%94%EB%B6%88%EC%96%B4%EB%AF%BC%EC%A3%BC%EB%8B%B9_%ED%9B%84%EB%B3%B4_%EB%AA%A9%EB%A1%9D"

sido_name <- read_html(wiki_url) |> 
  html_nodes("h3") |> 
  html_text() |> 
  str_remove("\\[편집\\]")

minju_lst <- read_html(wiki_url) |> 
  html_nodes(".wikitable") |> 
  html_table()

names(minju_lst) <- sido_name

nomination <- sido_name |> 
  enframe(value = "시도명") |> 
  mutate(data = minju_lst) |> 
  unnest(data) |> 
  select(-name) |> 
  janitor::clean_names(ascii = FALSE) 

nomination
```

# 출판용

## 공천 유형

```{r}
library(janitor)
library(gt)
library(gtExtras)

nomination_type_gt <- nomination |> 
  tabyl(공천_유형) |> 
  arrange(desc(n)) |> 
  janitor::adorn_totals(name = "합계") |> 
  janitor::adorn_pct_formatting() |> 
  rename(후보수 = n,
         비율 = percent) |> 
  gt() |> 
  gt_theme_538() |> 
  tab_options(
    heading.title.font.size = px(16L),
    column_labels.font.size = px(14L),
    table.font.size = px(12L)
  ) |> 
  cols_align(align = "center") |> 
  tab_header(
    title = md("더불어민주당 공천 유형"),
    subtitle = md("제21대 국회의원 선거")
  ) |> 
  tab_style(
    style = cell_fill(color = "gray85"),
    locations = cells_body(
      rows = 공천_유형 == "단수 공천"
    )
  )  

nomination_type_gt

nomination_type_gt |> 
  gtsave(filename = "images/nomation_type_gt.png")

  
```


## 공천 상세

```{r}
library(gt)
library(gtExtras)

nomination |> 
  mutate(
      유튜브 = map(유튜브, ~ htmltools::a(href = .x, "바로가기")),
      유튜브 = map(유튜브, ~ gt::html(as.character(.x))))  |> 
  gt(groupname_col = '시도명') |> 
  gt_theme_538() |> 
  tab_options(
    table.font.size = px(12L)
  ) |> 
  sub_missing(
    columns = everything(),
    missing_text = "-"
  ) |> 
  cols_align(align = "center") |> 
  tab_style(
    style = cell_fill(color = "gray85"),
    locations = cells_body(
      rows = 공천_유형 == "단수 공천"
    )
  )  
```


# 카토그램

[출처: [Mapping UN Votes on a hex grid](https://www.simoncoulombe.com/2018/01/unvotes_hexgrid/)]{.aside}

## 전국

```{r}
#| eval: false

library(geogrid)
library(ggrepel)

precinct_cells <-  calculate_grid(precinct, 0.1, 'hexagonal')
precinct_hex <- assign_polygons(precinct, precinct_cells)

precinct_hex |> 
  write_rds("data/precinct_hex.rds")
```



```{r}
precinct_hex <- 
  read_rds("data/precinct_hex.rds")

precinct_hex |> 
  # filter(SGG_1 == '제주') |> 
  ggplot() +
    geom_sf() +
    ggrepel::geom_text_repel(
      data = precinct_hex,
        aes(label = SGG_3, geometry = geometry), stat = "sf_coordinates", 
        min.segment.length = 1, size = 2, max.overlaps = Inf
    ) 
```


## 서울

```{r}
library(geogrid)
library(ggrepel)


seoul_precinct <- precinct |> filter(SGG_1 == "서울")

seoul_precinct_cells <-  calculate_grid(shape=seoul_precinct, grid_type='hexagonal')
seoul_precinct_hex <- assign_polygons(seoul_precinct, seoul_precinct_cells)


seoul_precinct_hex |> 
  ggplot() +
    geom_sf() +
    ggrepel::geom_text_repel(
      data = seoul_precinct_hex,
        aes(label = SGG_3, geometry = geometry), stat = "sf_coordinates", 
        min.segment.length = 1, size = 3, max.overlaps = Inf
    )

seoul_precinct_hex |>
  st_union() %>%
  st_boundary() %>%
  ggplot() +
    geom_sf( lwd = 2 )


# seoul_precinct <- seoul_precinct %>%
#   mutate(tile_map = generate_map(geometry, square = FALSE, flat_topped = TRUE))


# seoul_precinct |>
#   st_union() %>%
#   st_boundary() %>%
#   ggplot() +
#     geom_sf( lwd = 2 )

# 
# ggplot(seoul_precinct) +
#   geom_sf(aes(geometry = tile_map))

```


# 선거구와 공천

`fuzzyjjoin` 함수를 사용해서 매칭을 하고 일부 잘못 매칭된 것은 수작업으로 보정한다.

```{r}
library(fuzzyjoin)

nomination_tbl <- nomination |> 
  mutate(SGG_2 = glue::glue("{시도명} {str_remove_all(선거구, '( )|·')}")) |> 
  select(SGG_2, 후보자, 공천_유형) 

precinct_nomination <- stringdist_left_join(precinct, nomination_tbl, 
                     by = c("SGG_2" = "SGG_2"), 
                     method       = "jw", 
                     max_dist     = 0.08) 

precinct_nomination
```


```{r}
extrafont::loadfonts()

precinct_nomination_tbl <- readxl::read_excel("data/precinct_nomination.xlsx") 

precinct_nomination_sf <- left_join(precinct |> select(SGG_Code, geometry), 
                                    precinct_nomination_tbl, by = "SGG_Code")


nomination_type_gg <- ggplot() +
  geom_sf(data = precinct_nomination_sf, 
          aes(geometry = geometry, fill = 공천_유형)) +
  theme_void(base_family = "MaruBuri") +
  theme(legend.position = "left") +
  scale_fill_manual(values = c("경선 공천" = "gray90",
                               "단수 공천" = "red",
                               "전략 공천" = "pink",
                               "청년 경선 공천" = "black")) +
  labs(title = "대한민국 제21대 국회의원 선거 더불어민주당 후보",
       caption = "자료출처: 위키백과")

  
metro_bb <- precinct_nomination_sf |> 
  filter(SGG_1 == "경기") |> st_bbox()

metro_nomination_type_gg <- ggplot() +
  geom_sf(data = precinct_nomination_sf |> filter(SGG_1 %in% c("서울", "경기")), 
          aes(geometry = geometry, fill = 공천_유형)) +
  theme_void(base_family = "MaruBuri") + 
  coord_sf(xlim = c(metro_bb['xmin'], metro_bb['xmax']),
           ylim = c(metro_bb['ymin'], metro_bb['ymax']), expand = FALSE) +
  theme(legend.position = "none") +
  scale_fill_manual(values = c("경선 공천" = "gray90",
                               "단수 공천" = "red",
                               "전략 공천" = "pink",
                               "청년 경선 공천" = "black")) +
    ggrepel::geom_text_repel(
      data = precinct_nomination_sf |> filter(SGG_1 %in% c("서울", "경기")) |> 
        mutate(SGG_3 = glue::glue("{ifelse(str_detect(공천_유형,'단수'), SGG_3, '')}")),
        aes(label = SGG_3, geometry = geometry), stat = "sf_coordinates", 
        min.segment.length = 1, size = 4, max.overlaps = Inf
    ) 

library(patchwork)

nomination_type_final <- nomination_type_gg + metro_nomination_type_gg +
  plot_layout(widths = c(1, 2))

nomination_type_final

# ragg::agg_jpeg("images/민주당_후보_공천.jpeg", 
#               width = 10, height = 7, units = "in", res = 600)
# nomination_type_final
# dev.off()
```


```{r}
xfun::embed_file('data/precinct_nomination.xlsx')
```

