[
  {
    "objectID": "day_01.html",
    "href": "day_01.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 아시아 대륙 색칠\n\n코드# Libraries Loading -------------------------------------------------------\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(maps)\nextrafont::loadfonts(\"win\")\n\n\n# Data Reading and Wrangling ----------------------------------------------\n# Generating pixel grid \nlat &lt;- tibble(lat = seq(-90, 90, by = .5))\nlong &lt;- tibble(long = seq(-180, 180, by = .5))\n\ndots &lt;- lat %&gt;% \n  full_join(long, by = character()) %&gt;% \n  as_tibble()\n\ndots &lt;- dots %&gt;% \n  mutate(country = map.where('world', long, lat),\n         lakes = map.where('lakes', long, lat)) %&gt;% \n  filter(!is.na(country) & is.na(lakes)) %&gt;% \n  dplyr::select(-lakes)\n\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %&gt;% \n  filter(region_wb != \"Antarctica\")\n\ndots &lt;- dots %&gt;% \n  mutate(\n    country = case_when(\n      country %in% c(\"Comoros:Grande Comore\", \"Comoros:Anjouan\") ~ \"Comoros\",\n      country %in% c(\"Cape Verde:Santo Antao\",\"Cape Verde:Sao Tiago\") ~ \"Cape Verde\",\n      country == \"Guinea-Bissau\" ~ \"Guinea Bissau\", \n      country == \"Equatorial Guinea:Rio Muni\" ~ \"Equatorial Guinea\", \n      country ==  \"Malawi:3\" ~ \"Malawi\",\n      country == \"Somalia:Somaliland\" ~ \"Somaliland\",\n      country == \"Tanzania\" ~ \"United Republic of Tanzania\", \n      TRUE ~ country))\n\nasia_dots &lt;- world %&gt;%\n  filter(continent == \"Asia\") %&gt;% \n  dplyr::select(admin, mapcolor7) %&gt;% \n  left_join(dots, by = c(\"admin\" = \"country\")) \n\n# Graphic -----------------------------------------------------------------\npalette &lt;- c(\"#8931EF\", \"#F2CA19\", \"#FF00BD\" , \"#0057E9\", \"#87E911\", \"#E11845\", \"#FF8A12\") \n\n# 2021 Version ----\nasia_dots %&gt;% \n  ggplot() + \n  geom_point(aes(x = long, y = lat, color = factor(mapcolor7)), size = .95) + \n  guides(color =\"none\") +\n  scale_color_manual(\n    values = palette\n  ) + \n  labs(\n    title = \"아시아\", \n    subtitle = glue::glue(\"1 대륙, {scales::comma(nrow(asia_dots))} 점\"), \n    caption = \"#30DayMapChallenge - 1일 : 대륙색칠\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"MaruBuri\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125, color = \"white\") + \n  coord_fixed(clip = \"off\") + \n  theme_void(base_family = \"MaruBuri\") + \n  theme(\n    plot.background = element_rect(fill = \"#111111\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3), color = \"white\", family = \"MaruBuri\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, size = rel(2.5), color = \"white\",family = \"MaruBuri\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.125), hjust = .5, color = \"white\", family = \"MaruBuri\", margin = margin(b = 15))\n  )\n\n\n\n\n\n\n\n\n2 아시아 대륙 점\n\n코드# 2022 Version ---- \nasia_dots %&gt;% \n  ggplot() + \n  geom_point(aes(x = long, y = lat), color = \"#F61753\", size = .05) + \n  labs(\n    title = \"아시아\", \n    subtitle = glue::glue(\"1 대륙, {scales::comma(nrow(asia_dots))} 점\"), \n    caption = \"#30DayMapChallenge - 1일 : 대륙색칠\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"MaruBuri\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125) + \n  coord_fixed(clip = \"off\") + \n  theme_void(base_family = \"MaruBuri\") + \n  theme(\n    plot.background = element_rect(fill = \"#FFFFFF\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3),  family = \"MaruBuri\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, color =\"grey30\", size = rel(2.5), family = \"MaruBuri\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.5), hjust = .5, family = \"MaruBuri\", margin = margin(b = 15))\n  )"
  },
  {
    "objectID": "day_02.html",
    "href": "day_02.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\nGIS 101: How do I map data points in R"
  },
  {
    "objectID": "day_02.html#인구수",
    "href": "day_02.html#인구수",
    "title": "지도제작 대회",
    "section": "\n1.1 인구수",
    "text": "1.1 인구수\n\n코드library(readxl)\nlibrary(tidyverse)\n\ngeonames_raw &lt;- read_excel(\"data/geonames-all-cities-with-a-population-1000@public.xlsx\") %&gt;% \n    janitor::clean_names()\n\nkorea_raw &lt;- geonames_raw %&gt;% \n  select(name, country_code, population, coordinates) %&gt;% \n  filter(country_code  == \"KR\") %&gt;% \n  separate(coordinates, into = c(\"lat\", \"long\"), sep = \",\", convert = TRUE)\n\n\nkorea &lt;- korea_raw %&gt;% \n  mutate(도시명 = c(\"한천리\", \"청송군\", \"청산\", \"함열\", \"동면\",\n\"유려\", \"심원\", \"법성\", \"연천\", \"동복\", \"산티옥\",\n\"난겐\", \"제주시\", \"안남\", \"금정\", \"상사\", \"승주\",\n\"불갑\", \"원주\", \"벌교\", \"법원\", \"광주\", \"신안\",\n\"군서\", \"군북\", \"신동\", \"조성\", \"문경\", \"임실\",\n\"용산동\", \"하성\", \"겸백\", \"영광\", \"예산\",\n\"양주\", \"당진\", \"상주\", \"고창\", \"해남\", \"주문진\",\n\"청주시\", \"진천\", \"가이게투리\", \"규암\", \"선원\",\n\"탄현\", \"울산\", \"의정부시\", \"상주\", \"문경\", \"가평\",\n\"현풍\", \"홍성\", \"정옥\", \"장성\", \"신현\",\n\"광명\", \"회남\", \"용산\", \"번암\", \"월곶\", \"장흥\",\n\"아이센\", \"영덕\", \"전산\", \"부여\", \"부산\", \"오산\",\n\"고성\", \"경산시\", \"군위\", \"장흥\", \"성남시\",\n\"미조\", \"옥곡\", \"대구\", \"김제\", \"김천\", \"익산\",\n\"광양\", \"통해\", \"동이\", \"오남\", \"봉강\", \"용화\",\n\"성환\", \"강포\", \"싱왕\", \"정읍\", \"강동\", \"청풍\",\n\"진상\", \"옹룡\", \"봉래\", \"인계\", \"비인\", \"공주\",\n\"충주\", \"안양시\", \"장평\", \"해안\", \"문덕\",\n\"미력\", \"해리\", \"물량\", \"구림\", \"대전\", \"고성\",\n\"교사이\", \"연무\", \"화남\", \"서상\", \"서석\", \"남면\",\n\"해령\", \"송광\", \"상하\", \"동계\", \"서울\", \"아산\",\n\"괴산\", \"하양\", \"진안군\", \"장안\", \"남양주\", \"안내\",\n\"교동\", \"진월\", \"주암\", \"대산\", \"영동\", \"백전\",\n\"토성\", \"공음\", \"담양\", \"보령\", \"속초\", \"광주\",\n\"구룡포\", \"강화군\", \"청양\", \"진주\", \"진잠\", \"안산시\",\n\"발금\", \"별량\", \"남면\", \"태백\", \"푸안\", \"화순\", \"화천\", \"전주\",\n\"지도\", \"이원\", \"화원\", \"서귀포\", \"병곡\", \"통진\",\n\"진접\", \"보성\", \"영암\", \"염산\", \"칠보\", \"아이센\",\n\"포항\", \"목포\", \"구미\", \"김해\", \"천안\", \"일광\",\n\"산서\", \"산내\", \"덕진\", \"대마\", \"완주\", \"수원\",\n\"평창\", \"군포\", \"인천\", \"화성시\", \"창원\", \"창수\",\n\"홍농\", \"양사\", \"광탄\", \"유치\", \"연일\", \"양평\",\n\"왜관\", \"심천\", \"무안\", \"강릉\", \"화도\", \"와부\",\n\"설천\", \"대합\", \"동래\", \"네이츠\", \"신탄신\", \"금산\",\n\"추풍령\", \"안동\", \"청남\", \"황간\", \"창녕\", \"여주\",\n\"밀양\", \"홍천\", \"철원\", \"한남\", \"세종\", \"반남\",\n\"금성\", \"하동\", \"영천\", \"춘천\", \"백수\", \"성수\",\n\"학산\", \"순천\", \"군산\", \"청평\", \"송강동\", \"수동\",\n\"외서\", \"낙월\", \"강진\", \"용안\", \"동래\", \"나주\",\n\"문산\", \"구리시\", \"창평\", \"하점\", \"압해\", \"도포\",\n\"군서\", \"흥해\", \"유성\", \"이양\", \"태산리\", \"부천시\",\n\"논산\", \"광양\", \"이천시\", \"여수\", \"웅상\", \"내선\",\n\"파주\", \"청성\", \"서산\", \"경주\", \"관촌\", \"상월\", \"시종\",\n\"구정\", \"동면\", \"마산\", \"고양시\", \"기장\", \"안성\",\n\"청하\", \"군북\", \"송해\", \"광적\", \"관인\", \"방산\",\n\"노동\", \"나산\", \"임자\", \"양구\", \"일로\", \"오천\",\n\"신서\", \"부평\", \"화양\", \"세지\", \"해보\", \"군남\",\n\"쌍치\", \"양산\", \"옥천\", \"구례\", \"푸발\", \"삼승\",\n\"삼산\", \"신안\", \"정량\", \"해제\")) %&gt;% \n  filter(population &gt; 0) %&gt;% \n  arrange(desc(population))\n\nkorea\n#&gt; # A tibble: 130 × 6\n#&gt;    name        country_code population   lat  long 도시명\n#&gt;    &lt;chr&gt;       &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n#&gt;  1 Seoul       KR             10349312  37.6  127. 서울  \n#&gt;  2 Busan       KR              3678555  35.1  129. 부산  \n#&gt;  3 Incheon     KR              2954955  37.5  127. 인천  \n#&gt;  4 Daegu       KR              2566540  35.9  129. 대구  \n#&gt;  5 Gwangju     KR              1490092  35.2  127. 광주  \n#&gt;  6 Daejeon     KR              1469543  36.3  127. 대전  \n#&gt;  7 Suwon       KR              1241311  37.3  127. 수원  \n#&gt;  8 Goyang-si   KR              1073069  37.7  127. 고양시\n#&gt;  9 Seongnam-si KR              1031935  37.4  127. 성남시\n#&gt; 10 Ulsan       KR               962865  35.5  129. 울산  \n#&gt; # ℹ 120 more rows"
  },
  {
    "objectID": "day_02.html#df-sf-객체",
    "href": "day_02.html#df-sf-객체",
    "title": "지도제작 대회",
    "section": "\n2.1 DF → sf 객체",
    "text": "2.1 DF → sf 객체\n\n코드crsLONGLAT &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\nkorea_sf &lt;- korea |&gt;\n    sf::st_as_sf(\n        coords = c(\"long\", \"lat\"),\n        crs = crsLONGLAT\n    )\n\nggplot() +\n    geom_sf(\n        data = korea_sf,\n        color = \"#7d1d53\", fill = \"#7d1d53\"\n    )"
  },
  {
    "objectID": "day_02.html#shapefile",
    "href": "day_02.html#shapefile",
    "title": "지도제작 대회",
    "section": "\n2.2 shapefile\n",
    "text": "2.2 shapefile\n\ngiscoR 유로스탯 - GISCO(유럽집행위원회 지리정보시스템)에서 데이터를 다운로드 없이 바로 사용할 수 있는 가벼운 API를 제공한다.\n\n코드kr &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\") |&gt;\n    sf::st_transform(crsLONGLAT)\n\nplot(kr)"
  },
  {
    "objectID": "day_02.html#결합",
    "href": "day_02.html#결합",
    "title": "지도제작 대회",
    "section": "\n2.3 결합",
    "text": "2.3 결합\n\n코드kr_pop_sf &lt;- sf::st_intersection(korea_sf, kr)\n\nplot(sf::st_geometry(kr_pop_sf))"
  },
  {
    "objectID": "day_03.html",
    "href": "day_03.html",
    "title": "스파이크(Spike map)",
    "section": "",
    "text": "소스코드\n\n\n\nMaking crisp spike maps with R\n\n\n\n1 패키지\n\n코드### 0. PACKAGES\n### ------------------------\nlibs &lt;- c(\n    \"tidyverse\", \"R.utils\",\n    \"httr\", \"sf\", \"stars\",\n    \"rayshader\"\n)\n\n# install missing libraries\ninstalled_libs &lt;- libs %in% rownames(installed.packages())\nif (any(installed_libs == F)) {\n    install.packages(libs[!installed_libs])\n}\n\n# load libraries\ninvisible(lapply(libs, library, character.only = T))\n\n\n\n2 인구 데이터\n인도주의적 영역에서 신뢰할 수 있는 인구 데이터를 확보하는 것은 생명을 구하는 활동의 우선순위를 정하는 데 매우 중요하다. KONTUR: Population Density Dataset 인구 데이터 세트는 400m 해상도의 인구 수를 가진 H3 육각형으로 표현된다. 일반적인 정사각형 그리드 대신 H3 그리드를 사용하는 이유는 정사각형과 달리 육각형은 육각형 중심점과 인접한 셀의 중심 사이의 거리가 같기 때문이다. Republic of Korea: Population Density for 400m H3 Hexagons 데이터도 다운로드 가능하다.\n\n코드### 1. DOWNLOAD & UNZIP DATA\n### ------------------------\nurl &lt;-\n    \"https://geodata-eu-central-1-kontur-public.s3.amazonaws.com/kontur_datasets/kontur_population_KR_20220630.gpkg.gz\"\nfile_name &lt;- \"korea-population.gpkg.gz\"\n\nget_population_data &lt;- function() {\n    res &lt;- httr::GET(\n        url,\n        write_disk(file_name, overwrite = TRUE),\n        progress()\n    )\n\n    R.utils::gunzip(file_name, remove = F)\n}\n\nget_population_data()\n\n\n\n3 데이터 불러오기\n\n코드### 2. LOAD DATA\n### -------------\nload_file_name &lt;- gsub(\".gz\", \"\", \"korea-population.gpkg.gz\")\n\ncrsWGS &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +towgs84=-115.8,474.99,674.11,1.16,-2.31,-1.63,6.43 +units=m +no_defs\"\n\nget_population_data &lt;- function() {\n    pop_df &lt;- sf::st_read(\n        load_file_name\n    ) |&gt;\n        sf::st_transform(crs = crsWGS)\n}\n\npop_sf &lt;- get_population_data()\n\nhead(pop_sf)\nggplot() +\n    geom_sf(\n        data = pop_sf,\n        color = \"grey10\", fill = \"grey10\"\n    )\n\n\n\n4 Shape to Raster\n\n코드### 3. SHP TO RASTER\n### ----------------\n\nbb &lt;- sf::st_bbox(pop_sf)\n\nget_raster_size &lt;- function() {\n    height &lt;- sf::st_distance(\n        sf::st_point(c(bb[[\"xmin\"]], bb[[\"ymin\"]])),\n        sf::st_point(c(bb[[\"xmin\"]], bb[[\"ymax\"]]))\n    )\n    width &lt;- sf::st_distance(\n        sf::st_point(c(bb[[\"xmin\"]], bb[[\"ymin\"]])),\n        sf::st_point(c(bb[[\"xmax\"]], bb[[\"ymin\"]]))\n    )\n\n    if (height &gt; width) {\n        height_ratio &lt;- 1\n        width_ratio &lt;- width / height\n    } else {\n        width_ratio &lt;- 1\n        height_ratio &lt;- height / width\n    }\n\n    return(list(width_ratio, height_ratio))\n}\nwidth_ratio &lt;- get_raster_size()[[1]]\nheight_ratio &lt;- get_raster_size()[[2]]\n\nsize &lt;- 3000\nwidth &lt;- round((size * width_ratio), 0)\nheight &lt;- round((size * height_ratio), 0)\n\nget_population_raster &lt;- function() {\n    pop_rast &lt;- stars::st_rasterize(\n        pop_sf |&gt;\n            dplyr::select(population, geom),\n        nx = width, ny = height\n    )\n\n    return(pop_rast)\n}\n\npop_rast &lt;- get_population_raster()\nplot(pop_rast)\n\npop_mat &lt;- pop_rast |&gt;\n    as(\"Raster\") |&gt;\n    rayshader::raster_to_matrix()\n\nlibrary(MetBrewer)\n# Specify the palette name in its own variable so that\n# we can reference it easily later.\npal &lt;- \"Demuth\"\ncolors &lt;- met.brewer(pal)\n\n# cols &lt;- rev(c(\n#     '#00004d', '#342863', '#595078', '#7d7b8a', '#a7a88b'\n# ))\n\ntexture &lt;- grDevices::colorRampPalette(colors)(256)\n\n# Create the initial 3D object\npop_mat |&gt;\n    rayshader::height_shade(texture = texture) |&gt;\n    rayshader::plot_3d(\n        heightmap = pop_mat,\n        solid = F,\n        soliddepth = 0,\n        zscale = 15,\n        shadowdepth = 0,\n        shadow_darkness = .95,\n        windowsize = c(800, 800),\n        phi = 65,\n        zoom = .65,\n        theta = -30,\n        background = \"white\"\n    )\n\n# Use this to adjust the view after building the window object\nrayshader::render_camera(phi = 75, zoom = .7, theta = 0)\n\nlibrary(rayrender)\n\nrayshader::render_highquality(\n    filename = \"images/korea_population_2022.png\",\n    preview = FALSE,\n    light = T,\n    lightdirection = 225,\n    lightaltitude = 60,\n    lightintensity = 400,\n    interactive = F,\n    width = width, height = height\n)"
  },
  {
    "objectID": "day_04.html",
    "href": "day_04.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\nCreate crisp topographic maps with R\n\n\n\n1 패키지\n\n코드### 0. PACKAGES\n### ------------------------\nlibs &lt;- c(\n    \"elevatr\", \"terra\", \"tidyverse\",\n    \"sf\", \"giscoR\", \"osmdata\", \"marmap\"\n)\n\n# install missing libraries\ninstalled_libs &lt;- libs %in% rownames(installed.packages())\nif (any(installed_libs == F)) {\n    install.packages(libs[!installed_libs])\n}\n\n# load libraries\ninvisible(lapply(libs, library, character.only = T))\n\n\n\n2 국가 데이터\n\n코드# 1. GET COUNTRY MAP\n#------------------\ncrsLONGLAT &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\nget_country_sf &lt;- function() {\n    country_sf &lt;- giscoR::gisco_get_countries(\n        year = \"2020\",\n        epsg = \"4326\",\n        resolution = \"10\",\n        country = \"KR\"\n    ) |&gt;\n        sf::st_transform(crs = crsLONGLAT)\n\n    return(country_sf)\n}\n\ncountry_sf &lt;- get_country_sf()\n\n\n\n3 국가 고도 데이터\n\n코드# 2. GET COUNTRY ELEVATION DATA\n#------------------------------\nget_elevation_data &lt;- function() {\n    country_elevation &lt;- elevatr::get_elev_raster(\n        locations = country_sf,\n        z = 7,\n        clip = \"locations\"\n    )\n\n    return(country_elevation)\n}\n\ncountry_elevation &lt;- get_elevation_data()\nterra::plot(country_elevation)\n\n\n\n4 BBOX 고도 데이터\n\n코드# 3. GET BBOX ELEVATION DATA\n#------------------------------\nget_elevation_data_bbox &lt;- function() {\n    country_elevation &lt;- elevatr::get_elev_raster(\n        locations = country_sf,\n        z = 7,\n        clip = \"bbox\"\n    )\n\n    return(country_elevation)\n}\n\ncountry_elevation &lt;- get_elevation_data_bbox() |&gt;\n    terra::rast()\n\n\n\n\n\n\n\n코드# 4. PLOT\n#---------\nkr_elevation_gg &lt;- country_elevation |&gt;\n    as.data.frame(xy = TRUE) |&gt; \n    ggplot() +\n    geom_tile(\n        aes(x = x, y = y, fill = fileb78875126249 )\n    ) +\n    geom_sf(\n        data = country_sf,\n        fill = \"transparent\", color = \"yellow\", size = .25\n    ) +\n    theme_void()\n\nggsave(\n    filename = \"images/kr_blue_map.png\", width = 7, \n    height = 8.5, dpi = 600, device = \"png\", \n    kr_elevation_gg, bg = \"white\"\n)\n\n\n\n\n\n\n\n5 시각화\n\n코드# 7. FINAL MAP\n#-------------\n\ncountry_elevation_df &lt;- country_elevation |&gt;\n    as.data.frame(xy = T) |&gt;\n    na.omit()\n\nnames(country_elevation_df)[3] &lt;- \"elevation\"\n\ncountry_map &lt;-\n    ggplot(data = country_elevation_df) +\n    geom_raster(\n        aes(x = x, y = y, fill = elevation),\n        alpha = 1\n    ) +\n    marmap::scale_fill_etopo() +\n    coord_sf(crs = crsLONGLAT) +\n    labs(\n        x = \"\",\n        y = \"\",\n        title = \"\",\n        subtitle = \"\",\n        caption = \"\"\n    ) +\n    theme_minimal() +\n    theme(\n        axis.line = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.margin = unit(c(t = 0, r = 0, b = 0, l = 0), \"cm\"),\n        plot.background = element_blank(),\n        panel.background = element_blank(),\n        panel.border = element_blank()\n    )\n\ncountry_map\n\nggsave(\n    filename = \"images/korea_topo_map.png\", width = 7, \n    height = 8.5, dpi = 600, device = \"png\", \n    country_map, bg = \"white\"\n)\n\n\n\n\n\n\n\n6 추가작업\nhttp://bboxfinder.com/ 에서 제거할 영역을 선정한다.\n\n코드# 5. CROP AREA\n#--------------------\n# 7.805786,38.779781,10.134888,41.294317\nget_area_bbox &lt;- function() {\n    xmin &lt;- 7.805786\n    xmax &lt;- 10.134888\n    ymin &lt;- 38.779781\n    ymax &lt;- 41.294317\n\n    bbox &lt;- sf::st_sfc(\n        sf::st_polygon(list(cbind(\n            c(xmin, xmax, xmax, xmin, xmin),\n            c(ymin, ymin, ymax, ymax, ymin)\n        ))),\n        crs = crsLONGLAT\n    )\n\n    return(bbox)\n}\n\nbbox &lt;- get_area_bbox()\n\ncrop_area_with_polygon &lt;- function() {\n    bbox_vect &lt;- terra::vect(bbox)\n    bbox_raster &lt;- terra::crop(country_elevation, bbox_vect)\n    bbox_raster_final &lt;- terra::mask(\n        bbox_raster, bbox_vect\n    )\n    return(bbox_raster_final)\n}\n\nbbox_raster_final &lt;- crop_area_with_polygon()\n\nbbox_raster_final |&gt;\n    as.data.frame(xy = T) |&gt;\n    ggplot() +\n    geom_tile(\n        aes(x = x, y = y, fill = file514862c13e19)\n    ) +\n    geom_sf(\n        data = country_sf,\n        fill = \"transparent\", color = \"black\", size = .25\n    ) +\n    theme_void()\n\n# 6. GET REGION LINES\n#--------------------\nregion &lt;- \"Sardinia\"\n# define longlat projection\n\nsardinia_sf &lt;- osmdata::getbb(\n    region,\n    format_out = \"sf_polygon\"\n)\n\nsardinia_sf\n\nggplot() +\n    geom_sf(\n        data = sardinia_sf$multipolygon,\n        color = \"red\", fill = \"grey80\", size = .5\n    ) +\n    theme_void()\n\ncrop_region_with_polygon &lt;- function() {\n    region_vect &lt;- terra::vect(sardinia_sf$multipolygon)\n    region_raster &lt;- terra::crop(country_elevation, region_vect)\n    region_raster_final &lt;- terra::mask(\n        region_raster, region_vect\n    )\n    return(region_raster_final)\n}\n\nregion_raster_final &lt;- crop_region_with_polygon()\n\nregion_raster_final |&gt;\n    as.data.frame(xy = T) |&gt;\n    ggplot() +\n    geom_tile(\n        aes(x = x, y = y, fill = file514862c13e19)\n    ) +\n    geom_sf(\n        data = country_sf,\n        fill = \"transparent\", color = \"black\", size = .25\n    ) +\n    theme_void()"
  },
  {
    "objectID": "day_05.html",
    "href": "day_05.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\n3D digital elevation maps with R\n\n\n\n1 패키지\n\n코드# install rayvista\n# devtools::install_github(\"h-a-graham/rayvista\", dependencies = T)\n# # install elevatr\n# devtools::install_github(\"jhollist/elevatr\")\n# \n# remotes::install_github(\"tylermorganwall/rayshader\")\n# remotes::install_github(\"tylermorganwall/rayrender\")\n# remotes::install_github(\"dmurdoch/rgl\")\n\n# libraries we need\nlibs &lt;- c(\n    \"rayvista\", \"elevatr\",\n    \"rayshader\", \"sf\", \"giscoR\"\n)\n\n# install missing libraries\ninstalled_libs &lt;- libs %in% rownames(installed.packages())\nif (any(installed_libs == F)) {\n    install.packages(libs[!installed_libs])\n}\n\n# load libraries\ninvisible(lapply(libs, library, character.only = T))\n\ncrs_LONGLAT &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\n\n\n\n2 대한민국\n\n코드# 3. RAYVISTA - COUNTRY\n#----------------------\n\nkorea_sf &lt;- giscoR::gisco_get_countries(country = \"KR\",\n                                        resolution = \"1\") |&gt; \n  sf::st_transform(crs = crs_LONGLAT)\n\n\n\ncountry_elevation &lt;- elevatr::get_elev_raster(\n    locations = korea_sf,\n    z = 7,\n    clip = \"locations\"\n)\n\n\nnames(country_elevation) &lt;- \"elevation\"\n\nrgl::close3d()\n\nkorea_dem &lt;- rayvista::plot_3d_vista(\n    dem = country_elevation$elevation,\n    overlay_detail = 11,\n    zscale = 10,\n    zoom = .8,\n    phi = 85,\n    theta = 0,\n    solid = F,\n    windowsize = c(800, 800)\n)\n\nrayshader::render_camera(phi = 75, zoom = .7, theta = 0)\n\nrayshader::render_highquality(\n    filename = \"images/korea-dem.png\",\n    preview = FALSE,\n    light = T,\n    lightdirection = 225,\n    lightaltitude = 60,\n    lightintensity = 400,\n    parallel = TRUE,\n    width = 4000,\n    height = 4000,\n    interactive = FALSE\n)\n\n\n\n\n\n\n\n3 독도\n\n코드get_area_bbox &lt;- function() {\n    xmin &lt;- 131.860035\n    ymin &lt;- 37.237007\n    xmax &lt;- 131.874372\n    ymax &lt;- 37.245153\n\n    bbox &lt;- sf::st_sfc(\n        sf::st_polygon(\n            list(\n                cbind(\n                    c(xmin, xmax, xmax, xmin, xmin),\n                    c(ymin, ymin, ymax, ymax, ymin)\n                )\n            )\n        ), crs = crs_LONGLAT\n    ) |&gt; sf::st_as_sf()\n\n    return(bbox)\n}\n\ndokdo_bbox &lt;- get_area_bbox()\n\nrgl::close3d()\n\ndokdo_dem &lt;- rayvista::plot_3d_vista(\n    req_area = dokdo_bbox,\n    phi = 80,\n    theta = 0,\n    zscale = 0.1,\n    outlier_filter = .001\n)\n\nrayshader::render_snapshot(\n    filename = \"images/dokdo.png\",\n    clear = T\n)\n\n\n\n4 독도 (위경도)\n\n코드.lat  &lt;- (37.237007 + 37.245153) / 2\n.long &lt;- (131.860035 + 131.874372) / 2\n \ndokdo &lt;- plot_3d_vista(lat = .lat, long = .long,\n    radius =1000,\n    zscale = 5,\n    zoom = .8,\n    solid = TRUE,\n    elevation_detail = 13,\n    overlay_detail = 15,\n    theta = 0,\n    windowsize = 800)\n\nrayshader::render_camera(\n    zoom = .7, theta = 0, phi = 30\n)\n\nrayshader::render_highquality(\n    filename = \"images/dokdo_highqual.png\",\n    preview = T,\n    light = T,\n    lightdirection = 225,\n    lightintensity = 1200,\n    lightaltitude = 60,\n    interactive = F,\n    width = 4000,\n    height = 4000\n)"
  },
  {
    "objectID": "day_06.html",
    "href": "day_06.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\nFelixAnalytix/YouTube"
  },
  {
    "objectID": "day_06.html#지도",
    "href": "day_06.html#지도",
    "title": "지도제작 대회",
    "section": "\n2.1 지도",
    "text": "2.1 지도\n\n코드world &lt;- ne_countries(scale=\"medium\", returnclass=\"sf\") %&gt;%\n  filter(admin != \"Antarctica\")\n\n## ----Change World map projection-----------------\n# Mollweide proj\ntarget_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\n\nworld_wsg &lt;- world %&gt;%\n  st_transform(crs = target_crs)"
  },
  {
    "objectID": "day_06.html#실업율",
    "href": "day_06.html#실업율",
    "title": "지도제작 대회",
    "section": "\n2.2 실업율",
    "text": "2.2 실업율\n\n코드## ----Get data from the World Bank----------------\n# Example: Unemployment (% of labor force)\n# https://data.worldbank.org/indicator/SL.UEM.TOTL.ZS\nind &lt;- \"SL.UEM.TOTL.ZS\"\n\nindicator_info &lt;- wb_cachelist$indicators %&gt;%\n  filter(indicator_id == ind)\n\nindicator_info$indicator\n#&gt; [1] \"Unemployment, total (% of total labor force) (modeled ILO estimate)\"\n\n\n## ----Download data from World Bank---------------\ndf &lt;- wb_data(ind, start_date = 2020) %&gt;%\n  filter(date == 2020)\n\nglimpse(df)\n#&gt; Rows: 217\n#&gt; Columns: 9\n#&gt; $ iso2c          &lt;chr&gt; \"AW\", \"AF\", \"AO\", \"AL\", \"AD\", \"AE\", \"AR\", \"AM\", \"AS\", \"…\n#&gt; $ iso3c          &lt;chr&gt; \"ABW\", \"AFG\", \"AGO\", \"ALB\", \"AND\", \"ARE\", \"ARG\", \"ARM\",…\n#&gt; $ country        &lt;chr&gt; \"Aruba\", \"Afghanistan\", \"Angola\", \"Albania\", \"Andorra\",…\n#&gt; $ date           &lt;dbl&gt; 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2…\n#&gt; $ SL.UEM.TOTL.ZS &lt;dbl&gt; NA, 11.710, 10.350, 13.067, NA, 4.290, 11.460, 12.180, …\n#&gt; $ unit           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#&gt; $ obs_status     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#&gt; $ footnote       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#&gt; $ last_updated   &lt;date&gt; 2023-05-10, 2023-05-10, 2023-05-10, 2023-05-10, 2023-0…"
  },
  {
    "objectID": "day_06.html#전세계",
    "href": "day_06.html#전세계",
    "title": "지도제작 대회",
    "section": "\n3.1 전세계",
    "text": "3.1 전세계\n\n코드## ----Plot world map------------------------------\nworld_wsg %&gt;%\n  left_join(df, by = c(\"iso_a3\" = \"iso3c\")) %&gt;%\n  ggplot() +\n  geom_sf(aes(fill = SL.UEM.TOTL.ZS)) +\n  scale_fill_viridis_c(\n    trans = \"sqrt\",\n    labels = scales::percent_format(scale = 1),\n    breaks = c(1:5)^2) +\n  # fix labels if needed: https://stackoverflow.com/a/60733863\n  scale_x_continuous(\n    labels = function(x) paste0(x, '\\u00B0', \"W\")\n    ) +\n  scale_y_continuous(\n    labels = function(x) paste0(x, '\\u00B0', \"N\")\n    ) +\n  theme_bw() +\n  theme(panel.background = element_rect(fill = \"aliceblue\")) +\n  labs(\n    title = paste(unique(df$date), indicator_info$indicator),\n    fill = NULL,\n    caption = paste(\"자료출처:\", indicator_info$source_org) \n  )"
  },
  {
    "objectID": "day_06.html#아시아",
    "href": "day_06.html#아시아",
    "title": "지도제작 대회",
    "section": "\n3.2 아시아",
    "text": "3.2 아시아\nOpenStreetMap 내보내기(Export) 에서 테두리 상자(Bounding Box) 를 특정하여 아시아 지역으로 한정하여 시각화한다.\n\n코드## ----Create bounding box-------------------------\n# Choose manually the region to plot with Open Street Map\n# https://www.openstreetmap.org/export\nwindow_coord &lt;- st_sfc(\n  st_point(c(60, -10)), #left, bottom\n  st_point(c(150,50)), #right, top\n  crs = 4326 #the EPSG identifier of WGS84 (used in GPS)\n)\n\nwindow_coord_sf &lt;- window_coord %&gt;%\n  st_transform(crs = target_crs) %&gt;%\n  st_coordinates() # retrieve coordinates\n\n\n\n\n코드## ----Plot regional map---------------------------\nworld_wsg %&gt;%\n  left_join(df, by = c(\"iso_a3\" = \"iso3c\")) %&gt;% \n  ggplot() + \n  geom_sf(aes(fill = SL.UEM.TOTL.ZS)) +\n  # window of the map\n  coord_sf(\n    xlim = window_coord_sf[, \"X\"],\n    ylim = window_coord_sf[, \"Y\"],\n    expand = FALSE\n  ) +\n  scale_fill_viridis_c(\n    trans = \"sqrt\", \n    labels = scales::percent_format(scale = 1),\n    breaks = c(1:5)^2\n  ) +\n  # fix labels if needed: https://stackoverflow.com/a/60733863\n  scale_x_continuous(\n    labels = function(x) paste0(x, '\\u00B0', \"W\")\n    ) +\n  scale_y_continuous(\n    labels = function(x) paste0(x, '\\u00B0', \"N\")\n    ) +\n  theme_bw() +\n  theme(panel.background = element_rect(fill = \"aliceblue\")) +\n  labs(\n    title = indicator_info$indicator,\n    fill = NULL,\n    caption = paste(\"Source:\", indicator_info$source_org) \n  )"
  },
  {
    "objectID": "day_07.html",
    "href": "day_07.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\nFelixAnalytix/YouTube"
  },
  {
    "objectID": "day_07.html#지도",
    "href": "day_07.html#지도",
    "title": "지도제작 대회",
    "section": "\n2.1 지도",
    "text": "2.1 지도\n\n코드# switzerland_sf &lt;- gisco_get_nuts(\n  # country = \"Switzerland\", \n  # nuts_level = 3, \n  # resolution = \"01\",\n  # cache = TRUE,\n  # update_cache = TRUE)\n\nswitzerland_sf &lt;- sf::st_read(\"data/gisco-services.ec.europa.eu_distribution_v2_nuts_geojson_NUTS_RG_01M_2016_4326_LEVL_3.geojson\")\n#&gt; Reading layer `gisco-services.ec.europa.eu_distribution_v2_nuts_geojson_NUTS_RG_01M_2016_4326_LEVL_3' from data source `D:\\tcs\\map_challenge\\data\\gisco-services.ec.europa.eu_distribution_v2_nuts_geojson_NUTS_RG_01M_2016_4326_LEVL_3.geojson' \n#&gt;   using driver `GeoJSON'\n#&gt; Simple feature collection with 1522 features and 10 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -63.15119 ymin: -21.38885 xmax: 55.83578 ymax: 71.18416\n#&gt; Geodetic CRS:  WGS 84\n\nswitzerland_sf\n#&gt; Simple feature collection with 1522 features and 10 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -63.15119 ymin: -21.38885 xmax: 55.83578 ymax: 71.18416\n#&gt; Geodetic CRS:  WGS 84\n#&gt; First 10 features:\n#&gt;       id LEVL_CODE NUTS_ID CNTR_CODE                           NAME_LATN\n#&gt; 1  HR043         3   HR043        HR         Krapinsko-zagorska županija\n#&gt; 2  AT314         3   AT314        AT                     Steyr-Kirchdorf\n#&gt; 3  AT315         3   AT315        AT                        Traunviertel\n#&gt; 4  DE600         3   DE600        DE                             Hamburg\n#&gt; 5  DE711         3   DE711        DE         Darmstadt, Kreisfreie Stadt\n#&gt; 6  DE712         3   DE712        DE Frankfurt am Main, Kreisfreie Stadt\n#&gt; 7  DE713         3   DE713        DE Offenbach am Main, Kreisfreie Stadt\n#&gt; 8  DE714         3   DE714        DE         Wiesbaden, Kreisfreie Stadt\n#&gt; 9  DE715         3   DE715        DE                         Bergstraße\n#&gt; 10 BE353         3   BE353        BE                  Arr. Philippeville\n#&gt;                              NUTS_NAME MOUNT_TYPE URBN_TYPE COAST_TYPE   FID\n#&gt; 1          Krapinsko-zagorska županija          4         3          3 HR043\n#&gt; 2                      Steyr-Kirchdorf          3         3          3 AT314\n#&gt; 3                         Traunviertel          3         3          3 AT315\n#&gt; 4                              Hamburg          4         1          1 DE600\n#&gt; 5          Darmstadt, Kreisfreie Stadt          4         1          3 DE711\n#&gt; 6  Frankfurt am Main, Kreisfreie Stadt          4         1          3 DE712\n#&gt; 7  Offenbach am Main, Kreisfreie Stadt          4         1          3 DE713\n#&gt; 8          Wiesbaden, Kreisfreie Stadt          4         1          3 DE714\n#&gt; 9                          Bergstraße          4         1          3 DE715\n#&gt; 10                  Arr. Philippeville          4         3          3 BE353\n#&gt;                          geometry\n#&gt; 1  MULTIPOLYGON (((16.25128 46...\n#&gt; 2  MULTIPOLYGON (((14.48275 48...\n#&gt; 3  MULTIPOLYGON (((13.75402 48...\n#&gt; 4  MULTIPOLYGON (((9.945376 53...\n#&gt; 5  MULTIPOLYGON (((8.725708 49...\n#&gt; 6  MULTIPOLYGON (((8.590239 50...\n#&gt; 7  MULTIPOLYGON (((8.717834 50...\n#&gt; 8  MULTIPOLYGON (((8.327649 50...\n#&gt; 9  MULTIPOLYGON (((8.93188 49....\n#&gt; 10 MULTIPOLYGON (((4.588663 50..."
  },
  {
    "objectID": "day_07.html#스위스-데이터셋",
    "href": "day_07.html#스위스-데이터셋",
    "title": "지도제작 대회",
    "section": "\n2.2 스위스 데이터셋",
    "text": "2.2 스위스 데이터셋\n\n코드# Swiss dataset: https://www.bfs.admin.ch/asset/de/px-x-1502000000_101\nswiss_students &lt;- BFS::bfs_get_data(number_bfs = \"px-x-1502000000_101\", language = \"de\", clean_names = TRUE)\n#&gt;   Downloading large query (in 8 batches):\n#&gt; \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |======================================================================| 100%\n\nswiss_students_gender &lt;- swiss_students %&gt;%\n  pivot_wider(names_from = geschlecht, values_from = lernende) %&gt;%\n  mutate(share_woman = round(Frau/`Geschlecht - Total`*100, 1))\n\nswiss_students_gender\n#&gt; # A tibble: 12,420 × 8\n#&gt;    bildungsstufe   schulkanton staatsangehorigkeit_…¹ jahr  `Geschlecht - Total`\n#&gt;    &lt;chr&gt;           &lt;chr&gt;       &lt;chr&gt;                  &lt;chr&gt;                &lt;dbl&gt;\n#&gt;  1 Bildungsstufe … Schweiz     Staatsangehörigkeit -… 1999…              1309950\n#&gt;  2 Bildungsstufe … Schweiz     Staatsangehörigkeit -… 2000…              1311661\n#&gt;  3 Bildungsstufe … Schweiz     Staatsangehörigkeit -… 2001…              1312533\n#&gt;  4 Bildungsstufe … Schweiz     Schweiz                1999…              1025029\n#&gt;  5 Bildungsstufe … Schweiz     Schweiz                2000…              1026294\n#&gt;  6 Bildungsstufe … Schweiz     Schweiz                2001…              1023831\n#&gt;  7 Bildungsstufe … Schweiz     Ausland                1999…               256356\n#&gt;  8 Bildungsstufe … Schweiz     Ausland                2000…               256191\n#&gt;  9 Bildungsstufe … Schweiz     Ausland                2001…               258098\n#&gt; 10 Bildungsstufe … Schweiz     Unbekannt              1999…                28565\n#&gt; # ℹ 12,410 more rows\n#&gt; # ℹ abbreviated name: ¹​staatsangehorigkeit_kategorie\n#&gt; # ℹ 3 more variables: Mann &lt;dbl&gt;, Frau &lt;dbl&gt;, share_woman &lt;dbl&gt;"
  },
  {
    "objectID": "day_07.html#지도와-데이터-결합",
    "href": "day_07.html#지도와-데이터-결합",
    "title": "지도제작 대회",
    "section": "\n2.3 지도와 데이터 결합",
    "text": "2.3 지도와 데이터 결합\n\n코드# Preferably using NUTS-3 code if possible\nswiss_student_map &lt;- swiss_students_gender %&gt;%\n  filter(schulkanton != \"Schweiz\") %&gt;%\n  mutate(schulkanton = str_remove(schulkanton, \".*/\"),\n         schulkanton = str_trim(schulkanton),\n         schulkanton = recode(schulkanton, \"Berne\" = \"Bern\", \"Grischun\" = \"Graubünden\", \"Wallis\" = \"Valais\")) %&gt;%\n  left_join(switzerland_sf, by = c(\"schulkanton\" = \"NUTS_NAME\"))\n\nswiss_student_map\n#&gt; # A tibble: 12,420 × 18\n#&gt;    bildungsstufe   schulkanton staatsangehorigkeit_…¹ jahr  `Geschlecht - Total`\n#&gt;    &lt;chr&gt;           &lt;chr&gt;       &lt;chr&gt;                  &lt;chr&gt;                &lt;dbl&gt;\n#&gt;  1 Bildungsstufe … Zürich      Staatsangehörigkeit -… 1999…               209028\n#&gt;  2 Bildungsstufe … Zürich      Staatsangehörigkeit -… 2000…               210844\n#&gt;  3 Bildungsstufe … Zürich      Staatsangehörigkeit -… 2001…               211811\n#&gt;  4 Bildungsstufe … Zürich      Schweiz                1999…               161170\n#&gt;  5 Bildungsstufe … Zürich      Schweiz                2000…               161670\n#&gt;  6 Bildungsstufe … Zürich      Schweiz                2001…               162710\n#&gt;  7 Bildungsstufe … Zürich      Ausland                1999…                47856\n#&gt;  8 Bildungsstufe … Zürich      Ausland                2000…                49167\n#&gt;  9 Bildungsstufe … Zürich      Ausland                2001…                49099\n#&gt; 10 Bildungsstufe … Zürich      Unbekannt              1999…                    2\n#&gt; # ℹ 12,410 more rows\n#&gt; # ℹ abbreviated name: ¹​staatsangehorigkeit_kategorie\n#&gt; # ℹ 13 more variables: Mann &lt;dbl&gt;, Frau &lt;dbl&gt;, share_woman &lt;dbl&gt;, id &lt;chr&gt;,\n#&gt; #   LEVL_CODE &lt;int&gt;, NUTS_ID &lt;chr&gt;, CNTR_CODE &lt;chr&gt;, NAME_LATN &lt;chr&gt;,\n#&gt; #   MOUNT_TYPE &lt;int&gt;, URBN_TYPE &lt;int&gt;, COAST_TYPE &lt;int&gt;, FID &lt;chr&gt;,\n#&gt; #   geometry &lt;MULTIPOLYGON [°]&gt;"
  },
  {
    "objectID": "day_07.html#교육수준",
    "href": "day_07.html#교육수준",
    "title": "지도제작 대회",
    "section": "\n3.1 교육수준",
    "text": "3.1 교육수준\n\n코드swiss_student_map_bildungsstufe &lt;- swiss_student_map %&gt;%\n  filter(jahr == \"2001/02\",\n         schulkanton != \"Schweiz\",\n         staatsangehorigkeit_kategorie == \"Schweiz\") %&gt;%\n  select(schulkanton, jahr, bildungsstufe, share_woman, geometry) %&gt;%\n  pivot_wider(names_from = \"bildungsstufe\", values_from = \"share_woman\") %&gt;%\n  sf::st_as_sf()\n\nswiss_student_map_bildungsstufe %&gt;%\n  mapview(zcol = \"Bildungsstufe - Total\", layer.name = \"Total education level, % Woman\")"
  },
  {
    "objectID": "day_07.html#동기화",
    "href": "day_07.html#동기화",
    "title": "지도제작 대회",
    "section": "\n3.2 동기화",
    "text": "3.2 동기화\n\n코드# Synchronize multiple maps -----------------------------------------------\n\nleafsync::sync(\n  swiss_student_map_bildungsstufe %&gt;%\n    mapview(zcol = \"Tertiärstufe\", layer.name = \"Tertiary level, % Woman\"),\n  swiss_student_map_bildungsstufe %&gt;%\n    mapview(zcol = \"Sekundarstufe II\", layer.name = \"Secondary level II, % Woman\"),\n  swiss_student_map_bildungsstufe %&gt;%\n    mapview(zcol = \"Obligatorische Schule\", layer.name = \"Mandatory school, % Woman\"),\n  swiss_student_map_bildungsstufe %&gt;%\n    mapview(zcol = \"Nicht auf Stufen aufteilbare Ausbildungen\", layer.name = \"Training that cannot be divided into levels, % Woman\")\n)"
  },
  {
    "objectID": "day_07.html#슬라이더",
    "href": "day_07.html#슬라이더",
    "title": "지도제작 대회",
    "section": "\n3.3 슬라이더",
    "text": "3.3 슬라이더\n\n\n코드# Comparing maps with a slider --------------------------------------------\n\nswiss_student_map_bildungsstufe_1999 &lt;- swiss_student_map %&gt;%\n  filter(jahr == \"1999/00\",\n         schulkanton != \"Schweiz\",\n         staatsangehorigkeit_kategorie == \"Schweiz\") %&gt;%\n  select(schulkanton, jahr, bildungsstufe, share_woman, geometry) %&gt;%\n  pivot_wider(names_from = \"bildungsstufe\", values_from = \"share_woman\") %&gt;%\n  sf::st_as_sf()\n\nmap1 &lt;- mapview(swiss_student_map_bildungsstufe, zcol = \"Bildungsstufe - Total\")\n\nmap2 &lt;- mapview(swiss_student_map_bildungsstufe_1999, zcol = \"Bildungsstufe - Total\")\n\nmap1 | map2"
  },
  {
    "objectID": "day_07.html#지도-1",
    "href": "day_07.html#지도-1",
    "title": "지도제작 대회",
    "section": "\n4.1 지도",
    "text": "4.1 지도\n\n코드# korea_sf &lt;- giscoR::gisco_get_nuts(\n#     resolution = \"1\",\n#     epsg = \"4326\",\n#     nuts_level = 1, \n#     cache = TRUE,\n#     update_cache = TRUE,\n#     country = \"KOR\") |&gt;\n#     sf::st_transform(crsLONGLAT)\n\nlibrary(sf)\nlibrary(tidyverse)\n\nkorea_sf_raw &lt;- sf::read_sf(\"data/gadm41_KOR_1.json\")\n\nkorea_sf &lt;- korea_sf_raw %&gt;% \n  separate(NL_NAME_1, into = c(\"시도명\", \"한자\"), sep=\"(\\\\||\\\\()\") %&gt;% \n  select(시도명, geometry) \n\nplot(korea_sf)"
  },
  {
    "objectID": "day_07.html#데이터-1",
    "href": "day_07.html#데이터-1",
    "title": "지도제작 대회",
    "section": "\n4.2 데이터",
    "text": "4.2 데이터\n\n코드library(krvote)\n\nvotes_tbl &lt;- krvote::election_20220309$득표율 %&gt;% \n  group_by(시도명) %&gt;% \n  summarise(이재명 = sum(이재명),\n            윤석열 = sum(윤석열))\n\nvotes_tbl\n#&gt; # A tibble: 17 × 3\n#&gt;    시도명          이재명  윤석열\n#&gt;    &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;\n#&gt;  1 강원도          419644  544980\n#&gt;  2 경기도         4428151 3965341\n#&gt;  3 경상남도        794130 1237346\n#&gt;  4 경상북도        418371 1278922\n#&gt;  5 광주광역시      830058  124511\n#&gt;  6 대구광역시      345045 1199888\n#&gt;  7 대전광역시      434950  464060\n#&gt;  8 부산광역시      831896 1270072\n#&gt;  9 서울특별시     2944981 3255747\n#&gt; 10 세종특별자치시  119349  101491\n#&gt; 11 울산광역시      297134  396321\n#&gt; 12 인천광역시      913320  878560\n#&gt; 13 전라남도       1094872  145549\n#&gt; 14 전라북도       1016863  176809\n#&gt; 15 제주특별자치도  213130  173014\n#&gt; 16 충청남도        589991  670283\n#&gt; 17 충청북도        455853  511921"
  },
  {
    "objectID": "day_07.html#결합",
    "href": "day_07.html#결합",
    "title": "지도제작 대회",
    "section": "\n4.3 결합",
    "text": "4.3 결합\n\n코드\nvote_sf &lt;- korea_sf %&gt;% \n  left_join(votes_tbl) %&gt;% \n  mutate(득표마진 = 이재명 - 윤석열)"
  },
  {
    "objectID": "day_07.html#대선이재명",
    "href": "day_07.html#대선이재명",
    "title": "지도제작 대회",
    "section": "\n5.1 대선(이재명)",
    "text": "5.1 대선(이재명)\n\n코드library(mapview)\n\npalfunc &lt;- function (n, alpha = 1, begin = 0, end = 1, direction = 1) {\n  colors &lt;- RColorBrewer::brewer.pal(11, \"RdBu\")\n  if (direction &lt; 0) colors &lt;- rev(colors)\n  colorRampPalette(colors, alpha = alpha)(n)\n}\n\nvote_sf %&gt;%\n  mapview(zcol = \"득표마진\", layer.name = \"이재명 - 윤석열\", col.regions = palfunc)"
  },
  {
    "objectID": "day_07.html#이재명-vs-윤석열",
    "href": "day_07.html#이재명-vs-윤석열",
    "title": "지도제작 대회",
    "section": "\n5.2 이재명 vs 윤석열",
    "text": "5.2 이재명 vs 윤석열\n\n코드library(mapview)\n\nleafsync::sync(\n  vote_sf %&gt;%\n    mapview(zcol = \"이재명\", layer.name = \"이재명 득표수\"),\n  vote_sf %&gt;%\n    mapview(zcol = \"윤석열\", layer.name = \"윤석열 득표수\")  \n)"
  },
  {
    "objectID": "day_07.html#대선-비교",
    "href": "day_07.html#대선-비교",
    "title": "지도제작 대회",
    "section": "\n5.3 대선 비교",
    "text": "5.3 대선 비교\n\n\n코드vote_2012 &lt;- krvote::election_20121219$득표율 %&gt;% \n  group_by(시도명) %&gt;% \n  summarise(박근혜 = sum(박근혜),\n            문재인 = sum(문재인))\n\nvote_2012_sf &lt;- korea_sf %&gt;% \n  left_join(vote_2012) %&gt;% \n  mutate(득표마진 = 문재인 - 박근혜)\n\nmap_2022 &lt;- mapview(vote_2012_sf, zcol = \"득표마진\", layer.name = \"이재명 - 윤석열\", col.regions = palfunc)\n\nmap_2012 &lt;- mapview(vote_sf, zcol = \"득표마진\", layer.name = \"문재인 - 박근혜\", col.regions = palfunc)\n\nmap_2012 | map_2022"
  },
  {
    "objectID": "day_08.html",
    "href": "day_08.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\nFelixAnalytix/YouTube\n\n\n\n1 패키지\n\n코드# Install R packages if not installed -------------------------------------\n\nif (!require(tidyverse)) install.packages(\"tidyverse\")\nif (!require(rvest)) install.packages(\"rvest\")\nif (!require(usethis)) install.packages(\"usethis\")\nif (!require(tidygeocoder)) install.packages(\"tidygeocoder\")\nif (!require(leaflet)) install.packages(\"leaflet\")\n\n\n# Attach R packages -------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(usethis)\nlibrary(tidygeocoder)\nlibrary(leaflet)\n\n\n\n2 데이터\n\n코드library(readxl)\nlibrary(tidyverse)\n\nmst_raw &lt;- read_excel(\"data/인천서구강소연구개발특구 기업현황 데이터 요청사항_230618.xlsx\", sheet = \"환경산업연구단지 입주기업\", skip = 1)\n\nmst_tbl &lt;- mst_raw %&gt;% \n  janitor::clean_names(ascii = FALSE) %&gt;% \n  select(!starts_with(\"x\")) \n\nmst_tbl\n#&gt; # A tibble: 129 × 19\n#&gt;     연번 회사명        대표자명 전화번호 분야  이메일주소 사업자번호 주소  매출 \n#&gt;    &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;\n#&gt;  1     1 주식회사 네…  전진오   070-422… 생활… neo@neost… 166-88-00… 인천… 5-9억\n#&gt;  2     2 프로덕트테크  박재민   &lt;NA&gt;     대기  &lt;NA&gt;       &lt;NA&gt;       인천… 5억 …\n#&gt;  3     3 (주)스피너스  조철호   02-2138… 폐기… ryam_cho@… 327-88-02… 인천… 5-9억\n#&gt;  4     4 한국도시재생… 이정학   032-467… 폐기… &lt;NA&gt;       339-87-00… 인천… 5-9억\n#&gt;  5     5 에코드릴 주…  박건준   02-808-… 대기  &lt;NA&gt;       116-88-01… 인천… 5-9억\n#&gt;  6     6 에코프로에이… 김종섭   043-210… 대기  ecopro@re… 283-87-02… 인천… 1,00…\n#&gt;  7     7 (주)어라운드… 최준영   070-485… 생활… aroundblu… 575-81-02… 인천… 5억 …\n#&gt;  8     8 주식회사 코…  이주혁   070-864… 생활… contact@c… 188-81-02… 인천… 10-4…\n#&gt;  9     9 주식회사 쉘…  최수빈   &lt;NA&gt;     생활… &lt;NA&gt;       443-87-02… 인천… 5억 …\n#&gt; 10    10 (주)에너지로… 이완구   032-573… 생활… e-road@e-… 120-88-03… 인천… 100-…\n#&gt; # ℹ 119 more rows\n#&gt; # ℹ 10 more variables: 녹색기술_녹색생활 &lt;chr&gt;, 기술1 &lt;chr&gt;, 기술2 &lt;chr&gt;,\n#&gt; #   기술3 &lt;chr&gt;, 개발예정품목 &lt;chr&gt;, 홈페이지 &lt;chr&gt;, 주요사업 &lt;chr&gt;,\n#&gt; #   주요취급품 &lt;chr&gt;, 주요매출처 &lt;chr&gt;, 비고 &lt;chr&gt;\n\n\n\n3 지오코딩\n\n코드tidygeocoder::api_info_reference %&gt;% \n  gt::gt() %&gt;% \n  gtExtras::gt_theme_538() %&gt;% \n  gt::cols_align(align = \"center\")\n\n\n\n\n\n\nmethod\n      method_display_name\n      site_url\n      api_documentation_url\n      api_usage_policy_url\n    \n\n\nosm\nNominatim\nhttps://nominatim.org\nhttps://nominatim.org/release-docs/develop/api/Search/\nhttps://operations.osmfoundation.org/policies/nominatim/\n\n\ncensus\nUS Census\nhttps://geocoding.geo.census.gov/\nhttps://www.census.gov/programs-surveys/geography/technical-documentation/complete-technical-documentation/census-geocoder.html\nhttps://www.census.gov/programs-surveys/geography/technical-documentation/complete-technical-documentation/census-geocoder.html\n\n\narcgis\nArcGIS\nhttps://developers.arcgis.com/rest/geocode/api-reference/overview-world-geocoding-service.htm\nhttps://developers.arcgis.com/rest/geocode/api-reference/overview-world-geocoding-service.htm\nhttps://developers.arcgis.com/rest/geocode/api-reference/geocoding-free-vs-paid.htm\n\n\ngeocodio\nGeocodio\nhttps://www.geocod.io/\nhttps://www.geocod.io/docs/\nhttps://www.geocod.io/pricing/\n\n\niq\nLocation IQ\nhttps://locationiq.com/\nhttps://locationiq.com/docs\nhttps://locationiq.com/pricing\n\n\ngoogle\nGoogle\nhttps://developers.google.com/maps/documentation/geocoding/overview\nhttps://developers.google.com/maps/documentation/geocoding/overview\nhttps://developers.google.com/maps/documentation/geocoding/usage-and-billing\n\n\nopencage\nOpenCage\nhttps://opencagedata.com\nhttps://opencagedata.com/api\nhttps://opencagedata.com/pricing\n\n\nmapbox\nMapbox\nhttps://docs.mapbox.com/api/search/\nhttps://docs.mapbox.com/api/search/geocoding/\nhttps://www.mapbox.com/pricing/\n\n\nhere\nHERE\nhttps://developer.here.com/products/geocoding-and-search\nhttps://developer.here.com/documentation/geocoding-search-api/dev_guide/index.html\nhttps://developer.here.com/pricing\n\n\ntomtom\nTomTom\nhttps://developer.tomtom.com/search-api/search-api-documentation/geocoding\nhttps://developer.tomtom.com/search-api/search-api-documentation-geocoding/geocode\nhttps://developer.tomtom.com/store/maps-api\n\n\nmapquest\nMapQuest\nhttps://developer.mapquest.com/documentation/geocoding-api/\nhttps://developer.mapquest.com/documentation/geocoding-api/\nhttps://developer.mapquest.com/plans\n\n\nbing\nBing\nhttps://docs.microsoft.com/en-us/bingmaps/rest-services/locations/\nhttps://docs.microsoft.com/en-us/bingmaps/rest-services/locations/\nhttps://docs.microsoft.com/en-us/bingmaps/spatial-data-services/geocode-and-data-source-limits\n\n\ngeoapify\nGeoapify\nhttps://www.geoapify.com/geocoding-api\nhttps://apidocs.geoapify.com/docs/geocoding/api/\nhttps://www.geoapify.com/term-and-conditions\n\n\n\n\n\n\n\n코드mst_tbl_geocodes &lt;- mst_tbl %&gt;%\n  geocode(address = 주소,  method = \"arcgis\")\n\nmst_tbl_geocodes_sample &lt;- mst_tbl_geocodes %&gt;% \n  select(회사명, 주소, lat, long) %&gt;% \n  group_by(lat) %&gt;% \n  slice_sample(n=1)\n\nmst_tbl_geocodes_sample %&gt;% \n  write_rds(\"data/incheon.rds\")\n\n\n\n4 시각화\n\n코드\nmst_tbl_geocodes_sample &lt;- \n  read_rds(\"data/incheon.rds\")\n\nmst_tbl_geocodes_sample %&gt;%\n  mutate(popup = paste0(\"&lt;b&gt;\", 회사명, \"&lt;/b&gt;\", \"&lt;br&gt;\",\n                        주소, \"&lt;br&gt;\")) %&gt;%\n  leaflet() %&gt;% \n  addTiles() %&gt;%\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  addMarkers(~long, ~lat, \n             popup  = ~popup) %&gt;%\n  addLayersControl(overlayGroups = ~회사명,\n                   options = layersControlOptions(collapsed = FALSE))"
  },
  {
    "objectID": "day_heatmap.html",
    "href": "day_heatmap.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "프롬프트\n응답결과\n실행결과\n\n\n\ngenerate dataset for leaflet heatmap in r\n\n\nCreating a dataset for a leaflet heatmap in R involves a few steps. You’ll need a set of geographic points, each with a latitude and longitude, and an associated value that you want to use to generate the heat map. The value might represent anything from population density to temperature to the number of occurrences of a specific event.\nHere’s an example of how to create a basic dataset in R:\n\n코드# Create a data frame\nheatmap_data &lt;- data.frame(\n  \"Lat\" = c(40.7128, 34.0522, 41.8781, 29.7604, 39.7392),    # latitudes of some US cities\n  \"Lon\" = c(-74.0060, -118.2437, -87.6298, -95.3698, -104.9903),   # longitudes of some US cities\n  \"Value\" = c(100, 200, 150, 80, 120)    # some made-up values\n)\n\n# Print the data frame\nprint(heatmap_data)\n\n\nThis script generates a simple data frame with latitude, longitude, and a value column. The latitude and longitude represent locations (in this case, some major US cities), and the ‘Value’ represents some made-up values.\nPlease replace the coordinates and values with your own data.\nOnce the dataset is ready, you can use the leaflet package in R to create a heatmap. Here is a simple example:\n\n코드# install the necessary packages if you haven't already\ninstall.packages(c(\"leaflet\", \"viridis\"))\nlibrary(leaflet)\nlibrary(viridis)\n\n# create the heatmap\nleaflet(heatmap_data) %&gt;%\n  addTiles() %&gt;%\n  addHeatmap(\n    lng = ~Lon,\n    lat = ~Lat,\n    intensity = ~Value,\n    radius = 20,\n    blur = 15,\n    max = 0.05,\n    gradient = colorRampPalette(viridis(6))(6)\n  )\n\n\nThis script generates a leaflet heatmap using the leaflet and viridis libraries. The addHeatmap function adds a heatmap layer to the map. The lng, lat, and intensity arguments specify the longitude, latitude, and values to use for the heatmap. The radius, blur, and max parameters control the appearance of the heatmap, and the gradient argument sets the color scheme.\n\n\n\n코드# Create a data frame\nheatmap_data &lt;- data.frame(\n  \"Lat\" = c(40.7128, 34.0522, 41.8781, 29.7604, 39.7392),    # latitudes of some US cities\n  \"Lon\" = c(-74.0060, -118.2437, -87.6298, -95.3698, -104.9903),   # longitudes of some US cities\n  \"Value\" = c(100, 200, 150, 80, 120)    # some made-up values\n)\n\n# install.packages(c(\"leaflet\", \"leaflet.extras\", \"viridis\"))\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(viridis)\n\n# create the heatmap\nleaflet(heatmap_data) %&gt;%\n  addTiles() %&gt;%\n  addHeatmap(\n    lng = ~Lon,\n    lat = ~Lat,\n    intensity = ~Value,\n    radius = 20,\n    blur = 15,\n    max = 0.05,\n    gradient = colorRampPalette(viridis(6))(6)\n  )"
  },
  {
    "objectID": "day_heatmap.html#데이터",
    "href": "day_heatmap.html#데이터",
    "title": "지도제작 대회",
    "section": "\n2.1 데이터",
    "text": "2.1 데이터\n기상청_지진정보 조회서비스에서 활용신청을 한 후에 API를 통해 기상청에서 제공하는 지진정보 데이터를 가져온다. 현재날짜기준 3일간 데이터만 최근 발생한 지진 데이터만 제공한다.\n\n코드library(tidyverse)\nlibrary(httr)\n\neq_req &lt;- glue::glue(\"http://apis.data.go.kr/1360000/EqkInfoService/getEqkMsg\",\n                     \"?serviceKey={Sys.getenv('EARTHQUAKE_API_KEY')}\",\n                     \"&pageNo=1\", \n                     \"&numOfRows=1000\", \n                     \"&dataType=JSON\", \n                     \"&fromTmFc={str_remove_all(Sys.Date()-3, '-')}\",\n                     \"&toTmFc={str_remove_all(Sys.Date(), '-')}\")\n\n\neq_resp &lt;- GET(eq_req)\n\neq_json &lt;- content(eq_resp, type = \"text\")\n\neq_list &lt;- jsonlite::fromJSON(eq_json) \n\nlistviewer::jsonedit(eq_list)"
  },
  {
    "objectID": "day_heatmap.html#데이터프레임",
    "href": "day_heatmap.html#데이터프레임",
    "title": "지도제작 대회",
    "section": "\n2.2 데이터프레임",
    "text": "2.2 데이터프레임\n\n코드library(gt)\nlibrary(gtExtras)\n\neq_tbl &lt;- pluck(eq_list, \"response\") %&gt;% \n  pluck(\"body\") %&gt;% \n  pluck(\"items\") %&gt;% \n  pluck(\"item\") %&gt;% \n  as_tibble() %&gt;% \n  mutate(lat = as.numeric(lat),\n        lon = as.numeric(lon))\n\neq_tbl %&gt;% \n  select(지도=img, 발생위치=loc, 진앙시=tmEqk, 규모=mt, 진도=inT, 깊이=dep, 참고사항=rem) %&gt;% \n  mutate(진앙시 = lubridate::ymd_hms(진앙시)) %&gt;% \n  gt() %&gt;% \n    cols_align(align=\"center\")  %&gt;% \n    gt_img_rows(columns = 지도, height = 200) %&gt;% \n    gt_theme_538()\n\n\n\n\n\n\n지도\n      발생위치\n      진앙시\n      규모\n      진도\n      깊이\n      참고사항\n    \n\n\n\n통가 누쿠알로파 남쪽 325km 해역\n2023-06-25 16:16:59\n6.0\n\n7\n국내영향없음. 위 자료는 미지질조사소(USGS) 분석결과임.\n\n\n\n북한 함경북도 길주 북북서쪽 42km 지역\n2023-06-25 11:55:14\n2.4\n최대진도 Ⅰ\n17\n자연지진으로 분석됨\n\n\n\n\n\n코드\n# eq_tbl %&gt;%\n#   write_rds(\"data/eq_tbl_20230627.rds\")"
  },
  {
    "objectID": "day_heatmap.html#시각화",
    "href": "day_heatmap.html#시각화",
    "title": "지도제작 대회",
    "section": "\n2.3 시각화",
    "text": "2.3 시각화\n\n코드library(leaflet.extras)\nlibrary(leaflet)\nlibrary(viridis)\n\neq_tbl &lt;- \n  read_rds(\"data/eq_tbl_20230627.rds\")\n\neq_tbl %&gt;% \n  leaflet() %&gt;%\n    addTiles() %&gt;%\n    addHeatmap(\n      lng = ~lon,\n      lat = ~lat,\n      intensity = ~mt,\n      radius = 20,\n      blur = 15,\n      max = 0.05,\n      gradient = colorRampPalette(viridis(6))(6)\n    )"
  },
  {
    "objectID": "day_heatmap.html#지진-데이터",
    "href": "day_heatmap.html#지진-데이터",
    "title": "지도제작 대회",
    "section": "\n3.1 지진 데이터",
    "text": "3.1 지진 데이터\n기상청 국내지진조회에서 엑셀파일로 데이터를 다운로드 받는다. 조회조건을 1900년 1월 1일부터하면 1978년이 첫 번째 기록된 지진기록으로 나온다.\n\n코드library(readxl)\n\neq_xlsx &lt;- read_excel(\"data/기상청_지진_19000101_20230627.xlsx\", skip = 1)\n\neq_xlsx %&gt;% \n  count(최대)\n#&gt; # A tibble: 7 × 2\n#&gt;   최대      n\n#&gt;   &lt;chr&gt; &lt;int&gt;\n#&gt; 1 Ⅰ       258\n#&gt; 2 Ⅱ        55\n#&gt; 3 Ⅲ        65\n#&gt; 4 Ⅳ        20\n#&gt; 5 Ⅴ         4\n#&gt; 6 진도      1\n#&gt; 7 &lt;NA&gt;   1753\n\neq_xlsx_tbl &lt;- eq_xlsx %&gt;% \n  slice(2:n()) %&gt;% \n  janitor::clean_names(ascii = FALSE) %&gt;% \n  mutate(lat = parse_number(위도),\n         lon = parse_number(경도)) %&gt;% \n  mutate(깊이_km = as.numeric(깊이_km))\n\neq_xlsx_tbl %&gt;% \n  select(지도=img, 위치, 규모, 발생시각, 깊이_km) %&gt;%  \n  slice_sample(n = 20) %&gt;% \n  gt() %&gt;% \n    cols_align(align=\"center\")  %&gt;% \n    gt_img_rows(columns = 지도, height = 200) %&gt;% \n    gt_theme_538()\n\n\n\n\n\n\n지도\n      위치\n      규모\n      발생시각\n      깊이_km\n    \n\n\n\n충남 태안군 서격렬비도 남서쪽 134km 해역\n2.3\n2022-09-23 07:40:30\nNA\n\n\n\n경북 울진군 서쪽 7km 지역\n2.5\n2018-08-29 05:01:29\n11\n\n\n\n강원 원주시 동남동쪽 15km 지역\n2.5\n2002-04-01 07:46:02\nNA\n\n\n\n충남 태안군 서격렬비열도 서남서쪽 40km 해역\n2.6\n2003-06-08 02:07:57\nNA\n\n\n\n경북 문경시 북동쪽 26km 지역\n2.2\n2018-09-14 09:08:13\n14\n\n\n\n경북 포항시 북구 북쪽 6km 지역\n2.4\n2017-11-15 14:50:05\n8\n\n\n\n경북 영덕군 북북동쪽 22km 해역\n2.6\n2017-05-04 01:08:27\n16\n\n\n\n경북 포항시 남구 동남동쪽 33km 해역\n2.6\n2016-06-15 02:07:18\n20\n\n\n\n북한 황해남도 용연 남쪽 32km 해역\n2.2\n2009-12-26 10:55:50\nNA\n\n\n\n제주 서귀포시 동쪽 58km 해역\n2.4\n2019-05-13 23:50:38\n17\n\n\n\n북한 황해북도 사리원 서쪽 9km 지역\n2.1\n2013-11-16 22:32:45\nNA\n\n\n\n경북 포항시 남구 동남동쪽 41km 해역\n2.1\n2002-07-12 08:17:37\nNA\n\n\n\n경북 안동시 서북서쪽 12km 지역\n2.9\n1985-05-13 18:26:38\nNA\n\n\n\n서울 북방 약 150km 지역\n3.1\n1983-07-27 00:25:23\nNA\n\n\n\n북한 황해북도 송림시 동쪽 19km 지역\n2.5\n2016-02-28 16:52:38\n6\n\n\n\n경북 안동시 동쪽 15km 지역\n3.1\n2013-02-04 05:39:25\nNA\n\n\n\n충남 보령시 서남서쪽 43km 해역\n2.3\n2013-06-29 13:32:48\nNA\n\n\n\n경북 영덕군 동북동쪽 28km 해역\n2.0\n2019-10-13 19:52:44\n20\n\n\n\n북한 함경북도 길주 북북서쪽 54km 지역\n2.7\n2017-10-13 01:41:08\nNA\n\n\n\n경북 의성군 서북서쪽 19km 지역\n2.1\n2018-06-15 11:10:02\n14"
  },
  {
    "objectID": "day_heatmap.html#발전소-데이터",
    "href": "day_heatmap.html#발전소-데이터",
    "title": "지도제작 대회",
    "section": "\n3.2 발전소 데이터",
    "text": "3.2 발전소 데이터\n공간통계를 위한 데이터 과학: 데이터프레임 → 지도 변환 - 지진과 원전\n\n코드library(sf)\n\n## 1.2. 원전 데이터 \nnp_df &lt;- tribble(~name, ~address, ~lat, ~lon,\n                \"고리\", \"부산광역시 기장군 장안읍 고리\", 35.459936176050455, 129.31042595766428,\n                \"월성\", \"경상북도 경주시 양남면 나아리\", 35.61415131635102, 129.47316094301584,\n                \"한빛\", \"전라남도 영광군 홍농읍 계마리\", 35.51221255154207, 126.578604835085,\n                \"한울\", \"경상북도 울진군 북면 부구리\", 37.18011679577809, 129.16451181750688)\n\nprojcrs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\nnp_sf &lt;- st_as_sf(x = np_df,                         \n           coords = c(\"lon\", \"lat\"),\n           crs = projcrs)"
  },
  {
    "objectID": "day_heatmap.html#시각화-1",
    "href": "day_heatmap.html#시각화-1",
    "title": "지도제작 대회",
    "section": "\n3.3 시각화",
    "text": "3.3 시각화\n\n코드eq_xlsx_tbl %&gt;% \n  select(lat,lon, 규모) %&gt;% \n  drop_na() %&gt;% \n  leaflet() %&gt;%\n    addTiles() %&gt;%\n    addHeatmap(\n      lng = ~lon,\n      lat = ~lat,\n      intensity = ~규모,\n      # radius = 30,\n      blur = 40,\n      max = 0.05,\n      gradient = colorRampPalette(viridis(5))(5)\n      # gradient=\"RdYlGn\"\n    ) %&gt;% \n    addMarkers(data = np_df, lng=~lon, lat=~lat, clusterOptions = markerClusterOptions(),\n                popup = ~ as.character(paste0(\"&lt;strong&gt;\", name, \"&lt;/strong&gt;&lt;br&gt;\",\n                                             \"--------------------------------&lt;br&gt;\",\n                                             \"&middot; 주소: \", address)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge\n\n2 원천 지도\n\n\n국토교통부\n\n\nLX 한국국토정보공사, 구 한국지적공사\n\n공간정보산업진흥원\n\nVWorld, 공간정보오픈플랫폼\n\n\n\n국토지리정보원\n\n국토정보플랫폼\n\n국가공간정보포털\n\n오픈마켓, 90m 표고 데이터: [국토지리정보원] 수치표고모델(DEM)_90M\n\n\n\n\n\n\n대한민국 행정동 경계: admdongkor\n대한민국 최신 행정구역(SHP) 다운로드\n\n3 세계지도\n출처: Fixing maps library data for Pacific centred (0°-360° longitude) display\n\n\n세계지도: giscoR\n세계지도: maps\n세계지도: rnaturalearth\n아시아\n대한민국\n태평양 중심\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\n\n# download.file(url = \"https://gisco-services.ec.europa.eu/distribution/v2/countries/geojson/CNTR_RG_01M_2016_4326.geojson\", destfile = \"data/world.geojson\", mode = \"w\")\n# \n# world_sf &lt;- giscoR::gisco_get_countries(\n#   epsg = \"4326\",\n#   region = \"Asia\",\n#   resolution = \"1\",\n#   cache = TRUE, \n#   update_cache = TRUE\n# )\n\nworld_sf &lt;- sf::st_read(\"data/world.geojson\")\n#&gt; Reading layer `world' from data source `D:\\tcs\\map_challenge\\data\\world.geojson' using driver `GeoJSON'\n#&gt; Simple feature collection with 257 features and 6 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.66498\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_sf))\n\n\n\n\n\n\n\n\n\n\n코드# 필요한 라이브러리를 불러옵니다.\nlibrary(ggplot2)\nlibrary(maps)\n\n# 월드맵 데이터를 불러옵니다.\nworld_map &lt;- map_data(\"world\")\n\n# ggplot2를 사용해 지도를 그립니다.\nggplot() +\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_cartesian(xlim = c(-180, 180)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n코드library(rnaturalearth)\n\n# Get the world map data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Shift the map to center on the Pacific Ocean\nworld_trans &lt;- st_transform(st_wrap_dateline(world, options = c(\"WRAPDATELINE=YES\", \"DATELINEOFFSET=-180\")), crs = \"+proj=robin\")\n\n# Plot the world map\nggplot(data = world_trans) +\n  geom_sf() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n코드asia_sf &lt;- giscoR::gisco_get_countries(\n  epsg = \"4326\",\n  region = \"Asia\",\n  resolution = \"60\",\n  cache = TRUE,\n  update_cache = TRUE\n)\n\nplot(st_geometry(asia_sf))\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(giscoR)\n\nkorea &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\"\n) |&gt;\n    sf::st_transform(\"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\")\n\nplot(st_geometry(korea))\n\n\n\n\n\n\n\n\n\n\n코드library(maps)\n\nplot.map&lt;- function(database,center,...){\n    Obj &lt;- map(database,...,plot=F)\n    coord &lt;- cbind(Obj[[1]],Obj[[2]])\n\n    # split up the coordinates\n    id &lt;- rle(!is.na(coord[,1]))\n    id &lt;- matrix(c(1,cumsum(id$lengths)),ncol=2,byrow=T)\n    polygons &lt;- apply(id,1,function(i){coord[i[1]:i[2],]})\n\n    # split up polygons that differ too much\n    polygons &lt;- lapply(polygons,function(x){\n        x[,1] &lt;- x[,1] + center\n        x[,1] &lt;- ifelse(x[,1]&gt;180,x[,1]-360,x[,1])\n        if(sum(diff(x[,1])&gt;300,na.rm=T) &gt;0){\n          id &lt;- x[,1] &lt; 0\n          x &lt;- rbind(x[id,],c(NA,NA),x[!id,])\n       }\n       x\n    })\n    # reconstruct the object\n    polygons &lt;- do.call(rbind,polygons)\n    Obj[[1]] &lt;- polygons[,1]\n    Obj[[2]] &lt;- polygons[,2]\n\n    map(Obj,...)\n}\n\nplot.map(\"world\", center=210, col=\"white\",bg=\"gray\",\n         fill=TRUE, ylim=c(-60,90),mar=c(0,0,0,0))"
  },
  {
    "objectID": "km_school.html",
    "href": "km_school.html",
    "title": "경기도 광명시",
    "section": "",
    "text": "행정안전부 주민등록, 인감 에서 행정기관(행정동) 및 관할구역(법정동) 코드를 다운로드 받을 수 있다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\nadmin_code_raw &lt;- read_excel(\"data/jsocde20230611/KIKcd_H.20230611.xlsx\")\n\nadmin_code &lt;- admin_code_raw %&gt;% \n  mutate(시도 = str_sub(행정동코드, 1, 2),\n         시군구 = str_sub(행정동코드, 1, 4),\n         읍면동 = str_sub(행정동코드, 1, 8)) %&gt;% \n  select(행정동코드, 시도, 시도명, 시군구, 시군구명, 읍면동, 읍면동명) \n\nadmin_code %&gt;%\n  write_rds(\"data/admin_code.rds\")\n\nadmin_code\n#&gt; # A tibble: 3,882 × 7\n#&gt;    행정동코드 시도  시도명     시군구 시군구명 읍면동   읍면동명  \n#&gt;    &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;     \n#&gt;  1 1100000000 11    서울특별시 1100   &lt;NA&gt;     11000000 &lt;NA&gt;      \n#&gt;  2 1111000000 11    서울특별시 1111   종로구   11110000 &lt;NA&gt;      \n#&gt;  3 1111051500 11    서울특별시 1111   종로구   11110515 청운효자동\n#&gt;  4 1111053000 11    서울특별시 1111   종로구   11110530 사직동    \n#&gt;  5 1111054000 11    서울특별시 1111   종로구   11110540 삼청동    \n#&gt;  6 1111055000 11    서울특별시 1111   종로구   11110550 부암동    \n#&gt;  7 1111056000 11    서울특별시 1111   종로구   11110560 평창동    \n#&gt;  8 1111057000 11    서울특별시 1111   종로구   11110570 무악동    \n#&gt;  9 1111058000 11    서울특별시 1111   종로구   11110580 교남동    \n#&gt; 10 1111060000 11    서울특별시 1111   종로구   11110600 가회동    \n#&gt; # ℹ 3,872 more rows\n\n\n\n경기데이터드림 공공데이터 개방포털에서 초․중등학교 위치 현황(제공표준)에서 광명시만 해당 학교를 추출한다.\n\n코드gg_school &lt;- read_excel(\"data/초․중등학교위치현황(제공표준).xlsx\")\n\n## 광명시 초등학교\nkm_school &lt;- gg_school %&gt;% \n  filter(학교급구분 == \"초등학교\",\n         교육지원청명 == \"경기도광명교육지원청\") %&gt;% \n  select(주소 = 소재지도로명주소, 학교명, 경도, 위도, 설립형태, 설립일자) %&gt;% \n  mutate(경도 = as.numeric(경도),\n         위도 = as.numeric(위도))\n\nkm_school\n#&gt; # A tibble: 25 × 6\n#&gt;    주소                        학교명          경도  위도 설립형태 설립일자  \n#&gt;    &lt;chr&gt;                       &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;     \n#&gt;  1 경기도 광명시 가마산로 28   도덕초등학교    127.  37.5 공립     1986-04-25\n#&gt;  2 경기도 광명시 성채안로 16   충현초등학교    127.  37.4 공립     2011-03-01\n#&gt;  3 경기도 광명시 한내일로 5    구름산초등학교  127.  37.5 공립     2010-03-01\n#&gt;  4 경기도 광명시 소하일로 45   소하초등학교    127.  37.4 공립     1997-05-01\n#&gt;  5 경기도 광명시 도덕공원로 5  안현초등학교    127.  37.5 공립     2010-03-01\n#&gt;  6 경기도 광명시 안현로 16     하안초등학교    127.  37.5 공립     1989-10-12\n#&gt;  7 경기도 광명시 금당로 11-7   가림초등학교    127.  37.5 공립     1990-03-26\n#&gt;  8 경기도 광명시 가학로 247-55 안서초등학교    127.  37.4 공립     1964-03-04\n#&gt;  9 경기도 광명시 범안로 657    온신초등학교    127.  37.4 공립     1947-04-30\n#&gt; 10 경기도 광명시 광이로 21     광명초등학교    127.  37.5 공립     1971-03-01\n#&gt; # ℹ 15 more rows\n\n\n\n2022-01-27 등록된 경기도 광명시_어린이보호구역 내 CCTV 정보_API를 공공데이터포털에서 다운로드 받는다.\n\n코드library(sf)\n\ncctv_raw &lt;- read_csv(\"data/보호구역내cctv정보.csv\", locale=locale('ko',encoding='euc-kr'))\n\ncctv_tbl &lt;- cctv_raw %&gt;% \n  select(기기번호 = SFZN_ID, 용도 = INST_PURPS, 도로명주소=RDNMADR, 경도, 위도, 설치대수=CCTV_CNT, 일자=REF_DATE)\n\ncctv_tbl\n#&gt; # A tibble: 98 × 7\n#&gt;    기기번호 용도       도로명주소                 경도  위도 설치대수 일자      \n#&gt;       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;                     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;date&gt;    \n#&gt;  1       20 어린이보호 경기도 광명시 안현로 80-2  127.  37.5        1 2021-10-01\n#&gt;  2       21 다목적     경기도 광명시 소하일로 45  127.  37.4        1 2021-10-26\n#&gt;  3       11 다목적     경기도 광명시 금당로 11-7  127.  37.5        4 2021-10-14\n#&gt;  4       38 어린이보호 경기도 광명시 한내로13번…  127.  37.5        1 2021-10-12\n#&gt;  5       11 다목적     경기도 광명시 금당로 11-7  127.  37.5        1 2021-10-14\n#&gt;  6       11 어린이보호 경기도 광명시 금당로 11-7  127.  37.5        1 2021-10-14\n#&gt;  7       21 다목적     경기도 광명시 소하일로 45  127.  37.4        1 2021-10-26\n#&gt;  8       12 다목적     경기도 광명시 금당로 71    127.  37.5        1 2021-10-14\n#&gt;  9       12 어린이보호 경기도 광명시 금당로 71    127.  37.5        1 2021-10-14\n#&gt; 10       22 다목적     경기도 광명시 한내일로 5   127.  37.5        1 2021-10-26\n#&gt; # ℹ 88 more rows\n\n\n\n행정동 관련 다양한 지도가 존재한다. 국가공간정보포털을 통해 공간정보 포탈의 역할을 수행하였으나, 브이월드로 통합되고 있다. 브이월드는 공간정보오픈플랫폼으로 기존 국가공간정보포탈을 확장한 것으로 보인다.\n\n대한민국 행정동 경계(admdongkor): https://github.com/vuski/admdongkor\n\n통계청 (센서스경계)행정동경계: http://data.nsdi.go.kr/dataset/20171206ds00001\n\n국토교통부 행정구역시군구_경계: http://data.nsdi.go.kr/dataset/15144\n\n국토지리정보원 행정경계(시군구): http://data.nsdi.go.kr/dataset/20180927ds0058\n\n\n\n코드library(sf)\n\nadmin_sf &lt;- st_read(\"data/HangJeongDong_ver20230401.geojson\")\n#&gt; Reading layer `HangJeongDong_ver20230401' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\HangJeongDong_ver20230401.geojson' \n#&gt;   using driver `GeoJSON'\n#&gt; Simple feature collection with 3520 features and 10 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\nkm_sf &lt;- admin_sf %&gt;% \n  filter(sgg == \"41210\") %&gt;% \n  st_transform(crs = 4326) %&gt;% \n  separate(temp, into = c(\"구시군\", \"읍면동\"), sep = \" \")\n\nplot(st_geometry(km_sf))"
  },
  {
    "objectID": "km_school.html#행정동-코드",
    "href": "km_school.html#행정동-코드",
    "title": "경기도 광명시",
    "section": "",
    "text": "행정안전부 주민등록, 인감 에서 행정기관(행정동) 및 관할구역(법정동) 코드를 다운로드 받을 수 있다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\nadmin_code_raw &lt;- read_excel(\"data/jsocde20230611/KIKcd_H.20230611.xlsx\")\n\nadmin_code &lt;- admin_code_raw %&gt;% \n  mutate(시도 = str_sub(행정동코드, 1, 2),\n         시군구 = str_sub(행정동코드, 1, 4),\n         읍면동 = str_sub(행정동코드, 1, 8)) %&gt;% \n  select(행정동코드, 시도, 시도명, 시군구, 시군구명, 읍면동, 읍면동명) \n\nadmin_code %&gt;%\n  write_rds(\"data/admin_code.rds\")\n\nadmin_code\n#&gt; # A tibble: 3,882 × 7\n#&gt;    행정동코드 시도  시도명     시군구 시군구명 읍면동   읍면동명  \n#&gt;    &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;     \n#&gt;  1 1100000000 11    서울특별시 1100   &lt;NA&gt;     11000000 &lt;NA&gt;      \n#&gt;  2 1111000000 11    서울특별시 1111   종로구   11110000 &lt;NA&gt;      \n#&gt;  3 1111051500 11    서울특별시 1111   종로구   11110515 청운효자동\n#&gt;  4 1111053000 11    서울특별시 1111   종로구   11110530 사직동    \n#&gt;  5 1111054000 11    서울특별시 1111   종로구   11110540 삼청동    \n#&gt;  6 1111055000 11    서울특별시 1111   종로구   11110550 부암동    \n#&gt;  7 1111056000 11    서울특별시 1111   종로구   11110560 평창동    \n#&gt;  8 1111057000 11    서울특별시 1111   종로구   11110570 무악동    \n#&gt;  9 1111058000 11    서울특별시 1111   종로구   11110580 교남동    \n#&gt; 10 1111060000 11    서울특별시 1111   종로구   11110600 가회동    \n#&gt; # ℹ 3,872 more rows"
  },
  {
    "objectID": "km_school.html#초등학교",
    "href": "km_school.html#초등학교",
    "title": "경기도 광명시",
    "section": "",
    "text": "경기데이터드림 공공데이터 개방포털에서 초․중등학교 위치 현황(제공표준)에서 광명시만 해당 학교를 추출한다.\n\n코드gg_school &lt;- read_excel(\"data/초․중등학교위치현황(제공표준).xlsx\")\n\n## 광명시 초등학교\nkm_school &lt;- gg_school %&gt;% \n  filter(학교급구분 == \"초등학교\",\n         교육지원청명 == \"경기도광명교육지원청\") %&gt;% \n  select(주소 = 소재지도로명주소, 학교명, 경도, 위도, 설립형태, 설립일자) %&gt;% \n  mutate(경도 = as.numeric(경도),\n         위도 = as.numeric(위도))\n\nkm_school\n#&gt; # A tibble: 25 × 6\n#&gt;    주소                        학교명          경도  위도 설립형태 설립일자  \n#&gt;    &lt;chr&gt;                       &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;     \n#&gt;  1 경기도 광명시 가마산로 28   도덕초등학교    127.  37.5 공립     1986-04-25\n#&gt;  2 경기도 광명시 성채안로 16   충현초등학교    127.  37.4 공립     2011-03-01\n#&gt;  3 경기도 광명시 한내일로 5    구름산초등학교  127.  37.5 공립     2010-03-01\n#&gt;  4 경기도 광명시 소하일로 45   소하초등학교    127.  37.4 공립     1997-05-01\n#&gt;  5 경기도 광명시 도덕공원로 5  안현초등학교    127.  37.5 공립     2010-03-01\n#&gt;  6 경기도 광명시 안현로 16     하안초등학교    127.  37.5 공립     1989-10-12\n#&gt;  7 경기도 광명시 금당로 11-7   가림초등학교    127.  37.5 공립     1990-03-26\n#&gt;  8 경기도 광명시 가학로 247-55 안서초등학교    127.  37.4 공립     1964-03-04\n#&gt;  9 경기도 광명시 범안로 657    온신초등학교    127.  37.4 공립     1947-04-30\n#&gt; 10 경기도 광명시 광이로 21     광명초등학교    127.  37.5 공립     1971-03-01\n#&gt; # ℹ 15 more rows"
  },
  {
    "objectID": "km_school.html#cctv-정보",
    "href": "km_school.html#cctv-정보",
    "title": "경기도 광명시",
    "section": "",
    "text": "2022-01-27 등록된 경기도 광명시_어린이보호구역 내 CCTV 정보_API를 공공데이터포털에서 다운로드 받는다.\n\n코드library(sf)\n\ncctv_raw &lt;- read_csv(\"data/보호구역내cctv정보.csv\", locale=locale('ko',encoding='euc-kr'))\n\ncctv_tbl &lt;- cctv_raw %&gt;% \n  select(기기번호 = SFZN_ID, 용도 = INST_PURPS, 도로명주소=RDNMADR, 경도, 위도, 설치대수=CCTV_CNT, 일자=REF_DATE)\n\ncctv_tbl\n#&gt; # A tibble: 98 × 7\n#&gt;    기기번호 용도       도로명주소                 경도  위도 설치대수 일자      \n#&gt;       &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;                     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;date&gt;    \n#&gt;  1       20 어린이보호 경기도 광명시 안현로 80-2  127.  37.5        1 2021-10-01\n#&gt;  2       21 다목적     경기도 광명시 소하일로 45  127.  37.4        1 2021-10-26\n#&gt;  3       11 다목적     경기도 광명시 금당로 11-7  127.  37.5        4 2021-10-14\n#&gt;  4       38 어린이보호 경기도 광명시 한내로13번…  127.  37.5        1 2021-10-12\n#&gt;  5       11 다목적     경기도 광명시 금당로 11-7  127.  37.5        1 2021-10-14\n#&gt;  6       11 어린이보호 경기도 광명시 금당로 11-7  127.  37.5        1 2021-10-14\n#&gt;  7       21 다목적     경기도 광명시 소하일로 45  127.  37.4        1 2021-10-26\n#&gt;  8       12 다목적     경기도 광명시 금당로 71    127.  37.5        1 2021-10-14\n#&gt;  9       12 어린이보호 경기도 광명시 금당로 71    127.  37.5        1 2021-10-14\n#&gt; 10       22 다목적     경기도 광명시 한내일로 5   127.  37.5        1 2021-10-26\n#&gt; # ℹ 88 more rows"
  },
  {
    "objectID": "km_school.html#지도",
    "href": "km_school.html#지도",
    "title": "경기도 광명시",
    "section": "",
    "text": "행정동 관련 다양한 지도가 존재한다. 국가공간정보포털을 통해 공간정보 포탈의 역할을 수행하였으나, 브이월드로 통합되고 있다. 브이월드는 공간정보오픈플랫폼으로 기존 국가공간정보포탈을 확장한 것으로 보인다.\n\n대한민국 행정동 경계(admdongkor): https://github.com/vuski/admdongkor\n\n통계청 (센서스경계)행정동경계: http://data.nsdi.go.kr/dataset/20171206ds00001\n\n국토교통부 행정구역시군구_경계: http://data.nsdi.go.kr/dataset/15144\n\n국토지리정보원 행정경계(시군구): http://data.nsdi.go.kr/dataset/20180927ds0058\n\n\n\n코드library(sf)\n\nadmin_sf &lt;- st_read(\"data/HangJeongDong_ver20230401.geojson\")\n#&gt; Reading layer `HangJeongDong_ver20230401' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\HangJeongDong_ver20230401.geojson' \n#&gt;   using driver `GeoJSON'\n#&gt; Simple feature collection with 3520 features and 10 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\nkm_sf &lt;- admin_sf %&gt;% \n  filter(sgg == \"41210\") %&gt;% \n  st_transform(crs = 4326) %&gt;% \n  separate(temp, into = c(\"구시군\", \"읍면동\"), sep = \" \")\n\nplot(st_geometry(km_sf))"
  },
  {
    "objectID": "km_school.html#cctv-x-행정동",
    "href": "km_school.html#cctv-x-행정동",
    "title": "경기도 광명시",
    "section": "\n2.1 CCTV x 행정동",
    "text": "2.1 CCTV x 행정동\n\n코드# devtools::install_github(\"yutannihilation/ggsflabel\")\nlibrary(ggsflabel)\n\ncctv_sf &lt;- st_as_sf(cctv_tbl, coords = c(\"경도\", \"위도\"),\n           crs = 4326)\n\ncctv_admin_gg &lt;- ggplot() +\n  geom_sf(data = cctv_sf, aes(geometry = geometry)) +\n  geom_sf(data = km_sf, aes(geometry = geometry), alpha=0) +\n  theme_void() +\n  geom_sf_label_repel(data = km_sf, aes(label=읍면동))\n\ncctv_admin_gg"
  },
  {
    "objectID": "km_school.html#cctv-x-행정동-인터랙티브",
    "href": "km_school.html#cctv-x-행정동-인터랙티브",
    "title": "경기도 광명시",
    "section": "\n2.2 CCTV x 행정동 (인터랙티브)",
    "text": "2.2 CCTV x 행정동 (인터랙티브)\n\n코드library(plotly)\nlibrary(ggiraph)\n\ninfo &lt;- glue::glue(\"&middot; 용도: {cctv_sf$용도}&lt;br&gt;\",\n                   \"&middot; 일자: {cctv_sf$일자}&lt;br&gt;\",\n                   \"&middot; 설치대수: {cctv_sf$설치대수}&lt;br&gt;\",\n                   \"&middot; 위치: {cctv_sf$도로명주소}\")\n\ncctv_admin_plotly &lt;- ggplot() +\n  geom_sf(data = km_sf, aes(geometry = geometry), alpha=0) +\n  geom_sf_interactive(data=cctv_sf, aes(geometry = geometry, tooltip = info, size=as.integer(설치대수),\n                                        color = 용도), \n                      size =1) +\n  geom_sf_text_repel(data = km_sf, aes(label = 읍면동), color=\"blue\", size = 2) +\n  theme_void() +\n  labs(color = \"CCTV 용도\")\n\ngirafe(ggobj = cctv_admin_plotly)"
  },
  {
    "objectID": "km_school.html#광명시-현황",
    "href": "km_school.html#광명시-현황",
    "title": "경기도 광명시",
    "section": "\n3.1 광명시 현황",
    "text": "3.1 광명시 현황\n\n코드info &lt;- glue::glue(\"&middot; 용도: {cctv_sf$용도}&lt;br&gt;\",\n                   \"&middot; 일자: {cctv_sf$일자}&lt;br&gt;\",\n                   \"&middot; 설치대수: {cctv_sf$설치대수}&lt;br&gt;\",\n                   \"&middot; 위치: {cctv_sf$도로명주소}\")\n\nkm_school_sf  &lt;- \n  st_as_sf(km_school, coords = c(\"경도\", \"위도\"),\n           crs = 4326)\n\ncctv_school_plotly &lt;- ggplot() +\n  geom_sf(data = km_sf, aes(geometry = geometry), alpha=0) +\n  geom_sf_text_repel(data = km_school_sf, aes(label = 학교명), color=\"red\", size = 2) +\n  geom_sf(data = km_school_sf, aes(geometry = geometry), alpha=1) +\n  geom_sf_interactive(data=cctv_sf, aes(geometry = geometry, tooltip = info, size=as.integer(설치대수),\n                                        color = 용도), size =1) +\n  geom_sf_text_repel(data = km_sf, aes(label = 읍면동), color=\"blue\", size = 2) +\n  theme_void() +\n  labs(color = \"CCTV 용도\")\n\ngirafe(ggobj = cctv_school_plotly)"
  },
  {
    "objectID": "km_school.html#동별",
    "href": "km_school.html#동별",
    "title": "경기도 광명시",
    "section": "\n3.2 동별",
    "text": "3.2 동별\n\n3.2.1 스크립트\n\n코드## 동별지도 \nkm_dong_sf &lt;- km_sf %&gt;% filter(읍면동 == \"소하1동\")\nschool_dong_sf &lt;- st_filter(km_school_sf, km_dong_sf)\ncctv_dong_sf &lt;- st_filter(cctv_sf, km_dong_sf)\n\n## 동별 툴팁\ndong_info &lt;- glue::glue(\"&middot; 용도: {cctv_dong_sf$용도}&lt;br&gt;\",\n                   \"&middot; 일자: {cctv_dong_sf$일자}&lt;br&gt;\",\n                   \"&middot; 설치대수: {cctv_dong_sf$설치대수}&lt;br&gt;\",\n                   \"&middot; 위치: {cctv_dong_sf$도로명주소}\")\n\n\nggplot() +\n  ## 행정동 -------------\n  geom_sf(data = km_dong_sf , aes(geometry = geometry), alpha=0) +\n  geom_sf_text_repel(data = km_dong_sf, aes(label = 읍면동), color=\"blue\", size = 2) +\n  ## 학교 ---------------\n  geom_sf_text_repel(data = school_dong_sf, aes(label = 학교명), color=\"red\", size = 3) +\n  geom_sf(data = school_dong_sf, aes(geometry = geometry), alpha=1) +\n  ## CCTV ---------------\n  geom_sf_interactive(data=cctv_dong_sf, aes(geometry = geometry, tooltip = dong_info,\n                                             size=as.integer(설치대수), color = 용도), size =1) +\n  theme_void() +\n  labs(color = \"CCTV 용도\")\n\n\n\n\n\n\n\n\n3.2.2 함수\n\n코드draw_cctv_shcool_map &lt;- function(dong_name = \"소하1동\") {\n  ## 동별지도 \n  km_dong_sf &lt;- km_sf %&gt;% filter(읍면동 == dong_name)\n  school_dong_sf &lt;- st_filter(km_school_sf, km_dong_sf)\n  cctv_dong_sf &lt;- st_filter(cctv_sf, km_dong_sf)\n  \n  ## 동별 툴팁\n  dong_info &lt;- glue::glue(\"&middot; 용도: {cctv_dong_sf$용도}&lt;br&gt;\",\n                     \"&middot; 일자: {cctv_dong_sf$일자}&lt;br&gt;\",\n                     \"&middot; 설치대수: {cctv_dong_sf$설치대수}&lt;br&gt;\",\n                     \"&middot; 위치: {cctv_dong_sf$도로명주소}\")\n  \n  dong_interactive_gg &lt;- ggplot() +\n    ## 행정동 -------------\n    geom_sf(data = km_dong_sf , aes(geometry = geometry), alpha=0) +\n    geom_sf_text_repel(data = km_dong_sf, aes(label = 읍면동), color=\"blue\", size = 5) +\n    ## 학교 ---------------\n    geom_sf_text_repel(data = school_dong_sf, aes(label = 학교명), color=\"red\", size = 4) +\n    geom_sf(data = school_dong_sf, aes(geometry = geometry), alpha=1) +\n    ## CCTV ---------------\n    geom_sf_interactive(data=cctv_dong_sf, aes(geometry = geometry, tooltip = dong_info,\n                                               size=as.integer(설치대수), color = 용도), size =1) +\n    theme_void() +\n    labs(color = \"CCTV 용도\",\n         title = glue::glue(\"광명시: {dong_name}\"))\n  \n  # girafe(ggobj = dong_interactive_gg)\n  dong_interactive_gg\n}\n\ndraw_cctv_shcool_map(\"소하1동\")\n\n\n\n\n\n\n\n\n3.2.3 전체동\n\n코드\ndong_plots &lt;- map(km_sf$읍면동, draw_cctv_shcool_map)\nnames(dong_plots) &lt;- km_sf$읍면동\n\n\n\n\n\n광명1동\n광명2동\n광명3동\n광명4동\n광명5동\n광명6동\n광명7동\n철산1동\n철산2동\n철산3동\n철산4동\n하안1동\n하안2동\n하안3동\n하안4동\n소하1동\n일직동\n학온동\n소하2동"
  },
  {
    "objectID": "km_school.html#기본",
    "href": "km_school.html#기본",
    "title": "경기도 광명시",
    "section": "\n4.1 기본",
    "text": "4.1 기본\n\n코드library(leaflet)\nlibrary(fontawesome)\n\nkm_dong_sf &lt;- km_sf %&gt;% filter(읍면동 == \"소하1동\")\nschool_dong_sf &lt;- st_filter(km_school_sf, km_dong_sf)\ncctv_dong_sf &lt;- st_filter(cctv_sf, km_dong_sf)\n\n\ncctv_icons &lt;- awesomeIconList(\n  \"다목적\" = makeAwesomeIcon(\n    icon = \"camera\",\n    markerColor = \"blue\",\n    library = \"fa\",\n    text = fa(\"camera\")\n  ),\n  \"생활방범\" = makeAwesomeIcon(\n    icon = \"camera\",\n    markerColor = \"green\",\n    library = \"fa\",\n    text = fa(\"camera\")\n  ),\n  \"쓰레기단속\" = makeAwesomeIcon(\n    icon = \"camera\",\n    markerColor = \"purple\",\n    library = \"fa\",\n    text = fa(\"camera\")\n  ),\n  \"어린이보호\" = makeAwesomeIcon(\n    icon = \"camera\",\n    markerColor = \"red\",\n    library = \"fa\",\n    text = fa(\"camera\")\n  )\n)\n\nleaflet(data = cctv_tbl) %&gt;% \n  addProviderTiles(providers$OpenStreetMap) %&gt;% \n  ## 행정동\n  addPolygons(data = km_sf, \n              opacity = 1.0, fillOpacity = 0.0,\n            weight = 1,\n            highlightOptions = highlightOptions(color = \"black\", weight = 3,  bringToFront = TRUE),\n            label = ~읍면동,\n            labelOptions = labelOptions(\n            style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n            textsize = \"15px\",\n            direction = \"auto\")) %&gt;% \n  addMarkers(data = km_school, lng=~경도, lat=~위도, clusterOptions = markerClusterOptions(),\n            popup = ~ as.character(paste0(\"&lt;strong&gt;\", `학교명`, \"&lt;/strong&gt;&lt;br&gt;\",\n                                          \"--------------------------------&lt;br&gt;\",\n                                          \"&middot; 주소: \", `주소`, \"&lt;br&gt;\",\n                                          \"&middot; 설립형태: \", `설립형태`, \"&lt;br&gt;\",\n                                          \"&middot; 설립일자: \", `설립일자`))) %&gt;% \n\n  addAwesomeMarkers(data = cctv_tbl, lng=~경도, lat=~위도, clusterOptions = markerClusterOptions(),\n                    group = ~용도,\n             icon = ~ cctv_icons[용도],\n             popup = ~ as.character(paste0(\"&lt;strong&gt;\", 기기번호, \"&lt;/strong&gt;&lt;br&gt;\",\n                                           \"--------------------------------&lt;br&gt;\",\n                                           \"&middot; 설치위치: \", `도로명주소`, \"&lt;br&gt;\",\n                                           \"&middot; 설립대수: \", 설치대수, \"&lt;br&gt;\",\n                                           \"&middot; 용도: \", 용도)))"
  },
  {
    "objectID": "km_school.html#용도별-인터랙티브",
    "href": "km_school.html#용도별-인터랙티브",
    "title": "경기도 광명시",
    "section": "\n4.2 용도별 인터랙티브",
    "text": "4.2 용도별 인터랙티브\n참고: Show/Hide Layers\n\n\n코드cctv_tbl_split &lt;- split(cctv_tbl, cctv_tbl$용도)\n\nl &lt;- leaflet() %&gt;% addProviderTiles(providers$OpenStreetMap)\n\nunique(cctv_tbl$용도) %&gt;%\n  purrr::walk( function(df) {\n    l &lt;&lt;- l %&gt;%\n    ## 행정동\n    addPolygons(data = km_sf, \n                opacity = 1.0, fillOpacity = 0.0,\n              weight = 1,\n              highlightOptions = highlightOptions(color = \"black\", weight = 3,  bringToFront = TRUE),\n              label = ~읍면동,\n              labelOptions = labelOptions(\n              style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n              textsize = \"15px\",\n              direction = \"auto\")) %&gt;% \n      \n    addMarkers(data = km_school, lng=~경도, lat=~위도, clusterOptions = markerClusterOptions(),\n              popup = ~ as.character(paste0(\"&lt;strong&gt;\", `학교명`, \"&lt;/strong&gt;&lt;br&gt;\",\n                                            \"--------------------------------&lt;br&gt;\",\n                                            \"&middot; 주소: \", `주소`, \"&lt;br&gt;\",\n                                            \"&middot; 설립형태: \", `설립형태`, \"&lt;br&gt;\",\n                                            \"&middot; 설립일자: \", `설립일자`))) %&gt;% \n  \n    addAwesomeMarkers(data = cctv_tbl_split[[df]], \n                      lng=~경도, lat=~위도, clusterOptions = markerClusterOptions(),\n                      group = df,\n               icon = ~ cctv_icons[용도],\n               popup = ~ as.character(paste0(\"&lt;strong&gt;\", 기기번호, \"&lt;/strong&gt;&lt;br&gt;\",\n                                             \"--------------------------------&lt;br&gt;\",\n                                             \"&middot; 설치위치: \", `도로명주소`, \"&lt;br&gt;\",\n                                             \"&middot; 설립대수: \", 설치대수, \"&lt;br&gt;\",\n                                             \"&middot; 용도: \", 용도)))\n  })\n\n  l %&gt;%\n    addLayersControl(\n      overlayGroups = unique(cctv_tbl$용도),\n      options = layersControlOptions(collapsed = FALSE)\n    )"
  },
  {
    "objectID": "km_school.html#ppt",
    "href": "km_school.html#ppt",
    "title": "경기도 광명시",
    "section": "\n4.3 PPT",
    "text": "4.3 PPT\n\n코드cctv_tbl %&gt;% \n  write_rds(\"data/km_cctv_tbl.rds\")\n\nkm_sf %&gt;% \n  write_rds(\"data/km_km_sf.rds\")\n\nkm_school %&gt;% \n  write_rds(\"data/km_km_school.rds\")"
  },
  {
    "objectID": "km_school.html#어린이-교통사고",
    "href": "km_school.html#어린이-교통사고",
    "title": "경기도 광명시",
    "section": "\n5.1 어린이 교통사고",
    "text": "5.1 어린이 교통사고\n통계청 어린이 교통사고건수(시도/시/군/구)에서 광명시만 특정하여 데이터를 추출한다.\n\n코드library(readxl)\n\naccident_raw &lt;- read_excel(\"data/어린이_교통사고건수_시도_시_군_구__20230624195028.xlsx\", sheet = \"데이터\",\n           skip = 2)\n\naccident &lt;- accident_raw %&gt;% \n  select(1, 5:7) %&gt;% \n  set_names(c(\"시점\", \"사고건수\", \"사망자수\", \"부상자수\")) %&gt;% \n  mutate_all(as.integer) %&gt;% \n  pivot_longer(cols=-시점, names_to = \"구분\", values_to = \"건수\") %&gt;% \n  mutate(건수 = ifelse(is.na(건수), 0, 건수))\n\naccident\n#&gt; # A tibble: 51 × 3\n#&gt;     시점 구분      건수\n#&gt;    &lt;int&gt; &lt;chr&gt;    &lt;dbl&gt;\n#&gt;  1  2005 사고건수    93\n#&gt;  2  2005 사망자수     1\n#&gt;  3  2005 부상자수   106\n#&gt;  4  2006 사고건수    77\n#&gt;  5  2006 사망자수     0\n#&gt;  6  2006 부상자수    90\n#&gt;  7  2007 사고건수    60\n#&gt;  8  2007 사망자수     0\n#&gt;  9  2007 부상자수    62\n#&gt; 10  2008 사고건수    48\n#&gt; # ℹ 41 more rows\n\n\n\n코드extrafont::loadfonts()\n\naccident %&gt;% \n  ggplot(aes(x = 시점, y=건수, color = 구분)) +\n    geom_line() +\n    geom_point() +\n    labs(title = \"광명시 어린이 교통사고건수\",\n         x = \"\",\n         y = \"교통사고건수\",\n         caption = \"출처: KOSIS https://kosis.kr/statHtml/statHtml.do?orgId=101&tblId=DT_1YL202107\") +\n    theme_minimal(base_family = \"MaruBuri\")"
  },
  {
    "objectID": "km_school.html#어린이-교통사고-1",
    "href": "km_school.html#어린이-교통사고-1",
    "title": "경기도 광명시",
    "section": "\n5.2 어린이 교통사고",
    "text": "5.2 어린이 교통사고\n도로교통공단 교통사고 GIS 분석시스템 에서 2014~2022년 사이 경기도 광명시 “보행 어린이 사고”를 특정하여 분석한다.\n\n코드library(janitor)\nlibrary(gt)\nlibrary(gtExtras)\n\naccident_2016 &lt;- read_excel(\"data/km_accident_2014_2016.xlsx\")\naccident_2019 &lt;- read_excel(\"data/km_accident_2017_2019.xlsx\")\naccident_2022 &lt;- read_excel(\"data/km_accident_2020_2022.xlsx\")\n\naccident_tbl &lt;- bind_rows(accident_2016, accident_2019) %&gt;% \n  bind_rows(accident_2022)\n\naccident_tbl %&gt;% \n  group_by(사고유형) %&gt;% \n  summarize(사망자수 = sum(사망자수),\n            중상자수 = sum(중상자수),\n            경상자수 = sum(경상자수)) %&gt;% \n  adorn_totals(where = \"row\", name = \"합계\") %&gt;% \n  adorn_totals(where = \"col\", name = \"합계\") %&gt;% \n  ## 표 \n  gt::gt() %&gt;% \n    tab_header(\n      title = md(\"광명시 **보행 어린이** 교통사고\"),\n      subtitle = md(\"`TAAS` 교통사고분석시스템 (2014~2022)\")\n    ) %&gt;% \n    gt::cols_align(align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"교통사고 어린이 구분\",\n      columns = c(\n        사망자수, 중상자수, 경상자수\n      )\n    ) %&gt;% \n    gt_theme_538() %&gt;% \n     gt_highlight_rows(\n       rows = 사고유형 == \"차대사람 - 횡단중\",\n       fill = \"lightgrey\",\n       bold_target_only = TRUE,\n       target_col = everything()\n     )\n\n\n\n\n\n\n\n광명시 보행 어린이 교통사고\n    \n\n\nTAAS 교통사고분석시스템 (2014~2022)\n    \n\n사고유형\n      \n        교통사고 어린이 구분\n      \n      합계\n    \n\n사망자수\n      중상자수\n      경상자수\n    \n\n\n\n차대사람 - 기타\n0\n11\n34\n45\n\n\n차대사람 - 길가장자리구역통행중\n0\n3\n12\n15\n\n\n차대사람 - 보도통행중\n0\n2\n5\n7\n\n\n차대사람 - 차도통행중\n0\n3\n8\n11\n\n\n차대사람 - 횡단중\n3\n33\n59\n95\n\n\n차대차 - 기타\n0\n1\n2\n3\n\n\n차대차 - 측면충돌\n0\n3\n0\n3\n\n\n합계\n3\n56\n120\n179"
  },
  {
    "objectID": "spatial_map.html",
    "href": "spatial_map.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "raster 패키지 getData() 함수를 사용해서 지도제작을 할 수 있었으나, geodata 패키지로 기능이 이관되어 이를 사용한다.\n\n\n\n대한민국\n시도\n시군구\n\n\n\n\n코드library(raster)\nlibrary(sf)\nlibrary(geodata)\nlibrary(tidyverse)\nlibrary(osmdata)\nlibrary(stars)\nlibrary(rayshader)\nlibrary(MetBrewer)\nlibrary(colorspace)\n\n# 대한민국 전체\n\nfs::dir_create(\"data/gadm\")\n\n# korea &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 0, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea &lt;- read_rds(\"data/gadm/gadm36_KOR_0_sp.rds\") %&gt;% st_as_sf()\n \nkorea |&gt; \n  ggplot() +\n  geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sido &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 1, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea_sido &lt;- read_rds(\"data/gadm/gadm36_KOR_1_sp.rds\") %&gt;% st_as_sf()\n \nkorea_sido |&gt; \n  ggplot() +\n  geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sgg &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 2, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea_sgg &lt;- read_rds(\"data/gadm/gadm36_KOR_2_sp.rds\") %&gt;% st_as_sf()\n \nkorea_sgg |&gt; \n  ggplot() +\n  geom_sf()\n\n\n\n\n\n\n\n\n\n\n\ngeodata 웹사이트에 다양한 지도가 포함되어 있다.\n\n\n대한민국\n시도\n시군구\n\n\n\n\n코드library(raster)\nlibrary(sf)\nlibrary(geodata)\n\n# 대한민국 전체\n\n# korea_geo &lt;- gadm(\"KOR\", level=0, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#     st_as_sf()\n\nkorea_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_0_pk.rds\") %&gt;% st_as_sf()\n\nkorea_geo |&gt; \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sido_geo &lt;- gadm(\"KOR\", level=1, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#     st_as_sf()\n\nkorea_sido_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_1_pk.rds\") %&gt;% st_as_sf()\n\nkorea_sido_geo |&gt; \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_geo_sgg &lt;- gadm(\"KOR\", level=2, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#   st_as_sf()\n\nkorea_sgg_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_2_pk.rds\") %&gt;% st_as_sf()\n \nkorea_sgg_geo |&gt; \n  ggplot() +\n    geom_sf()"
  },
  {
    "objectID": "spatial_map.html#raster-행정지도",
    "href": "spatial_map.html#raster-행정지도",
    "title": "지도제작 대회",
    "section": "",
    "text": "대한민국\n시도\n시군구\n\n\n\n\n코드library(raster)\nlibrary(sf)\nlibrary(geodata)\nlibrary(tidyverse)\nlibrary(osmdata)\nlibrary(stars)\nlibrary(rayshader)\nlibrary(MetBrewer)\nlibrary(colorspace)\n\n# 대한민국 전체\n\nfs::dir_create(\"data/gadm\")\n\n# korea &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 0, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea &lt;- read_rds(\"data/gadm/gadm36_KOR_0_sp.rds\") %&gt;% st_as_sf()\n \nkorea |&gt; \n  ggplot() +\n  geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sido &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 1, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea_sido &lt;- read_rds(\"data/gadm/gadm36_KOR_1_sp.rds\") %&gt;% st_as_sf()\n \nkorea_sido |&gt; \n  ggplot() +\n  geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sgg &lt;- raster::getData(\"GADM\", country = \"KOR\", level = 2, path=\"data/gadm\") |&gt; \n#   st_as_sf()\n\nkorea_sgg &lt;- read_rds(\"data/gadm/gadm36_KOR_2_sp.rds\") %&gt;% st_as_sf()\n \nkorea_sgg |&gt; \n  ggplot() +\n  geom_sf()"
  },
  {
    "objectID": "spatial_map.html#geodata-행정지도",
    "href": "spatial_map.html#geodata-행정지도",
    "title": "지도제작 대회",
    "section": "",
    "text": "geodata 웹사이트에 다양한 지도가 포함되어 있다.\n\n\n대한민국\n시도\n시군구\n\n\n\n\n코드library(raster)\nlibrary(sf)\nlibrary(geodata)\n\n# 대한민국 전체\n\n# korea_geo &lt;- gadm(\"KOR\", level=0, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#     st_as_sf()\n\nkorea_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_0_pk.rds\") %&gt;% st_as_sf()\n\nkorea_geo |&gt; \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_sido_geo &lt;- gadm(\"KOR\", level=1, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#     st_as_sf()\n\nkorea_sido_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_1_pk.rds\") %&gt;% st_as_sf()\n\nkorea_sido_geo |&gt; \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n\n코드# korea_geo_sgg &lt;- gadm(\"KOR\", level=2, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#   st_as_sf()\n\nkorea_sgg_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_2_pk.rds\") %&gt;% st_as_sf()\n \nkorea_sgg_geo |&gt; \n  ggplot() +\n    geom_sf()"
  },
  {
    "objectID": "jeju_map.html",
    "href": "jeju_map.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rnaturalearth)\nlibrary(elevatr)\nlibrary(terra)\nlibrary(sf)\nlibrary(stars)\n\nkorea_map &lt;- ne_countries(type = \"countries\", country = \"south korea\", scale = \"medium\", returnclass = \"sf\")\n\nkorea_map %&gt;% \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n코드library(tidyterra)\n\nkorea_dem &lt;- get_elev_raster(locations = korea_map, z = 5, clip = \"locations\") \n\nnames(korea_dem) &lt;- \"대한민국\"\n\nkorea_dem_tbl &lt;- as.data.frame(korea_dem, xy=TRUE) %&gt;% \n  as_tibble() %&gt;% \n  set_names(c(\"x\", \"y\", \"elevation\"))\n\nint_elevation &lt;- classInt::classIntervals(\n    korea_dem_tbl$elevation,\n    n = 5,\n    style = \"equal\"\n)$brks %&gt;% as.integer(.)\n\nggplot() +\n  geom_spatraster(data = korea_dem) +\n  facet_wrap(~lyr) +\n  theme(\n    legend.text.align = 1,\n    panel.spacing.x = unit(0, \"lines\"), axis.title.x = element_blank(),\n    axis.text = element_blank(), axis.ticks = element_blank(),\n    axis.title.y = element_blank(), plot.title = element_text(\n      hjust = 0.5,\n      size = 18, face = \"bold\"\n    ), strip.background = element_blank(),\n    strip.text = element_text(size = 14, color = \"black\", face = \"bold\"),\n    legend.text = element_text(size = 10, family=\"D2 Coding\"),\n    legend.title = element_text(hjust = 0.1, size = 16, face = \"bold\"), \n    panel.background = element_blank()\n  ) +\n  scale_fill_gradient2(\n     low = \"grey40\",\n     mid = \"white\",\n     high = \"blue\",\n     midpoint = 448, # 한반도의 평균 고도는 약 448m 정도로 동아시아 전체 평균(910m)에 비하면 현저히 낮다.\n     guide = \"colourbar\",\n     na.value = NA, \n     breaks = int_elevation,\n     labels = scales::label_number(suffix = \" m\", big.mark = \",\")\n  ) +\n  scale_y_continuous(labels = scales::comma) +\n  labs(fill = \"높이\") +\n  coord_sf(crs = 4326)"
  },
  {
    "objectID": "jeju_map.html#sf",
    "href": "jeju_map.html#sf",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rnaturalearth)\nlibrary(elevatr)\nlibrary(terra)\nlibrary(sf)\nlibrary(stars)\n\nkorea_map &lt;- ne_countries(type = \"countries\", country = \"south korea\", scale = \"medium\", returnclass = \"sf\")\n\nkorea_map %&gt;% \n  ggplot() +\n    geom_sf()"
  },
  {
    "objectID": "jeju_map.html#tidyterra",
    "href": "jeju_map.html#tidyterra",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyterra)\n\nkorea_dem &lt;- get_elev_raster(locations = korea_map, z = 5, clip = \"locations\") \n\nnames(korea_dem) &lt;- \"대한민국\"\n\nkorea_dem_tbl &lt;- as.data.frame(korea_dem, xy=TRUE) %&gt;% \n  as_tibble() %&gt;% \n  set_names(c(\"x\", \"y\", \"elevation\"))\n\nint_elevation &lt;- classInt::classIntervals(\n    korea_dem_tbl$elevation,\n    n = 5,\n    style = \"equal\"\n)$brks %&gt;% as.integer(.)\n\nggplot() +\n  geom_spatraster(data = korea_dem) +\n  facet_wrap(~lyr) +\n  theme(\n    legend.text.align = 1,\n    panel.spacing.x = unit(0, \"lines\"), axis.title.x = element_blank(),\n    axis.text = element_blank(), axis.ticks = element_blank(),\n    axis.title.y = element_blank(), plot.title = element_text(\n      hjust = 0.5,\n      size = 18, face = \"bold\"\n    ), strip.background = element_blank(),\n    strip.text = element_text(size = 14, color = \"black\", face = \"bold\"),\n    legend.text = element_text(size = 10, family=\"D2 Coding\"),\n    legend.title = element_text(hjust = 0.1, size = 16, face = \"bold\"), \n    panel.background = element_blank()\n  ) +\n  scale_fill_gradient2(\n     low = \"grey40\",\n     mid = \"white\",\n     high = \"blue\",\n     midpoint = 448, # 한반도의 평균 고도는 약 448m 정도로 동아시아 전체 평균(910m)에 비하면 현저히 낮다.\n     guide = \"colourbar\",\n     na.value = NA, \n     breaks = int_elevation,\n     labels = scales::label_number(suffix = \" m\", big.mark = \",\")\n  ) +\n  scale_y_continuous(labels = scales::comma) +\n  labs(fill = \"높이\") +\n  coord_sf(crs = 4326)"
  },
  {
    "objectID": "yellow_sea.html",
    "href": "yellow_sea.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "참고자료: Intro to spatial data in R - Open and plot raster and vector data with base plot\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(rgdal)\n\n# 세계 해안선 shapefile을 불러옵니다.\nworld_coastline &lt;- st_read(\"data/ne_10m_coastline/ne_10m_coastline.shp\")\n#&gt; Reading layer `ne_10m_coastline' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\ne_10m_coastline\\ne_10m_coastline.shp' \n#&gt;   using driver `ESRI Shapefile'\n#&gt; Simple feature collection with 4133 features and 3 fields\n#&gt; Geometry type: LINESTRING\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -85.22194 xmax: 180 ymax: 83.6341\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_coastline))\n\n\n\n\n\n\n\n\n\n코드# korea_geo_sgg &lt;- gadm(\"KOR\", level=2, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#   st_as_sf()\n\nkorea_sgg_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_2_pk.rds\") %&gt;% st_as_sf()\n \nkorea_sgg_geo |&gt; \n  ggplot() +\n    geom_sf()\n\n\n\n\n\n\n\n\n\n코드korea_coastline &lt;- st_join(korea_sgg_geo, world_coastline, join = st_intersects)\n\n# st_join(korea_sgg_geo, world_coastline, join = st_difference)\n\nplot(st_geometry(korea_coastline))"
  },
  {
    "objectID": "yellow_sea.html#전세계-해안선",
    "href": "yellow_sea.html#전세계-해안선",
    "title": "지도제작 대회",
    "section": "",
    "text": "참고자료: Intro to spatial data in R - Open and plot raster and vector data with base plot\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(rgdal)\n\n# 세계 해안선 shapefile을 불러옵니다.\nworld_coastline &lt;- st_read(\"data/ne_10m_coastline/ne_10m_coastline.shp\")\n#&gt; Reading layer `ne_10m_coastline' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\ne_10m_coastline\\ne_10m_coastline.shp' \n#&gt;   using driver `ESRI Shapefile'\n#&gt; Simple feature collection with 4133 features and 3 fields\n#&gt; Geometry type: LINESTRING\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -85.22194 xmax: 180 ymax: 83.6341\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_coastline))"
  },
  {
    "objectID": "yellow_sea.html#대한민국",
    "href": "yellow_sea.html#대한민국",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# korea_geo_sgg &lt;- gadm(\"KOR\", level=2, path=\"data/\", version=\"latest\", resolution=1) %&gt;% \n#   st_as_sf()\n\nkorea_sgg_geo &lt;- terra::readRDS(\"data/gadm/gadm41_KOR_2_pk.rds\") %&gt;% st_as_sf()\n \nkorea_sgg_geo |&gt; \n  ggplot() +\n    geom_sf()"
  },
  {
    "objectID": "yellow_sea.html#대한민국-해안선",
    "href": "yellow_sea.html#대한민국-해안선",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드korea_coastline &lt;- st_join(korea_sgg_geo, world_coastline, join = st_intersects)\n\n# st_join(korea_sgg_geo, world_coastline, join = st_difference)\n\nplot(st_geometry(korea_coastline))"
  },
  {
    "objectID": "yellow_sea.html#시군구",
    "href": "yellow_sea.html#시군구",
    "title": "지도제작 대회",
    "section": "\n2.1 시군구",
    "text": "2.1 시군구\n\n총 5 시군구: 김포시, 안산시 단원구, 화성시, 평택시, 시흥시\n\n\n코드sf_use_s2(FALSE)\n\nadmin_sf &lt;- st_read(\"data/HangJeongDong_ver20230401.geojson\")\n#&gt; Reading layer `HangJeongDong_ver20230401' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\HangJeongDong_ver20230401.geojson' \n#&gt;   using driver `GeoJSON'\n#&gt; Simple feature collection with 3520 features and 10 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\ngg_incheon_sf &lt;- admin_sf %&gt;% \n  filter(sidonm %in% c(\"경기도\")) %&gt;% \n  group_by(sidonm, sggnm) %&gt;% \n  summarize(geometry = st_union(geometry)) %&gt;% \n  mutate(바다인접 = ifelse(str_detect(sggnm, \"김포|안산|화성|평택|시흥\"), \"바다인접\", \"비인접\")) %&gt;% \n  ungroup()\n\ngg_incheon_sf %&gt;% \n  ggplot() +\n    geom_sf(aes(fill=바다인접), linewidth = 0.1) +\n    ggrepel::geom_text_repel(\n      aes(label = sggnm, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 3\n    ) +\n    theme_void() +\n    scale_fill_manual(values = c(\"gray95\", \"skyblue\")) +\n    labs(title = \"경기도 바다인접 시군구\",\n         fill = \"바다인접 여부\")"
  },
  {
    "objectID": "yellow_sea.html#항구",
    "href": "yellow_sea.html#항구",
    "title": "지도제작 대회",
    "section": "\n2.2 항구",
    "text": "2.2 항구\n\n공공데이터 해양수산부 항만정보\n\n\n\n코드ports &lt;- read_csv(\"data/해양수산부_항만정보_20210105.csv\",locale=locale('ko',encoding='euc-kr'))\n\nports %&gt;% \n  filter(str_detect(항만위치, \"^경기\"))\n#&gt; # A tibble: 1 × 23\n#&gt;   국가관리구분 항구분 항만명     관리청    항만위치 항구역 `수(물)면적` 부지면적\n#&gt;   &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;\n#&gt; 1 국가관리     신항만 평택당진항 해양수산… 경기도 … 현면…         90992     6440\n#&gt; # ℹ 15 more variables: 설계파고 &lt;dbl&gt;, 설계파향 &lt;chr&gt;, 최고조위 &lt;dbl&gt;,\n#&gt; #   평균해면 &lt;dbl&gt;, 해저지질 &lt;chr&gt;, 방파제길이 &lt;dbl&gt;, 안벽길이 &lt;dbl&gt;,\n#&gt; #   `물양장(소형선부두)길이` &lt;dbl&gt;, `잔교수(기)` &lt;dbl&gt;, `상옥수(동)` &lt;dbl&gt;,\n#&gt; #   야적장면적 &lt;dbl&gt;, `접안능력수(선석)` &lt;dbl&gt;, 하역능력수 &lt;dbl&gt;,\n#&gt; #   기타시설물현황 &lt;chr&gt;, 주요취급화물 &lt;chr&gt;\n\n\n\n코드fishing_sf &lt;- st_read(\"data/해양경찰청_낚시어선 출입항 항포구 위치정보_20221129/D159-6.낚시어선 출입항 항포구 위치정보_v1.0.shp\")\n#&gt; Reading layer `D159-6.낚시어선 출입항 항포구 위치정보_v1.0' from data source `D:\\tcs\\map_challenge\\data\\해양경찰청_낚시어선 출입항 항포구 위치정보_20221129\\D159-6.낚시어선 출입항 항포구 위치정보_v1.0.shp' \n#&gt;   using driver `ESRI Shapefile'\n#&gt; Simple feature collection with 135 features and 9 fields\n#&gt; Geometry type: POINT\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 856626.6 ymin: 1469293 xmax: 1301571 ymax: 2050009\n#&gt; Projected CRS: Korea 2000 / Unified CS\n\nfishing_sf &lt;- st_transform(fishing_sf, crs = st_crs(gg_incheon_sf))\n\nfishing_sf %&gt;% \n  ggplot() +\n    geom_sf() +\n    ggrepel::geom_text_repel(\n      aes(label = DEPART_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 3\n    ) +\n    theme_void() +\n    labs(title = \"해양경찰청 낚시어선 출입항\")"
  },
  {
    "objectID": "yellow_sea.html#경기도-x-낚시항포구",
    "href": "yellow_sea.html#경기도-x-낚시항포구",
    "title": "지도제작 대회",
    "section": "\n2.3 경기도 X 낚시항포구",
    "text": "2.3 경기도 X 낚시항포구\n\n코드# gg_incheon_sf %&gt;% \n#   st_touches(fishing_sf %&gt;% select(DEPART_NM, geometry), left=FALSE) \n\ngg_fishing_sf &lt;- st_crop(fishing_sf, xmin = 126.3797, xmax = 127.8495,\n                                     ymin = 36.893530, ymax = 38.29204)\n\nggplot() +\n  geom_sf(data = gg_incheon_sf) +\n  geom_sf(data = gg_fishing_sf, color = \"red\") +\n  ggrepel::geom_text_repel(\n    data = gg_fishing_sf,\n      aes(label = DEPART_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 3\n    ) +\n    theme_void() +\n    labs(title = \"해양경찰청 낚시어선 출입항\")"
  },
  {
    "objectID": "yellow_sea.html#경기도-x-어촌어항",
    "href": "yellow_sea.html#경기도-x-어촌어항",
    "title": "지도제작 대회",
    "section": "\n2.4 경기도 X 어촌어항",
    "text": "2.4 경기도 X 어촌어항\n\n해양수산부 어촌어항관리시스템\n\n\n코드library(readxl)\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(jsonlite)\n\n## 국가어항\nnport_raw &lt;- read_excel(\"data/어촌어항.xlsx\", sheet = \"국가어항\", skip = 2)\n\nggport_tbl &lt;- nport_raw %&gt;% \n  janitor::clean_names(ascii = FALSE) %&gt;% \n  filter(str_detect(주소, \"^경기\")) %&gt;% \n  mutate(주소 = ifelse(어항_명 == \"제부항\", \"경기도 화성시 서신면 제부리 289-20\", 주소))\n\n\n\n코드get_lonlat &lt;- function(address) {\n  address_resp &lt;- GET(url = 'https://dapi.kakao.com/v2/local/search/address.json',\n           query = list(query = address),\n           add_headers(Authorization = paste0(\"KakaoAK \", Sys.getenv(\"DAUM_MAP_API_KEY\"))))\n\n  address_list &lt;- address_resp %&gt;% \n    content(as = 'text') %&gt;% \n    fromJSON()\n  \n  address_tbl &lt;- address_list$documents$road_address %&gt;% \n    dplyr::select(x,y) %&gt;% \n    mutate(x = as.numeric(x),\n           y = as.numeric(y))\n  \n  return(address_tbl)\n}\n\n# get_lonlat(kpmg_addr)\n\nsafely_get_lonlat &lt;- safely(get_lonlat, otherwise = \"error\")\n\nggport_geo &lt;- ggport_tbl %&gt;% \n  mutate(data = map(주소, safely_get_lonlat))\n\n# get_lonlat(ggport_tbl$주소[5])\n\n# get_lonlat(\"경기도 화성시 서신면 제부리 289-20\")\n\nggport_geo &lt;- ggport_geo %&gt;% \n  mutate(lonlat = map(data, \"result\")) %&gt;% \n  mutate(lonlat = ifelse(어항_명 == \"제부항\", list(data.frame(x = 126.6228811, y=37.1795305)), lonlat)) %&gt;% \n  mutate(lon = map(lonlat, select, x) %&gt;% unlist,\n         lat = map(lonlat, select, y) %&gt;% unlist)\n\nggport_geo %&gt;% \n  write_rds(\"data/ggport_geo.rds\")\n\n\n\n코드ggport_geo &lt;- read_rds(\"data/ggport_geo.rds\")\n\nggport_geo_sf &lt;- ggport_geo %&gt;% \n  sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326, agr = \"constant\")\n\nggplot() +\n  geom_sf(data = gg_incheon_sf, aes(fill = 바다인접), linewidth = 0.1, show.legend = FALSE) +\n  geom_sf(data = ggport_geo_sf, aes(color = 어항_종류)) +\n  ggrepel::geom_text_repel(\n    data = ggport_geo_sf,\n      aes(label = 어항_명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 3\n    ) +\n    theme_void() +\n    labs(title = \"경기도 국가/지방어항 현황\",\n         color = \"어항 종류\") +\n    ggrepel::geom_text_repel(\n      data = gg_incheon_sf,\n      aes(label = sggnm, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 3, show.legend = FALSE\n    )   +\n    scale_fill_manual(values = c(\"skyblue\", \"gray95\")) +  \n    scale_color_manual(values = c(\"지방어항\" = \"blue\", \"국가어항\" = \"red\",\n                                  \"바다인접\" = \"black\", \"비인접\" = \"orange\"))"
  },
  {
    "objectID": "yellow_sea.html#구시군-대선",
    "href": "yellow_sea.html#구시군-대선",
    "title": "지도제작 대회",
    "section": "\n3.1 5 구시군 대선",
    "text": "3.1 5 구시군 대선\n\n\n득표수\n득표율\n\n\n\n\n코드library(krvote)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\n\nggport_sgg &lt;- krvote::election_20220309$득표율 %&gt;% \n  filter( str_detect(시도명, \"^경기\"),\n          str_detect(구시군명, \"^화성|^평택|^김포|^안산시단원구|^시흥\")) \n  \nggport_sgg_table &lt;- ggport_sgg %&gt;% \n  pivot_longer(이재명:계, names_to = \"후보\", values_to = \"득표\") %&gt;% \n  group_by(구시군명, 후보) %&gt;% \n  summarise(득표 = sum(득표)) %&gt;% \n  filter(후보 != \"계\") %&gt;% \n  ungroup() %&gt;% \n  mutate(후보 = case_when( 후보 == \"윤석열\" ~ \"국민의힘\",\n                           후보 == \"이재명\" ~ \"민주당\",\n                           TRUE ~ \"기타\")) %&gt;% \n  group_by(구시군명, 후보) %&gt;% \n  summarise( 득표 = sum(득표)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = 후보, values_from = 득표) %&gt;% \n  janitor::adorn_totals(where = \"col\", name = \"합계\") \n\n\nggport_sgg_table %&gt;% \n  relocate(기타, .before = 합계) %&gt;% \n  gt() %&gt;% \n    fmt_integer(columns = 국민의힘:합계) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제20대 대통령선거`\")\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제20대 대통령선거\n    \n\n구시군명\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n136,814\n153,206\n9,933\n299,953\n\n\n시흥시\n125,544\n178,462\n10,759\n314,765\n\n\n안산시단원구\n80,605\n103,595\n6,975\n191,175\n\n\n평택시\n156,630\n166,032\n13,143\n335,805\n\n\n화성시\n236,055\n283,324\n18,320\n537,699\n\n\n\n\n\n\n\n\n\n코드ggport_sgg_table %&gt;% \n  adorn_percentages() %&gt;% \n  gt::gt() %&gt;% \n    fmt_percent(columns = 국민의힘:합계, decimals = 1) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표율(%)\"),\n      subtitle = md(\"`제20대 대통령선거`\")\n  )  \n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표율(%)\n    \n\n제20대 대통령선거\n    \n\n구시군명\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n45.6%\n51.1%\n3.3%\n100.0%\n\n\n시흥시\n39.9%\n56.7%\n3.4%\n100.0%\n\n\n안산시단원구\n42.2%\n54.2%\n3.6%\n100.0%\n\n\n평택시\n46.6%\n49.4%\n3.9%\n100.0%\n\n\n화성시\n43.9%\n52.7%\n3.4%\n100.0%"
  },
  {
    "objectID": "yellow_sea.html#대선-2022년",
    "href": "yellow_sea.html#대선-2022년",
    "title": "지도제작 대회",
    "section": "\n3.1 대선 (2022년)",
    "text": "3.1 대선 (2022년)\n\n\n득표수\n득표율\n\n\n\n\n코드library(krvote)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\n\nggport_sgg &lt;- krvote::election_20220309$득표율 %&gt;% \n  filter( str_detect(시도명, \"^경기\"),\n          str_detect(구시군명, \"^화성|^평택|^김포|^안산시단원구|^시흥\")) \n  \nggport_sgg_table &lt;- ggport_sgg %&gt;% \n  pivot_longer(이재명:계, names_to = \"후보\", values_to = \"득표\") %&gt;% \n  group_by(구시군명, 후보) %&gt;% \n  summarise(득표 = sum(득표)) %&gt;% \n  filter(후보 != \"계\") %&gt;% \n  ungroup() %&gt;% \n  mutate(후보 = case_when( 후보 == \"윤석열\" ~ \"국민의힘\",\n                           후보 == \"이재명\" ~ \"민주당\",\n                           TRUE ~ \"기타\")) %&gt;% \n  group_by(구시군명, 후보) %&gt;% \n  summarise( 득표 = sum(득표)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = 후보, values_from = 득표) %&gt;% \n  janitor::adorn_totals(where = \"col\", name = \"합계\") \n\n\nggport_sgg_table %&gt;% \n  relocate(기타, .before = 합계) %&gt;% \n  gt() %&gt;% \n    fmt_integer(columns = 국민의힘:합계) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제20대 대통령선거`\")\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제20대 대통령선거\n    \n\n구시군명\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n136,814\n153,206\n9,933\n299,953\n\n\n시흥시\n125,544\n178,462\n10,759\n314,765\n\n\n안산시단원구\n80,605\n103,595\n6,975\n191,175\n\n\n평택시\n156,630\n166,032\n13,143\n335,805\n\n\n화성시\n236,055\n283,324\n18,320\n537,699\n\n\n\n\n\n\n\n\n\n코드ggport_sgg_table %&gt;% \n  adorn_percentages() %&gt;% \n  gt::gt() %&gt;% \n    fmt_percent(columns = 국민의힘:합계, decimals = 1) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표율(%)\"),\n      subtitle = md(\"`제20대 대통령선거`\")\n  )   %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표율(%)\n    \n\n제20대 대통령선거\n    \n\n구시군명\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n45.6%\n51.1%\n3.3%\n100.0%\n\n\n시흥시\n39.9%\n56.7%\n3.4%\n100.0%\n\n\n안산시단원구\n42.2%\n54.2%\n3.6%\n100.0%\n\n\n평택시\n46.6%\n49.4%\n3.9%\n100.0%\n\n\n화성시\n43.9%\n52.7%\n3.4%\n100.0%"
  },
  {
    "objectID": "yellow_sea.html#총선-2020년",
    "href": "yellow_sea.html#총선-2020년",
    "title": "지도제작 대회",
    "section": "\n3.2 총선 (2020년)",
    "text": "3.2 총선 (2020년)\n\n\n득표수\n득표율\n\n\n\n\n코드library(stringi)\n\ngeneral_sgg &lt;- krvote::general_2020 %&gt;% \n  filter( str_detect(시도, \"^경기\"),\n          str_detect(선거구, \"^화성|^평택|^김포|^안산시단원구|^시흥\")) \n\ngeneral_sgg_table &lt;- general_sgg %&gt;% \n  unnest(data) %&gt;% \n  ## CP949 인코딩 처리\n  mutate(구분_cp949  = iconv(구분, \"euc-kr\", \"utf-8\")) %&gt;% \n  mutate(구분 = ifelse(is.na(구분_cp949), 구분, 구분_cp949)) %&gt;% \n  group_by(선거구, 구분) %&gt;% \n  summarise( 득표 = sum(사람수)) %&gt;% \n  filter(구분 != \"무표투표수\",\n         구분 != \"기권수\",\n         구분 != \"선거인수\",\n         구분 != \"투표수\",\n         구분 != \"계\") %&gt;% \n  ungroup() %&gt;% \n  mutate(구분 = case_when( str_detect(구분, \"민주당\") ~ \"민주당\",\n                           str_detect(구분, \"미래통합\") ~ \"국민의힘\",\n                           TRUE ~ \"기타\")) %&gt;% \n  group_by(선거구, 구분) %&gt;% \n  summarise(득표 = sum(득표)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = 구분, values_from = 득표) %&gt;% \n  janitor::adorn_totals(where = \"col\", name = \"합계\") \n\ngeneral_sgg_table %&gt;% \n  relocate(기타, .before = 합계) %&gt;% \n  gt() %&gt;% \n    fmt_integer(columns = 국민의힘:합계) %&gt;% \n    cols_align(columns = 선거구, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제21대 국회의원선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제21대 국회의원선거\n    \n\n선거구\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시갑\n42,660\n58,613\n9,556\n110,829\n\n\n김포시을\n52,200\n63,193\n1,996\n117,389\n\n\n시흥시갑\n59,595\n68,653\n4,497\n132,745\n\n\n시흥시을\n32,700\n69,270\n1,381\n103,351\n\n\n안산시단원구갑\n31,086\n42,009\n2,264\n75,359\n\n\n안산시단원구을\n38,497\n42,150\n1,476\n82,123\n\n\n평택시갑\n59,063\n62,564\n2,946\n124,573\n\n\n평택시을\n59,491\n57,540\n7,755\n124,786\n\n\n화성시갑\n52,291\n58,689\n7,218\n118,198\n\n\n화성시병\n47,377\n88,793\n1,599\n137,769\n\n\n화성시을\n52,802\n98,612\n1,391\n152,805\n\n\n\n\n\n\n\n\n\n코드general_sgg_table %&gt;% \n  adorn_percentages() %&gt;% \n  gt::gt() %&gt;% \n    fmt_percent(columns = 국민의힘:합계, decimals = 1) %&gt;% \n    cols_align(columns = 선거구, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"대선 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표율(%)\"),\n      subtitle = md(\"`제21대 국회의원선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표율(%)\n    \n\n제21대 국회의원선거\n    \n\n선거구\n      \n        대선 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시갑\n38.5%\n52.9%\n8.6%\n100.0%\n\n\n김포시을\n44.5%\n53.8%\n1.7%\n100.0%\n\n\n시흥시갑\n44.9%\n51.7%\n3.4%\n100.0%\n\n\n시흥시을\n31.6%\n67.0%\n1.3%\n100.0%\n\n\n안산시단원구갑\n41.3%\n55.7%\n3.0%\n100.0%\n\n\n안산시단원구을\n46.9%\n51.3%\n1.8%\n100.0%\n\n\n평택시갑\n47.4%\n50.2%\n2.4%\n100.0%\n\n\n평택시을\n47.7%\n46.1%\n6.2%\n100.0%\n\n\n화성시갑\n44.2%\n49.7%\n6.1%\n100.0%\n\n\n화성시병\n34.4%\n64.5%\n1.2%\n100.0%\n\n\n화성시을\n34.6%\n64.5%\n0.9%\n100.0%"
  },
  {
    "objectID": "yellow_sea2.html",
    "href": "yellow_sea2.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(sf)\nlibrary(giscoR)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(krvote)\nsf_use_s2(FALSE)\n\nkorea_sf &lt;- giscoR::gisco_get_countries(\n        year = \"2020\",\n        epsg = \"4326\",\n        resolution = \"01\",\n        country = \"KR\"\n    ) \n\nplot(st_geometry(korea_sf))\n\n\n\n\n\n\n\n\nGSHHG: A Global Self-consistent, Hierarchical, High-resolution Geography Database 아주 상세한 육지와 해안을 구분하는 해안선을 기준으로 인접한 경기도 선거구를 특정한다.\n\nfull resolution: Original (full) data resolution.\nhigh resolution: About 80 % reduction in size and quality.\nintermediate resolution: Another ~80 % reduction.\nlow resolution: Another ~80 % reduction.\ncrude resolution: Another ~80 % reduction.\n\n\n코드\n# coastline_sf &lt;-  giscoR::gisco_coastallines\n\ni_world_coastline &lt;- st_read(\"data/gshhg-shp-2.3.7/GSHHS_shp/i/GSHHS_i_L1.shp\")\n#&gt; Reading layer `GSHHS_i_L1' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\gshhg-shp-2.3.7\\GSHHS_shp\\i\\GSHHS_i_L1.shp' \n#&gt;   using driver `ESRI Shapefile'\n#&gt; Simple feature collection with 32830 features and 6 fields\n#&gt; Geometry type: POLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -68.91981 xmax: 180 ymax: 83.63339\n#&gt; Geodetic CRS:  WGS 84\n\ni_coastline_sf &lt;- i_world_coastline %&gt;% \n  st_crop(st_bbox(korea_sf))\n\nggplot(i_coastline_sf) +\n  geom_sf(color = \"blue\", fill = \"blue\", alpha = 0.2) +\n  # Zoom on Korea\n  # coord_sf(\n  #   xlim = c(korea_bbox['xmin'],  korea_bbox['xmax']),\n  #   ylim = c(korea_bbox['ymin'],  korea_bbox['ymax'])\n  # ) +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = \"black\",\n      color = \"black\"\n    ),\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  )\n\n\n\n\n\n\n\n\n\n코드korea_coast_sf &lt;- st_join(korea_sf, i_coastline_sf)\n\nggplot(korea_coast_sf) +\n  geom_sf(color = \"black\", fill = \"transparent\", alpha = 0.2) +\n  geom_sf(data = i_coastline_sf, color = \"blue\", fill = \"transparent\", alpha = 0.2) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  ) \n\n\n\n\n\n\n\n\nUN/LOCODE 표준으로 등재된 항구 코드 (KRPNC) 포함\n\n코드korea_port &lt;- gisco_get_ports(year = \"2013\",\n  country = \"KOR\")\n\nkorea_port &lt;- st_transform(korea_port, st_crs(korea_coast_sf))\n\nggplot(korea_coast_sf) +\n  geom_sf(color = \"blue\", fill = \"white\", alpha = 0.2) +\n  geom_sf(data = korea_port, color = \"red\", size = 2) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  ) +\n  labs(\n    title = \"대한민국 항구\", subtitle = \"기준 2013년\",\n    caption = \"항구 코드: UN/LOCODE 표준\"\n  )  +\n  geom_text_repel(data = korea_port, aes(label = PORT_ID, geometry = geometry),\n                   stat = \"sf_coordinates\", min.segment.length = 0, size = 5, \n                   max.overlaps = Inf, box.padding = 1.0)"
  },
  {
    "objectID": "yellow_sea2.html#대한민국-지도",
    "href": "yellow_sea2.html#대한민국-지도",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(sf)\nlibrary(giscoR)\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(krvote)\nsf_use_s2(FALSE)\n\nkorea_sf &lt;- giscoR::gisco_get_countries(\n        year = \"2020\",\n        epsg = \"4326\",\n        resolution = \"01\",\n        country = \"KR\"\n    ) \n\nplot(st_geometry(korea_sf))"
  },
  {
    "objectID": "yellow_sea2.html#해안선",
    "href": "yellow_sea2.html#해안선",
    "title": "지도제작 대회",
    "section": "",
    "text": "GSHHG: A Global Self-consistent, Hierarchical, High-resolution Geography Database 아주 상세한 육지와 해안을 구분하는 해안선을 기준으로 인접한 경기도 선거구를 특정한다.\n\nfull resolution: Original (full) data resolution.\nhigh resolution: About 80 % reduction in size and quality.\nintermediate resolution: Another ~80 % reduction.\nlow resolution: Another ~80 % reduction.\ncrude resolution: Another ~80 % reduction.\n\n\n코드\n# coastline_sf &lt;-  giscoR::gisco_coastallines\n\ni_world_coastline &lt;- st_read(\"data/gshhg-shp-2.3.7/GSHHS_shp/i/GSHHS_i_L1.shp\")\n#&gt; Reading layer `GSHHS_i_L1' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\gshhg-shp-2.3.7\\GSHHS_shp\\i\\GSHHS_i_L1.shp' \n#&gt;   using driver `ESRI Shapefile'\n#&gt; Simple feature collection with 32830 features and 6 fields\n#&gt; Geometry type: POLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -68.91981 xmax: 180 ymax: 83.63339\n#&gt; Geodetic CRS:  WGS 84\n\ni_coastline_sf &lt;- i_world_coastline %&gt;% \n  st_crop(st_bbox(korea_sf))\n\nggplot(i_coastline_sf) +\n  geom_sf(color = \"blue\", fill = \"blue\", alpha = 0.2) +\n  # Zoom on Korea\n  # coord_sf(\n  #   xlim = c(korea_bbox['xmin'],  korea_bbox['xmax']),\n  #   ylim = c(korea_bbox['ymin'],  korea_bbox['ymax'])\n  # ) +\n  theme_minimal() +\n  theme(\n    plot.background = element_rect(\n      fill = \"black\",\n      color = \"black\"\n    ),\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  )"
  },
  {
    "objectID": "yellow_sea2.html#결합",
    "href": "yellow_sea2.html#결합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드korea_coast_sf &lt;- st_join(korea_sf, i_coastline_sf)\n\nggplot(korea_coast_sf) +\n  geom_sf(color = \"black\", fill = \"transparent\", alpha = 0.2) +\n  geom_sf(data = i_coastline_sf, color = \"blue\", fill = \"transparent\", alpha = 0.2) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  )"
  },
  {
    "objectID": "yellow_sea2.html#항구",
    "href": "yellow_sea2.html#항구",
    "title": "지도제작 대회",
    "section": "",
    "text": "UN/LOCODE 표준으로 등재된 항구 코드 (KRPNC) 포함\n\n코드korea_port &lt;- gisco_get_ports(year = \"2013\",\n  country = \"KOR\")\n\nkorea_port &lt;- st_transform(korea_port, st_crs(korea_coast_sf))\n\nggplot(korea_coast_sf) +\n  geom_sf(color = \"blue\", fill = \"white\", alpha = 0.2) +\n  geom_sf(data = korea_port, color = \"red\", size = 2) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_text(colour = \"grey90\")\n  ) +\n  labs(\n    title = \"대한민국 항구\", subtitle = \"기준 2013년\",\n    caption = \"항구 코드: UN/LOCODE 표준\"\n  )  +\n  geom_text_repel(data = korea_port, aes(label = PORT_ID, geometry = geometry),\n                   stat = \"sf_coordinates\", min.segment.length = 0, size = 5, \n                   max.overlaps = Inf, box.padding = 1.0)"
  },
  {
    "objectID": "yellow_sea2.html#제21대-총선-선구구",
    "href": "yellow_sea2.html#제21대-총선-선구구",
    "title": "지도제작 대회",
    "section": "\n2.1 제21대 총선 선구구",
    "text": "2.1 제21대 총선 선구구\n단순하고 가독성 높은 선거구 지도 제작을 위해 “서울”, “경기”, “부산”, “인천”, “광주” 를 제외!\n\n코드precinct_sf &lt;- st_read(\"data/2020_21_elec_253.json\")\n#&gt; Reading layer `2020_21_elec_253' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\2020_21_elec_253.json' using driver `GeoJSON'\n#&gt; Simple feature collection with 253 features and 4 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\nkr_precinct_sf &lt;- precinct_sf %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, pattern = '^\\\\S*\\\\s'))\n\nggplot() +\n  geom_sf(data = kr_precinct_sf) +\n  geom_text_repel(data = kr_precinct_sf %&gt;% filter(!SGG_1 %in% c(\"서울\", \"경기\", \"부산\", \"인천\", \"광주\")), aes(label = SGG_3, geometry = geometry),\n                  stat = \"sf_coordinates\", min.segment.length = 0,\n                  max.overlaps = Inf, size = 3)\n\n\n\n\n\n\n\n\n\n지도\n선거구명\n\n\n\n\n코드kr_coast_sf &lt;- st_filter(precinct_sf, i_coastline_sf, .predicate = st_overlaps)\n\nggplot() +\n  geom_sf(data = kr_coast_sf) +\n  geom_sf(data = korea_coast_sf, color = \"blue\", fill = \"transparent\") +\n  geom_text_repel(data = kr_coast_sf, aes(label = SGG_3, geometry = geometry),\n                   stat = \"sf_coordinates\", min.segment.length = 0, size = 3, \n                   max.overlaps = Inf, box.padding = 1.0) +\n  labs(x = \"\",\n       y = \"\")\n\n\n\n\n\n\n\n\n\n\n코드library(gt)\nlibrary(gtExtras)\n\nkr_coast_sf %&gt;% \n  sf::st_drop_geometry() %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, pattern = '^\\\\S*\\\\s')) %&gt;% \n  group_by(시도명 = SGG_1) %&gt;% \n  summarise(선거구수 = n(),\n            선거구 = paste0(SGG_3, collapse=\"|\")) %&gt;% \n  arrange(desc(선거구수)) %&gt;% \n  janitor::adorn_totals(where = \"row\", name = \"합계\") %&gt;%   \n  gt::gt() %&gt;% \n    cols_align(align = \"center\") %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(title = \"해안선 인접 총선 선거구\",\n               subtitle = md(\"`선관위 제21대 선거구 기준`\")) \n\n\n\n\n\n\n\n해안선 인접 총선 선거구\n    \n\n선관위 제21대 선거구 기준\n    \n\n시도명\n      선거구수\n      선거구\n    \n\n\n\n경기\n13\n김포갑|파주갑|고양을|김포을|파주을|고양병|안산단원갑|안산상록갑|평택을|안산단원을|화성갑|고양정|시흥을\n\n\n부산\n11\n해운대갑|북강서을|남구갑|남구을|사하갑|중구영도구|사하을|수영|기장|서구동구|사상\n\n\n전남\n10\n순천광양곡성구례을|여수갑|여수을|고흥보성장흥강진|나주화순|영암무안신안|해남완도진도|순천광양곡성구례갑|목포|담양함평영광장성\n\n\n인천\n8\n연수갑|연수을|서구갑|중구강화옹진|서구을|남동갑|동구미추홀갑|동구미추홀을\n\n\n경남\n7\n창원마산회원|거제|창원성산|통영고성|창원진해|창원마산합포|사천남해하동\n\n\n충남\n7\n서산태안|보령서천|공주부여청양|당진|아산갑|아산을|홍성예산\n\n\n경북\n5\n경주|군위의성청송영덕|영주영양봉화울진|포항북구|포항남울릉\n\n\n울산\n4\n북구|남구을|동구|울주\n\n\n전북\n4\n김제부안|정읍고창|익산갑|군산\n\n\n강원\n3\n강릉|동해태백삼척정선|속초인제고성양양\n\n\n서울\n3\n마포을|강서을|강서병\n\n\n제주\n3\n제주을|서귀포|제주갑\n\n\n합계\n78\n-"
  },
  {
    "objectID": "yellow_sea2.html#제21대-경기도-선구구",
    "href": "yellow_sea2.html#제21대-경기도-선구구",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 경기도 선구구",
    "text": "2.2 제21대 경기도 선구구\n\n코드gg_precinct_sf &lt;- precinct_sf %&gt;% \n  filter(SGG_1 == \"경기\") %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, \"경기\\\\s+\")) \n\nggplot() +\n  geom_sf(data = gg_precinct_sf) +\n  geom_text_repel(data = gg_precinct_sf, aes(label = SGG_3, geometry = geometry),\n                  stat = \"sf_coordinates\", min.segment.length = 0,\n                  max.overlaps = Inf)\n\n\n\n\n\n\n\n\n\n지도\n선거구명\n\n\n\n\n코드gg_coast_sf &lt;- st_filter(gg_precinct_sf, coastline_sf, .predicate = st_overlaps)\n\nggplot() +\n  geom_sf(data = gg_coast_sf) +\n  geom_sf(data = gg_precinct_sf, color = \"blue\", fill = \"transparent\") +\n  geom_text_repel(data = gg_coast_sf, aes(label = SGG_3, geometry = geometry),\n                   stat = \"sf_coordinates\", min.segment.length = 0, size = 3, \n                   max.overlaps = Inf, box.padding = 1.0) +\n  labs(x = \"\",\n       y = \"\")\n\n\n\n\n\n\n\n\n\n\n코드\ngg_coast_sf %&gt;% \n  sf::st_drop_geometry() %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, pattern = '^\\\\S*\\\\s')) %&gt;% \n  gt::gt() %&gt;% \n    cols_align(align = \"center\") %&gt;% \n    tab_header(title = \"해안선 인접 총선 선거구\",\n               subtitle = md(\"`선관위 제21대 선거구 기준`\")) %&gt;% \n    cols_label(\n      SGG_Code = \"시군구 코드\",\n      SGG_1 = \"시도명\",\n      SGG_2 = \"선거구명\"\n    ) %&gt;% \n    gt_theme_538() \n\n\n\n\n\n\n\n해안선 인접 총선 선거구\n    \n\n선관위 제21대 선거구 기준\n    \n\n시군구 코드\n      시도명\n      선거구명\n      SGG_3\n    \n\n\n\n2413903\n경기\n경기도 김포시을\n김포을\n\n\n2411902\n경기\n경기도 안산시단원구을\n안산단원을\n\n\n2412801\n경기\n경기도 화성시갑\n화성갑\n\n\n2412902\n경기\n경기도 시흥시을\n시흥을"
  },
  {
    "objectID": "yellow_sea2.html#제21대-경기-선구구",
    "href": "yellow_sea2.html#제21대-경기-선구구",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 경기 선구구",
    "text": "2.2 제21대 경기 선구구\n\n코드gg_precinct_sf &lt;- precinct_sf %&gt;% \n  filter(SGG_1 == \"경기\") %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, \"경기\\\\s+\")) \n\nggplot() +\n  geom_sf(data = gg_precinct_sf) +\n  geom_text_repel(data = gg_precinct_sf, aes(label = SGG_3, geometry = geometry),\n                  stat = \"sf_coordinates\", min.segment.length = 0,\n                  max.overlaps = Inf)\n\n\n\n\n\n\n\n\n\n지도\n선거구명\n\n\n\n\n코드gg_coast_sf &lt;- st_filter(gg_precinct_sf, i_coastline_sf, .predicate = st_overlaps)\n\nggplot() +\n  geom_sf(data = gg_coast_sf) +\n  geom_sf(data = gg_precinct_sf, color = \"blue\", fill = \"transparent\") +\n  geom_text_repel(data = gg_coast_sf, aes(label = SGG_3, geometry = geometry),\n                   stat = \"sf_coordinates\", min.segment.length = 0, size = 3, \n                   max.overlaps = Inf, box.padding = 1.0) +\n  labs(x = \"\",\n       y = \"\")\n\n\n\n\n\n\n\n\n\n\n코드\ngg_coast_sf %&gt;% \n  sf::st_drop_geometry() %&gt;% \n  mutate(SGG_3 = str_remove(SGG_3, pattern = '^\\\\S*\\\\s')) %&gt;% \n  mutate(순 = 1:n()) %&gt;% \n  select(-SGG_2) %&gt;% \n  select(순, everything()) %&gt;% \n  gt::gt() %&gt;% \n    cols_align(align = \"center\") %&gt;% \n    tab_header(title = \"해안선 인접 총선 선거구\",\n               subtitle = md(\"`선관위 제21대 선거구 기준`\")) %&gt;% \n    cols_label(\n      SGG_Code = \"시군구 코드\",\n      SGG_1 = \"시도명\",\n      SGG_3 = \"선거구명\"\n    ) %&gt;% \n    gt_theme_538() \n\n\n\n\n\n\n\n해안선 인접 총선 선거구\n    \n\n선관위 제21대 선거구 기준\n    \n\n순\n      시군구 코드\n      시도명\n      선거구명\n    \n\n\n\n1\n2413902\n경기\n김포갑\n\n\n2\n2413202\n경기\n파주갑\n\n\n3\n2412002\n경기\n고양을\n\n\n4\n2413903\n경기\n김포을\n\n\n5\n2413203\n경기\n파주을\n\n\n6\n2412101\n경기\n고양병\n\n\n7\n2411901\n경기\n안산단원갑\n\n\n8\n2411801\n경기\n안산상록갑\n\n\n9\n2411502\n경기\n평택을\n\n\n10\n2411902\n경기\n안산단원을\n\n\n11\n2412801\n경기\n화성갑\n\n\n12\n2412201\n경기\n고양정\n\n\n13\n2412902\n경기\n시흥을"
  },
  {
    "objectID": "yellow_sea.html#지선---도지사-2022년",
    "href": "yellow_sea.html#지선---도지사-2022년",
    "title": "지도제작 대회",
    "section": "\n3.3 지선 - 도지사 (2022년)",
    "text": "3.3 지선 - 도지사 (2022년)\n\n\n득표수\n득표율\n\n\n\n\n코드local_sido_raw &lt;- krvote::local_sido_20220601 %&gt;% \n  filter(str_detect(선거구명, \"^경기\")) %&gt;% \n  unnest(data) %&gt;% \n  filter(str_detect(구시군명, \"^화성|^평택|^김포|^안산시단원구|^시흥\")) %&gt;% \n  pivot_longer(더불어민주당_김동연:기권수) %&gt;% \n  separate(name, into = c(\"정당\", \"후보\"), sep = \"_\") %&gt;% \n  filter(!is.na(후보)) %&gt;% \n  group_by(구시군명, 정당) %&gt;% \n  summarise(득표 = sum(value)) %&gt;% \n  ungroup()\n\nlocal_sido_table &lt;- local_sido_raw %&gt;% \n  mutate(정당 = case_when( str_detect(정당, \"민주당\") ~ \"민주당\",\n                           str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                           TRUE ~ \"기타\")) %&gt;% \n  group_by(구시군명, 정당) %&gt;% \n  summarise(득표 = sum(득표)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = 정당, values_from = 득표) %&gt;% \n  janitor::adorn_totals(where = \"col\", name = \"합계\") \n\nlocal_sido_table %&gt;% \n  relocate(기타, .before = 합계) %&gt;% \n  gt() %&gt;% \n    fmt_integer(columns = 국민의힘:합계) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"지방선거 도지사 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제8대 지방선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제8대 지방선거\n    \n\n구시군명\n      \n        지방선거 도지사 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n98,054\n92,596\n3,586\n194,236\n\n\n시흥시\n84,897\n104,762\n3,661\n193,320\n\n\n안산시단원구\n55,679\n61,954\n2,650\n120,283\n\n\n평택시\n104,256\n96,908\n4,669\n205,833\n\n\n화성시\n153,636\n173,747\n6,527\n333,910\n\n\n\n\n\n\n\n\n\n코드local_sido_table %&gt;% \n  adorn_percentages() %&gt;% \n  gt::gt() %&gt;% \n    fmt_percent(columns = 국민의힘:합계, decimals = 1) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"지방선거 도지사 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제8대 지방선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제8대 지방선거\n    \n\n구시군명\n      \n        지방선거 도지사 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n50.5%\n47.7%\n1.8%\n100.0%\n\n\n시흥시\n43.9%\n54.2%\n1.9%\n100.0%\n\n\n안산시단원구\n46.3%\n51.5%\n2.2%\n100.0%\n\n\n평택시\n50.7%\n47.1%\n2.3%\n100.0%\n\n\n화성시\n46.0%\n52.0%\n2.0%\n100.0%"
  },
  {
    "objectID": "yellow_sea.html#지선---구시군장-2022년",
    "href": "yellow_sea.html#지선---구시군장-2022년",
    "title": "지도제작 대회",
    "section": "\n3.4 지선 - 구시군장 (2022년)",
    "text": "3.4 지선 - 구시군장 (2022년)\n\n\n득표수\n득표율\n\n\n\n\n코드local_sgg_raw &lt;- krvote::local_sgg_20220601 %&gt;% \n  filter(str_detect(시도명, \"^경기\")) %&gt;% \n  filter(str_detect(구시군명, \"^화성|^평택|^김포|^안산|^시흥\")) %&gt;% \n  mutate(득표 = parse_number(득표)) %&gt;% \n  group_by(구시군명, 정당) %&gt;% \n  summarise(득표 = sum(득표)) %&gt;% \n  ungroup()\n\nlocal_sgg_table &lt;- local_sgg_raw %&gt;% \n  mutate(정당 = case_when( str_detect(정당, \"민주당\") ~ \"민주당\",\n                           str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                           TRUE ~ \"기타\")) %&gt;% \n  group_by(구시군명, 정당) %&gt;% \n  summarise(득표 = sum(득표, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = 정당, values_from = 득표, values_fill = 0) %&gt;% \n  janitor::adorn_totals(where = \"col\", name = \"합계\") \n\nlocal_sgg_table %&gt;% \n  relocate(기타, .before = 합계) %&gt;% \n  gt() %&gt;% \n    fmt_integer(columns = 국민의힘:합계) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"지방선거 구시군의 장 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제8대 지방선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제8대 지방선거\n    \n\n구시군명\n      \n        지방선거 구시군의 장 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n101,566\n86,798\n5,386\n193,750\n\n\n시흥시\n85,217\n106,468\n0\n191,685\n\n\n안산시\n119,776\n119,595\n18,092\n257,463\n\n\n평택시\n98,566\n107,159\n0\n205,725\n\n\n화성시\n156,386\n176,631\n0\n333,017\n\n\n\n\n\n\n\n\n\n코드local_sgg_table %&gt;% \n  adorn_percentages() %&gt;% \n  gt::gt() %&gt;% \n    fmt_percent(columns = 국민의힘:합계, decimals = 1) %&gt;% \n    cols_align(columns = 구시군명, align = \"center\") %&gt;% \n    tab_spanner(\n      label = \"지방선거 구시군의 장 후보 정당\",\n      columns = c(국민의힘, 민주당, 기타)\n  ) %&gt;% \n    gt_theme_538() %&gt;% \n    tab_header(\n      title = md(\"경기도 서해 인접 5개 구시군 정당별 득표\"),\n      subtitle = md(\"`제8대 지방선거`\")\n  )  %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"blue\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 민주당,\n                           rows = 민주당 &gt; 국민의힘)\n  ) %&gt;% \n  tab_style(\n    style = list(cell_fill(color = \"red\"),\n                 cell_text(color = \"white\")),\n    locations = cells_body(columns = 국민의힘,\n                           rows = 민주당 &lt; 국민의힘)\n  )\n\n\n\n\n\n\n\n경기도 서해 인접 5개 구시군 정당별 득표\n    \n\n제8대 지방선거\n    \n\n구시군명\n      \n        지방선거 구시군의 장 후보 정당\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n김포시\n52.4%\n44.8%\n2.8%\n100.0%\n\n\n시흥시\n44.5%\n55.5%\n0.0%\n100.0%\n\n\n안산시\n46.5%\n46.5%\n7.0%\n100.0%\n\n\n평택시\n47.9%\n52.1%\n0.0%\n100.0%\n\n\n화성시\n47.0%\n53.0%\n0.0%\n100.0%"
  },
  {
    "objectID": "precinct.html",
    "href": "precinct.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "오마이뉴스 뉴스기사 (2023년 7월 24일)\n\n\n\n지난 총선 민주당 데이터 보니, 수도권도 ‘단수공천’ 집중 ‘총선 후보자선출규정 특별당규 개정’ 청원동의 5만 넘어… 민주당의 답변에 ‘주목’\n뉴스기사 바로가기"
  },
  {
    "objectID": "precinct.html#데이터셋",
    "href": "precinct.html#데이터셋",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(rvest)\n\nwiki_url &lt;- \"https://ko.wikipedia.org/wiki/%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD_%EC%A0%9C21%EB%8C%80_%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90_%EC%84%A0%EA%B1%B0_%EB%8D%94%EB%B6%88%EC%96%B4%EB%AF%BC%EC%A3%BC%EB%8B%B9_%ED%9B%84%EB%B3%B4_%EB%AA%A9%EB%A1%9D\"\n\nsido_name &lt;- read_html(wiki_url) |&gt; \n  html_nodes(\"h3\") |&gt; \n  html_text() |&gt; \n  str_remove(\"\\\\[편집\\\\]\")\n\nminju_lst &lt;- read_html(wiki_url) |&gt; \n  html_nodes(\".wikitable\") |&gt; \n  html_table()\n\nnames(minju_lst) &lt;- sido_name\n\nnomination &lt;- sido_name |&gt; \n  enframe(value = \"시도명\") |&gt; \n  mutate(data = minju_lst) |&gt; \n  unnest(data) |&gt; \n  select(-name) |&gt; \n  janitor::clean_names(ascii = FALSE) \n\nnomination\n#&gt; # A tibble: 253 × 6\n#&gt;    시도명     선거구     후보자 공천_유형      경력                       유튜브\n#&gt;    &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;                      &lt;chr&gt; \n#&gt;  1 서울특별시 종로       이낙연 전략 공천      \"민선 6기 전남지사45대 국… https…\n#&gt;  2 서울특별시 중·성동 갑 홍익표 단수 공천      \"19·20대 국회의원\"         https…\n#&gt;  3 서울특별시 중·성동 을 박성준 전략 공천      \"전 JTBC 아나운서팀장\"     https…\n#&gt;  4 서울특별시 용산       강태웅 전략 공천      \"전 서울시 부시장\"         https…\n#&gt;  5 서울특별시 광진 갑    전혜숙 단수 공천      \"18·20대 국회의원\"         https…\n#&gt;  6 서울특별시 광진 을    고민정 전략 공천      \"KBS 한국방송공사 아나운…  https…\n#&gt;  7 서울특별시 동대문 갑  안규백 단수 공천      \"19·20대 국회의원\"         https…\n#&gt;  8 서울특별시 동대문 을  장경태 청년 경선 공천 \"\"                         https…\n#&gt;  9 서울특별시 중랑 갑    서영교 경선 공천      \"19·20대 국회의원\"         https…\n#&gt; 10 서울특별시 중랑 을    박홍근 단수 공천      \"19·20대 국회의원\"         https…\n#&gt; # ℹ 243 more rows"
  },
  {
    "objectID": "precinct.html#단수공천",
    "href": "precinct.html#단수공천",
    "title": "지도제작 대회",
    "section": "\n2.1 단수공천",
    "text": "2.1 단수공천\n\n코드library(gt)\nlibrary(gtExtras)\n\nnomination |&gt; \n  mutate(\n      유튜브 = map(유튜브, ~ htmltools::a(href = .x, \"바로가기\")),\n      유튜브 = map(유튜브, ~ gt::html(as.character(.x))))  |&gt; \n  gt(groupname_col = '시도명') |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    table.font.size = px(12L)\n  ) |&gt; \n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  )  \n\n\n\n\n\n\n선거구\n      후보자\n      공천_유형\n      경력\n      유튜브\n    \n\n\n서울특별시\n    \n\n종로\n이낙연\n전략 공천\n민선 6기 전남지사45대 국무총리 (2017~2020)16·17·18·19대 국회의원\n바로가기\n\n\n중·성동 갑\n홍익표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n중·성동 을\n박성준\n전략 공천\n전 JTBC 아나운서팀장\n바로가기\n\n\n용산\n강태웅\n전략 공천\n전 서울시 부시장\n바로가기\n\n\n광진 갑\n전혜숙\n단수 공천\n18·20대 국회의원\n바로가기\n\n\n광진 을\n고민정\n전략 공천\nKBS 한국방송공사 아나운서청와대 대변인 (2019~2020)\n바로가기\n\n\n동대문 갑\n안규백\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n동대문 을\n장경태\n청년 경선 공천\n\n바로가기\n\n\n중랑 갑\n서영교\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n중랑 을\n박홍근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n성북 갑\n김영배\n경선 공천\n민선 5·6기 서울 성북구청장\n바로가기\n\n\n성북 을\n기동민\n단수 공천\n20대 국회의원\n바로가기\n\n\n강북 갑\n천준호\n경선 공천\n민생경제지원단 위원장\n바로가기\n\n\n강북 을\n박용진\n단수 공천\n20대 국회의원\n바로가기\n\n\n도봉 갑\n인재근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n도봉 을\n오기형\n경선 공천\n변호사\n바로가기\n\n\n노원 갑\n고용진\n경선 공천\n20대 국회의원\n바로가기\n\n\n노원 을\n우원식\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n노원 병\n김성환\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 갑\n박주민\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 을\n강병원\n경선 공천\n20대 국회의원\n바로가기\n\n\n서대문 갑\n우상호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n서대문 을\n김영호\n단수 공천\n20대 국회의원\n바로가기\n\n\n마포 갑\n노웅래\n경선 공천\n17·19·20대 국회의원\n바로가기\n\n\n마포 을\n정청래\n단수 공천\n17·19대 국회의원\n바로가기\n\n\n양천 갑\n황희\n단수 공천\n20대 국회의원\n바로가기\n\n\n양천 을\n이용선\n단수 공천\n전 청와대 시민사회수석\n바로가기\n\n\n강서 갑\n강선우\n경선 공천\n중앙당 총선기획위원\n바로가기\n\n\n강서 을\n진성준\n단수 공천\n19대 국회의원\n바로가기\n\n\n강서 병\n한정애\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n구로 갑\n이인영\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n구로 을\n윤건영\n전략 공천\n전 청와대 국정상황실장\n바로가기\n\n\n금천\n최기상\n전략 공천\n전 서울북부지법 부장판사\n바로가기\n\n\n영등포 갑\n김영주\n단수 공천\n전 고용노동부 장관\n바로가기\n\n\n영등포 을\n김민석\n경선 공천\n15·16대 국회의원\n바로가기\n\n\n동작 갑\n김병기\n경선 공천\n20대 국회의원\n바로가기\n\n\n동작 을\n이수진\n전략 공천\n전 수원지법 부장판사\n바로가기\n\n\n관악 갑\n유기홍\n경선 공천\n17대 국회의원\n바로가기\n\n\n관악 을\n정태호\n경선 공천\n전 청와대 일자리수석\n바로가기\n\n\n서초 갑\n이정근\n단수 공천\n전 지역위원장\n바로가기\n\n\n서초 을\n박경미\n경선 공천\n20대 국회의원\n바로가기\n\n\n강남 갑\n김성곤\n단수 공천\n15·17·18·19대 국회의원\n바로가기\n\n\n강남 을\n전현희\n단수 공천\n18대·20대 국회의원\n바로가기\n\n\n강남 병\n김한규\n전략 공천\n변호사\n바로가기\n\n\n송파 갑\n조재희\n경선 공천\n전 정책기획위원\n바로가기\n\n\n송파 을\n최재성\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n송파 병\n남인순\n단수 공천\n19대·20대 국회의원\n바로가기\n\n\n강동 갑\n진선미\n단수 공천\n19·20대 국회의원여성가족부 장관 (2018~2019)\n바로가기\n\n\n강동 을\n이해식\n경선 공천\n민선4·5·6기 서울 강동구청장\n바로가기\n\n\n부산광역시\n    \n\n중·영도\n김비오\n경선 공천\n전 지역위원장\n바로가기\n\n\n서·동\n이재강\n경선 공천\n전 지역위원장\n바로가기\n\n\n부산진 갑\n김영춘\n단수 공천\n16·17·20대 국회의원해양수산부 장관 (2017~2019)\n바로가기\n\n\n부산진 을\n류영진\n경선 공천\n전 식품의약품안전처장\n바로가기\n\n\n동래\n박성현\n단수 공천\n\n바로가기\n\n\n남 갑\n강준석\n전략 공천\n13대 해양수산부 차관\n바로가기\n\n\n남 을\n박재호\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 갑\n전재수\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 을\n최지은\n전략 공천\n전 세계은행 선임 이코노미스트\n바로가기\n\n\n해운대 갑\n유영민\n단수 공천\n과학정보기술통신부 장관 (2017년~2019년)\n바로가기\n\n\n해운대 을\n윤준호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 갑\n최인호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 을\n이상호\n경선 공천\n\n바로가기\n\n\n금정\n박무성\n경선 공천\n변호사\n바로가기\n\n\n연제\n김해영\n단수 공천\n20대 국회의원\n바로가기\n\n\n수영\n강윤경\n단수 공천\n\n바로가기\n\n\n사상\n배재정\n단수 공천\n19대 국회의원 (비례대표)\n바로가기\n\n\n기장\n최택용\n경선 공천\n\n바로가기\n\n\n대구광역시\n    \n\n중·남\n이재용\n단수 공천\n전 환경부 장관\n바로가기\n\n\n동 갑\n서재헌\n단수 공천\n\n바로가기\n\n\n동 을\n이승천\n단수 공천\n\n바로가기\n\n\n서\n윤선진\n단수 공천\n\n바로가기\n\n\n북 갑\n이헌태\n단수 공천\n\n바로가기\n\n\n북 을\n홍의락\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n수성 갑\n김부겸\n단수 공천\n16·17·18·20대 국회의원행정안전부 장관 (2017~2019)\n바로가기\n\n\n수성 을\n이상식\n단수 공천\n전 대구지방경찰청장\n바로가기\n\n\n달서 갑\n권택흥\n단수 공천\n\n바로가기\n\n\n달서 을\n허소\n경선 공천\n\n바로가기\n\n\n달서 병\n김대진\n단수 공천\n\n바로가기\n\n\n달성\n박형룡\n경선 공천\n\n바로가기\n\n\n인천광역시\n    \n\n중·강화·옹진\n조택상\n단수 공천\n\n바로가기\n\n\n동·미추홀 갑\n허종식\n단수 공천\n전 인천광역시 정무경제부시장\n바로가기\n\n\n동·미추홀 을\n남영희\n경선 공천\n\n바로가기\n\n\n연수 갑\n박찬대\n단수 공천\n20대 국회의원\n바로가기\n\n\n연수 을\n정일영\n경선 공천\n전 인천국제공항공사 사장\n바로가기\n\n\n남동 갑\n맹성규\n단수 공천\n20대 국회의원\n바로가기\n\n\n남동 을\n윤관석\n단수 공천\n20대 국회의원\n바로가기\n\n\n부평 갑\n이성만\n경선 공천\n전 인천광역시 시의원\n바로가기\n\n\n부평 을\n홍영표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n계양 갑\n유동수\n단수 공천\n20대 국회의원\n바로가기\n\n\n계양 을\n송영길\n단수 공천\n17·18·20대 국회의원민선 5기 인천광역시장\n바로가기\n\n\n서 갑\n김교흥\n단수 공천\n17대 국회의원\n바로가기\n\n\n서 을\n신동근\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주광역시\n    \n\n동·남 갑\n윤영덕\n경선 공천\n\n바로가기\n\n\n동·남 을\n이병훈\n경선 공천\n\n바로가기\n\n\n서 갑\n송갑석\n단수 공천\n제20대 국회의원\n바로가기\n\n\n서 을\n양향자\n경선 공천\n전 삼성전자 상무이사\n바로가기\n\n\n북 갑\n조오섭\n경선 공천\n\n바로가기\n\n\n북 을\n형석\n경선 공천\n\n바로가기\n\n\n광산 갑\n이용빈\n단수 공천\n광주광역시당 광산구(갑) 지역위원장\n바로가기\n\n\n광산 을\n민형배\n경선 공천\n\n바로가기\n\n\n대전광역시\n    \n\n동\n장철민\n경선 공천\n\n바로가기\n\n\n중\n황운하\n경선 공천\n전 울산지방경찰청장\n바로가기\n\n\n서 갑\n박병석\n단수 공천\n16·17·18·19·20대 국회의원19대 국회 전반기 국회부의장\n바로가기\n\n\n서 을\n박범계\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n유성 갑\n조승래\n단수 공천\n20대 국회의원\n바로가기\n\n\n유성 을\n이상민\n경선 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n대덕\n박영순\n경선 공천\n전 대전광역시 정무부시장\n바로가기\n\n\n울산광역시\n    \n\n중\n임동호\n경선 공천\n\n바로가기\n\n\n남 갑\n심규명\n경선 공천\n변호사\n바로가기\n\n\n남 을\n박성진\n경선 공천\n\n바로가기\n\n\n동\n김태선\n경선 공천\n\n바로가기\n\n\n북\n이상헌\n경선 공천\n20대 국회의원\n바로가기\n\n\n울주\n김영문\n단수 공천\n관세청장 (2017년~2019년)\n바로가기\n\n\n세종특별자치시\n    \n\n세종 갑\n홍성국\n전략 공천\n전 미래에셋대우 대표이사\n바로가기\n\n\n세종 을\n강준현\n경선 공천\n전 세종시 정무부시장\n바로가기\n\n\n경기도\n    \n\n수원 갑\n김승원\n경선 공천\n\n바로가기\n\n\n수원 을\n백혜련\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 병\n김영진\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 정\n박광온\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 무\n김진표\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 수정\n김태년\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 중원\n윤영찬\n경선 공천\n전 청와대 국민소통수석네이버 부사장\n바로가기\n\n\n성남 분당 갑\n김병관\n경선 공천\n20대 국회의원\n바로가기\n\n\n성남 분당 을\n김병욱\n단수 공천\n20대 국회의원\n바로가기\n\n\n의정부 갑\n오영환\n전략 공천\n\n바로가기\n\n\n의정부 을\n김민철\n경선 공천\n\n바로가기\n\n\n안양 만안\n강득구\n경선 공천\n전 경기도 연정부지사경기도의회 의장\n바로가기\n\n\n안양 동안 갑\n민병덕\n경선 공천\n변호사\n바로가기\n\n\n안양 동안 을\n이재정\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n부천 갑\n김경협\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 을\n설훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n부천 병\n김상희\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 정\n서영석\n경선 공천\n\n바로가기\n\n\n광명 갑\n임오경\n전략 공천\n전 핸드볼 감독전 국가대표 핸드볼 선수\n바로가기\n\n\n광명 을\n양기대\n경선 공천\n전 광명시장\n바로가기\n\n\n평택 갑\n홍기원\n경선 공천\n\n바로가기\n\n\n평택 을\n김현정\n전략 공천\n\n바로가기\n\n\n동두천·연천\n서동욱\n경선 공천\n\n바로가기\n\n\n안산 상록 갑\n전해철\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n안산 상록 을\n김철민\n단수 공천\n20대 국회의원전 안산시장\n바로가기\n\n\n안산 단원 갑\n고영인\n경선 공천\n\n바로가기\n\n\n안산 단원 을\n김남국\n전략 공천\n변호사\n바로가기\n\n\n고양 갑\n문명순\n단수 공천\n\n바로가기\n\n\n고양 을\n한준호\n전략 공천\n전 MBC 아나운서\n바로가기\n\n\n고양 병\n홍정민\n전략 공천\n변호사\n바로가기\n\n\n고양 정\n이용우\n전략 공천\n전 카카오뱅크 대표이사\n바로가기\n\n\n의왕·과천\n이소영\n전략 공천\n변호사\n바로가기\n\n\n구리\n윤호중\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n남양주 갑\n조응천\n경선 공천\n20대 국회의원전 청와대 공직기강비서관\n바로가기\n\n\n남양주 을\n김한정\n경선 공천\n20대 국회의원\n바로가기\n\n\n남양주 병\n김용민\n전략 공천\n변호사\n바로가기\n\n\n오산\n안민석\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n시흥 갑\n문정복\n경선 공천\n\n바로가기\n\n\n시흥 을\n조정식\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n군포\n이학영\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n하남\n최종윤\n경선 공천\n\n바로가기\n\n\n용인 갑\n오세영\n경선 공천\n\n바로가기\n\n\n용인 을\n김민기\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n용인 병\n정춘숙\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n용인 정\n이탄희\n전략 공천\n변호사전 수원지법 안양지원 판사\n바로가기\n\n\n파주 갑\n윤후덕\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n파주 을\n박정\n단수 공천\n20대 국회의원\n바로가기\n\n\n이천\n김용진\n경선 공천\n전 기획재정부 차관\n바로가기\n\n\n안성\n이규민\n경선 공천\n\n바로가기\n\n\n김포 갑\n김주영\n전략 공천\n전 한국노총 위원장\n바로가기\n\n\n김포 을\n박상혁\n경선 공천\n\n바로가기\n\n\n화성 갑\n송옥주\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n화성 을\n이원욱\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n화성 병\n권칠승\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주 갑\n소병훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n광주 을\n임종성\n단수 공천\n20대 국회의원\n바로가기\n\n\n양주\n정성호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n포천·가평\n이철휘\n경선 공천\n\n바로가기\n\n\n여주·양평\n최재관\n경선 공천\n\n바로가기\n\n\n강원도\n    \n\n춘천·철원·화천·양구 갑\n허영\n경선 공천\n\n바로가기\n\n\n춘천·철원·화천·양구 을\n정만호\n경선 공천\n\n바로가기\n\n\n홍천·횡성·영월·평창\n원경환\n단수 공천\n전 서울지방경찰청장\n바로가기\n\n\n원주 갑\n이광재\n경선 공천\n17·18대 국회의원전 강원도지사\n바로가기\n\n\n원주 을\n송기헌\n단수 공천\n20대 국회의원\n바로가기\n\n\n강릉\n김경수\n단수 공천\n\n바로가기\n\n\n동해·태백·삼척·정선\n김동완\n경선 공천\n\n바로가기\n\n\n속초·인제·고성·양양\n이동기\n경선 공천\n\n바로가기\n\n\n충청북도\n    \n\n청주 상당\n정정순\n경선 공천\n\n바로가기\n\n\n청주 서원\n이장섭\n경선 공천\n\n바로가기\n\n\n청주 흥덕\n도종환\n단수 공천\n19·20대 국회의원전 문화체육관광부 장관\n바로가기\n\n\n청주 청원\n변재일\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n충주\n김경욱\n단수 공천\n\n바로가기\n\n\n제천·단양\n이후삼\n경선 공천\n20대 국회의원\n바로가기\n\n\n보은·옥천·영동·괴산\n곽상언\n경선 공천\n변호사\n바로가기\n\n\n증평·진천·음성\n임호선\n단수 공천\n\n바로가기\n\n\n충청남도\n    \n\n천안 갑\n문진석\n전략 공천\n\n바로가기\n\n\n천안 을\n박완주\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n천안 병\n이정문\n경선 공천\n\n바로가기\n\n\n아산 갑\n복기왕\n단수 공천\n17대 국회의원전 아산시장\n바로가기\n\n\n아산 을\n강훈식\n단수 공천\n20대 국회의원\n바로가기\n\n\n공주·부여·청양\n박수현\n단수 공천\n19대 국회의원전 청와대 대변인\n바로가기\n\n\n당진\n어기구\n경선 공천\n20대 국회의원\n바로가기\n\n\n서산·태안\n조한기\n단수 공천\n\n바로가기\n\n\n논산·계룡·금산\n김종민\n경선 공천\n20대 국회의원\n바로가기\n\n\n홍성·예산\n김학민\n경선 공천\n\n바로가기\n\n\n보령·서천\n나소열\n단수 공천\n전 서천군수\n바로가기\n\n\n전라북도\n    \n\n전주 갑\n김윤덕\n경선 공천\n제19대 국회의원\n바로가기\n\n\n전주 을\n이상직\n경선 공천\n제19대 국회의원전 이스타항공 총괄회장\n바로가기\n\n\n전주 병\n김성주\n단수 공천\n제19대 국회의원\n바로가기\n\n\n군산\n신영대\n단수 공천\n\n바로가기\n\n\n익산 갑\n김수흥\n경선 공천\n전 국회사무처 사무차장\n바로가기\n\n\n익산 을\n한병도\n경선 공천\n제17대 국회의원\n바로가기\n\n\n정읍·고창\n윤준병\n단수 공천\n전 서울특별시 행정1부시장\n바로가기\n\n\n남원·임실·순창\n이강래\n경선 공천\n제16·17·18대 국회의원전 한국도로공사 사장\n바로가기\n\n\n김제·부안\n이원택\n단수 공천\n전 문재인 정부 청와대 행정관전 전라북도 정무부지사\n바로가기\n\n\n완주·진안·무주·장수\n안호영\n경선 공천\n제20대 국회의원\n바로가기\n\n\n전라남도\n    \n\n목포\n김원이\n경선 공천\n전 서울특별시 정무부시장\n바로가기\n\n\n여수 갑\n주철현\n경선 공천\n전 여수시장(민선 6기)전 대검찰청 강력부장\n바로가기\n\n\n여수 을\n김회재\n경선 공천\n\n바로가기\n\n\n순천·광양·곡성·구례 갑\n소병철\n전략 공천\n전 법무연수원장농협대학교, 순천대학교, 법무연수원 석좌교수\n바로가기\n\n\n순천·광양·곡성·구례 을\n서동용\n경선 공천\n\n바로가기\n\n\n나주·화순\n신정훈\n경선 공천\n제19대 국회의원\n바로가기\n\n\n담양·함평·영광·장성\n이개호\n단수 공천\n제19·20대 국회의원전 농림축산식품부 장관전 전라남도 제35대 행정부지사\n바로가기\n\n\n무안·신안·영암\n서삼석\n경선 공천\n제20대 국회의원제42·43·44대 무안군수제5·6대 전라남도의회 의원\n바로가기\n\n\n고흥·보성·장흥·강진\n김승남\n경선 공천\n제19대 국회의원\n바로가기\n\n\n해남·진도·완도\n윤재갑\n경선 공천\n전 해군 군수사령부 사령관목포해양대학교 초빙교수\n바로가기\n\n\n경상북도\n    \n\n포항 북\n오중기\n단수 공천\n-\n바로가기\n\n\n포항 남·울릉\n허대만\n단수 공천\n-\n바로가기\n\n\n구미 갑\n김철호\n경선 공천\n-\n바로가기\n\n\n구미 을\n김현권\n단수 공천\n-\n바로가기\n\n\n경산\n전상헌\n경선 공천\n-\n바로가기\n\n\n김천\n배영애\n단수 공천\n-\n바로가기\n\n\n경주\n정다은\n전략 공천\n-\n바로가기\n\n\n안동·예천\n이삼걸\n단수 공천\n-\n바로가기\n\n\n영천·청도\n정우동\n단수 공천\n-\n바로가기\n\n\n군위·의성·청송·영덕\n강부송\n단수 공천\n-\n바로가기\n\n\n상주·문경\n정용운\n단수 공천\n-\n바로가기\n\n\n영주·영양·봉화·울진\n황재선\n경선 공천\n-\n바로가기\n\n\n고령·성주·칠곡\n장세호\n단수 공천\n-\n바로가기\n\n\n경상남도\n    \n\n창원 의창\n김기운\n경선 공천\n\n바로가기\n\n\n창원 성산\n이흥석\n단수 공천\n\n바로가기\n\n\n창원 마산합포\n박남현\n경선 공천\n\n바로가기\n\n\n창원 마산회원\n하귀남\n단수 공천\n\n바로가기\n\n\n창원 진해\n황기철\n단수 공천\n제30대 해군참모총장\n바로가기\n\n\n진주 갑\n정영훈\n경선 공천\n\n바로가기\n\n\n진주 을\n한경호\n단수 공천\n\n바로가기\n\n\n김해 갑\n민홍철\n단수 공천\n제19·20대 국회의원\n바로가기\n\n\n김해 을\n김정호\n경선 공천\n제20대 국회의원\n바로가기\n\n\n양산 갑\n이재영\n전략 공천\n대외경제정책연구원 원장외교부 정책자문위원\n바로가기\n\n\n양산 을\n김두관\n전략 공천\n제20대 국회의원(경기 김포 갑)제34대 경상남도지사제38·39대 남해군수\n바로가기\n\n\n통영·고성\n양문석\n단수 공천\n\n바로가기\n\n\n거제\n문상모\n경선 공천\n\n바로가기\n\n\n밀양·의령·함안·창녕\n조성환\n단수 공천\n\n바로가기\n\n\n사천·남해·하동\n황인성\n단수 공천\n\n바로가기\n\n\n산청·함양·거창·합천\n서필상\n단수 공천\n\n바로가기\n\n\n제주특별자치도\n    \n\n제주 갑\n송재호\n전략 공천\n\n바로가기\n\n\n제주 을\n오영훈\n경선 공천\n제20대 국회의원\n바로가기\n\n\n서귀포\n위성곤\n단수 공천\n제20대 국회의원\n바로가기"
  },
  {
    "objectID": "precinct.html#전국",
    "href": "precinct.html#전국",
    "title": "지도제작 대회",
    "section": "\n6.1 전국",
    "text": "6.1 전국\n\n코드library(geogrid)\nlibrary(ggrepel)\n\nprecinct_cells &lt;-  calculate_grid(precinct, 0.1, 'hexagonal')\nprecinct_hex &lt;- assign_polygons(precinct, precinct_cells)\n\nprecinct_hex |&gt; \n  write_rds(\"data/precinct_hex.rds\")\n\n\n\n코드precinct_hex &lt;- \n  read_rds(\"data/precinct_hex.rds\")\n\nprecinct_hex |&gt; \n  ggplot() +\n    geom_sf()"
  },
  {
    "objectID": "precinct.html#서울",
    "href": "precinct.html#서울",
    "title": "지도제작 대회",
    "section": "\n6.2 서울",
    "text": "6.2 서울\n\n코드sf_use_s2(FALSE)\n\ncentroids &lt;- precinct |&gt; \n  st_centroid() |&gt; \n  st_coordinates() %&gt;% \n  as_tibble()\n\nprecinct_centroids &lt;- precinct |&gt; \n  st_drop_geometry() |&gt; \n  as_tibble() |&gt; \n  bind_cols(centroids)\n\nprecinct_centroids\n#&gt; # A tibble: 253 × 6\n#&gt;    SGG_Code SGG_1 SGG_2                               SGG_3              X     Y\n#&gt;       &lt;int&gt; &lt;chr&gt; &lt;chr&gt;                               &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1  2270202 대구  대구광역시 동구을                   대구 동구을     129.  35.9\n#&gt;  2  2270101 대구  대구광역시 중구남구                 대구 중구남구   129.  35.8\n#&gt;  3  2412001 경기  경기도 고양시갑                     경기 고양갑     127.  37.7\n#&gt;  4  2411002 경기  경기도 안양시동안구을               경기 안양동안…  127.  37.4\n#&gt;  5  2480802 경남  경상남도 김해시을                   경남 김해을     129.  35.2\n#&gt;  6  2410301 경기  경기도 수원시병                     경기 수원병     127.  37.3\n#&gt;  7  2280702 인천  인천광역시 계양구을                 인천 계양을     127.  37.6\n#&gt;  8  2110601 서울  서울특별시 동대문구갑               서울 동대문갑   127.  37.6\n#&gt;  9  2460702 전남  전라남도 순천시광양시곡성군구례군을 전남 순천광양…  127.  35.2\n#&gt; 10  2440103 충남  충청남도 천안시병                   충남 천안병     127.  36.7\n#&gt; # ℹ 243 more rows\n\n\n\n코드library(geogrid)\nlibrary(ggrepel)\n\nseoul_precinct &lt;- precinct |&gt; filter(SGG_1 == \"서울\")\n\nseoul_precinct_cells &lt;-  calculate_grid(shape=seoul_precinct, grid_type='hexagonal')\nseoul_precinct_hex &lt;- assign_polygons(seoul_precinct, seoul_precinct_cells)\n\nseoul_centroids_tbl &lt;- seoul_precinct_hex |&gt; \n  st_centroid() |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  bind_cols(seoul_precinct_hex |&gt; st_drop_geometry()) |&gt; \n  mutate(SGG_3 = str_remove(SGG_3, \"서울\\\\s+\"))\n\nseoul_precinct_hex |&gt;\n  st_buffer(0.001) |&gt; \n  st_union() %&gt;%\n  st_boundary() %&gt;%\n  ggplot() +\n    geom_sf( lwd = 2 ) +\n    geom_sf(data = seoul_precinct_hex) +\n    geom_text(\n      data = seoul_centroids_tbl,\n        aes(x = X, y = Y, label = SGG_3), size = 4\n    )"
  },
  {
    "objectID": "precinct.html#공천-유형",
    "href": "precinct.html#공천-유형",
    "title": "지도제작 대회",
    "section": "\n3.1 공천 유형",
    "text": "3.1 공천 유형\n전체 지역구 253개 중에 공천 유형별로 출판용 표로 제작한다.\n\n코드library(janitor)\nlibrary(gt)\nlibrary(gtExtras)\n\nnomination_type_gt &lt;- nomination |&gt; \n  tabyl(공천_유형) |&gt; \n  arrange(desc(n)) |&gt; \n  janitor::adorn_totals(name = \"합계\") |&gt; \n  janitor::adorn_pct_formatting() |&gt; \n  rename(후보수 = n,\n         비율 = percent) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"더불어민주당 공천 유형\"),\n    subtitle = md(\"제21대 국회의원 선거\")\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  )  \n\nnomination_type_gt\n\n\n\n\n\n\n\n더불어민주당 공천 유형\n    \n\n제21대 국회의원 선거\n    \n\n공천_유형\n      후보수\n      비율\n    \n\n\n\n단수 공천\n118\n46.6%\n\n\n경선 공천\n106\n41.9%\n\n\n전략 공천\n28\n11.1%\n\n\n청년 경선 공천\n1\n0.4%\n\n\n합계\n253\n100.0%\n\n\n\n\n\n코드\n# nomination_type_gt |&gt; \n#   gtsave(filename = \"images/nomation_type_gt.png\")"
  },
  {
    "objectID": "precinct.html#공천-상세",
    "href": "precinct.html#공천-상세",
    "title": "지도제작 대회",
    "section": "\n3.2 공천 상세",
    "text": "3.2 공천 상세\n\n코드library(gt)\nlibrary(gtExtras)\n\nnomination |&gt; \n  mutate(\n      유튜브 = map(유튜브, ~ htmltools::a(href = .x, \"바로가기\")),\n      유튜브 = map(유튜브, ~ gt::html(as.character(.x))))  |&gt; \n  gt(groupname_col = '시도명') |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    table.font.size = px(12L)\n  ) |&gt; \n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  )  \n\n\n\n\n\n\n선거구\n      후보자\n      공천_유형\n      경력\n      유튜브\n    \n\n\n서울특별시\n    \n\n종로\n이낙연\n전략 공천\n민선 6기 전남지사45대 국무총리 (2017~2020)16·17·18·19대 국회의원\n바로가기\n\n\n중·성동 갑\n홍익표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n중·성동 을\n박성준\n전략 공천\n전 JTBC 아나운서팀장\n바로가기\n\n\n용산\n강태웅\n전략 공천\n전 서울시 부시장\n바로가기\n\n\n광진 갑\n전혜숙\n단수 공천\n18·20대 국회의원\n바로가기\n\n\n광진 을\n고민정\n전략 공천\nKBS 한국방송공사 아나운서청와대 대변인 (2019~2020)\n바로가기\n\n\n동대문 갑\n안규백\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n동대문 을\n장경태\n청년 경선 공천\n\n바로가기\n\n\n중랑 갑\n서영교\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n중랑 을\n박홍근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n성북 갑\n김영배\n경선 공천\n민선 5·6기 서울 성북구청장\n바로가기\n\n\n성북 을\n기동민\n단수 공천\n20대 국회의원\n바로가기\n\n\n강북 갑\n천준호\n경선 공천\n민생경제지원단 위원장\n바로가기\n\n\n강북 을\n박용진\n단수 공천\n20대 국회의원\n바로가기\n\n\n도봉 갑\n인재근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n도봉 을\n오기형\n경선 공천\n변호사\n바로가기\n\n\n노원 갑\n고용진\n경선 공천\n20대 국회의원\n바로가기\n\n\n노원 을\n우원식\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n노원 병\n김성환\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 갑\n박주민\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 을\n강병원\n경선 공천\n20대 국회의원\n바로가기\n\n\n서대문 갑\n우상호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n서대문 을\n김영호\n단수 공천\n20대 국회의원\n바로가기\n\n\n마포 갑\n노웅래\n경선 공천\n17·19·20대 국회의원\n바로가기\n\n\n마포 을\n정청래\n단수 공천\n17·19대 국회의원\n바로가기\n\n\n양천 갑\n황희\n단수 공천\n20대 국회의원\n바로가기\n\n\n양천 을\n이용선\n단수 공천\n전 청와대 시민사회수석\n바로가기\n\n\n강서 갑\n강선우\n경선 공천\n중앙당 총선기획위원\n바로가기\n\n\n강서 을\n진성준\n단수 공천\n19대 국회의원\n바로가기\n\n\n강서 병\n한정애\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n구로 갑\n이인영\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n구로 을\n윤건영\n전략 공천\n전 청와대 국정상황실장\n바로가기\n\n\n금천\n최기상\n전략 공천\n전 서울북부지법 부장판사\n바로가기\n\n\n영등포 갑\n김영주\n단수 공천\n전 고용노동부 장관\n바로가기\n\n\n영등포 을\n김민석\n경선 공천\n15·16대 국회의원\n바로가기\n\n\n동작 갑\n김병기\n경선 공천\n20대 국회의원\n바로가기\n\n\n동작 을\n이수진\n전략 공천\n전 수원지법 부장판사\n바로가기\n\n\n관악 갑\n유기홍\n경선 공천\n17대 국회의원\n바로가기\n\n\n관악 을\n정태호\n경선 공천\n전 청와대 일자리수석\n바로가기\n\n\n서초 갑\n이정근\n단수 공천\n전 지역위원장\n바로가기\n\n\n서초 을\n박경미\n경선 공천\n20대 국회의원\n바로가기\n\n\n강남 갑\n김성곤\n단수 공천\n15·17·18·19대 국회의원\n바로가기\n\n\n강남 을\n전현희\n단수 공천\n18대·20대 국회의원\n바로가기\n\n\n강남 병\n김한규\n전략 공천\n변호사\n바로가기\n\n\n송파 갑\n조재희\n경선 공천\n전 정책기획위원\n바로가기\n\n\n송파 을\n최재성\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n송파 병\n남인순\n단수 공천\n19대·20대 국회의원\n바로가기\n\n\n강동 갑\n진선미\n단수 공천\n19·20대 국회의원여성가족부 장관 (2018~2019)\n바로가기\n\n\n강동 을\n이해식\n경선 공천\n민선4·5·6기 서울 강동구청장\n바로가기\n\n\n부산광역시\n    \n\n중·영도\n김비오\n경선 공천\n전 지역위원장\n바로가기\n\n\n서·동\n이재강\n경선 공천\n전 지역위원장\n바로가기\n\n\n부산진 갑\n김영춘\n단수 공천\n16·17·20대 국회의원해양수산부 장관 (2017~2019)\n바로가기\n\n\n부산진 을\n류영진\n경선 공천\n전 식품의약품안전처장\n바로가기\n\n\n동래\n박성현\n단수 공천\n\n바로가기\n\n\n남 갑\n강준석\n전략 공천\n13대 해양수산부 차관\n바로가기\n\n\n남 을\n박재호\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 갑\n전재수\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 을\n최지은\n전략 공천\n전 세계은행 선임 이코노미스트\n바로가기\n\n\n해운대 갑\n유영민\n단수 공천\n과학정보기술통신부 장관 (2017년~2019년)\n바로가기\n\n\n해운대 을\n윤준호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 갑\n최인호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 을\n이상호\n경선 공천\n\n바로가기\n\n\n금정\n박무성\n경선 공천\n변호사\n바로가기\n\n\n연제\n김해영\n단수 공천\n20대 국회의원\n바로가기\n\n\n수영\n강윤경\n단수 공천\n\n바로가기\n\n\n사상\n배재정\n단수 공천\n19대 국회의원 (비례대표)\n바로가기\n\n\n기장\n최택용\n경선 공천\n\n바로가기\n\n\n대구광역시\n    \n\n중·남\n이재용\n단수 공천\n전 환경부 장관\n바로가기\n\n\n동 갑\n서재헌\n단수 공천\n\n바로가기\n\n\n동 을\n이승천\n단수 공천\n\n바로가기\n\n\n서\n윤선진\n단수 공천\n\n바로가기\n\n\n북 갑\n이헌태\n단수 공천\n\n바로가기\n\n\n북 을\n홍의락\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n수성 갑\n김부겸\n단수 공천\n16·17·18·20대 국회의원행정안전부 장관 (2017~2019)\n바로가기\n\n\n수성 을\n이상식\n단수 공천\n전 대구지방경찰청장\n바로가기\n\n\n달서 갑\n권택흥\n단수 공천\n\n바로가기\n\n\n달서 을\n허소\n경선 공천\n\n바로가기\n\n\n달서 병\n김대진\n단수 공천\n\n바로가기\n\n\n달성\n박형룡\n경선 공천\n\n바로가기\n\n\n인천광역시\n    \n\n중·강화·옹진\n조택상\n단수 공천\n\n바로가기\n\n\n동·미추홀 갑\n허종식\n단수 공천\n전 인천광역시 정무경제부시장\n바로가기\n\n\n동·미추홀 을\n남영희\n경선 공천\n\n바로가기\n\n\n연수 갑\n박찬대\n단수 공천\n20대 국회의원\n바로가기\n\n\n연수 을\n정일영\n경선 공천\n전 인천국제공항공사 사장\n바로가기\n\n\n남동 갑\n맹성규\n단수 공천\n20대 국회의원\n바로가기\n\n\n남동 을\n윤관석\n단수 공천\n20대 국회의원\n바로가기\n\n\n부평 갑\n이성만\n경선 공천\n전 인천광역시 시의원\n바로가기\n\n\n부평 을\n홍영표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n계양 갑\n유동수\n단수 공천\n20대 국회의원\n바로가기\n\n\n계양 을\n송영길\n단수 공천\n17·18·20대 국회의원민선 5기 인천광역시장\n바로가기\n\n\n서 갑\n김교흥\n단수 공천\n17대 국회의원\n바로가기\n\n\n서 을\n신동근\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주광역시\n    \n\n동·남 갑\n윤영덕\n경선 공천\n\n바로가기\n\n\n동·남 을\n이병훈\n경선 공천\n\n바로가기\n\n\n서 갑\n송갑석\n단수 공천\n제20대 국회의원\n바로가기\n\n\n서 을\n양향자\n경선 공천\n전 삼성전자 상무이사\n바로가기\n\n\n북 갑\n조오섭\n경선 공천\n\n바로가기\n\n\n북 을\n형석\n경선 공천\n\n바로가기\n\n\n광산 갑\n이용빈\n단수 공천\n광주광역시당 광산구(갑) 지역위원장\n바로가기\n\n\n광산 을\n민형배\n경선 공천\n\n바로가기\n\n\n대전광역시\n    \n\n동\n장철민\n경선 공천\n\n바로가기\n\n\n중\n황운하\n경선 공천\n전 울산지방경찰청장\n바로가기\n\n\n서 갑\n박병석\n단수 공천\n16·17·18·19·20대 국회의원19대 국회 전반기 국회부의장\n바로가기\n\n\n서 을\n박범계\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n유성 갑\n조승래\n단수 공천\n20대 국회의원\n바로가기\n\n\n유성 을\n이상민\n경선 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n대덕\n박영순\n경선 공천\n전 대전광역시 정무부시장\n바로가기\n\n\n울산광역시\n    \n\n중\n임동호\n경선 공천\n\n바로가기\n\n\n남 갑\n심규명\n경선 공천\n변호사\n바로가기\n\n\n남 을\n박성진\n경선 공천\n\n바로가기\n\n\n동\n김태선\n경선 공천\n\n바로가기\n\n\n북\n이상헌\n경선 공천\n20대 국회의원\n바로가기\n\n\n울주\n김영문\n단수 공천\n관세청장 (2017년~2019년)\n바로가기\n\n\n세종특별자치시\n    \n\n세종 갑\n홍성국\n전략 공천\n전 미래에셋대우 대표이사\n바로가기\n\n\n세종 을\n강준현\n경선 공천\n전 세종시 정무부시장\n바로가기\n\n\n경기도\n    \n\n수원 갑\n김승원\n경선 공천\n\n바로가기\n\n\n수원 을\n백혜련\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 병\n김영진\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 정\n박광온\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 무\n김진표\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 수정\n김태년\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 중원\n윤영찬\n경선 공천\n전 청와대 국민소통수석네이버 부사장\n바로가기\n\n\n성남 분당 갑\n김병관\n경선 공천\n20대 국회의원\n바로가기\n\n\n성남 분당 을\n김병욱\n단수 공천\n20대 국회의원\n바로가기\n\n\n의정부 갑\n오영환\n전략 공천\n\n바로가기\n\n\n의정부 을\n김민철\n경선 공천\n\n바로가기\n\n\n안양 만안\n강득구\n경선 공천\n전 경기도 연정부지사경기도의회 의장\n바로가기\n\n\n안양 동안 갑\n민병덕\n경선 공천\n변호사\n바로가기\n\n\n안양 동안 을\n이재정\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n부천 갑\n김경협\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 을\n설훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n부천 병\n김상희\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 정\n서영석\n경선 공천\n\n바로가기\n\n\n광명 갑\n임오경\n전략 공천\n전 핸드볼 감독전 국가대표 핸드볼 선수\n바로가기\n\n\n광명 을\n양기대\n경선 공천\n전 광명시장\n바로가기\n\n\n평택 갑\n홍기원\n경선 공천\n\n바로가기\n\n\n평택 을\n김현정\n전략 공천\n\n바로가기\n\n\n동두천·연천\n서동욱\n경선 공천\n\n바로가기\n\n\n안산 상록 갑\n전해철\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n안산 상록 을\n김철민\n단수 공천\n20대 국회의원전 안산시장\n바로가기\n\n\n안산 단원 갑\n고영인\n경선 공천\n\n바로가기\n\n\n안산 단원 을\n김남국\n전략 공천\n변호사\n바로가기\n\n\n고양 갑\n문명순\n단수 공천\n\n바로가기\n\n\n고양 을\n한준호\n전략 공천\n전 MBC 아나운서\n바로가기\n\n\n고양 병\n홍정민\n전략 공천\n변호사\n바로가기\n\n\n고양 정\n이용우\n전략 공천\n전 카카오뱅크 대표이사\n바로가기\n\n\n의왕·과천\n이소영\n전략 공천\n변호사\n바로가기\n\n\n구리\n윤호중\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n남양주 갑\n조응천\n경선 공천\n20대 국회의원전 청와대 공직기강비서관\n바로가기\n\n\n남양주 을\n김한정\n경선 공천\n20대 국회의원\n바로가기\n\n\n남양주 병\n김용민\n전략 공천\n변호사\n바로가기\n\n\n오산\n안민석\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n시흥 갑\n문정복\n경선 공천\n\n바로가기\n\n\n시흥 을\n조정식\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n군포\n이학영\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n하남\n최종윤\n경선 공천\n\n바로가기\n\n\n용인 갑\n오세영\n경선 공천\n\n바로가기\n\n\n용인 을\n김민기\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n용인 병\n정춘숙\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n용인 정\n이탄희\n전략 공천\n변호사전 수원지법 안양지원 판사\n바로가기\n\n\n파주 갑\n윤후덕\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n파주 을\n박정\n단수 공천\n20대 국회의원\n바로가기\n\n\n이천\n김용진\n경선 공천\n전 기획재정부 차관\n바로가기\n\n\n안성\n이규민\n경선 공천\n\n바로가기\n\n\n김포 갑\n김주영\n전략 공천\n전 한국노총 위원장\n바로가기\n\n\n김포 을\n박상혁\n경선 공천\n\n바로가기\n\n\n화성 갑\n송옥주\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n화성 을\n이원욱\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n화성 병\n권칠승\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주 갑\n소병훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n광주 을\n임종성\n단수 공천\n20대 국회의원\n바로가기\n\n\n양주\n정성호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n포천·가평\n이철휘\n경선 공천\n\n바로가기\n\n\n여주·양평\n최재관\n경선 공천\n\n바로가기\n\n\n강원도\n    \n\n춘천·철원·화천·양구 갑\n허영\n경선 공천\n\n바로가기\n\n\n춘천·철원·화천·양구 을\n정만호\n경선 공천\n\n바로가기\n\n\n홍천·횡성·영월·평창\n원경환\n단수 공천\n전 서울지방경찰청장\n바로가기\n\n\n원주 갑\n이광재\n경선 공천\n17·18대 국회의원전 강원도지사\n바로가기\n\n\n원주 을\n송기헌\n단수 공천\n20대 국회의원\n바로가기\n\n\n강릉\n김경수\n단수 공천\n\n바로가기\n\n\n동해·태백·삼척·정선\n김동완\n경선 공천\n\n바로가기\n\n\n속초·인제·고성·양양\n이동기\n경선 공천\n\n바로가기\n\n\n충청북도\n    \n\n청주 상당\n정정순\n경선 공천\n\n바로가기\n\n\n청주 서원\n이장섭\n경선 공천\n\n바로가기\n\n\n청주 흥덕\n도종환\n단수 공천\n19·20대 국회의원전 문화체육관광부 장관\n바로가기\n\n\n청주 청원\n변재일\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n충주\n김경욱\n단수 공천\n\n바로가기\n\n\n제천·단양\n이후삼\n경선 공천\n20대 국회의원\n바로가기\n\n\n보은·옥천·영동·괴산\n곽상언\n경선 공천\n변호사\n바로가기\n\n\n증평·진천·음성\n임호선\n단수 공천\n\n바로가기\n\n\n충청남도\n    \n\n천안 갑\n문진석\n전략 공천\n\n바로가기\n\n\n천안 을\n박완주\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n천안 병\n이정문\n경선 공천\n\n바로가기\n\n\n아산 갑\n복기왕\n단수 공천\n17대 국회의원전 아산시장\n바로가기\n\n\n아산 을\n강훈식\n단수 공천\n20대 국회의원\n바로가기\n\n\n공주·부여·청양\n박수현\n단수 공천\n19대 국회의원전 청와대 대변인\n바로가기\n\n\n당진\n어기구\n경선 공천\n20대 국회의원\n바로가기\n\n\n서산·태안\n조한기\n단수 공천\n\n바로가기\n\n\n논산·계룡·금산\n김종민\n경선 공천\n20대 국회의원\n바로가기\n\n\n홍성·예산\n김학민\n경선 공천\n\n바로가기\n\n\n보령·서천\n나소열\n단수 공천\n전 서천군수\n바로가기\n\n\n전라북도\n    \n\n전주 갑\n김윤덕\n경선 공천\n제19대 국회의원\n바로가기\n\n\n전주 을\n이상직\n경선 공천\n제19대 국회의원전 이스타항공 총괄회장\n바로가기\n\n\n전주 병\n김성주\n단수 공천\n제19대 국회의원\n바로가기\n\n\n군산\n신영대\n단수 공천\n\n바로가기\n\n\n익산 갑\n김수흥\n경선 공천\n전 국회사무처 사무차장\n바로가기\n\n\n익산 을\n한병도\n경선 공천\n제17대 국회의원\n바로가기\n\n\n정읍·고창\n윤준병\n단수 공천\n전 서울특별시 행정1부시장\n바로가기\n\n\n남원·임실·순창\n이강래\n경선 공천\n제16·17·18대 국회의원전 한국도로공사 사장\n바로가기\n\n\n김제·부안\n이원택\n단수 공천\n전 문재인 정부 청와대 행정관전 전라북도 정무부지사\n바로가기\n\n\n완주·진안·무주·장수\n안호영\n경선 공천\n제20대 국회의원\n바로가기\n\n\n전라남도\n    \n\n목포\n김원이\n경선 공천\n전 서울특별시 정무부시장\n바로가기\n\n\n여수 갑\n주철현\n경선 공천\n전 여수시장(민선 6기)전 대검찰청 강력부장\n바로가기\n\n\n여수 을\n김회재\n경선 공천\n\n바로가기\n\n\n순천·광양·곡성·구례 갑\n소병철\n전략 공천\n전 법무연수원장농협대학교, 순천대학교, 법무연수원 석좌교수\n바로가기\n\n\n순천·광양·곡성·구례 을\n서동용\n경선 공천\n\n바로가기\n\n\n나주·화순\n신정훈\n경선 공천\n제19대 국회의원\n바로가기\n\n\n담양·함평·영광·장성\n이개호\n단수 공천\n제19·20대 국회의원전 농림축산식품부 장관전 전라남도 제35대 행정부지사\n바로가기\n\n\n무안·신안·영암\n서삼석\n경선 공천\n제20대 국회의원제42·43·44대 무안군수제5·6대 전라남도의회 의원\n바로가기\n\n\n고흥·보성·장흥·강진\n김승남\n경선 공천\n제19대 국회의원\n바로가기\n\n\n해남·진도·완도\n윤재갑\n경선 공천\n전 해군 군수사령부 사령관목포해양대학교 초빙교수\n바로가기\n\n\n경상북도\n    \n\n포항 북\n오중기\n단수 공천\n-\n바로가기\n\n\n포항 남·울릉\n허대만\n단수 공천\n-\n바로가기\n\n\n구미 갑\n김철호\n경선 공천\n-\n바로가기\n\n\n구미 을\n김현권\n단수 공천\n-\n바로가기\n\n\n경산\n전상헌\n경선 공천\n-\n바로가기\n\n\n김천\n배영애\n단수 공천\n-\n바로가기\n\n\n경주\n정다은\n전략 공천\n-\n바로가기\n\n\n안동·예천\n이삼걸\n단수 공천\n-\n바로가기\n\n\n영천·청도\n정우동\n단수 공천\n-\n바로가기\n\n\n군위·의성·청송·영덕\n강부송\n단수 공천\n-\n바로가기\n\n\n상주·문경\n정용운\n단수 공천\n-\n바로가기\n\n\n영주·영양·봉화·울진\n황재선\n경선 공천\n-\n바로가기\n\n\n고령·성주·칠곡\n장세호\n단수 공천\n-\n바로가기\n\n\n경상남도\n    \n\n창원 의창\n김기운\n경선 공천\n\n바로가기\n\n\n창원 성산\n이흥석\n단수 공천\n\n바로가기\n\n\n창원 마산합포\n박남현\n경선 공천\n\n바로가기\n\n\n창원 마산회원\n하귀남\n단수 공천\n\n바로가기\n\n\n창원 진해\n황기철\n단수 공천\n제30대 해군참모총장\n바로가기\n\n\n진주 갑\n정영훈\n경선 공천\n\n바로가기\n\n\n진주 을\n한경호\n단수 공천\n\n바로가기\n\n\n김해 갑\n민홍철\n단수 공천\n제19·20대 국회의원\n바로가기\n\n\n김해 을\n김정호\n경선 공천\n제20대 국회의원\n바로가기\n\n\n양산 갑\n이재영\n전략 공천\n대외경제정책연구원 원장외교부 정책자문위원\n바로가기\n\n\n양산 을\n김두관\n전략 공천\n제20대 국회의원(경기 김포 갑)제34대 경상남도지사제38·39대 남해군수\n바로가기\n\n\n통영·고성\n양문석\n단수 공천\n\n바로가기\n\n\n거제\n문상모\n경선 공천\n\n바로가기\n\n\n밀양·의령·함안·창녕\n조성환\n단수 공천\n\n바로가기\n\n\n사천·남해·하동\n황인성\n단수 공천\n\n바로가기\n\n\n산청·함양·거창·합천\n서필상\n단수 공천\n\n바로가기\n\n\n제주특별자치도\n    \n\n제주 갑\n송재호\n전략 공천\n\n바로가기\n\n\n제주 을\n오영훈\n경선 공천\n제20대 국회의원\n바로가기\n\n\n서귀포\n위성곤\n단수 공천\n제20대 국회의원\n바로가기"
  },
  {
    "objectID": "precinct_ojs.html",
    "href": "precinct_ojs.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "2020. 4. 15. 21대 국회의원 총선거 선거구 지도를 가져온다.\n\n코드library(sf)\nlibrary(tidyverse)\n\nprecinct &lt;- st_read(\"data/2020_21_elec_253.json\") |&gt; \n  st_set_crs(4326)\n#&gt; Reading layer `2020_21_elec_253' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\2020_21_elec_253.json' using driver `GeoJSON'\n#&gt; Simple feature collection with 253 features and 4 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\nst_geometry(precinct) |&gt; plot()"
  },
  {
    "objectID": "precinct_ojs.html#공천-유형",
    "href": "precinct_ojs.html#공천-유형",
    "title": "지도제작 대회",
    "section": "\n3.1 공천 유형",
    "text": "3.1 공천 유형\n전체 지역구 253개 중에 공천 유형별로 출판용 표로 제작한다.\n\n코드library(janitor)\nlibrary(gt)\nlibrary(gtExtras)\n\nnomination_type_gt &lt;- nomination |&gt; \n  tabyl(공천_유형) |&gt; \n  arrange(desc(n)) |&gt; \n  janitor::adorn_totals(name = \"합계\") |&gt; \n  janitor::adorn_pct_formatting() |&gt; \n  rename(후보수 = n,\n         비율 = percent) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"더불어민주당 공천 유형\"),\n    subtitle = md(\"제21대 국회의원 선거\")\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  )  \n\nnomination_type_gt\n\n\n\n\n\n\n\n더불어민주당 공천 유형\n    \n\n제21대 국회의원 선거\n    \n\n공천_유형\n      후보수\n      비율\n    \n\n\n\n단수 공천\n118\n46.6%\n\n\n경선 공천\n106\n41.9%\n\n\n전략 공천\n28\n11.1%\n\n\n청년 경선 공천\n1\n0.4%\n\n\n합계\n253\n100.0%\n\n\n\n\n\n코드\n# nomination_type_gt |&gt; \n#   gtsave(filename = \"images/nomation_type_gt.png\")"
  },
  {
    "objectID": "precinct_ojs.html#공천-상세",
    "href": "precinct_ojs.html#공천-상세",
    "title": "지도제작 대회",
    "section": "\n3.2 공천 상세",
    "text": "3.2 공천 상세\n\n코드library(gt)\nlibrary(gtExtras)\n\nnomination |&gt; \n  mutate(\n      유튜브 = map(유튜브, ~ htmltools::a(href = .x, \"바로가기\")),\n      유튜브 = map(유튜브, ~ gt::html(as.character(.x))))  |&gt; \n  gt(groupname_col = '시도명') |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    table.font.size = px(12L)\n  ) |&gt; \n  sub_missing(\n    columns = everything(),\n    missing_text = \"-\"\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  )  \n\n\n\n\n\n\n선거구\n      후보자\n      공천_유형\n      경력\n      유튜브\n    \n\n\n서울특별시\n    \n\n종로\n이낙연\n전략 공천\n민선 6기 전남지사45대 국무총리 (2017~2020)16·17·18·19대 국회의원\n바로가기\n\n\n중·성동 갑\n홍익표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n중·성동 을\n박성준\n전략 공천\n전 JTBC 아나운서팀장\n바로가기\n\n\n용산\n강태웅\n전략 공천\n전 서울시 부시장\n바로가기\n\n\n광진 갑\n전혜숙\n단수 공천\n18·20대 국회의원\n바로가기\n\n\n광진 을\n고민정\n전략 공천\nKBS 한국방송공사 아나운서청와대 대변인 (2019~2020)\n바로가기\n\n\n동대문 갑\n안규백\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n동대문 을\n장경태\n청년 경선 공천\n\n바로가기\n\n\n중랑 갑\n서영교\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n중랑 을\n박홍근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n성북 갑\n김영배\n경선 공천\n민선 5·6기 서울 성북구청장\n바로가기\n\n\n성북 을\n기동민\n단수 공천\n20대 국회의원\n바로가기\n\n\n강북 갑\n천준호\n경선 공천\n민생경제지원단 위원장\n바로가기\n\n\n강북 을\n박용진\n단수 공천\n20대 국회의원\n바로가기\n\n\n도봉 갑\n인재근\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n도봉 을\n오기형\n경선 공천\n변호사\n바로가기\n\n\n노원 갑\n고용진\n경선 공천\n20대 국회의원\n바로가기\n\n\n노원 을\n우원식\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n노원 병\n김성환\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 갑\n박주민\n단수 공천\n20대 국회의원\n바로가기\n\n\n은평 을\n강병원\n경선 공천\n20대 국회의원\n바로가기\n\n\n서대문 갑\n우상호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n서대문 을\n김영호\n단수 공천\n20대 국회의원\n바로가기\n\n\n마포 갑\n노웅래\n경선 공천\n17·19·20대 국회의원\n바로가기\n\n\n마포 을\n정청래\n단수 공천\n17·19대 국회의원\n바로가기\n\n\n양천 갑\n황희\n단수 공천\n20대 국회의원\n바로가기\n\n\n양천 을\n이용선\n단수 공천\n전 청와대 시민사회수석\n바로가기\n\n\n강서 갑\n강선우\n경선 공천\n중앙당 총선기획위원\n바로가기\n\n\n강서 을\n진성준\n단수 공천\n19대 국회의원\n바로가기\n\n\n강서 병\n한정애\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n구로 갑\n이인영\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n구로 을\n윤건영\n전략 공천\n전 청와대 국정상황실장\n바로가기\n\n\n금천\n최기상\n전략 공천\n전 서울북부지법 부장판사\n바로가기\n\n\n영등포 갑\n김영주\n단수 공천\n전 고용노동부 장관\n바로가기\n\n\n영등포 을\n김민석\n경선 공천\n15·16대 국회의원\n바로가기\n\n\n동작 갑\n김병기\n경선 공천\n20대 국회의원\n바로가기\n\n\n동작 을\n이수진\n전략 공천\n전 수원지법 부장판사\n바로가기\n\n\n관악 갑\n유기홍\n경선 공천\n17대 국회의원\n바로가기\n\n\n관악 을\n정태호\n경선 공천\n전 청와대 일자리수석\n바로가기\n\n\n서초 갑\n이정근\n단수 공천\n전 지역위원장\n바로가기\n\n\n서초 을\n박경미\n경선 공천\n20대 국회의원\n바로가기\n\n\n강남 갑\n김성곤\n단수 공천\n15·17·18·19대 국회의원\n바로가기\n\n\n강남 을\n전현희\n단수 공천\n18대·20대 국회의원\n바로가기\n\n\n강남 병\n김한규\n전략 공천\n변호사\n바로가기\n\n\n송파 갑\n조재희\n경선 공천\n전 정책기획위원\n바로가기\n\n\n송파 을\n최재성\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n송파 병\n남인순\n단수 공천\n19대·20대 국회의원\n바로가기\n\n\n강동 갑\n진선미\n단수 공천\n19·20대 국회의원여성가족부 장관 (2018~2019)\n바로가기\n\n\n강동 을\n이해식\n경선 공천\n민선4·5·6기 서울 강동구청장\n바로가기\n\n\n부산광역시\n    \n\n중·영도\n김비오\n경선 공천\n전 지역위원장\n바로가기\n\n\n서·동\n이재강\n경선 공천\n전 지역위원장\n바로가기\n\n\n부산진 갑\n김영춘\n단수 공천\n16·17·20대 국회의원해양수산부 장관 (2017~2019)\n바로가기\n\n\n부산진 을\n류영진\n경선 공천\n전 식품의약품안전처장\n바로가기\n\n\n동래\n박성현\n단수 공천\n\n바로가기\n\n\n남 갑\n강준석\n전략 공천\n13대 해양수산부 차관\n바로가기\n\n\n남 을\n박재호\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 갑\n전재수\n단수 공천\n20대 국회의원\n바로가기\n\n\n북·강서 을\n최지은\n전략 공천\n전 세계은행 선임 이코노미스트\n바로가기\n\n\n해운대 갑\n유영민\n단수 공천\n과학정보기술통신부 장관 (2017년~2019년)\n바로가기\n\n\n해운대 을\n윤준호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 갑\n최인호\n단수 공천\n20대 국회의원\n바로가기\n\n\n사하 을\n이상호\n경선 공천\n\n바로가기\n\n\n금정\n박무성\n경선 공천\n변호사\n바로가기\n\n\n연제\n김해영\n단수 공천\n20대 국회의원\n바로가기\n\n\n수영\n강윤경\n단수 공천\n\n바로가기\n\n\n사상\n배재정\n단수 공천\n19대 국회의원 (비례대표)\n바로가기\n\n\n기장\n최택용\n경선 공천\n\n바로가기\n\n\n대구광역시\n    \n\n중·남\n이재용\n단수 공천\n전 환경부 장관\n바로가기\n\n\n동 갑\n서재헌\n단수 공천\n\n바로가기\n\n\n동 을\n이승천\n단수 공천\n\n바로가기\n\n\n서\n윤선진\n단수 공천\n\n바로가기\n\n\n북 갑\n이헌태\n단수 공천\n\n바로가기\n\n\n북 을\n홍의락\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n수성 갑\n김부겸\n단수 공천\n16·17·18·20대 국회의원행정안전부 장관 (2017~2019)\n바로가기\n\n\n수성 을\n이상식\n단수 공천\n전 대구지방경찰청장\n바로가기\n\n\n달서 갑\n권택흥\n단수 공천\n\n바로가기\n\n\n달서 을\n허소\n경선 공천\n\n바로가기\n\n\n달서 병\n김대진\n단수 공천\n\n바로가기\n\n\n달성\n박형룡\n경선 공천\n\n바로가기\n\n\n인천광역시\n    \n\n중·강화·옹진\n조택상\n단수 공천\n\n바로가기\n\n\n동·미추홀 갑\n허종식\n단수 공천\n전 인천광역시 정무경제부시장\n바로가기\n\n\n동·미추홀 을\n남영희\n경선 공천\n\n바로가기\n\n\n연수 갑\n박찬대\n단수 공천\n20대 국회의원\n바로가기\n\n\n연수 을\n정일영\n경선 공천\n전 인천국제공항공사 사장\n바로가기\n\n\n남동 갑\n맹성규\n단수 공천\n20대 국회의원\n바로가기\n\n\n남동 을\n윤관석\n단수 공천\n20대 국회의원\n바로가기\n\n\n부평 갑\n이성만\n경선 공천\n전 인천광역시 시의원\n바로가기\n\n\n부평 을\n홍영표\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n계양 갑\n유동수\n단수 공천\n20대 국회의원\n바로가기\n\n\n계양 을\n송영길\n단수 공천\n17·18·20대 국회의원민선 5기 인천광역시장\n바로가기\n\n\n서 갑\n김교흥\n단수 공천\n17대 국회의원\n바로가기\n\n\n서 을\n신동근\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주광역시\n    \n\n동·남 갑\n윤영덕\n경선 공천\n\n바로가기\n\n\n동·남 을\n이병훈\n경선 공천\n\n바로가기\n\n\n서 갑\n송갑석\n단수 공천\n제20대 국회의원\n바로가기\n\n\n서 을\n양향자\n경선 공천\n전 삼성전자 상무이사\n바로가기\n\n\n북 갑\n조오섭\n경선 공천\n\n바로가기\n\n\n북 을\n형석\n경선 공천\n\n바로가기\n\n\n광산 갑\n이용빈\n단수 공천\n광주광역시당 광산구(갑) 지역위원장\n바로가기\n\n\n광산 을\n민형배\n경선 공천\n\n바로가기\n\n\n대전광역시\n    \n\n동\n장철민\n경선 공천\n\n바로가기\n\n\n중\n황운하\n경선 공천\n전 울산지방경찰청장\n바로가기\n\n\n서 갑\n박병석\n단수 공천\n16·17·18·19·20대 국회의원19대 국회 전반기 국회부의장\n바로가기\n\n\n서 을\n박범계\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n유성 갑\n조승래\n단수 공천\n20대 국회의원\n바로가기\n\n\n유성 을\n이상민\n경선 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n대덕\n박영순\n경선 공천\n전 대전광역시 정무부시장\n바로가기\n\n\n울산광역시\n    \n\n중\n임동호\n경선 공천\n\n바로가기\n\n\n남 갑\n심규명\n경선 공천\n변호사\n바로가기\n\n\n남 을\n박성진\n경선 공천\n\n바로가기\n\n\n동\n김태선\n경선 공천\n\n바로가기\n\n\n북\n이상헌\n경선 공천\n20대 국회의원\n바로가기\n\n\n울주\n김영문\n단수 공천\n관세청장 (2017년~2019년)\n바로가기\n\n\n세종특별자치시\n    \n\n세종 갑\n홍성국\n전략 공천\n전 미래에셋대우 대표이사\n바로가기\n\n\n세종 을\n강준현\n경선 공천\n전 세종시 정무부시장\n바로가기\n\n\n경기도\n    \n\n수원 갑\n김승원\n경선 공천\n\n바로가기\n\n\n수원 을\n백혜련\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 병\n김영진\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 정\n박광온\n단수 공천\n20대 국회의원\n바로가기\n\n\n수원 무\n김진표\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 수정\n김태년\n단수 공천\n20대 국회의원\n바로가기\n\n\n성남 중원\n윤영찬\n경선 공천\n전 청와대 국민소통수석네이버 부사장\n바로가기\n\n\n성남 분당 갑\n김병관\n경선 공천\n20대 국회의원\n바로가기\n\n\n성남 분당 을\n김병욱\n단수 공천\n20대 국회의원\n바로가기\n\n\n의정부 갑\n오영환\n전략 공천\n\n바로가기\n\n\n의정부 을\n김민철\n경선 공천\n\n바로가기\n\n\n안양 만안\n강득구\n경선 공천\n전 경기도 연정부지사경기도의회 의장\n바로가기\n\n\n안양 동안 갑\n민병덕\n경선 공천\n변호사\n바로가기\n\n\n안양 동안 을\n이재정\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n부천 갑\n김경협\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 을\n설훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n부천 병\n김상희\n단수 공천\n20대 국회의원\n바로가기\n\n\n부천 정\n서영석\n경선 공천\n\n바로가기\n\n\n광명 갑\n임오경\n전략 공천\n전 핸드볼 감독전 국가대표 핸드볼 선수\n바로가기\n\n\n광명 을\n양기대\n경선 공천\n전 광명시장\n바로가기\n\n\n평택 갑\n홍기원\n경선 공천\n\n바로가기\n\n\n평택 을\n김현정\n전략 공천\n\n바로가기\n\n\n동두천·연천\n서동욱\n경선 공천\n\n바로가기\n\n\n안산 상록 갑\n전해철\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n안산 상록 을\n김철민\n단수 공천\n20대 국회의원전 안산시장\n바로가기\n\n\n안산 단원 갑\n고영인\n경선 공천\n\n바로가기\n\n\n안산 단원 을\n김남국\n전략 공천\n변호사\n바로가기\n\n\n고양 갑\n문명순\n단수 공천\n\n바로가기\n\n\n고양 을\n한준호\n전략 공천\n전 MBC 아나운서\n바로가기\n\n\n고양 병\n홍정민\n전략 공천\n변호사\n바로가기\n\n\n고양 정\n이용우\n전략 공천\n전 카카오뱅크 대표이사\n바로가기\n\n\n의왕·과천\n이소영\n전략 공천\n변호사\n바로가기\n\n\n구리\n윤호중\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n남양주 갑\n조응천\n경선 공천\n20대 국회의원전 청와대 공직기강비서관\n바로가기\n\n\n남양주 을\n김한정\n경선 공천\n20대 국회의원\n바로가기\n\n\n남양주 병\n김용민\n전략 공천\n변호사\n바로가기\n\n\n오산\n안민석\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n시흥 갑\n문정복\n경선 공천\n\n바로가기\n\n\n시흥 을\n조정식\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n군포\n이학영\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n하남\n최종윤\n경선 공천\n\n바로가기\n\n\n용인 갑\n오세영\n경선 공천\n\n바로가기\n\n\n용인 을\n김민기\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n용인 병\n정춘숙\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n용인 정\n이탄희\n전략 공천\n변호사전 수원지법 안양지원 판사\n바로가기\n\n\n파주 갑\n윤후덕\n경선 공천\n19·20대 국회의원\n바로가기\n\n\n파주 을\n박정\n단수 공천\n20대 국회의원\n바로가기\n\n\n이천\n김용진\n경선 공천\n전 기획재정부 차관\n바로가기\n\n\n안성\n이규민\n경선 공천\n\n바로가기\n\n\n김포 갑\n김주영\n전략 공천\n전 한국노총 위원장\n바로가기\n\n\n김포 을\n박상혁\n경선 공천\n\n바로가기\n\n\n화성 갑\n송옥주\n경선 공천\n20대 국회의원(비례대표)\n바로가기\n\n\n화성 을\n이원욱\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n화성 병\n권칠승\n단수 공천\n20대 국회의원\n바로가기\n\n\n광주 갑\n소병훈\n경선 공천\n20대 국회의원\n바로가기\n\n\n광주 을\n임종성\n단수 공천\n20대 국회의원\n바로가기\n\n\n양주\n정성호\n단수 공천\n17·19·20대 국회의원\n바로가기\n\n\n포천·가평\n이철휘\n경선 공천\n\n바로가기\n\n\n여주·양평\n최재관\n경선 공천\n\n바로가기\n\n\n강원도\n    \n\n춘천·철원·화천·양구 갑\n허영\n경선 공천\n\n바로가기\n\n\n춘천·철원·화천·양구 을\n정만호\n경선 공천\n\n바로가기\n\n\n홍천·횡성·영월·평창\n원경환\n단수 공천\n전 서울지방경찰청장\n바로가기\n\n\n원주 갑\n이광재\n경선 공천\n17·18대 국회의원전 강원도지사\n바로가기\n\n\n원주 을\n송기헌\n단수 공천\n20대 국회의원\n바로가기\n\n\n강릉\n김경수\n단수 공천\n\n바로가기\n\n\n동해·태백·삼척·정선\n김동완\n경선 공천\n\n바로가기\n\n\n속초·인제·고성·양양\n이동기\n경선 공천\n\n바로가기\n\n\n충청북도\n    \n\n청주 상당\n정정순\n경선 공천\n\n바로가기\n\n\n청주 서원\n이장섭\n경선 공천\n\n바로가기\n\n\n청주 흥덕\n도종환\n단수 공천\n19·20대 국회의원전 문화체육관광부 장관\n바로가기\n\n\n청주 청원\n변재일\n단수 공천\n17·18·19·20대 국회의원\n바로가기\n\n\n충주\n김경욱\n단수 공천\n\n바로가기\n\n\n제천·단양\n이후삼\n경선 공천\n20대 국회의원\n바로가기\n\n\n보은·옥천·영동·괴산\n곽상언\n경선 공천\n변호사\n바로가기\n\n\n증평·진천·음성\n임호선\n단수 공천\n\n바로가기\n\n\n충청남도\n    \n\n천안 갑\n문진석\n전략 공천\n\n바로가기\n\n\n천안 을\n박완주\n단수 공천\n19·20대 국회의원\n바로가기\n\n\n천안 병\n이정문\n경선 공천\n\n바로가기\n\n\n아산 갑\n복기왕\n단수 공천\n17대 국회의원전 아산시장\n바로가기\n\n\n아산 을\n강훈식\n단수 공천\n20대 국회의원\n바로가기\n\n\n공주·부여·청양\n박수현\n단수 공천\n19대 국회의원전 청와대 대변인\n바로가기\n\n\n당진\n어기구\n경선 공천\n20대 국회의원\n바로가기\n\n\n서산·태안\n조한기\n단수 공천\n\n바로가기\n\n\n논산·계룡·금산\n김종민\n경선 공천\n20대 국회의원\n바로가기\n\n\n홍성·예산\n김학민\n경선 공천\n\n바로가기\n\n\n보령·서천\n나소열\n단수 공천\n전 서천군수\n바로가기\n\n\n전라북도\n    \n\n전주 갑\n김윤덕\n경선 공천\n제19대 국회의원\n바로가기\n\n\n전주 을\n이상직\n경선 공천\n제19대 국회의원전 이스타항공 총괄회장\n바로가기\n\n\n전주 병\n김성주\n단수 공천\n제19대 국회의원\n바로가기\n\n\n군산\n신영대\n단수 공천\n\n바로가기\n\n\n익산 갑\n김수흥\n경선 공천\n전 국회사무처 사무차장\n바로가기\n\n\n익산 을\n한병도\n경선 공천\n제17대 국회의원\n바로가기\n\n\n정읍·고창\n윤준병\n단수 공천\n전 서울특별시 행정1부시장\n바로가기\n\n\n남원·임실·순창\n이강래\n경선 공천\n제16·17·18대 국회의원전 한국도로공사 사장\n바로가기\n\n\n김제·부안\n이원택\n단수 공천\n전 문재인 정부 청와대 행정관전 전라북도 정무부지사\n바로가기\n\n\n완주·진안·무주·장수\n안호영\n경선 공천\n제20대 국회의원\n바로가기\n\n\n전라남도\n    \n\n목포\n김원이\n경선 공천\n전 서울특별시 정무부시장\n바로가기\n\n\n여수 갑\n주철현\n경선 공천\n전 여수시장(민선 6기)전 대검찰청 강력부장\n바로가기\n\n\n여수 을\n김회재\n경선 공천\n\n바로가기\n\n\n순천·광양·곡성·구례 갑\n소병철\n전략 공천\n전 법무연수원장농협대학교, 순천대학교, 법무연수원 석좌교수\n바로가기\n\n\n순천·광양·곡성·구례 을\n서동용\n경선 공천\n\n바로가기\n\n\n나주·화순\n신정훈\n경선 공천\n제19대 국회의원\n바로가기\n\n\n담양·함평·영광·장성\n이개호\n단수 공천\n제19·20대 국회의원전 농림축산식품부 장관전 전라남도 제35대 행정부지사\n바로가기\n\n\n무안·신안·영암\n서삼석\n경선 공천\n제20대 국회의원제42·43·44대 무안군수제5·6대 전라남도의회 의원\n바로가기\n\n\n고흥·보성·장흥·강진\n김승남\n경선 공천\n제19대 국회의원\n바로가기\n\n\n해남·진도·완도\n윤재갑\n경선 공천\n전 해군 군수사령부 사령관목포해양대학교 초빙교수\n바로가기\n\n\n경상북도\n    \n\n포항 북\n오중기\n단수 공천\n-\n바로가기\n\n\n포항 남·울릉\n허대만\n단수 공천\n-\n바로가기\n\n\n구미 갑\n김철호\n경선 공천\n-\n바로가기\n\n\n구미 을\n김현권\n단수 공천\n-\n바로가기\n\n\n경산\n전상헌\n경선 공천\n-\n바로가기\n\n\n김천\n배영애\n단수 공천\n-\n바로가기\n\n\n경주\n정다은\n전략 공천\n-\n바로가기\n\n\n안동·예천\n이삼걸\n단수 공천\n-\n바로가기\n\n\n영천·청도\n정우동\n단수 공천\n-\n바로가기\n\n\n군위·의성·청송·영덕\n강부송\n단수 공천\n-\n바로가기\n\n\n상주·문경\n정용운\n단수 공천\n-\n바로가기\n\n\n영주·영양·봉화·울진\n황재선\n경선 공천\n-\n바로가기\n\n\n고령·성주·칠곡\n장세호\n단수 공천\n-\n바로가기\n\n\n경상남도\n    \n\n창원 의창\n김기운\n경선 공천\n\n바로가기\n\n\n창원 성산\n이흥석\n단수 공천\n\n바로가기\n\n\n창원 마산합포\n박남현\n경선 공천\n\n바로가기\n\n\n창원 마산회원\n하귀남\n단수 공천\n\n바로가기\n\n\n창원 진해\n황기철\n단수 공천\n제30대 해군참모총장\n바로가기\n\n\n진주 갑\n정영훈\n경선 공천\n\n바로가기\n\n\n진주 을\n한경호\n단수 공천\n\n바로가기\n\n\n김해 갑\n민홍철\n단수 공천\n제19·20대 국회의원\n바로가기\n\n\n김해 을\n김정호\n경선 공천\n제20대 국회의원\n바로가기\n\n\n양산 갑\n이재영\n전략 공천\n대외경제정책연구원 원장외교부 정책자문위원\n바로가기\n\n\n양산 을\n김두관\n전략 공천\n제20대 국회의원(경기 김포 갑)제34대 경상남도지사제38·39대 남해군수\n바로가기\n\n\n통영·고성\n양문석\n단수 공천\n\n바로가기\n\n\n거제\n문상모\n경선 공천\n\n바로가기\n\n\n밀양·의령·함안·창녕\n조성환\n단수 공천\n\n바로가기\n\n\n사천·남해·하동\n황인성\n단수 공천\n\n바로가기\n\n\n산청·함양·거창·합천\n서필상\n단수 공천\n\n바로가기\n\n\n제주특별자치도\n    \n\n제주 갑\n송재호\n전략 공천\n\n바로가기\n\n\n제주 을\n오영훈\n경선 공천\n제20대 국회의원\n바로가기\n\n\n서귀포\n위성곤\n단수 공천\n제20대 국회의원\n바로가기"
  },
  {
    "objectID": "precinct.html#데이터셋-1",
    "href": "precinct.html#데이터셋-1",
    "title": "지도제작 대회",
    "section": "\n5.1 데이터셋",
    "text": "5.1 데이터셋\nfuzzyjjoin 함수를 사용해서 매칭을 하고 일부 잘못 매칭된 것은 수작업으로 보정한다.\n\n코드library(fuzzyjoin)\n\nnomination_tbl &lt;- nomination |&gt; \n  mutate(SGG_2 = glue::glue(\"{시도명} {str_remove_all(선거구, '( )|·')}\")) |&gt; \n  select(SGG_2, 후보자, 공천_유형) \n\nprecinct_nomination &lt;- stringdist_left_join(precinct, nomination_tbl, \n                     by = c(\"SGG_2\" = \"SGG_2\"), \n                     method       = \"jw\", \n                     max_dist     = 0.08) \n\nprecinct_nomination\n#&gt;     SGG_Code SGG_1                             SGG_2.x                   SGG_3\n#&gt; 1    2270202  대구                   대구광역시 동구을             대구 동구을\n#&gt; 2    2270101  대구                 대구광역시 중구남구           대구 중구남구\n#&gt; 3    2412001  경기                     경기도 고양시갑             경기 고양갑\n#&gt; 4    2411002  경기               경기도 안양시동안구을         경기 안양동안을\n#&gt; 5    2480802  경남                   경상남도 김해시을             경남 김해을\n#&gt; 6    2410301  경기                     경기도 수원시병             경기 수원병\n#&gt; 7    2280702  인천                 인천광역시 계양구을             인천 계양을\n#&gt; 8    2110601  서울               서울특별시 동대문구갑           서울 동대문갑\n#&gt; 9    2460702  전남 전라남도 순천시광양시곡성군구례군을 전남 순천광양곡성구례을\n#&gt; 10   2440103  충남                   충청남도 천안시병             충남 천안병\n#&gt; 11   2260902  부산               부산광역시 해운대구갑           부산 해운대갑\n#&gt; 12   2310401  울산                     울산광역시 북구               울산 북구\n#&gt; 13   2300402  대전                 대전광역시 유성구갑             대전 유성갑\n#&gt; 14   2300301  대전                   대전광역시 서구갑             대전 서구갑\n#&gt; 15   2413902  경기                     경기도 김포시갑             경기 김포갑\n#&gt; 16   2280602  인천                 인천광역시 부평구을             인천 부평을\n#&gt; 17   2261301  부산             부산광역시 북구강서구을           부산 북강서을\n#&gt; 18   2290401  광주                   광주광역시 북구갑             광주 북구갑\n#&gt; 19   2260701  부산                   부산광역시 남구갑             부산 남구갑\n#&gt; 20   2412803  경기                     경기도 화성시병             경기 화성병\n#&gt; 21   2111902  서울               서울특별시 영등포구을           서울 영등포을\n#&gt; 22   2460201  전남                   전라남도 여수시갑             전남 여수갑\n#&gt; 23   2470401  경북                     경상북도 경주시               경북 경주\n#&gt; 24   2420202  강원                     강원도 원주시갑             강원 원주갑\n#&gt; 25   2420101  강원   강원도 춘천시철원군화천군양구군갑 강원 춘천철원화천양구갑\n#&gt; 26   2111302  서울               서울특별시 서대문구을           서울 서대문을\n#&gt; 27   2413202  경기                     경기도 파주시갑             경기 파주갑\n#&gt; 28   2112301  서울                 서울특별시 강남구갑             서울 강남갑\n#&gt; 29   2451001  전북   전라북도 완주군진안군무주군장수군   전북 완주진안무주장수\n#&gt; 30   2412501  경기                       경기도 구리시               경기 구리\n#&gt; 31   2110702  서울                 서울특별시 중랑구을             서울 중랑을\n#&gt; 32   2310202  울산                   울산광역시 남구을             울산 남구을\n#&gt; 33   2111701  서울                 서울특별시 구로구갑             서울 구로갑\n#&gt; 34   2450101  전북                   전라북도 전주시갑             전북 전주갑\n#&gt; 35   2413801  경기                       경기도 안성시               경기 안성\n#&gt; 36   2412002  경기                     경기도 고양시을             경기 고양을\n#&gt; 37   2111101  서울                 서울특별시 노원구갑             서울 노원갑\n#&gt; 38   2110602  서울               서울특별시 동대문구을           서울 동대문을\n#&gt; 39   2270501  대구                   대구광역시 북구갑             대구 북구갑\n#&gt; 40   2411401  경기                     경기도 광명시갑             경기 광명갑\n#&gt; 41   2450801  전북         전라북도 남원시임실군순창군       전북 남원임실순창\n#&gt; 42   2260903  부산               부산광역시 해운대구을           부산 해운대을\n#&gt; 43   2490102  제주             제주특별자치도 제주시을             제주 제주을\n#&gt; 44   2410701  경기               경기도 성남시분당구갑         경기 성남분당갑\n#&gt; 45   2300403  대전                 대전광역시 유성구을             대전 유성을\n#&gt; 46   2300302  대전                   대전광역시 서구을             대전 서구을\n#&gt; 47   2111001  서울                 서울특별시 도봉구갑             서울 도봉갑\n#&gt; 48   2413903  경기                     경기도 김포시을             경기 김포을\n#&gt; 49   2410101  경기                     경기도 수원시갑             경기 수원갑\n#&gt; 50   2430401  충북               충청북도 제천시단양군           충북 제천단양\n#&gt; 51   2480202  경남           경상남도 창원시마산회원구       경남 창원마산회원\n#&gt; 52   2260702  부산                   부산광역시 남구을             부산 남구을\n#&gt; 53   2481001  경남                     경상남도 거제시               경남 거제\n#&gt; 54   2460202  전남                   전라남도 여수시을             전남 여수을\n#&gt; 55   2300101  대전                     대전광역시 동구               대전 동구\n#&gt; 56   2420203  강원                     강원도 원주시을             강원 원주을\n#&gt; 57   2411001  경기               경기도 안양시동안구갑         경기 안양동안갑\n#&gt; 58   2461201  전남   전라남도 고흥군보성군장흥군강진군   전남 고흥보성장흥강진\n#&gt; 59   2280402  인천                 인천광역시 연수구갑             인천 연수갑\n#&gt; 60   2261101  부산                 부산광역시 사하구갑             부산 사하갑\n#&gt; 61   2413203  경기                     경기도 파주시을             경기 파주을\n#&gt; 62   2112302  서울                 서울특별시 강남구을             서울 강남을\n#&gt; 63   2460601  전남               전라남도 나주시화순군           전남 나주화순\n#&gt; 64   2440102  충남                   충청남도 천안시을             충남 천안을\n#&gt; 65   2481901  경남   경상남도 산청군함양군거창군합천군   경남 산청함양거창합천\n#&gt; 66   2510101  세종     세종특별자치시 세종특별자치시갑           세종 세종시갑\n#&gt; 67   2412603  경기                   경기도 남양주시병           경기 남양주병\n#&gt; 68   2111702  서울                 서울특별시 구로구을             서울 구로을\n#&gt; 69   2462101  전남         전라남도 영암군무안군신안군       전남 영암무안신안\n#&gt; 70   2413602  경기                     경기도 용인시병             경기 용인병\n#&gt; 71   2111102  서울                 서울특별시 노원구을             서울 노원을\n#&gt; 72   2471902  경북   경상북도 군위군의성군청송군영덕군   경북 군위의성청송영덕\n#&gt; 73   2413002  경기                       경기도 군포시               경기 군포\n#&gt; 74   2112101  서울                 서울특별시 관악구갑             서울 관악갑\n#&gt; 75   2270502  대구                   대구광역시 북구을             대구 북구을\n#&gt; 76   2260401  부산               부산광역시 중구영도구         부산 중구영도구\n#&gt; 77   2412301  경기                 경기도 의왕시과천시           경기 의왕과천\n#&gt; 78   2410702  경기               경기도 성남시분당구을         경기 성남분당을\n#&gt; 79   2413401  경기                       경기도 이천시               경기 이천\n#&gt; 80   2414102  경기                 경기도 포천시가평군           경기 포천가평\n#&gt; 81   2111002  서울                 서울특별시 도봉구을             서울 도봉을\n#&gt; 82   2411701  경기               경기도 동두천시연천군         경기 동두천연천\n#&gt; 83   2112001  서울                 서울특별시 동작구갑             서울 동작갑\n#&gt; 84   2110402  서울             서울특별시 중구성동구갑         서울 중구성동갑\n#&gt; 85   2270301  대구                     대구광역시 서구               대구 서구\n#&gt; 86   2440901  충남         충청남도 논산시계룡시금산군       충남 논산계룡금산\n#&gt; 87   2111401  서울                 서울특별시 마포구갑             서울 마포갑\n#&gt; 88   2480901  경남   경상남도 밀양시의령군함안군창녕군   경남 밀양의령함안창녕\n#&gt; 89   2110801  서울                 서울특별시 성북구갑             서울 성북갑\n#&gt; 90   2480301  경남                   경상남도 진주시갑             경남 진주갑\n#&gt; 91   2280403  인천                 인천광역시 연수구을             인천 연수을\n#&gt; 92   2261102  부산                 부산광역시 사하구을             부산 사하을\n#&gt; 93   2110201  서울             서울특별시 중구성동구을         서울 중구성동을\n#&gt; 94   2420102  강원   강원도 춘천시철원군화천군양구군을 강원 춘천철원화천양구을\n#&gt; 95   2112303  서울                 서울특별시 강남구병             서울 강남병\n#&gt; 96   2300501  대전                   대전광역시 대덕구               대전 대덕\n#&gt; 97   2450201  전북                   전라북도 전주시병             전북 전주병\n#&gt; 98   2510102  세종     세종특별자치시 세종특별자치시을           세종 세종시을\n#&gt; 99   2410401  경기                     경기도 수원시정             경기 수원정\n#&gt; 100  2421402  강원     강원도 홍천군횡성군영월군평창군   강원 홍천횡성영월평창\n#&gt; 101  2280802  인천                   인천광역시 서구갑             인천 서구갑\n#&gt; 102  2261501  부산                   부산광역시 수영구               부산 수영\n#&gt; 103  2440501  충남               충청남도 서산시태안군           충남 서산태안\n#&gt; 104  2111103  서울                 서울특별시 노원구병             서울 노원병\n#&gt; 105  2261002  부산                   부산광역시 기장군               부산 기장\n#&gt; 106  2280101  인천         인천광역시 중구강화군옹진군       인천 중구강화옹진\n#&gt; 107  2411301  경기                     경기도 부천시정             경기 부천정\n#&gt; 108  2112102  서울                 서울특별시 관악구을             서울 관악을\n#&gt; 109  2461801  전남         전라남도 해남군완도군진도군       전남 해남완도진도\n#&gt; 110  2414002  경기                     경기도 광주시갑             경기 광주갑\n#&gt; 111  2420301  강원                       강원도 강릉시               강원 강릉\n#&gt; 112  2440301  충남               충청남도 보령시서천군           충남 보령서천\n#&gt; 113  2261401  부산                   부산광역시 연제구               부산 연제\n#&gt; 114  2471302  경북                     경상북도 경산시               경북 경산\n#&gt; 115  2112501  서울                 서울특별시 강동구갑             서울 강동갑\n#&gt; 116  2450102  전북                   전라북도 전주시을             전북 전주을\n#&gt; 117  2260801  부산             부산광역시 북구강서구갑           부산 북강서갑\n#&gt; 118  2440202  충남         충청남도 공주시부여군청양군       충남 공주부여청양\n#&gt; 119  2112002  서울                 서울특별시 동작구을             서울 동작을\n#&gt; 120  2310301  울산                     울산광역시 동구               울산 동구\n#&gt; 121  2440101  충남                   충청남도 천안시갑             충남 천안갑\n#&gt; 122  2260201  부산                 부산광역시 서구동구           부산 서구동구\n#&gt; 123  2470702  경북                   경상북도 구미시을             경북 구미을\n#&gt; 124  2411501  경기                     경기도 평택시갑             경기 평택갑\n#&gt; 125  2111402  서울                 서울특별시 마포구을             서울 마포을\n#&gt; 126  2412101  경기                     경기도 고양시병             경기 고양병\n#&gt; 127  2470601  경북               경상북도 안동시예천군           경북 안동예천\n#&gt; 128  2112401  서울                 서울특별시 송파구갑             서울 송파갑\n#&gt; 129  2110802  서울                 서울특별시 성북구을             서울 성북을\n#&gt; 130  2270701  대구                 대구광역시 달서구갑             대구 달서갑\n#&gt; 131  2480302  경남                   경상남도 진주시을             경남 진주을\n#&gt; 132  2111801  서울                   서울특별시 금천구               서울 금천\n#&gt; 133  2430202  충북               충청북도 청주시흥덕구           충북 청주흥덕\n#&gt; 134  2110101  서울                   서울특별시 종로구               서울 종로\n#&gt; 135  2111201  서울                 서울특별시 은평구갑             서울 은평갑\n#&gt; 136  2431002  충북         충청북도 증평군진천군음성군       충북 증평진천음성\n#&gt; 137  2280803  인천                   인천광역시 서구을             인천 서구을\n#&gt; 138  2471701  경북         경상북도 고령군성주군칠곡군       경북 고령성주칠곡\n#&gt; 139  2270601  대구                 대구광역시 수성구갑             대구 수성갑\n#&gt; 140  2480101  경남               경상남도 창원시의창구           경남 창원의창\n#&gt; 141  2410801  경기                   경기도 의정부시갑           경기 의정부갑\n#&gt; 142  2411101  경기                     경기도 부천시갑             경기 부천갑\n#&gt; 143  2430601  충북               충청북도 청주시청원구           충북 청주청원\n#&gt; 144  2430101  충북               충청북도 청주시상당구           충북 청주상당\n#&gt; 145  2414003  경기                     경기도 광주시을             경기 광주을\n#&gt; 146  2410201  경기                     경기도 수원시을             경기 수원을\n#&gt; 147  2280501  인천                 인천광역시 남동구갑             인천 남동갑\n#&gt; 148  2112502  서울                 서울특별시 강동구을             서울 강동을\n#&gt; 149  2441601  충남                     충청남도 당진시               충남 당진\n#&gt; 150  2290201  광주                   광주광역시 서구갑             광주 서구갑\n#&gt; 151  2300201  대전                     대전광역시 중구               대전 중구\n#&gt; 152  2413701  경기                     경기도 용인시을             경기 용인을\n#&gt; 153  2450502  전북                   전라북도 익산시을             전북 익산을\n#&gt; 154  2261201  부산                   부산광역시 금정구               부산 금정\n#&gt; 155  2112402  서울                 서울특별시 송파구을             서울 송파을\n#&gt; 156  2413101  경기                       경기도 하남시               경기 하남\n#&gt; 157  2270702  대구                 대구광역시 달서구을             대구 달서을\n#&gt; 158  2260601  부산                   부산광역시 동래구               부산 동래\n#&gt; 159  2290502  광주                 광주광역시 광산구을             광주 광산을\n#&gt; 160  2310101  울산                     울산광역시 중구               울산 중구\n#&gt; 161  2470501  경북                     경상북도 김천시               경북 김천\n#&gt; 162  2481403  경남                   경상남도 양산시을             경남 양산을\n#&gt; 163  2111202  서울                 서울특별시 은평구을             서울 은평을\n#&gt; 164  2411901  경기               경기도 안산시단원구갑         경기 안산단원갑\n#&gt; 165  2470901  경북               경상북도 영천시청도군               경북 영천\n#&gt; 166  2112201  서울                 서울특별시 서초구갑             서울 서초갑\n#&gt; 167  2290302  광주               광주광역시 동구남구갑         광주 동구남구갑\n#&gt; 168  2270602  대구                 대구광역시 수성구을             대구 수성을\n#&gt; 169  2110501  서울                 서울특별시 광진구갑             서울 광진갑\n#&gt; 170  2480102  경남               경상남도 창원시성산구           경남 창원성산\n#&gt; 171  2111601  서울                 서울특별시 강서구갑             서울 강서갑\n#&gt; 172  2470802  경북   경상북도 영주시영양군봉화군울진군   경북 영주영양봉화울진\n#&gt; 173  2410802  경기                   경기도 의정부시을           경기 의정부을\n#&gt; 174  2460403  전남 전라남도 순천시광양시곡성군구례군갑 전남 순천광양곡성구례갑\n#&gt; 175  2470701  경북                   경상북도 구미시갑             경북 구미갑\n#&gt; 176  2411801  경기               경기도 안산시상록구갑         경기 안산상록갑\n#&gt; 177  2410202  경기                     경기도 수원시무             경기 수원무\n#&gt; 178  2480501  경남               경상남도 통영시고성군           경남 통영고성\n#&gt; 179  2280502  인천                 인천광역시 남동구을             인천 남동을\n#&gt; 180  2411201  경기                     경기도 부천시병             경기 부천병\n#&gt; 181  2412901  경기                     경기도 시흥시갑             경기 시흥갑\n#&gt; 182  2410601  경기                 경기도 성남시중원구           경기 성남중원\n#&gt; 183  2411502  경기                     경기도 평택시을             경기 평택을\n#&gt; 184  2460101  전남                     전라남도 목포시               전남 목포\n#&gt; 185  2470101  경북                 경상북도 포항시북구           경북 포항북구\n#&gt; 186  2413702  경기                     경기도 용인시정             경기 용인정\n#&gt; 187  2480401  경남               경상남도 창원시진해구           경남 창원진해\n#&gt; 188  2440402  충남                   충청남도 아산시갑             충남 아산갑\n#&gt; 189  2280301  인천           인천광역시 동구미추홀구갑       인천 동구미추홀갑\n#&gt; 190  2112403  서울                 서울특별시 송파구병             서울 송파병\n#&gt; 191  2412701  경기                       경기도 오산시               경기 오산\n#&gt; 192  2430201  충북               충청북도 청주시서원구           충북 청주서원\n#&gt; 193  2270703  대구                 대구광역시 달서구병             대구 달서병\n#&gt; 194  2260501  부산               부산광역시 부산진구갑           부산 부산진갑\n#&gt; 195  2450902  전북               전라북도 김제시부안군           전북 김제부안\n#&gt; 196  2261601  부산                   부산광역시 사상구               부산 사상\n#&gt; 197  2412602  경기                   경기도 남양주시을           경기 남양주을\n#&gt; 198  2413501  경기                     경기도 용인시갑             경기 용인갑\n#&gt; 199  2411902  경기               경기도 안산시단원구을         경기 안산단원을\n#&gt; 200  2411102  경기                     경기도 부천시을             경기 부천을\n#&gt; 201  2112202  서울                 서울특별시 서초구을             서울 서초을\n#&gt; 202  2310501  울산                   울산광역시 울주군               울산 울주\n#&gt; 203  2110502  서울                 서울특별시 광진구을             서울 광진을\n#&gt; 204  2420401  강원     강원도 동해시태백시삼척시정선군   강원 동해태백삼척정선\n#&gt; 205  2111602  서울                 서울특별시 강서구을             서울 강서을\n#&gt; 206  2111501  서울                 서울특별시 양천구갑             서울 양천갑\n#&gt; 207  2450701  전북               전라북도 정읍시고창군           전북 정읍고창\n#&gt; 208  2411802  경기               경기도 안산시상록구을         경기 안산상록을\n#&gt; 209  2110901  서울                 서울특별시 강북구갑             서울 강북갑\n#&gt; 210  2450501  전북                   전라북도 익산시갑             전북 익산갑\n#&gt; 211  2412801  경기                     경기도 화성시갑             경기 화성갑\n#&gt; 212  2110301  서울                   서울특별시 용산구               서울 용산\n#&gt; 213  2290501  광주                 광주광역시 광산구갑             광주 광산갑\n#&gt; 214  2412201  경기                     경기도 고양시정             경기 고양정\n#&gt; 215  2410501  경기                 경기도 성남시수정구           경기 성남수정\n#&gt; 216  2490201  제주             제주특별자치도 서귀포시             제주 서귀포\n#&gt; 217  2270801  대구                   대구광역시 달성군               대구 달성\n#&gt; 218  2290402  광주                   광주광역시 북구을             광주 북구을\n#&gt; 219  2440403  충남                   충청남도 아산시을             충남 아산을\n#&gt; 220  2280302  인천           인천광역시 동구미추홀구을       인천 동구미추홀을\n#&gt; 221  2270201  대구                   대구광역시 동구갑             대구 동구갑\n#&gt; 222  2430701  충북   충청북도 보은군옥천군영동군괴산군   충북 보은옥천영동괴산\n#&gt; 223  2260502  부산               부산광역시 부산진구을           부산 부산진을\n#&gt; 224  2480801  경남                   경상남도 김해시갑             경남 김해갑\n#&gt; 225  2290202  광주                   광주광역시 서구을             광주 서구을\n#&gt; 226  2280701  인천                 인천광역시 계양구갑             인천 계양갑\n#&gt; 227  2290101  광주               광주광역시 동구남구을         광주 동구남구을\n#&gt; 228  2480201  경남           경상남도 창원시마산합포구       경남 창원마산합포\n#&gt; 229  2480702  경남         경상남도 사천시남해군하동군       경남 사천남해하동\n#&gt; 230  2410901  경기                 경기도 안양시만안구           경기 안양만안\n#&gt; 231  2412902  경기                     경기도 시흥시을             경기 시흥을\n#&gt; 232  2490101  제주             제주특별자치도 제주시갑             제주 제주갑\n#&gt; 233  2111603  서울                 서울특별시 강서구병             서울 강서병\n#&gt; 234  2111502  서울                 서울특별시 양천구을             서울 양천을\n#&gt; 235  2280601  인천                 인천광역시 부평구갑             인천 부평갑\n#&gt; 236  2471002  경북               경상북도 상주시문경시           경북 상주문경\n#&gt; 237  2413301  경기                 경기도 여주시양평군           경기 여주양평\n#&gt; 238  2462202  전남   전라남도 담양군함평군영광군장성군   전남 담양함평영광장성\n#&gt; 239  2110902  서울                 서울특별시 강북구을             서울 강북을\n#&gt; 240  2420801  강원     강원도 속초시인제군고성군양양군   강원 속초인제고성양양\n#&gt; 241  2411402  경기                     경기도 광명시을             경기 광명을\n#&gt; 242  2441301  충남               충청남도 홍성군예산군           충남 홍성예산\n#&gt; 243  2412802  경기                     경기도 화성시을             경기 화성을\n#&gt; 244  2111901  서울               서울특별시 영등포구갑           서울 영등포갑\n#&gt; 245  2450301  전북                     전라북도 군산시               전북 군산\n#&gt; 246  2481402  경남                   경상남도 양산시갑             경남 양산갑\n#&gt; 247  2470201  경북           경상북도 포항시남구울릉군         경북 포항남울릉\n#&gt; 248  2111301  서울               서울특별시 서대문구갑           서울 서대문갑\n#&gt; 249  2412601  경기                   경기도 남양주시갑           경기 남양주갑\n#&gt; 250  2411602  경기                       경기도 양주시               경기 양주\n#&gt; 251  2110701  서울                 서울특별시 중랑구갑             서울 중랑갑\n#&gt; 252  2430301  충북                     충청북도 충주시               충북 충주\n#&gt; 253  2310201  울산                   울산광역시 남구갑             울산 남구갑\n#&gt;                         SGG_2.y 후보자      공천_유형\n#&gt; 1               대구광역시 동을 이승천      단수 공천\n#&gt; 2               대구광역시 중남 이재용      단수 공천\n#&gt; 3                 경기도 고양갑 문명순      단수 공천\n#&gt; 4             경기도 안양동안을 이재정      경선 공천\n#&gt; 5               경상남도 김해을 김정호      경선 공천\n#&gt; 6                 경기도 수원병 김영진      단수 공천\n#&gt; 7             인천광역시 계양을 송영길      단수 공천\n#&gt; 8           서울특별시 동대문갑 안규백      단수 공천\n#&gt; 9   전라남도 순천광양곡성구례을 서동용      경선 공천\n#&gt; 10              충청남도 천안병 이정문      경선 공천\n#&gt; 11          부산광역시 해운대갑 유영민      단수 공천\n#&gt; 12                울산광역시 북 이상헌      경선 공천\n#&gt; 13            대전광역시 유성갑 조승래      단수 공천\n#&gt; 14              대전광역시 서갑 박병석      단수 공천\n#&gt; 15                경기도 김포갑 김주영      전략 공천\n#&gt; 16            인천광역시 부평을 홍영표      단수 공천\n#&gt; 17          부산광역시 북강서을 최지은      전략 공천\n#&gt; 18              광주광역시 북갑 조오섭      경선 공천\n#&gt; 19              부산광역시 남갑 강준석      전략 공천\n#&gt; 20                경기도 화성병 권칠승      단수 공천\n#&gt; 21          서울특별시 영등포을 김민석      경선 공천\n#&gt; 22              전라남도 여수갑 주철현      경선 공천\n#&gt; 23                경상북도 경주 정다은      전략 공천\n#&gt; 24                강원도 원주갑 이광재      경선 공천\n#&gt; 25    강원도 춘천철원화천양구갑   허영      경선 공천\n#&gt; 26          서울특별시 서대문을 김영호      단수 공천\n#&gt; 27                경기도 파주갑 윤후덕      경선 공천\n#&gt; 28            서울특별시 강남갑 김성곤      단수 공천\n#&gt; 29    전라북도 완주진안무주장수 안호영      경선 공천\n#&gt; 30                  경기도 구리 윤호중      단수 공천\n#&gt; 31            서울특별시 중랑을 박홍근      단수 공천\n#&gt; 32              울산광역시 남을 박성진      경선 공천\n#&gt; 33            서울특별시 구로갑 이인영      단수 공천\n#&gt; 34              전라북도 전주갑 김윤덕      경선 공천\n#&gt; 35                  경기도 안성 이규민      경선 공천\n#&gt; 36                경기도 고양을 한준호      전략 공천\n#&gt; 37            서울특별시 노원갑 고용진      경선 공천\n#&gt; 38          서울특별시 동대문을 장경태 청년 경선 공천\n#&gt; 39              대구광역시 북갑 이헌태      단수 공천\n#&gt; 40                경기도 광명갑 임오경      전략 공천\n#&gt; 41        전라북도 남원임실순창 이강래      경선 공천\n#&gt; 42          부산광역시 해운대을 윤준호      단수 공천\n#&gt; 43        제주특별자치도 제주을 오영훈      경선 공천\n#&gt; 44            경기도 성남분당갑 김병관      경선 공천\n#&gt; 45            대전광역시 유성을 이상민      경선 공천\n#&gt; 46              대전광역시 서을 박범계      단수 공천\n#&gt; 47            서울특별시 도봉갑 인재근      단수 공천\n#&gt; 48                경기도 김포을 박상혁      경선 공천\n#&gt; 49                경기도 수원갑 김승원      경선 공천\n#&gt; 50            충청북도 제천단양 이후삼      경선 공천\n#&gt; 51        경상남도 창원마산회원 하귀남      단수 공천\n#&gt; 52              부산광역시 남을 박재호      단수 공천\n#&gt; 53                경상남도 거제 문상모      경선 공천\n#&gt; 54              전라남도 여수을 김회재      경선 공천\n#&gt; 55                대전광역시 동 장철민      경선 공천\n#&gt; 56                강원도 원주을 송기헌      단수 공천\n#&gt; 57            경기도 안양동안갑 민병덕      경선 공천\n#&gt; 58    전라남도 고흥보성장흥강진 김승남      경선 공천\n#&gt; 59            인천광역시 연수갑 박찬대      단수 공천\n#&gt; 60            부산광역시 사하갑 최인호      단수 공천\n#&gt; 61                경기도 파주을   박정      단수 공천\n#&gt; 62            서울특별시 강남을 전현희      단수 공천\n#&gt; 63            전라남도 나주화순 신정훈      경선 공천\n#&gt; 64              충청남도 천안을 박완주      단수 공천\n#&gt; 65    경상남도 산청함양거창합천 서필상      단수 공천\n#&gt; 66                         &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 67              경기도 남양주병 김용민      전략 공천\n#&gt; 68            서울특별시 구로을 윤건영      전략 공천\n#&gt; 69                         &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 70                경기도 용인병 정춘숙      경선 공천\n#&gt; 71            서울특별시 노원을 우원식      단수 공천\n#&gt; 72    경상북도 군위의성청송영덕 강부송      단수 공천\n#&gt; 73                  경기도 군포 이학영      경선 공천\n#&gt; 74            서울특별시 관악갑 유기홍      경선 공천\n#&gt; 75              대구광역시 북을 홍의락      단수 공천\n#&gt; 76            부산광역시 중영도 김비오      경선 공천\n#&gt; 77              경기도 의왕과천 이소영      전략 공천\n#&gt; 78            경기도 성남분당을 김병욱      단수 공천\n#&gt; 79                  경기도 이천 김용진      경선 공천\n#&gt; 80              경기도 포천가평 이철휘      경선 공천\n#&gt; 81            서울특별시 도봉을 오기형      경선 공천\n#&gt; 82            경기도 동두천연천 서동욱      경선 공천\n#&gt; 83            서울특별시 동작갑 김병기      경선 공천\n#&gt; 84          서울특별시 중성동갑 홍익표      단수 공천\n#&gt; 85                대구광역시 서 윤선진      단수 공천\n#&gt; 86        충청남도 논산계룡금산 김종민      경선 공천\n#&gt; 87            서울특별시 마포갑 노웅래      경선 공천\n#&gt; 88    경상남도 밀양의령함안창녕 조성환      단수 공천\n#&gt; 89            서울특별시 성북갑 김영배      경선 공천\n#&gt; 90              경상남도 진주갑 정영훈      경선 공천\n#&gt; 91            인천광역시 연수을 정일영      경선 공천\n#&gt; 92            부산광역시 사하을 이상호      경선 공천\n#&gt; 93          서울특별시 중성동을 박성준      전략 공천\n#&gt; 94    강원도 춘천철원화천양구을 정만호      경선 공천\n#&gt; 95            서울특별시 강남병 김한규      전략 공천\n#&gt; 96              대전광역시 대덕 박영순      경선 공천\n#&gt; 97              전라북도 전주병 김성주      단수 공천\n#&gt; 98                         &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 99                경기도 수원정 박광온      단수 공천\n#&gt; 100                        &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 101             인천광역시 서갑 김교흥      단수 공천\n#&gt; 102             부산광역시 수영 강윤경      단수 공천\n#&gt; 103           충청남도 서산태안 조한기      단수 공천\n#&gt; 104           서울특별시 노원병 김성환      단수 공천\n#&gt; 105             부산광역시 기장 최택용      경선 공천\n#&gt; 106       인천광역시 중강화옹진 조택상      단수 공천\n#&gt; 107               경기도 부천정 서영석      경선 공천\n#&gt; 108           서울특별시 관악을 정태호      경선 공천\n#&gt; 109                        &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 110               경기도 광주갑 소병훈      경선 공천\n#&gt; 111                 강원도 강릉 김경수      단수 공천\n#&gt; 112           충청남도 보령서천 나소열      단수 공천\n#&gt; 113             부산광역시 연제 김해영      단수 공천\n#&gt; 114               경상북도 경산 전상헌      경선 공천\n#&gt; 115           서울특별시 강동갑 진선미      단수 공천\n#&gt; 116             전라북도 전주을 이상직      경선 공천\n#&gt; 117         부산광역시 북강서갑 전재수      단수 공천\n#&gt; 118       충청남도 공주부여청양 박수현      단수 공천\n#&gt; 119           서울특별시 동작을 이수진      전략 공천\n#&gt; 120               울산광역시 동 김태선      경선 공천\n#&gt; 121             충청남도 천안갑 문진석      전략 공천\n#&gt; 122             부산광역시 서동 이재강      경선 공천\n#&gt; 123             경상북도 구미을 김현권      단수 공천\n#&gt; 124               경기도 평택갑 홍기원      경선 공천\n#&gt; 125           서울특별시 마포을 정청래      단수 공천\n#&gt; 126               경기도 고양병 홍정민      전략 공천\n#&gt; 127           경상북도 안동예천 이삼걸      단수 공천\n#&gt; 128           서울특별시 송파갑 조재희      경선 공천\n#&gt; 129           서울특별시 성북을 기동민      단수 공천\n#&gt; 130           대구광역시 달서갑 권택흥      단수 공천\n#&gt; 131             경상남도 진주을 한경호      단수 공천\n#&gt; 132             서울특별시 금천 최기상      전략 공천\n#&gt; 133           충청북도 청주흥덕 도종환      단수 공천\n#&gt; 134             서울특별시 종로 이낙연      전략 공천\n#&gt; 135           서울특별시 은평갑 박주민      단수 공천\n#&gt; 136       충청북도 증평진천음성 임호선      단수 공천\n#&gt; 137             인천광역시 서을 신동근      단수 공천\n#&gt; 138       경상북도 고령성주칠곡 장세호      단수 공천\n#&gt; 139           대구광역시 수성갑 김부겸      단수 공천\n#&gt; 140           경상남도 창원의창 김기운      경선 공천\n#&gt; 141             경기도 의정부갑 오영환      전략 공천\n#&gt; 142               경기도 부천갑 김경협      단수 공천\n#&gt; 143           충청북도 청주청원 변재일      단수 공천\n#&gt; 144           충청북도 청주상당 정정순      경선 공천\n#&gt; 145               경기도 광주을 임종성      단수 공천\n#&gt; 146               경기도 수원을 백혜련      단수 공천\n#&gt; 147           인천광역시 남동갑 맹성규      단수 공천\n#&gt; 148           서울특별시 강동을 이해식      경선 공천\n#&gt; 149               충청남도 당진 어기구      경선 공천\n#&gt; 150             광주광역시 서갑 송갑석      단수 공천\n#&gt; 151               대전광역시 중 황운하      경선 공천\n#&gt; 152               경기도 용인을 김민기      단수 공천\n#&gt; 153             전라북도 익산을 한병도      경선 공천\n#&gt; 154             부산광역시 금정 박무성      경선 공천\n#&gt; 155           서울특별시 송파을 최재성      단수 공천\n#&gt; 156                 경기도 하남 최종윤      경선 공천\n#&gt; 157           대구광역시 달서을   허소      경선 공천\n#&gt; 158             부산광역시 동래 박성현      단수 공천\n#&gt; 159           광주광역시 광산을 민형배      경선 공천\n#&gt; 160               울산광역시 중 임동호      경선 공천\n#&gt; 161               경상북도 김천 배영애      단수 공천\n#&gt; 162             경상남도 양산을 김두관      전략 공천\n#&gt; 163           서울특별시 은평을 강병원      경선 공천\n#&gt; 164           경기도 안산단원갑 고영인      경선 공천\n#&gt; 165           경상북도 영천청도 정우동      단수 공천\n#&gt; 166           서울특별시 서초갑 이정근      단수 공천\n#&gt; 167           광주광역시 동남갑 윤영덕      경선 공천\n#&gt; 168           대구광역시 수성을 이상식      단수 공천\n#&gt; 169           서울특별시 광진갑 전혜숙      단수 공천\n#&gt; 170           경상남도 창원성산 이흥석      단수 공천\n#&gt; 171           서울특별시 강서갑 강선우      경선 공천\n#&gt; 172   경상북도 영주영양봉화울진 황재선      경선 공천\n#&gt; 173             경기도 의정부을 김민철      경선 공천\n#&gt; 174 전라남도 순천광양곡성구례갑 소병철      전략 공천\n#&gt; 175             경상북도 구미갑 김철호      경선 공천\n#&gt; 176           경기도 안산상록갑 전해철      단수 공천\n#&gt; 177               경기도 수원무 김진표      단수 공천\n#&gt; 178           경상남도 통영고성 양문석      단수 공천\n#&gt; 179           인천광역시 남동을 윤관석      단수 공천\n#&gt; 180               경기도 부천병 김상희      단수 공천\n#&gt; 181               경기도 시흥갑 문정복      경선 공천\n#&gt; 182             경기도 성남중원 윤영찬      경선 공천\n#&gt; 183               경기도 평택을 김현정      전략 공천\n#&gt; 184               전라남도 목포 김원이      경선 공천\n#&gt; 185             경상북도 포항북 오중기      단수 공천\n#&gt; 186               경기도 용인정 이탄희      전략 공천\n#&gt; 187           경상남도 창원진해 황기철      단수 공천\n#&gt; 188             충청남도 아산갑 복기왕      단수 공천\n#&gt; 189       인천광역시 동미추홀갑 허종식      단수 공천\n#&gt; 190           서울특별시 송파병 남인순      단수 공천\n#&gt; 191                 경기도 오산 안민석      단수 공천\n#&gt; 192           충청북도 청주서원 이장섭      경선 공천\n#&gt; 193           대구광역시 달서병 김대진      단수 공천\n#&gt; 194         부산광역시 부산진갑 김영춘      단수 공천\n#&gt; 195           전라북도 김제부안 이원택      단수 공천\n#&gt; 196             부산광역시 사상 배재정      단수 공천\n#&gt; 197             경기도 남양주을 김한정      경선 공천\n#&gt; 198               경기도 용인갑 오세영      경선 공천\n#&gt; 199           경기도 안산단원을 김남국      전략 공천\n#&gt; 200               경기도 부천을   설훈      경선 공천\n#&gt; 201           서울특별시 서초을 박경미      경선 공천\n#&gt; 202             울산광역시 울주 김영문      단수 공천\n#&gt; 203           서울특별시 광진을 고민정      전략 공천\n#&gt; 204                        &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 205           서울특별시 강서을 진성준      단수 공천\n#&gt; 206           서울특별시 양천갑   황희      단수 공천\n#&gt; 207           전라북도 정읍고창 윤준병      단수 공천\n#&gt; 208           경기도 안산상록을 김철민      단수 공천\n#&gt; 209           서울특별시 강북갑 천준호      경선 공천\n#&gt; 210             전라북도 익산갑 김수흥      경선 공천\n#&gt; 211               경기도 화성갑 송옥주      경선 공천\n#&gt; 212             서울특별시 용산 강태웅      전략 공천\n#&gt; 213           광주광역시 광산갑 이용빈      단수 공천\n#&gt; 214               경기도 고양정 이용우      전략 공천\n#&gt; 215             경기도 성남수정 김태년      단수 공천\n#&gt; 216       제주특별자치도 서귀포 위성곤      단수 공천\n#&gt; 217             대구광역시 달성 박형룡      경선 공천\n#&gt; 218             광주광역시 북을   형석      경선 공천\n#&gt; 219             충청남도 아산을 강훈식      단수 공천\n#&gt; 220       인천광역시 동미추홀을 남영희      경선 공천\n#&gt; 221             대구광역시 동갑 서재헌      단수 공천\n#&gt; 222   충청북도 보은옥천영동괴산 곽상언      경선 공천\n#&gt; 223         부산광역시 부산진을 류영진      경선 공천\n#&gt; 224             경상남도 김해갑 민홍철      단수 공천\n#&gt; 225             광주광역시 서을 양향자      경선 공천\n#&gt; 226           인천광역시 계양갑 유동수      단수 공천\n#&gt; 227           광주광역시 동남을 이병훈      경선 공천\n#&gt; 228       경상남도 창원마산합포 박남현      경선 공천\n#&gt; 229       경상남도 사천남해하동 황인성      단수 공천\n#&gt; 230             경기도 안양만안 강득구      경선 공천\n#&gt; 231               경기도 시흥을 조정식      단수 공천\n#&gt; 232       제주특별자치도 제주갑 송재호      전략 공천\n#&gt; 233           서울특별시 강서병 한정애      단수 공천\n#&gt; 234           서울특별시 양천을 이용선      단수 공천\n#&gt; 235           인천광역시 부평갑 이성만      경선 공천\n#&gt; 236           경상북도 상주문경 정용운      단수 공천\n#&gt; 237             경기도 여주양평 최재관      경선 공천\n#&gt; 238   전라남도 담양함평영광장성 이개호      단수 공천\n#&gt; 239           서울특별시 강북을 박용진      단수 공천\n#&gt; 240                        &lt;NA&gt;   &lt;NA&gt;           &lt;NA&gt;\n#&gt; 241               경기도 광명을 양기대      경선 공천\n#&gt; 242           충청남도 홍성예산 김학민      경선 공천\n#&gt; 243               경기도 화성을 이원욱      단수 공천\n#&gt; 244         서울특별시 영등포갑 김영주      단수 공천\n#&gt; 245               전라북도 군산 신영대      단수 공천\n#&gt; 246             경상남도 양산갑 이재영      전략 공천\n#&gt; 247         경상북도 포항남울릉 허대만      단수 공천\n#&gt; 248         서울특별시 서대문갑 우상호      단수 공천\n#&gt; 249             경기도 남양주갑 조응천      경선 공천\n#&gt; 250                 경기도 양주 정성호      단수 공천\n#&gt; 251           서울특별시 중랑갑 서영교      경선 공천\n#&gt; 252               충청북도 충주 김경욱      단수 공천\n#&gt; 253             울산광역시 남갑 심규명      경선 공천\n#&gt;                           geometry\n#&gt; 1   MULTIPOLYGON (((128.704 35....\n#&gt; 2   MULTIPOLYGON (((128.6067 35...\n#&gt; 3   MULTIPOLYGON (((126.8484 37...\n#&gt; 4   MULTIPOLYGON (((126.9658 37...\n#&gt; 5   MULTIPOLYGON (((128.8736 35...\n#&gt; 6   MULTIPOLYGON (((127.0404 37...\n#&gt; 7   MULTIPOLYGON (((126.7446 37...\n#&gt; 8   MULTIPOLYGON (((127.0707 37...\n#&gt; 9   MULTIPOLYGON (((127.7848 34...\n#&gt; 10  MULTIPOLYGON (((127.1277 36...\n#&gt; 11  MULTIPOLYGON (((129.1528 35...\n#&gt; 12  MULTIPOLYGON (((129.4077 35...\n#&gt; 13  MULTIPOLYGON (((127.3382 36...\n#&gt; 14  MULTIPOLYGON (((127.3845 36...\n#&gt; 15  MULTIPOLYGON (((126.7245 37...\n#&gt; 16  MULTIPOLYGON (((126.7089 37...\n#&gt; 17  MULTIPOLYGON (((128.8348 35...\n#&gt; 18  MULTIPOLYGON (((126.9435 35...\n#&gt; 19  MULTIPOLYGON (((129.1049 35...\n#&gt; 20  MULTIPOLYGON (((127.0504 37...\n#&gt; 21  MULTIPOLYGON (((126.9063 37...\n#&gt; 22  MULTIPOLYGON (((127.3747 34...\n#&gt; 23  MULTIPOLYGON (((129.4817 35...\n#&gt; 24  MULTIPOLYGON (((127.938 37....\n#&gt; 25  MULTIPOLYGON (((127.6416 37...\n#&gt; 26  MULTIPOLYGON (((126.9219 37...\n#&gt; 27  MULTIPOLYGON (((126.7738 37...\n#&gt; 28  MULTIPOLYGON (((127.0525 37...\n#&gt; 29  MULTIPOLYGON (((127.0499 35...\n#&gt; 30  MULTIPOLYGON (((127.1647 37...\n#&gt; 31  MULTIPOLYGON (((127.0803 37...\n#&gt; 32  MULTIPOLYGON (((129.3623 35...\n#&gt; 33  MULTIPOLYGON (((126.8318 37...\n#&gt; 34  MULTIPOLYGON (((127.1534 35...\n#&gt; 35  MULTIPOLYGON (((127.2966 36...\n#&gt; 36  MULTIPOLYGON (((126.8822 37...\n#&gt; 37  MULTIPOLYGON (((127.068 37....\n#&gt; 38  MULTIPOLYGON (((127.0786 37...\n#&gt; 39  MULTIPOLYGON (((128.6068 35...\n#&gt; 40  MULTIPOLYGON (((126.8739 37...\n#&gt; 41  MULTIPOLYGON (((127.1861 35...\n#&gt; 42  MULTIPOLYGON (((129.1437 35...\n#&gt; 43  MULTIPOLYGON (((126.9583 33...\n#&gt; 44  MULTIPOLYGON (((127.0785 37...\n#&gt; 45  MULTIPOLYGON (((127.415 36....\n#&gt; 46  MULTIPOLYGON (((127.3618 36...\n#&gt; 47  MULTIPOLYGON (((127.0464 37...\n#&gt; 48  MULTIPOLYGON (((126.5503 37...\n#&gt; 49  MULTIPOLYGON (((127.0176 37...\n#&gt; 50  MULTIPOLYGON (((128.4419 36...\n#&gt; 51  MULTIPOLYGON (((128.6069 35...\n#&gt; 52  MULTIPOLYGON (((129.1272 35...\n#&gt; 53  MULTIPOLYGON (((128.6248 34...\n#&gt; 54  MULTIPOLYGON (((127.7238 34...\n#&gt; 55  MULTIPOLYGON (((127.489 36....\n#&gt; 56  MULTIPOLYGON (((128.1141 37...\n#&gt; 57  MULTIPOLYGON (((126.951 37....\n#&gt; 58  MULTIPOLYGON (((127.2771 34...\n#&gt; 59  MULTIPOLYGON (((126.6855 37...\n#&gt; 60  MULTIPOLYGON (((128.9713 35...\n#&gt; 61  MULTIPOLYGON (((126.7994 37...\n#&gt; 62  MULTIPOLYGON (((127.111 37....\n#&gt; 63  MULTIPOLYGON (((126.5827 34...\n#&gt; 64  MULTIPOLYGON (((127.1202 36...\n#&gt; 65  MULTIPOLYGON (((127.8642 35...\n#&gt; 66  MULTIPOLYGON (((127.3613 36...\n#&gt; 67  MULTIPOLYGON (((127.3453 37...\n#&gt; 68  MULTIPOLYGON (((126.8954 37...\n#&gt; 69  MULTIPOLYGON (((125.1028 34...\n#&gt; 70  MULTIPOLYGON (((127.0832 37...\n#&gt; 71  MULTIPOLYGON (((127.0703 37...\n#&gt; 72  MULTIPOLYGON (((129.3805 36...\n#&gt; 73  MULTIPOLYGON (((126.9539 37...\n#&gt; 74  MULTIPOLYGON (((126.9817 37...\n#&gt; 75  MULTIPOLYGON (((128.5728 35...\n#&gt; 76  MULTIPOLYGON (((129.0817 35...\n#&gt; 77  MULTIPOLYGON (((126.9712 37...\n#&gt; 78  MULTIPOLYGON (((127.1317 37...\n#&gt; 79  MULTIPOLYGON (((127.6007 37...\n#&gt; 80  MULTIPOLYGON (((127.1809 37...\n#&gt; 81  MULTIPOLYGON (((127.0333 37...\n#&gt; 82  MULTIPOLYGON (((126.8955 37...\n#&gt; 83  MULTIPOLYGON (((126.916 37....\n#&gt; 84  MULTIPOLYGON (((127.0628 37...\n#&gt; 85  MULTIPOLYGON (((128.5572 35...\n#&gt; 86  MULTIPOLYGON (((127.1513 36...\n#&gt; 87  MULTIPOLYGON (((126.9564 37...\n#&gt; 88  MULTIPOLYGON (((128.4742 35...\n#&gt; 89  MULTIPOLYGON (((127.0245 37...\n#&gt; 90  MULTIPOLYGON (((128.2412 35...\n#&gt; 91  MULTIPOLYGON (((126.6678 37...\n#&gt; 92  MULTIPOLYGON (((128.9727 35...\n#&gt; 93  MULTIPOLYGON (((127.0257 37...\n#&gt; 94  MULTIPOLYGON (((127.9556 37...\n#&gt; 95  MULTIPOLYGON (((127.0566 37...\n#&gt; 96  MULTIPOLYGON (((127.4276 36...\n#&gt; 97  MULTIPOLYGON (((127.0704 35...\n#&gt; 98  MULTIPOLYGON (((127.2531 36...\n#&gt; 99  MULTIPOLYGON (((127.0834 37...\n#&gt; 100 MULTIPOLYGON (((127.9285 37...\n#&gt; 101 MULTIPOLYGON (((126.6948 37...\n#&gt; 102 MULTIPOLYGON (((129.1156 35...\n#&gt; 103 MULTIPOLYGON (((126.2142 36...\n#&gt; 104 MULTIPOLYGON (((127.0716 37...\n#&gt; 105 MULTIPOLYGON (((129.2529 35...\n#&gt; 106 MULTIPOLYGON (((125.9826 37...\n#&gt; 107 MULTIPOLYGON (((126.7987 37...\n#&gt; 108 MULTIPOLYGON (((126.9525 37...\n#&gt; 109 MULTIPOLYGON (((126.9308 33...\n#&gt; 110 MULTIPOLYGON (((127.252 37....\n#&gt; 111 MULTIPOLYGON (((129.0567 37...\n#&gt; 112 MULTIPOLYGON (((126.6032 35...\n#&gt; 113 MULTIPOLYGON (((129.0673 35...\n#&gt; 114 MULTIPOLYGON (((128.8752 35...\n#&gt; 115 MULTIPOLYGON (((127.1604 37...\n#&gt; 116 MULTIPOLYGON (((127.1235 35...\n#&gt; 117 MULTIPOLYGON (((129.0515 35...\n#&gt; 118 MULTIPOLYGON (((126.8903 36...\n#&gt; 119 MULTIPOLYGON (((126.9821 37...\n#&gt; 120 MULTIPOLYGON (((129.4381 35...\n#&gt; 121 MULTIPOLYGON (((127.401 36....\n#&gt; 122 MULTIPOLYGON (((129.016 35....\n#&gt; 123 MULTIPOLYGON (((128.4788 36...\n#&gt; 124 MULTIPOLYGON (((127.0875 36...\n#&gt; 125 MULTIPOLYGON (((126.9341 37...\n#&gt; 126 MULTIPOLYGON (((126.7761 37...\n#&gt; 127 MULTIPOLYGON (((128.3618 36...\n#&gt; 128 MULTIPOLYGON (((127.1224 37...\n#&gt; 129 MULTIPOLYGON (((127.0408 37...\n#&gt; 130 MULTIPOLYGON (((128.5307 35...\n#&gt; 131 MULTIPOLYGON (((128.1308 35...\n#&gt; 132 MULTIPOLYGON (((126.9152 37...\n#&gt; 133 MULTIPOLYGON (((127.3898 36...\n#&gt; 134 MULTIPOLYGON (((126.969 37....\n#&gt; 135 MULTIPOLYGON (((126.9131 37...\n#&gt; 136 MULTIPOLYGON (((127.6245 36...\n#&gt; 137 MULTIPOLYGON (((126.5683 37...\n#&gt; 138 MULTIPOLYGON (((128.3588 35...\n#&gt; 139 MULTIPOLYGON (((128.7233 35...\n#&gt; 140 MULTIPOLYGON (((128.6939 35...\n#&gt; 141 MULTIPOLYGON (((127.0504 37...\n#&gt; 142 MULTIPOLYGON (((126.7917 37...\n#&gt; 143 MULTIPOLYGON (((127.5051 36...\n#&gt; 144 MULTIPOLYGON (((127.5652 36...\n#&gt; 145 MULTIPOLYGON (((127.3636 37...\n#&gt; 146 MULTIPOLYGON (((127.001 37....\n#&gt; 147 MULTIPOLYGON (((126.7384 37...\n#&gt; 148 MULTIPOLYGON (((127.1458 37...\n#&gt; 149 MULTIPOLYGON (((126.4529 37...\n#&gt; 150 MULTIPOLYGON (((126.8559 35...\n#&gt; 151 MULTIPOLYGON (((127.4402 36...\n#&gt; 152 MULTIPOLYGON (((127.1498 37...\n#&gt; 153 MULTIPOLYGON (((126.9942 35...\n#&gt; 154 MULTIPOLYGON (((129.1103 35...\n#&gt; 155 MULTIPOLYGON (((127.1211 37...\n#&gt; 156 MULTIPOLYGON (((127.1758 37...\n#&gt; 157 MULTIPOLYGON (((128.584 35....\n#&gt; 158 MULTIPOLYGON (((129.0665 35...\n#&gt; 159 MULTIPOLYGON (((126.8408 35...\n#&gt; 160 MULTIPOLYGON (((129.354 35....\n#&gt; 161 MULTIPOLYGON (((128.0516 35...\n#&gt; 162 MULTIPOLYGON (((129.1945 35...\n#&gt; 163 MULTIPOLYGON (((126.9173 37...\n#&gt; 164 MULTIPOLYGON (((126.8057 37...\n#&gt; 165 MULTIPOLYGON (((128.6913 35...\n#&gt; 166 MULTIPOLYGON (((127.0022 37...\n#&gt; 167 MULTIPOLYGON (((126.8993 35...\n#&gt; 168 MULTIPOLYGON (((128.6542 35...\n#&gt; 169 MULTIPOLYGON (((127.1138 37...\n#&gt; 170 MULTIPOLYGON (((128.7229 35...\n#&gt; 171 MULTIPOLYGON (((126.8585 37...\n#&gt; 172 MULTIPOLYGON (((128.7434 36...\n#&gt; 173 MULTIPOLYGON (((127.0832 37...\n#&gt; 174 MULTIPOLYGON (((127.5192 34...\n#&gt; 175 MULTIPOLYGON (((128.3826 36...\n#&gt; 176 MULTIPOLYGON (((126.8984 37...\n#&gt; 177 MULTIPOLYGON (((127.0662 37...\n#&gt; 178 MULTIPOLYGON (((128.4361 34...\n#&gt; 179 MULTIPOLYGON (((126.761 37....\n#&gt; 180 MULTIPOLYGON (((126.8001 37...\n#&gt; 181 MULTIPOLYGON (((126.8237 37...\n#&gt; 182 MULTIPOLYGON (((127.1944 37...\n#&gt; 183 MULTIPOLYGON (((127.0827 36...\n#&gt; 184 MULTIPOLYGON (((126.2964 34...\n#&gt; 185 MULTIPOLYGON (((129.3703 36...\n#&gt; 186 MULTIPOLYGON (((127.0899 37...\n#&gt; 187 MULTIPOLYGON (((128.6719 35...\n#&gt; 188 MULTIPOLYGON (((126.9461 36...\n#&gt; 189 MULTIPOLYGON (((126.6503 37...\n#&gt; 190 MULTIPOLYGON (((127.1577 37...\n#&gt; 191 MULTIPOLYGON (((127.1009 37...\n#&gt; 192 MULTIPOLYGON (((127.4834 36...\n#&gt; 193 MULTIPOLYGON (((128.5682 35...\n#&gt; 194 MULTIPOLYGON (((129.0494 35...\n#&gt; 195 MULTIPOLYGON (((126.2458 35...\n#&gt; 196 MULTIPOLYGON (((128.9877 35...\n#&gt; 197 MULTIPOLYGON (((127.1438 37...\n#&gt; 198 MULTIPOLYGON (((127.1887 37...\n#&gt; 199 MULTIPOLYGON (((126.4693 37...\n#&gt; 200 MULTIPOLYGON (((126.7704 37...\n#&gt; 201 MULTIPOLYGON (((126.9963 37...\n#&gt; 202 MULTIPOLYGON (((129.3465 35...\n#&gt; 203 MULTIPOLYGON (((127.0923 37...\n#&gt; 204 MULTIPOLYGON (((128.7476 37...\n#&gt; 205 MULTIPOLYGON (((126.827 37....\n#&gt; 206 MULTIPOLYGON (((126.8735 37...\n#&gt; 207 MULTIPOLYGON (((126.4823 35...\n#&gt; 208 MULTIPOLYGON (((126.8745 37...\n#&gt; 209 MULTIPOLYGON (((127.0385 37...\n#&gt; 210 MULTIPOLYGON (((126.9414 35...\n#&gt; 211 MULTIPOLYGON (((126.5399 37...\n#&gt; 212 MULTIPOLYGON (((126.9825 37...\n#&gt; 213 MULTIPOLYGON (((126.8004 35...\n#&gt; 214 MULTIPOLYGON (((126.751 37....\n#&gt; 215 MULTIPOLYGON (((127.1178 37...\n#&gt; 216 MULTIPOLYGON (((126.27 33.1...\n#&gt; 217 MULTIPOLYGON (((128.5041 35...\n#&gt; 218 MULTIPOLYGON (((126.8757 35...\n#&gt; 219 MULTIPOLYGON (((127.0486 36...\n#&gt; 220 MULTIPOLYGON (((126.6949 37...\n#&gt; 221 MULTIPOLYGON (((128.6186 35...\n#&gt; 222 MULTIPOLYGON (((127.8494 36...\n#&gt; 223 MULTIPOLYGON (((129.0633 35...\n#&gt; 224 MULTIPOLYGON (((128.8972 35...\n#&gt; 225 MULTIPOLYGON (((126.8322 35...\n#&gt; 226 MULTIPOLYGON (((126.7342 37...\n#&gt; 227 MULTIPOLYGON (((126.9943 35...\n#&gt; 228 MULTIPOLYGON (((128.4933 35...\n#&gt; 229 MULTIPOLYGON (((128.0633 34...\n#&gt; 230 MULTIPOLYGON (((126.9315 37...\n#&gt; 231 MULTIPOLYGON (((126.7913 37...\n#&gt; 232 MULTIPOLYGON (((126.1496 33...\n#&gt; 233 MULTIPOLYGON (((126.8635 37...\n#&gt; 234 MULTIPOLYGON (((126.8525 37...\n#&gt; 235 MULTIPOLYGON (((126.7096 37...\n#&gt; 236 MULTIPOLYGON (((128.1724 36...\n#&gt; 237 MULTIPOLYGON (((127.7464 37...\n#&gt; 238 MULTIPOLYGON (((126.3571 35...\n#&gt; 239 MULTIPOLYGON (((127.022 37....\n#&gt; 240 MULTIPOLYGON (((128.4126 37...\n#&gt; 241 MULTIPOLYGON (((126.8958 37...\n#&gt; 242 MULTIPOLYGON (((126.4408 36...\n#&gt; 243 MULTIPOLYGON (((127.1523 37...\n#&gt; 244 MULTIPOLYGON (((126.9102 37...\n#&gt; 245 MULTIPOLYGON (((126.5333 35...\n#&gt; 246 MULTIPOLYGON (((129.0268 35...\n#&gt; 247 MULTIPOLYGON (((131.8703 37...\n#&gt; 248 MULTIPOLYGON (((126.9621 37...\n#&gt; 249 MULTIPOLYGON (((127.2582 37...\n#&gt; 250 MULTIPOLYGON (((127.0021 37...\n#&gt; 251 MULTIPOLYGON (((127.0958 37...\n#&gt; 252 MULTIPOLYGON (((128.0385 36...\n#&gt; 253 MULTIPOLYGON (((129.3129 35...\n\n\n\n코드xfun::embed_file('data/precinct_nomination.xlsx')\n\nDownload precinct_nomination.xlsx"
  },
  {
    "objectID": "precinct.html#지도-시각화",
    "href": "precinct.html#지도-시각화",
    "title": "지도제작 대회",
    "section": "\n5.2 지도 시각화",
    "text": "5.2 지도 시각화\n민주당 후보와 공천유형에 대한 데이터 준비를 한 후에 공간정보 시각화를 위해서 지도데이터와 매핑 작업을 수행한 후에 전국과 수도권 지도를 결합시켜 시각화 결과물을 마무리한다.\n\n코드extrafont::loadfonts()\n\nprecinct_nomination_tbl &lt;- readxl::read_excel(\"data/precinct_nomination.xlsx\") \n\nprecinct_nomination_sf &lt;- left_join(precinct |&gt; select(SGG_Code, geometry), \n                                    precinct_nomination_tbl, by = \"SGG_Code\")\n\n\nnomination_type_gg &lt;- ggplot() +\n  geom_sf(data = precinct_nomination_sf, \n          aes(geometry = geometry, fill = 공천_유형)) +\n  theme_void(base_family = \"MaruBuri\") +\n  theme(legend.position = \"left\") +\n  scale_fill_manual(values = c(\"경선 공천\" = \"gray90\",\n                               \"단수 공천\" = \"red\",\n                               \"전략 공천\" = \"pink\",\n                               \"청년 경선 공천\" = \"black\")) +\n  labs(title = \"대한민국 제21대 국회의원 선거 더불어민주당 후보\",\n       caption = \"자료출처: 위키백과\")\n\n  \nmetro_bb &lt;- precinct_nomination_sf |&gt; \n  filter(SGG_1 == \"경기\") |&gt; st_bbox()\n\nmetro_nomination_type_gg &lt;- ggplot() +\n  geom_sf(data = precinct_nomination_sf |&gt; filter(SGG_1 %in% c(\"서울\", \"경기\")), \n          aes(geometry = geometry, fill = 공천_유형)) +\n  theme_void(base_family = \"MaruBuri\") + \n  coord_sf(xlim = c(metro_bb['xmin'], metro_bb['xmax']),\n           ylim = c(metro_bb['ymin'], metro_bb['ymax']), expand = FALSE) +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = c(\"경선 공천\" = \"gray90\",\n                               \"단수 공천\" = \"red\",\n                               \"전략 공천\" = \"pink\",\n                               \"청년 경선 공천\" = \"black\")) +\n    ggrepel::geom_text_repel(\n      data = precinct_nomination_sf |&gt; filter(SGG_1 %in% c(\"서울\", \"경기\")) |&gt; \n        mutate(SGG_3 = glue::glue(\"{ifelse(str_detect(공천_유형,'단수'), SGG_3, '')}\")),\n        aes(label = SGG_3, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf\n    ) \n\nlibrary(patchwork)\n\nnomination_type_final &lt;- nomination_type_gg + metro_nomination_type_gg +\n  plot_layout(widths = c(1, 2))\n\nnomination_type_final\n\n\n\n\n\n\n코드\n# ragg::agg_jpeg(\"images/민주당_후보_공천.jpeg\", \n#               width = 10, height = 7, units = \"in\", res = 600)\n# nomination_type_final\n# dev.off()"
  },
  {
    "objectID": "precinct.html#수도권",
    "href": "precinct.html#수도권",
    "title": "지도제작 대회",
    "section": "\n6.3 수도권",
    "text": "6.3 수도권\n\n코드metro_precinct &lt;- precinct |&gt; filter(SGG_1 %in% c(\"서울\", \"경기\", \"인천\"))\n\nmetro_precinct_cells &lt;-  calculate_grid(shape = metro_precinct, grid_type='hexagonal')\nmetro_precinct_hex &lt;- assign_polygons(metro_precinct, metro_precinct_cells)\n\n\nmetro_centroids_tbl &lt;- metro_precinct_hex |&gt; \n  st_centroid() |&gt; \n  st_coordinates() |&gt; \n  as_tibble() |&gt; \n  bind_cols(metro_precinct_hex |&gt; st_drop_geometry()) |&gt; \n  mutate(SGG_3 = str_remove(SGG_3, \"(서울)|(경기)|(인천)\\\\s+\"))\n\nseoul_boundary_hex &lt;- metro_precinct_hex |&gt;\n  filter(SGG_1 == \"서울\") |&gt; \n  st_buffer(0.01) |&gt; \n  st_union() %&gt;%\n  st_boundary() \n\nmetro_precinct_hex |&gt;\n  st_buffer(0.001) |&gt; \n  st_union() %&gt;%\n  st_boundary() %&gt;%\n  ggplot() +\n    geom_sf( lwd = 2 ) +\n    geom_sf(data = metro_precinct_hex, fill = \"transparent\") +\n    geom_sf(data = seoul_boundary_hex, color = \"blue\", fill = \"skyblue\", lwd = 3) +\n    geom_text(\n      data = metro_centroids_tbl,\n        aes(x = X, y = Y, label = SGG_3), size = 3\n    )"
  },
  {
    "objectID": "minju_nomination.html",
    "href": "minju_nomination.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "민주당 공천 유형과 선거결과를 결합시킨 데이터를 제작한다.\n\n코드library(tidyverse)\nlibrary(readxl)\nlibrary(gtExtras)\n\nminju_raw &lt;- read_excel(\"data/precinct_nomination.xlsx\")\n\nminju_raw &lt;- minju_raw |&gt; \n  rename(선거구 = SGG_2_x)\n  \nchongsun_raw &lt;- krvote::chongun_winner |&gt; \n  filter(cs_code == \"20200415\") |&gt; \n  ungroup() |&gt; \n  mutate(선거구 = glue::glue(\"{sido_name} {선거구명}\")) |&gt; \n  mutate(당선자 = str_extract(`성명(한자)`, '.*?(?=\\\\()'))\n\nminju_res &lt;- minju_raw |&gt; \n  left_join(chongsun_raw, by = \"선거구\")\n\nminju_tbl &lt;- minju_res |&gt; \n  select(sido_name, 선거구명, 후보자, 당선자, 득표수, 득표율, 공천_유형) |&gt; \n  mutate(민주당선 = ifelse(후보자 == 당선자, \"당선\", \"낙선\")) \n\nminju_tbl |&gt; \n  gt::gt()\n\n\n\n\n\n\nsido_name\n      선거구명\n      후보자\n      당선자\n      득표수\n      득표율\n      공천_유형\n      민주당선\n    \n\n\n대구광역시\n동구을\n이승천\n강대식\n66461\n60.33\n단수 공천\n낙선\n\n\n대구광역시\n중구남구\n이재용\n곽상도\n86470\n67.49\n단수 공천\n낙선\n\n\n경기도\n고양시갑\n문명순\n심상정\n56516\n39.38\n단수 공천\n낙선\n\n\n경기도\n안양시동안구을\n이재정\n이재정\n49736\n54.15\n경선 공천\n당선\n\n\n경상남도\n김해시을\n김정호\n김정호\n71634\n49.67\n경선 공천\n당선\n\n\n경기도\n수원시병\n김영진\n김영진\n50369\n53.07\n단수 공천\n당선\n\n\n인천광역시\n계양구을\n송영길\n송영길\n51821\n58.67\n단수 공천\n당선\n\n\n서울특별시\n동대문구갑\n안규백\n안규백\n51551\n52.72\n단수 공천\n당선\n\n\n전라남도\n순천시광양시곡성군구례군을\n서동용\n서동용\n92442\n64.75\n경선 공천\n당선\n\n\n충청남도\n천안시병\n이정문\n이정문\n43118\n48.01\n경선 공천\n당선\n\n\n부산광역시\n해운대구갑\n유영민\n하태경\n78971\n59.47\n단수 공천\n낙선\n\n\n울산광역시\n북구\n이상헌\n이상헌\n54215\n46.34\n경선 공천\n당선\n\n\n대전광역시\n유성구갑\n조승래\n조승래\n55463\n56.52\n단수 공천\n당선\n\n\n대전광역시\n서구갑\n박병석\n박병석\n74978\n55.58\n단수 공천\n당선\n\n\n경기도\n김포시갑\n김주영\n김주영\n58613\n52.88\n전략 공천\n당선\n\n\n인천광역시\n부평구을\n홍영표\n홍영표\n74264\n56.13\n단수 공천\n당선\n\n\n부산광역시\n북구강서구을\n최지은\n김도읍\n76054\n52.03\n전략 공천\n낙선\n\n\n광주광역시\n북구갑\n조오섭\n조오섭\n59011\n57.79\n경선 공천\n당선\n\n\n부산광역시\n남구갑\n강준석\n박수영\n43805\n53.57\n전략 공천\n낙선\n\n\n경기도\n화성시병\n권칠승\n권칠승\n88793\n64.45\n단수 공천\n당선\n\n\n서울특별시\n영등포구을\n김민석\n김민석\n47075\n50.26\n경선 공천\n당선\n\n\n전라남도\n여수시갑\n주철현\n주철현\n48410\n64.44\n경선 공천\n당선\n\n\n경상북도\n경주시\n정다은\n김석기\n77102\n52.67\n전략 공천\n낙선\n\n\n강원도\n원주시갑\n이광재\n이광재\n45224\n48.56\n경선 공천\n당선\n\n\n강원도\n춘천시철원군화천군양구군갑\n허영\n허영\n66932\n51.32\n경선 공천\n당선\n\n\n서울특별시\n서대문구을\n김영호\n김영호\n58328\n61.33\n단수 공천\n당선\n\n\n경기도\n파주시갑\n윤후덕\n윤후덕\n85058\n60.93\n경선 공천\n당선\n\n\n서울특별시\n강남구갑\n김성곤\n태구민\n60324\n58.4\n단수 공천\n낙선\n\n\n전라북도\n완주군진안군무주군장수군\n안호영\n안호영\n56998\n56.89\n경선 공천\n당선\n\n\n경기도\n구리시\n윤호중\n윤호중\n64668\n58.64\n단수 공천\n당선\n\n\n서울특별시\n중랑구을\n박홍근\n박홍근\n74131\n59.28\n단수 공천\n당선\n\n\n울산광역시\n남구을\n박성진\n김기현\n48933\n58.48\n경선 공천\n낙선\n\n\n서울특별시\n구로구갑\n이인영\n이인영\n75865\n53.92\n단수 공천\n당선\n\n\n전라북도\n전주시갑\n김윤덕\n김윤덕\n67849\n73.57\n경선 공천\n당선\n\n\n경기도\n안성시\n이규민\n이규민\n49721\n51.44\n경선 공천\n당선\n\n\n경기도\n고양시을\n한준호\n한준호\n80739\n52.47\n전략 공천\n당선\n\n\n서울특별시\n노원구갑\n고용진\n고용진\n53911\n56.78\n경선 공천\n당선\n\n\n서울특별시\n동대문구을\n장경태\n장경태\n55230\n54.54\n청년 경선 공천\n당선\n\n\n대구광역시\n북구갑\n이헌태\n양금희\n52916\n49.82\n단수 공천\n낙선\n\n\n경기도\n광명시갑\n임오경\n임오경\n43019\n47.66\n전략 공천\n당선\n\n\n전라북도\n남원시임실군순창군\n이강래\n이용호\n43118\n49.49\n경선 공천\n낙선\n\n\n부산광역시\n해운대구을\n윤준호\n김미애\n53900\n52.87\n단수 공천\n낙선\n\n\n제주특별자치도\n제주시을\n오영훈\n오영훈\n67206\n55.35\n경선 공천\n당선\n\n\n경기도\n성남시분당구갑\n김병관\n김은혜\n78134\n50.07\n경선 공천\n낙선\n\n\n대전광역시\n유성구을\n이상민\n이상민\n53785\n55.85\n경선 공천\n당선\n\n\n대전광역시\n서구을\n박범계\n박범계\n70708\n57.5\n단수 공천\n당선\n\n\n서울특별시\n도봉구갑\n인재근\n인재근\n50653\n54.02\n단수 공천\n당선\n\n\n경기도\n김포시을\n박상혁\n박상혁\n63193\n53.83\n경선 공천\n당선\n\n\n경기도\n수원시갑\n김승원\n김승원\n76875\n59.17\n경선 공천\n당선\n\n\n충청북도\n제천시단양군\n이후삼\n엄태영\n51174\n54.1\n경선 공천\n낙선\n\n\n경상남도\n창원시마산회원구\n하귀남\n윤한홍\n64581\n56.42\n단수 공천\n낙선\n\n\n부산광역시\n남구을\n박재호\n박재호\n41005\n50.5\n단수 공천\n당선\n\n\n경상남도\n거제시\n문상모\n서일준\n65746\n50.89\n경선 공천\n낙선\n\n\n전라남도\n여수시을\n김회재\n김회재\n55273\n71.58\n경선 공천\n당선\n\n\n대전광역시\n동구\n장철민\n장철민\n61345\n51.01\n경선 공천\n당선\n\n\n강원도\n원주시을\n송기헌\n송기헌\n48772\n53.88\n단수 공천\n당선\n\n\n경기도\n안양시동안구갑\n민병덕\n민병덕\n56345\n55.33\n경선 공천\n당선\n\n\n전라남도\n고흥군보성군장흥군강진군\n김승남\n김승남\n72772\n62.81\n경선 공천\n당선\n\n\n인천광역시\n연수구갑\n박찬대\n박찬대\n45479\n56.87\n단수 공천\n당선\n\n\n부산광역시\n사하구갑\n최인호\n최인호\n39875\n50\n단수 공천\n당선\n\n\n경기도\n파주시을\n박정\n박정\n48569\n54.33\n단수 공천\n당선\n\n\n서울특별시\n강남구을\n전현희\n박진\n51762\n50.94\n단수 공천\n낙선\n\n\n전라남도\n나주시화순군\n신정훈\n신정훈\n75586\n78.8\n경선 공천\n당선\n\n\n충청남도\n천안시을\n박완주\n박완주\n78223\n58.83\n단수 공천\n당선\n\n\n경상남도\n산청군함양군거창군합천군\n서필상\n김태호\n49123\n42.59\n단수 공천\n낙선\n\n\n세종특별자치시\n세종특별자치시갑\n홍성국\n홍성국\n55947\n56.45\n전략 공천\n당선\n\n\n경기도\n남양주시병\n김용민\n김용민\n71776\n50.08\n전략 공천\n당선\n\n\n서울특별시\n구로구을\n윤건영\n윤건영\n56065\n57.04\n전략 공천\n당선\n\n\n전라남도\n영암군무안군신안군\n서삼석\n서삼석\n74661\n76.96\n경선 공천\n당선\n\n\n경기도\n용인시병\n정춘숙\n정춘숙\n84492\n51.56\n경선 공천\n당선\n\n\n서울특별시\n노원구을\n우원식\n우원식\n71708\n62.67\n단수 공천\n당선\n\n\n경상북도\n군위군의성군청송군영덕군\n강부송\n김희국\n71532\n79.3\n단수 공천\n낙선\n\n\n경기도\n군포시\n이학영\n이학영\n91256\n57.41\n경선 공천\n당선\n\n\n서울특별시\n관악구갑\n유기홍\n유기홍\n83479\n55.92\n경선 공천\n당선\n\n\n대구광역시\n북구을\n홍의락\n김승수\n84378\n61.68\n단수 공천\n낙선\n\n\n부산광역시\n중구영도구\n김비오\n황보승희\n47436\n51.86\n경선 공천\n낙선\n\n\n경기도\n의왕시과천시\n이소영\n이소영\n58938\n43.38\n전략 공천\n당선\n\n\n경기도\n성남시분당구을\n김병욱\n김병욱\n68387\n47.94\n단수 공천\n당선\n\n\n경기도\n이천시\n김용진\n송석준\n56544\n51.99\n경선 공천\n낙선\n\n\n경기도\n포천시가평군\n이철휘\n최춘식\n54771\n50.25\n경선 공천\n낙선\n\n\n서울특별시\n도봉구을\n오기형\n오기형\n51756\n53.01\n경선 공천\n당선\n\n\n경기도\n동두천시연천군\n서동욱\n김성원\n38777\n53.61\n경선 공천\n낙선\n\n\n서울특별시\n동작구갑\n김병기\n김병기\n70290\n55.29\n경선 공천\n당선\n\n\n서울특별시\n중구성동구갑\n홍익표\n홍익표\n70387\n54.25\n단수 공천\n당선\n\n\n대구광역시\n서구\n윤선진\n김상훈\n66574\n67.43\n단수 공천\n낙선\n\n\n충청남도\n논산시계룡시금산군\n김종민\n김종민\n58319\n51.01\n경선 공천\n당선\n\n\n서울특별시\n마포구갑\n노웅래\n노웅래\n53160\n56\n경선 공천\n당선\n\n\n경상남도\n밀양시의령군함안군창녕군\n조성환\n조해진\n102210\n68\n단수 공천\n낙선\n\n\n서울특별시\n성북구갑\n김영배\n김영배\n82954\n60.9\n경선 공천\n당선\n\n\n경상남도\n진주시갑\n정영훈\n박대출\n60112\n54.75\n경선 공천\n낙선\n\n\n인천광역시\n연수구을\n정일영\n정일영\n52806\n41.78\n경선 공천\n당선\n\n\n부산광역시\n사하구을\n이상호\n조경태\n59042\n58.79\n경선 공천\n낙선\n\n\n서울특별시\n중구성동구을\n박성준\n박성준\n64071\n51.96\n전략 공천\n당선\n\n\n강원도\n춘천시철원군화천군양구군을\n정만호\n한기호\n43083\n52.07\n경선 공천\n낙선\n\n\n서울특별시\n강남구병\n김한규\n유경준\n70917\n65.38\n전략 공천\n낙선\n\n\n대전광역시\n대덕구\n박영순\n박영순\n47652\n49.39\n경선 공천\n당선\n\n\n전라북도\n전주시병\n김성주\n김성주\n104039\n66.65\n단수 공천\n당선\n\n\n세종특별자치시\n세종특별자치시을\n강준현\n강준현\n46002\n57.96\n경선 공천\n당선\n\n\n경기도\n수원시정\n박광온\n박광온\n79557\n57.42\n단수 공천\n당선\n\n\n강원도\n홍천군횡성군영월군평창군\n원경환\n유상범\n55975\n48.59\n단수 공천\n낙선\n\n\n인천광역시\n서구갑\n김교흥\n김교흥\n76072\n53.23\n단수 공천\n당선\n\n\n부산광역시\n수영구\n강윤경\n전봉민\n57959\n55.93\n단수 공천\n낙선\n\n\n충청남도\n서산시태안군\n조한기\n성일종\n66917\n52.69\n단수 공천\n낙선\n\n\n서울특별시\n노원구병\n김성환\n김성환\n55556\n53.15\n단수 공천\n당선\n\n\n부산광역시\n기장군\n최택용\n정동만\n42634\n49.63\n경선 공천\n낙선\n\n\n인천광역시\n중구강화군옹진군\n조택상\n배준영\n62484\n50.28\n단수 공천\n낙선\n\n\n경기도\n부천시정\n서영석\n서영석\n49552\n56.74\n경선 공천\n당선\n\n\n서울특별시\n관악구을\n정태호\n정태호\n72531\n53.9\n경선 공천\n당선\n\n\n전라남도\n해남군완도군진도군\n윤재갑\n윤재갑\n59613\n67.5\n경선 공천\n당선\n\n\n경기도\n광주시갑\n소병훈\n소병훈\n53221\n56.15\n경선 공천\n당선\n\n\n강원도\n강릉시\n김경수\n권성동\n49618\n40.84\n단수 공천\n낙선\n\n\n충청남도\n보령시서천군\n나소열\n김태흠\n46405\n50.86\n단수 공천\n낙선\n\n\n부산광역시\n연제구\n김해영\n이주환\n64640\n50.95\n단수 공천\n낙선\n\n\n경상북도\n경산시\n전상헌\n윤두현\n88684\n63.75\n경선 공천\n낙선\n\n\n서울특별시\n강동구갑\n진선미\n진선미\n80361\n51.5\n단수 공천\n당선\n\n\n전라북도\n전주시을\n이상직\n이상직\n67568\n62.54\n경선 공천\n당선\n\n\n부산광역시\n북구강서구갑\n전재수\n전재수\n48733\n50.58\n단수 공천\n당선\n\n\n충청남도\n공주시부여군청양군\n박수현\n정진석\n57487\n48.65\n단수 공천\n낙선\n\n\n서울특별시\n동작구을\n이수진\n이수진\n61407\n52.16\n전략 공천\n당선\n\n\n울산광역시\n동구\n김태선\n권명호\n33845\n38.36\n경선 공천\n낙선\n\n\n충청남도\n천안시갑\n문진석\n문진석\n45999\n49.34\n전략 공천\n당선\n\n\n부산광역시\n서구동구\n이재강\n안병길\n63855\n56.04\n경선 공천\n낙선\n\n\n경상북도\n구미시을\n김현권\n김영식\n54457\n56.43\n단수 공천\n낙선\n\n\n경기도\n평택시갑\n홍기원\n홍기원\n62564\n50.22\n경선 공천\n당선\n\n\n서울특별시\n마포구을\n정청래\n정청래\n69336\n53.75\n단수 공천\n당선\n\n\n경기도\n고양시병\n홍정민\n홍정민\n80068\n54.26\n전략 공천\n당선\n\n\n경상북도\n안동시예천군\n이삼걸\n김형동\n58183\n47.1\n단수 공천\n낙선\n\n\n서울특별시\n송파구갑\n조재희\n김웅\n58318\n51.2\n경선 공천\n낙선\n\n\n서울특별시\n성북구을\n기동민\n기동민\n70740\n59.36\n단수 공천\n당선\n\n\n대구광역시\n달서구갑\n권택흥\n홍석준\n54700\n57.61\n단수 공천\n낙선\n\n\n경상남도\n진주시을\n한경호\n강민국\n50217\n59.02\n단수 공천\n낙선\n\n\n서울특별시\n금천구\n최기상\n최기상\n64735\n49.63\n전략 공천\n당선\n\n\n충청북도\n청주시흥덕구\n도종환\n도종환\n74900\n55.8\n단수 공천\n당선\n\n\n서울특별시\n종로구\n이낙연\n이낙연\n54902\n58.38\n전략 공천\n당선\n\n\n서울특별시\n은평구갑\n박주민\n박주민\n86351\n64.29\n단수 공천\n당선\n\n\n충청북도\n증평군진천군음성군\n임호선\n임호선\n54126\n50.68\n단수 공천\n당선\n\n\n인천광역시\n서구을\n신동근\n신동근\n83671\n61.64\n단수 공천\n당선\n\n\n경상북도\n고령군성주군칠곡군\n장세호\n정희용\n65236\n62.71\n단수 공천\n낙선\n\n\n대구광역시\n수성구갑\n김부겸\n주호영\n92018\n59.81\n단수 공천\n낙선\n\n\n경상남도\n창원시의창구\n김기운\n박완수\n88718\n59.04\n경선 공천\n낙선\n\n\n경기도\n의정부시갑\n오영환\n오영환\n54806\n53.03\n전략 공천\n당선\n\n\n경기도\n부천시갑\n김경협\n김경협\n48002\n59.17\n단수 공천\n당선\n\n\n충청북도\n청주시청원구\n변재일\n변재일\n51028\n52.99\n단수 공천\n당선\n\n\n충청북도\n청주시상당구\n정정순\n정정순\n45707\n47.09\n경선 공천\n당선\n\n\n경기도\n광주시을\n임종성\n임종성\n52468\n56.88\n단수 공천\n당선\n\n\n경기도\n수원시을\n백혜련\n백혜련\n84500\n60.68\n단수 공천\n당선\n\n\n인천광역시\n남동구갑\n맹성규\n맹성규\n72773\n54.38\n단수 공천\n당선\n\n\n서울특별시\n강동구을\n이해식\n이해식\n59175\n54.54\n경선 공천\n당선\n\n\n충청남도\n당진시\n어기구\n어기구\n38535\n47.66\n경선 공천\n당선\n\n\n광주광역시\n서구갑\n송갑석\n송갑석\n69285\n82.18\n단수 공천\n당선\n\n\n대전광역시\n중구\n황운하\n황운하\n66306\n50.3\n경선 공천\n당선\n\n\n경기도\n용인시을\n김민기\n김민기\n89697\n60.08\n단수 공천\n당선\n\n\n전라북도\n익산시을\n한병도\n한병도\n56982\n72.59\n경선 공천\n당선\n\n\n부산광역시\n금정구\n박무성\n백종헌\n77048\n54.19\n경선 공천\n낙선\n\n\n서울특별시\n송파구을\n최재성\n배현진\n72072\n50.46\n단수 공천\n낙선\n\n\n경기도\n하남시\n최종윤\n최종윤\n76572\n50.77\n경선 공천\n당선\n\n\n대구광역시\n달서구을\n허소\n윤재옥\n90762\n65.36\n경선 공천\n낙선\n\n\n부산광역시\n동래구\n박성현\n김희곤\n81722\n51.85\n단수 공천\n낙선\n\n\n광주광역시\n광산구을\n민형배\n민형배\n96808\n84.05\n경선 공천\n당선\n\n\n울산광역시\n중구\n임동호\n박성민\n69359\n54.04\n경선 공천\n낙선\n\n\n경상북도\n김천시\n배영애\n송언석\n59993\n74.52\n단수 공천\n낙선\n\n\n경상남도\n양산시을\n김두관\n김두관\n44218\n48.94\n전략 공천\n당선\n\n\n서울특별시\n은평구을\n강병원\n강병원\n78897\n57.41\n경선 공천\n당선\n\n\n경기도\n안산시단원구갑\n고영인\n고영인\n42009\n55.74\n경선 공천\n당선\n\n\n경상북도\n영천시청도군\n정우동\n이만희\n57580\n64.63\n단수 공천\n낙선\n\n\n서울특별시\n서초구갑\n이정근\n윤희숙\n72896\n62.6\n단수 공천\n낙선\n\n\n광주광역시\n동구남구갑\n윤영덕\n윤영덕\n71626\n77.23\n경선 공천\n당선\n\n\n대구광역시\n수성구을\n이상식\n홍준표\n40015\n38.51\n단수 공천\n낙선\n\n\n서울특별시\n광진구갑\n전혜숙\n전혜숙\n56608\n53.68\n단수 공천\n당선\n\n\n경상남도\n창원시성산구\n이흥석\n강기윤\n61782\n47.3\n단수 공천\n낙선\n\n\n서울특별시\n강서구갑\n강선우\n강선우\n63397\n55.89\n경선 공천\n당선\n\n\n경상북도\n영주시영양군봉화군울진군\n황재선\n박형수\n68026\n55.83\n경선 공천\n낙선\n\n\n경기도\n의정부시을\n김민철\n김민철\n71573\n55.98\n경선 공천\n당선\n\n\n전라남도\n순천시광양시곡성군구례군갑\n소병철\n소병철\n78480\n58.56\n전략 공천\n당선\n\n\n경상북도\n구미시갑\n김철호\n구자근\n73339\n65.57\n경선 공천\n낙선\n\n\n경기도\n안산시상록구갑\n전해철\n전해철\n59021\n58.55\n단수 공천\n당선\n\n\n경기도\n수원시무\n김진표\n김진표\n82002\n55.21\n단수 공천\n당선\n\n\n경상남도\n통영시고성군\n양문석\n정점식\n60314\n58.34\n단수 공천\n낙선\n\n\n인천광역시\n남동구을\n윤관석\n윤관석\n78795\n54.57\n단수 공천\n당선\n\n\n경기도\n부천시병\n김상희\n김상희\n77577\n60.55\n단수 공천\n당선\n\n\n경기도\n시흥시갑\n문정복\n문정복\n68653\n51.71\n경선 공천\n당선\n\n\n경기도\n성남시중원구\n윤영찬\n윤영찬\n65947\n54.62\n경선 공천\n당선\n\n\n경기도\n평택시을\n김현정\n유의동\n59491\n47.67\n전략 공천\n낙선\n\n\n전라남도\n목포시\n김원이\n김원이\n62065\n48.76\n경선 공천\n당선\n\n\n경상북도\n포항시북구\n오중기\n김정재\n98905\n64.78\n단수 공천\n낙선\n\n\n경기도\n용인시정\n이탄희\n이탄희\n79794\n53.46\n전략 공천\n당선\n\n\n경상남도\n창원시진해구\n황기철\n이달곤\n52000\n50.22\n단수 공천\n낙선\n\n\n충청남도\n아산시갑\n복기왕\n이명수\n38167\n49.82\n단수 공천\n낙선\n\n\n인천광역시\n동구미추홀구갑\n허종식\n허종식\n63480\n48.77\n단수 공천\n당선\n\n\n서울특별시\n송파구병\n남인순\n남인순\n78789\n52.49\n단수 공천\n당선\n\n\n경기도\n오산시\n안민석\n안민석\n61926\n56.71\n단수 공천\n당선\n\n\n충청북도\n청주시서원구\n이장섭\n이장섭\n54118\n49.86\n경선 공천\n당선\n\n\n대구광역시\n달서구병\n김대진\n김용판\n46988\n55.79\n단수 공천\n낙선\n\n\n부산광역시\n부산진구갑\n김영춘\n서병수\n52037\n48.51\n단수 공천\n낙선\n\n\n전라북도\n김제시부안군\n이원택\n이원택\n51981\n66.68\n단수 공천\n당선\n\n\n부산광역시\n사상구\n배재정\n장제원\n66353\n52.03\n단수 공천\n낙선\n\n\n경기도\n남양주시을\n김한정\n김한정\n68660\n59.08\n경선 공천\n당선\n\n\n경기도\n용인시갑\n오세영\n정찬민\n69826\n53.14\n경선 공천\n낙선\n\n\n경기도\n안산시단원구을\n김남국\n김남국\n42150\n51.32\n전략 공천\n당선\n\n\n경기도\n부천시을\n설훈\n설훈\n80889\n54.9\n경선 공천\n당선\n\n\n서울특별시\n서초구을\n박경미\n박성중\n74445\n53.66\n경선 공천\n낙선\n\n\n울산광역시\n울주군\n김영문\n서범수\n66317\n52.74\n단수 공천\n낙선\n\n\n서울특별시\n광진구을\n고민정\n고민정\n54210\n50.37\n전략 공천\n당선\n\n\n강원도\n동해시태백시삼척시정선군\n김동완\n이철규\n71604\n53.6\n경선 공천\n낙선\n\n\n서울특별시\n강서구을\n진성준\n진성준\n66684\n56.15\n단수 공천\n당선\n\n\n서울특별시\n양천구갑\n황희\n황희\n78196\n51.85\n단수 공천\n당선\n\n\n전라북도\n정읍시고창군\n윤준병\n윤준병\n65082\n69.78\n단수 공천\n당선\n\n\n경기도\n안산시상록구을\n김철민\n김철민\n43599\n57.77\n단수 공천\n당선\n\n\n서울특별시\n강북구갑\n천준호\n천준호\n49490\n57.75\n경선 공천\n당선\n\n\n전라북도\n익산시갑\n김수흥\n김수흥\n59043\n79.63\n경선 공천\n당선\n\n\n경기도\n화성시갑\n송옥주\n송옥주\n58689\n49.65\n경선 공천\n당선\n\n\n서울특별시\n용산구\n강태웅\n권영세\n63891\n47.8\n전략 공천\n낙선\n\n\n광주광역시\n광산구갑\n이용빈\n이용빈\n67482\n77.77\n단수 공천\n당선\n\n\n경기도\n고양시정\n이용우\n이용우\n85943\n53.42\n전략 공천\n당선\n\n\n경기도\n성남시수정구\n김태년\n김태년\n76830\n60.31\n단수 공천\n당선\n\n\n제주특별자치도\n서귀포시\n위성곤\n위성곤\n53345\n55.48\n단수 공천\n당선\n\n\n대구광역시\n달성군\n박형룡\n추경호\n88846\n67.33\n경선 공천\n낙선\n\n\n광주광역시\n북구을\n이형석\n이형석\n108229\n78.82\n경선 공천\n당선\n\n\n충청남도\n아산시을\n강훈식\n강훈식\n45338\n59.71\n단수 공천\n당선\n\n\n인천광역시\n동구미추홀구을\n남영희\n윤상현\n46493\n40.59\n경선 공천\n낙선\n\n\n대구광역시\n동구갑\n서재헌\n류성걸\n56444\n69.59\n단수 공천\n낙선\n\n\n충청북도\n보은군옥천군영동군괴산군\n곽상언\n박덕흠\n58490\n56.88\n경선 공천\n낙선\n\n\n부산광역시\n부산진구을\n류영진\n이헌승\n55754\n55.03\n경선 공천\n낙선\n\n\n경상남도\n김해시갑\n민홍철\n민홍철\n70094\n51.06\n단수 공천\n당선\n\n\n광주광역시\n서구을\n양향자\n양향자\n61279\n75.83\n경선 공천\n당선\n\n\n인천광역시\n계양구갑\n유동수\n유동수\n44469\n60.48\n단수 공천\n당선\n\n\n광주광역시\n동구남구을\n이병훈\n이병훈\n61587\n72.27\n경선 공천\n당선\n\n\n경상남도\n창원시마산합포구\n박남현\n최형두\n64706\n62.96\n경선 공천\n낙선\n\n\n경상남도\n사천시남해군하동군\n황인성\n하영제\n71620\n59.59\n단수 공천\n낙선\n\n\n경기도\n안양시만안구\n강득구\n강득구\n75266\n53.6\n경선 공천\n당선\n\n\n경기도\n시흥시을\n조정식\n조정식\n69270\n67.02\n단수 공천\n당선\n\n\n제주특별자치도\n제주시갑\n송재호\n송재호\n61626\n48.7\n전략 공천\n당선\n\n\n서울특별시\n강서구병\n한정애\n한정애\n64515\n59.92\n단수 공천\n당선\n\n\n서울특별시\n양천구을\n이용선\n이용선\n66759\n57.54\n단수 공천\n당선\n\n\n인천광역시\n부평구갑\n이성만\n이성만\n77460\n56.68\n경선 공천\n당선\n\n\n경상북도\n상주시문경시\n정용운\n임이자\n65558\n64.8\n단수 공천\n낙선\n\n\n경기도\n여주시양평군\n최재관\n김선교\n70575\n54.97\n경선 공천\n낙선\n\n\n전라남도\n담양군함평군영광군장성군\n이개호\n이개호\n86315\n81.95\n단수 공천\n당선\n\n\n서울특별시\n강북구을\n박용진\n박용진\n57013\n64.45\n단수 공천\n당선\n\n\n강원도\n속초시인제군고성군양양군\n이광재\n이양수\n50188\n52.56\n경선 공천\n낙선\n\n\n경기도\n광명시을\n양기대\n양기대\n58130\n64.09\n경선 공천\n당선\n\n\n충청남도\n홍성군예산군\n김학민\n홍문표\n51997\n53.95\n경선 공천\n낙선\n\n\n경기도\n화성시을\n이원욱\n이원욱\n98612\n64.53\n단수 공천\n당선\n\n\n서울특별시\n영등포구갑\n김영주\n김영주\n72445\n56.26\n단수 공천\n당선\n\n\n전라북도\n군산시\n신영대\n신영대\n88857\n59.24\n단수 공천\n당선\n\n\n경상남도\n양산시갑\n이재영\n윤영석\n57301\n56.99\n전략 공천\n낙선\n\n\n경상북도\n포항시남구울릉군\n허대만\n김병욱\n74794\n55.83\n단수 공천\n낙선\n\n\n서울특별시\n서대문구갑\n우상호\n우상호\n47980\n53.24\n단수 공천\n당선\n\n\n경기도\n남양주시갑\n조응천\n조응천\n59779\n57.95\n경선 공천\n당선\n\n\n경기도\n양주시\n정성호\n정성호\n69905\n62.64\n단수 공천\n당선\n\n\n서울특별시\n중랑구갑\n서영교\n서영교\n55185\n57.76\n경선 공천\n당선\n\n\n충청북도\n충주시\n김경욱\n이종배\n59667\n52.25\n단수 공천\n낙선\n\n\n울산광역시\n남구갑\n심규명\n이채익\n55252\n53.4\n경선 공천\n낙선"
  },
  {
    "objectID": "minju_nomination.html#선거결과",
    "href": "minju_nomination.html#선거결과",
    "title": "지도제작 대회",
    "section": "\n2.1 선거결과",
    "text": "2.1 선거결과\n\n코드library(gt)\n\nminju_tbl |&gt; \n  count(민주당선, name = \"의원수\") |&gt; \n  rename(구분 = 민주당선) |&gt; \n  arrange(desc(의원수)) |&gt;   \n  mutate(비율 = 의원수 / sum(의원수)) |&gt;   \n  janitor::adorn_totals(\"row\", name = \"합계\") |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  tab_header(\n    title = md(\"민주당 후보 당선자수 및 비율\"),\n    subtitle = md(\"제21대 국회의원 선거\")\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 구분 == \"당선\"\n    )\n  )\n\n\n\n\n\n\n\n민주당 후보 당선자수 및 비율\n    \n\n제21대 국회의원 선거\n    \n\n구분\n      의원수\n      비율\n    \n\n\n\n당선\n163\n64.4%\n\n\n낙선\n90\n35.6%\n\n\n합계\n253\n100.0%"
  },
  {
    "objectID": "minju_nomination.html#공천-유형별",
    "href": "minju_nomination.html#공천-유형별",
    "title": "지도제작 대회",
    "section": "\n2.2 공천 유형별",
    "text": "2.2 공천 유형별\n공천 유형별 민주당 후보 당선율을 표로 표현하면 다음과 같다.\n\n코드win_type_gt &lt;- minju_tbl |&gt; \n  count(민주당선, 공천_유형, name = \"후보수\") |&gt; \n  pivot_wider(names_from = 민주당선, values_from = 후보수, values_fill = 0) |&gt; \n  mutate(합계 = 낙선 + 당선) |&gt;   \n  janitor::adorn_totals(\"row\", name = \"합계\") |&gt; \n  mutate(당선율 = 당선/(당선+낙선)) |&gt; \n  relocate(당선, .before = 낙선) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  fmt_percent(columns = 당선율, decimals = 1) |&gt; \n  tab_header(\n    title = md(\"공천 유형별 민주당 후보 선거 결과\"),\n    subtitle = md(\"제21대 국회의원 선거\")\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(size = \"medidum\", weight = \"bold\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"합계\"\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"선거 통계\",\n    columns = c(\n      당선, 낙선, 합계\n    )\n  )\n\nwin_type_gt\n\n\n\n\n\n\n\n공천 유형별 민주당 후보 선거 결과\n    \n\n제21대 국회의원 선거\n    \n\n공천_유형\n      \n        선거 통계\n      \n      당선율\n    \n\n당선\n      낙선\n      합계\n    \n\n\n\n경선 공천\n71\n35\n106\n67.0%\n\n\n단수 공천\n70\n48\n118\n59.3%\n\n\n전략 공천\n21\n7\n28\n75.0%\n\n\n청년 경선 공천\n1\n0\n1\n100.0%\n\n\n합계\n163\n90\n253\n64.4%\n\n\n\n\n\n코드\nwin_type_gt |&gt;\n  gtsave(filename = \"images/win_type_gt.png\")"
  },
  {
    "objectID": "minju_nomination.html#권역별-공천-유형별",
    "href": "minju_nomination.html#권역별-공천-유형별",
    "title": "지도제작 대회",
    "section": "\n2.3 권역별, 공천 유형별",
    "text": "2.3 권역별, 공천 유형별\n공천 유형별 / 권역별 민주당 후보 당선율을 표로 표현하면 다음과 같다.\n\n코드\nregion_type_gt &lt;- minju_tbl |&gt; \n  mutate(권역 = case_when(sido_name %in% c(\"서울특별시\", \"경기도\", \"인천광역시\") ~ \"수도권\",\n                          sido_name %in% c(\"부산광역시\", \"대구광역시\", \"경상남도\",\n                                           \"경상북도\", \"울산광역시\") ~ \"대구경북 부울경\",\n                          TRUE ~ \"그외 권역\")   \n         ) |&gt; \n  mutate(권역 = factor(권역, levels = c(\"수도권\", \"그외 권역\", \"대구경북 부울경\"))) |&gt;\n  # filter(!str_detect(공천_유형, \"청년\")) |&gt; \n  count(민주당선, 공천_유형, 권역, name = \"후보수\") |&gt; \n  pivot_wider(names_from = 민주당선, values_from = 후보수, values_fill = 0) |&gt; \n  mutate(합계 = 낙선 + 당선) |&gt;   \n  janitor::adorn_totals(\"row\", name = \"합계\") |&gt; \n  mutate(당선율 = 당선/(당선+낙선)) |&gt; \n  relocate(당선, .before = 낙선) |&gt; \n  filter(공천_유형 != \"합계\") |&gt; \n  # filter(권역 == \"수도권\") |&gt; \n  # filter(권역 == \"대구경북+부울경\") |&gt;\n  # filter(권역 == \"그외 권역\") |&gt;   \n  # arrange(권역) |&gt; \n  gt(groupname_col = \"권역\", rowname_col = \"공천_유형\") |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  fmt_percent(columns = 당선율, decimals = 1) |&gt; \n  tab_header(\n    title = md(\"권역별 공천유형 민주당 후보 선거 결과\"),\n    subtitle = md(\"제21대 국회의원 선거\")\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"gray85\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\"\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(size = \"medidum\", weight = \"bold\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"합계\"\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"선거 통계\",\n    columns = c(\n      당선, 낙선, 합계\n    )\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(당선, 낙선, 합계),\n    fns =  list(label = \"합계\", id = \"권역\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt;\n  grand_summary_rows(\n    columns = 당선율,\n    fns =  list(label = \"합계\", id = \"권역\", fn = \"mean\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt;\n  ## 표 부분 합계 -------------------------------------\n  summary_rows(\n    # groups = TRUE,\n    columns = c(당선, 낙선, 합계),\n    fns = list(권역합계 = ~ sum(.))\n  ) |&gt; \n  summary_rows(\n    # groups = TRUE,\n    columns = c(당선율),\n    fns = list(권역합계 = ~ mean(.)),\n    fmt = ~ fmt_percent(., decimals = 0)\n  ) |&gt; \n  ## 강조 -------------------------------------  \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\" & 권역 == \"수도권\",\n      columns  = 당선율\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 공천_유형 == \"단수 공천\" & 권역 == \"대구경북 부울경\",\n      columns  = 당선율\n    )\n  ) \n  \nregion_type_gt\n\n\n\n\n\n\n\n권역별 공천유형 민주당 후보 선거 결과\n    \n\n제21대 국회의원 선거\n    \n\n\n      \n        선거 통계\n      \n      당선율\n    \n\n당선\n      낙선\n      합계\n    \n\n\n\n합계\n163\n90\n253\n65%\n\n\n수도권\n    \n\n경선 공천\n37\n9\n46\n80.4%\n\n\n단수 공천\n49\n6\n55\n89.1%\n\n\n전략 공천\n16\n3\n19\n84.2%\n\n\n청년 경선 공천\n1\n0\n1\n100.0%\n\n\n권역합계\n103\n18\n121\n88%\n\n\n그외 권역\n    \n\n경선 공천\n32\n7\n39\n82.1%\n\n\n단수 공천\n17\n7\n24\n70.8%\n\n\n전략 공천\n4\n0\n4\n100.0%\n\n\n권역합계\n53\n14\n67\n84%\n\n\n대구경북 부울경\n    \n\n경선 공천\n2\n19\n21\n9.5%\n\n\n단수 공천\n4\n35\n39\n10.3%\n\n\n전략 공천\n1\n4\n5\n20.0%\n\n\n권역합계\n7\n58\n65\n13%\n\n\n\n\n\n코드\nregion_type_gt |&gt;\n  gtsave(filename = \"images/region_type_gt.png\")"
  },
  {
    "objectID": "electorate.html",
    "href": "electorate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "제21대 국회의원 선거/선거구 획정\n제20대 국회의원 선거/선거구 획정\n\n\n\n코드# 0. packages -------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\n\n# 1. data -----------------------------------------------------------------\nurl &lt;- \"https://namu.wiki/w/%EC%A0%9C21%EB%8C%80%20%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90%20%EC%84%A0%EA%B1%B0/%EC%84%A0%EA%B1%B0%EA%B5%AC%20%ED%9A%8D%EC%A0%95\"\n\nsido_names &lt;- read_html(url) |&gt; \n  html_nodes(\"h3\") |&gt; \n  html_text()\n\nsido_tbl &lt;- sido_names |&gt; \n  enframe() |&gt; \n  separate(value, into = c(\"index\", \"시도명\", \"의석수\"), sep = \" \") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  select(시도명, 의석수)\n\nsido_tbl\n\nsido_numbers &lt;- sido_tbl |&gt; \n pull(의석수)\n\n## 1.2. 시도 인구수-----------------------------------------------------------------\n\nsido_raw &lt;- read_html(url) |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table(header = TRUE)\n\nsido_pop &lt;- sido_raw |&gt; \n  enframe() |&gt; \n  mutate(ncol = map_int(value, ncol),\n         nrow = map_int(value, nrow)) |&gt; \n  filter(ncol == 4) |&gt; \n  mutate(check = ifelse(nrow %in% sido_numbers, TRUE, FALSE)) |&gt; \n  filter(check) |&gt; \n  mutate(names = map(value, names)) |&gt; \n  mutate(names = map_chr(names, paste0, collapse=\" \")) |&gt; \n  filter(str_detect(names, \"변동 인구\")) |&gt; \n  select(value) \n\n## 1.3. 결합-----------------------------------------------------------------\n\npop_tbl &lt;- bind_cols(sido_tbl, sido_pop) |&gt; \n  unnest(value) |&gt; \n  rename(인구수 =  `인구[A]`) |&gt; \n  mutate(인구수 = parse_number(인구수)) |&gt; \n  mutate(선거구 = str_remove(선거구, \"\\\\[\\\\d{1,3}\\\\]\"))  \n\npop_tbl |&gt; \n  write_csv(\"data/제21대총선_선거구_획정.csv\")\n\n\n\n\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_csv(\"data/제21대총선_선거구_획정.csv\")\n\npop_tbl |&gt; \n  mutate(변동여부 = ifelse(is.na(변동), \"없음\", \"변동\")) |&gt; \n  count(변동여부, name = \"선거구수\") |&gt; \n  mutate(비율 = 선거구수 / sum(선거구수)) |&gt; \n  janitor::adorn_totals(name = \"합계\")\n#&gt;  변동여부 선거구수      비율\n#&gt;      변동       45 0.1778656\n#&gt;      없음      208 0.8221344\n#&gt;      합계      253 1.0000000\n\n\n\n\n코드pop_tbl |&gt; \n  mutate(변동여부 = ifelse(is.na(변동), \"미변동\", \"변동\")) |&gt; \n  count(시도명, 변동여부, name = \"선거구수\") |&gt; \n  pivot_wider(names_from = 변동여부, values_from = 선거구수, values_fill = 0) |&gt; \n  mutate(총선거구 = 변동 + 미변동) |&gt; \n  mutate(변동비율 = 변동 / 총선거구) |&gt; \n  arrange(desc(변동비율))\n#&gt; # A tibble: 17 × 5\n#&gt;    시도명         미변동  변동 총선거구 변동비율\n#&gt;    &lt;chr&gt;           &lt;int&gt; &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n#&gt;  1 세종특별자치시      0     2        2    1    \n#&gt;  2 강원도              3     5        8    0.625\n#&gt;  3 전라남도            6     4       10    0.4  \n#&gt;  4 인천광역시          8     5       13    0.385\n#&gt;  5 경상북도            9     4       13    0.308\n#&gt;  6 경기도             41    18       59    0.305\n#&gt;  7 전라북도            7     3       10    0.3  \n#&gt;  8 경상남도           14     2       16    0.125\n#&gt;  9 부산광역시         16     2       18    0.111\n#&gt; 10 광주광역시          8     0        8    0    \n#&gt; 11 대구광역시         12     0       12    0    \n#&gt; 12 대전광역시          7     0        7    0    \n#&gt; 13 서울특별시         49     0       49    0    \n#&gt; 14 울산광역시          6     0        6    0    \n#&gt; 15 제주특별자치도      3     0        3    0    \n#&gt; 16 충청남도           11     0       11    0    \n#&gt; 17 충청북도            8     0        8    0"
  },
  {
    "objectID": "electorate.html#선거구수-및-정수-현황",
    "href": "electorate.html#선거구수-및-정수-현황",
    "title": "지도제작 대회",
    "section": "\n2.1 선거구수 및 정수 현황",
    "text": "2.1 선거구수 및 정수 현황\n\n코드library(tidyverse)\n\nelection_cd &lt;- tribble(~\"선거코드\", ~\"선거명\",\n         \"20200415\", \"제21대\",\n         \"20160413\", \"제20대\",\n         \"20120411\", \"제19대\",\n         \"20080409\", \"제18대\",\n         \"20040415\", \"제17대\")\n\nelection_cd |&gt; \n  gt::gt()\n\n\n\n\n\n\n선거코드\n      선거명\n    \n\n\n20200415\n제21대\n\n\n20160413\n제20대\n\n\n20120411\n제19대\n\n\n20080409\n제18대\n\n\n20040415\n제17대"
  },
  {
    "objectID": "electorate.html#제21대-총선",
    "href": "electorate.html#제21대-총선",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 총선",
    "text": "2.2 제21대 총선\n\n코드library(httr)\nlibrary(rvest)\n\nreq_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?electionId=0000000000\",\n           \"&requestURI=%2Felectioninfo%2F0000000000%2Fbi%2Fbigi01.jsp\",             \n           \"&topMenuId=BI\",\n           \"&secondMenuId=BIGI01\", \n           \"&menuId=BIGI01\", \n           \"&statementId=BIGI02\",\n           \"&oldElectionType=\", \n           \"&electionType=2\",\n           \"&electionName=20200415\",\n           \"&electionCode=-1\",\n           \"&x=73\", \n           \"&y=20\")\n\nresp &lt;- httr::GET(req_url)\n\nresp_lst &lt;- content(resp) |&gt; \n  html_table()\n\nprecinct &lt;- resp_lst[[1]] |&gt; \n  janitor::clean_names() |&gt; \n  select(1:3) |&gt; \n  set_names(c(\"시도명\", \"선거구수\", \"정수\")) |&gt; \n  slice(4:n()) \n\nprecinct |&gt; \n  gt::gt()\n\n\n\n\n\n\n시도명\n      선거구수\n      정수\n    \n\n\n전국(비례대표)\n1\n47\n\n\n서울특별시\n49\n49\n\n\n부산광역시\n18\n18\n\n\n대구광역시\n12\n12\n\n\n인천광역시\n13\n13\n\n\n광주광역시\n8\n8\n\n\n대전광역시\n7\n7\n\n\n울산광역시\n6\n6\n\n\n세종특별자치시\n2\n2\n\n\n경기도\n59\n59\n\n\n강원도\n8\n8\n\n\n충청북도\n8\n8\n\n\n충청남도\n11\n11\n\n\n전라북도\n10\n10\n\n\n전라남도\n10\n10\n\n\n경상북도\n13\n13\n\n\n경상남도\n16\n16\n\n\n제주특별자치도\n3\n3"
  },
  {
    "objectID": "electorate.html#함수로-변환",
    "href": "electorate.html#함수로-변환",
    "title": "지도제작 대회",
    "section": "\n2.3 함수로 변환",
    "text": "2.3 함수로 변환\n\n코드get_precinct &lt;- function(election='20200415') {\n  \n  req_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?electionId=0000000000\",\n           \"&requestURI=%2Felectioninfo%2F0000000000%2Fbi%2Fbigi01.jsp\",             \n           \"&topMenuId=BI\",\n           \"&secondMenuId=BIGI01\", \n           \"&menuId=BIGI01\", \n           \"&statementId=BIGI02\",\n           \"&oldElectionType=\", \n           \"&electionType=2\",\n           \"&electionName={election}\",\n           \"&electionCode=-1\",\n           \"&x=73\", \n           \"&y=20\")\n\n  resp &lt;- httr::GET(req_url)\n  \n  resp_lst &lt;- content(resp) |&gt; \n    html_table()\n  \n  precinct &lt;- resp_lst[[1]] |&gt; \n    janitor::clean_names() |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"시도명\", \"선거구수\", \"정수\")) |&gt; \n    slice(4:n()) \n  \n  return(precinct)\n}\n\nget_precinct()\n#&gt; # A tibble: 18 × 3\n#&gt;    시도명         선거구수 정수 \n#&gt;    &lt;chr&gt;          &lt;chr&gt;    &lt;chr&gt;\n#&gt;  1 전국(비례대표) 1        47   \n#&gt;  2 서울특별시     49       49   \n#&gt;  3 부산광역시     18       18   \n#&gt;  4 대구광역시     12       12   \n#&gt;  5 인천광역시     13       13   \n#&gt;  6 광주광역시     8        8    \n#&gt;  7 대전광역시     7        7    \n#&gt;  8 울산광역시     6        6    \n#&gt;  9 세종특별자치시 2        2    \n#&gt; 10 경기도         59       59   \n#&gt; 11 강원도         8        8    \n#&gt; 12 충청북도       8        8    \n#&gt; 13 충청남도       11       11   \n#&gt; 14 전라북도       10       10   \n#&gt; 15 전라남도       10       10   \n#&gt; 16 경상북도       13       13   \n#&gt; 17 경상남도       16       16   \n#&gt; 18 제주특별자치도 3        3"
  },
  {
    "objectID": "electorate.html#제1721대-총선",
    "href": "electorate.html#제1721대-총선",
    "title": "지도제작 대회",
    "section": "\n2.4 제17~21대 총선",
    "text": "2.4 제17~21대 총선\n\n코드precinct_raw &lt;- election_cd |&gt; \n  mutate(data = map(선거코드, get_precinct))\n\n# precinct_raw |&gt; \n#   write_rds(\"data/precinct_raw.rds\")\n\nprecinct_raw\n#&gt; # A tibble: 5 × 3\n#&gt;   선거코드 선거명 data             \n#&gt;   &lt;chr&gt;    &lt;chr&gt;  &lt;list&gt;           \n#&gt; 1 20200415 제21대 &lt;tibble [18 × 3]&gt;\n#&gt; 2 20160413 제20대 &lt;tibble [18 × 3]&gt;\n#&gt; 3 20120411 제19대 &lt;tibble [18 × 3]&gt;\n#&gt; 4 20080409 제18대 &lt;tibble [17 × 3]&gt;\n#&gt; 5 20040415 제17대 &lt;tibble [17 × 3]&gt;"
  },
  {
    "objectID": "electorate.html#지역구-vs-비례대표",
    "href": "electorate.html#지역구-vs-비례대표",
    "title": "지도제작 대회",
    "section": "\n3.1 지역구 vs 비례대표",
    "text": "3.1 지역구 vs 비례대표\n\n코드library(ggrepel)\nextrafont::loadfonts()\n\nprecinct_raw &lt;- \n  read_rds(\"data/precinct_raw.rds\")\n\nprecinct_tbl &lt;- precinct_raw |&gt; \n  unnest() |&gt; \n  mutate(선거구수 = parse_integer(선거구수),\n         정수     = parse_integer(정수)) |&gt; \n  mutate(지역비례 = ifelse(str_detect(시도명, \"전국\"), \"비례대표\", \"지역구\")) |&gt; \n  mutate(시도명 = ifelse(시도명 == \"제주도\", \"제주특별자치도\", 시도명))\n\nlocal_prop_gg &lt;- precinct_tbl |&gt; \n  group_by(선거명, 지역비례) |&gt; \n  summarise(정수 = sum(정수)) |&gt; \n  ggplot(aes(x = 선거명, y = 정수, group=지역비례)) +\n    geom_line(aes(color = 지역비례)) +\n    geom_point(aes(color = 지역비례), size = 3) +\n    geom_text_repel(aes(label = 정수, color = 지역비례), size = 4) +\n    theme_light(base_family = \"MaruBuri\") +\n    labs(x = \"\",\n         title = \"역대 국회의원선거 비례대표와 지역구 정수변화\",\n         ) +\n    theme(legend.position = \"top\") +\n    scale_color_manual(values = c(\"black\", \"blue\")) +\n    expand_limits(y=0)\n\nlocal_prop_gg\n\n\n\n\n\n\n코드\nragg::agg_jpeg(\"images/국회의원_지역_비례_정수.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nlocal_prop_gg\ndev.off()\n#&gt; png \n#&gt;   2"
  },
  {
    "objectID": "electorate.html#지역구-시도",
    "href": "electorate.html#지역구-시도",
    "title": "지도제작 대회",
    "section": "\n3.2 지역구 시도",
    "text": "3.2 지역구 시도\n\n코드library(gt)\nlibrary(gtExtras)\n\nprecinct_sido &lt;- precinct_tbl |&gt; \n  mutate(선거코드 = as.integer(선거코드)) |&gt; \n  filter(!str_detect(시도명, \"전국\")) |&gt; \n  filter(선거코드 == max(선거코드) | 선거코드 == min(선거코드)) |&gt; \n  select(시도명, 선거코드, 정수) |&gt; \n  pivot_wider(names_from = 선거코드, values_from = 정수, values_fill = 0) |&gt; \n  mutate(정수변화 =  `20200415` - `20040415`) |&gt; \n  arrange(-정수변화)\n  # janitor::adorn_totals(name = \"총합\")\n  \n\nprecinct_chg_gt &lt;- precinct_sido |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"국회의원 선거 지역구 시도별 정수 변화\"),\n    subtitle = md(\"중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(`20200415`, `20040415`, 정수변화),\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt; \n  ## 강조 -------------------------------------  \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 시도명 == \"경기도\",\n      columns  = 정수변화\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"blue\", alpha = 0.1),\n    locations = cells_body(\n      rows = 정수변화 &gt; 0\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 정수변화 &lt; 0,\n      columns  = 정수변화\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_fill(color = \"red\", alpha = 0.1),\n    locations = cells_body(\n      rows = 정수변화 &lt; 0\n    )\n  ) |&gt;    \n  ## 변수명 -------------------------------------    \n  cols_label(\n    `20200415` = html(\"제21대 &lt;br&gt; 20200415\"),\n    `20040415` = html(\"제17대 &lt;br&gt; 20040415\")\n  )\n\nprecinct_chg_gt\n\n\n\n\n\n\n\n국회의원 선거 지역구 시도별 정수 변화\n    \n\n중앙선거관리위원회 선거통계\n    \n\n\n      시도명\n      제21대  20200415\n      제17대  20040415\n      정수변화\n    \n\n\n\n\n—\n253\n243\n10\n\n\n\n경기도\n59\n49\n10\n\n\n\n세종특별자치시\n2\n0\n2\n\n\n\n서울특별시\n49\n48\n1\n\n\n\n인천광역시\n13\n12\n1\n\n\n\n광주광역시\n8\n7\n1\n\n\n\n대전광역시\n7\n6\n1\n\n\n\n충청남도\n11\n10\n1\n\n\n\n부산광역시\n18\n18\n0\n\n\n\n대구광역시\n12\n12\n0\n\n\n\n울산광역시\n6\n6\n0\n\n\n\n강원도\n8\n8\n0\n\n\n\n충청북도\n8\n8\n0\n\n\n\n제주특별자치도\n3\n3\n0\n\n\n\n전라북도\n10\n11\n-1\n\n\n\n경상남도\n16\n17\n-1\n\n\n\n경상북도\n13\n15\n-2\n\n\n\n전라남도\n10\n13\n-3\n\n\n\n\n\n코드\n\nprecinct_chg_gt |&gt;\n  gtsave(filename = \"images/precinct_chg_gt.png\")"
  },
  {
    "objectID": "gg_analytics_center.html",
    "href": "gg_analytics_center.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드import camelot\n\n# PDF 파일에서 표를 읽어옵니다.\ntables = camelot.read_pdf('data/민간데이터 목록.pdf', pages='1')\n\ntables_pd = tables[0].df\n\n# 데이터프레임을 CSV 파일로 저장합니다.\n# df.to_csv('output.csv', index=False)\n\n\n\n코드library(reticulate)\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\ndataset &lt;- py$tables_pd\n\ndataset |&gt; \n  as_tibble() |&gt; \n  janitor::row_to_names(1) |&gt; \n  relocate(제공기관, .before = 분석구분) |&gt; \n  gt(groupname_col = \"제공기관\") |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(\"center\")\n\n\n\n\n\n\n분석구분\n      데이터  내역\n      제공  단위\n      시간범위\n      제공형태\n      제공시작일\n    \n\n\n오픈메이트\n    \n\n공통\n행정동  경계\n행정동\n-\nshp\n‘20.9.17\n\n\n공통\n블록  경계\n블록\n-\nshp\n‘20.9.17\n\n\n공통\n셀/블록/행정동\n매핑\n50m  X  50m\n-\ncsv\n‘20.9.17\n\n\n공통\n셀(중심점)\n50m  X  50m\n-\nshp\n‘20.9.17\n\n\n공통\n셀(격자)\n50m  X  50m\n-\nshp\n‘20.9.17\n\n\n공통\n도로단위\n도로\n-\nshp\n‘20.9.17\n\n\n비씨카드\n    \n\n카드\n성별  /  연령별 \n카드매출\n블록\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\n카드\n유입지별카드매출\n행정동\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\n카드\n가맹점정보\n블록\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\n카드\n가맹점별카드매출\n블록\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\n카드\n요일별카드매출\n블록\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\n카드\n시간대별카드매출\n블록\n2017년1월~\n2023년02월\ntxt,csv\n‘20.7.17\n\n\nKT\n    \n\n격자별\n유동인구\n성연령별  / \n시간대별 유동인구\n격자\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n격자별\n유동인구\n성연령별 유동인구\n격자\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n격자별\n유동인구\n요일별  유동인구\n격자\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n격자별\n유동인구\n시간대별 유동인구\n격자\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n도로별\n유동인구\n성연령별  / \n시간대별 유동인구\n도로\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n도로별\n유동인구\n성연령별 유동인구\n도로\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n도로별\n유동인구\n요일별  유동인구\n도로\n2017년6월~\n2022년12월\ncsv\n‘20.7.30\n\n\n도로별\n유동인구\n시간대별 유동인구\n도로\n2017년6월~\n2022년12월\ncsv\n‘20.7.30"
  },
  {
    "objectID": "gg_analytics_center.html#경기도-지도",
    "href": "gg_analytics_center.html#경기도-지도",
    "title": "지도제작 대회",
    "section": "\n2.1 경기도 지도",
    "text": "2.1 경기도 지도\n\n코드library(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(camcorder)\n\n\nkatec_crs &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\"\n\n\ngg_admin_map &lt;- \nst_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_admin_map &lt;- gg_admin_map |&gt; st_set_crs(katec_crs)\n\ngg_city_map &lt;- gg_admin_map |&gt; \n  janitor::clean_names() |&gt; \n  group_by(cty_nm) |&gt; \n  summarise(geometry = st_union(geometry)) \n\nst_geometry(gg_city_map) %&gt;% \n  plot()"
  },
  {
    "objectID": "gg_analytics_center.html#항구지도",
    "href": "gg_analytics_center.html#항구지도",
    "title": "지도제작 대회",
    "section": "\n2.2 항구지도",
    "text": "2.2 항구지도\n\n코드library(sf)\n\nport_tbl &lt;- readxl::read_excel(\"data/국가어항.xlsx\", sheet = \"경기어항\")\n\nport_sf &lt;- port_tbl |&gt; \n  # WGS84\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  # KATEC\n  st_transform(\"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\")\n\nst_geometry(port_sf) |&gt; plot()"
  },
  {
    "objectID": "gg_analytics_center.html#시군구-어항",
    "href": "gg_analytics_center.html#시군구-어항",
    "title": "지도제작 대회",
    "section": "\n2.3 시군구 어항",
    "text": "2.3 시군구 어항\n\n코드gg_city_bbox &lt;- st_bbox(gg_city_map)\n\ngg_port_map_gg &lt;- gg_city_map |&gt; \n  ggplot() +\n    geom_sf() +\n    ggrepel::geom_text_repel(\n      data = gg_city_map,\n        aes(label = cty_nm, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n      family = \"MaruBrui\"\n    ) +\n    geom_sf(data=port_sf, size = 2, color = \"red\") +\n    ggrepel::geom_text_repel(\n      data = port_sf,\n        aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 5, max.overlaps = Inf,\n        hjust = 10,\n        family = \"MaruBrui\", fontface = 'bold'\n    ) + \n  coord_sf(xlim = c(gg_city_bbox['xmin']-10000, \n                    gg_city_bbox['xmax']-50000),\n           ylim = c(gg_city_bbox['ymin'], \n                    gg_city_bbox['ymax'])) +\n  theme(\n    text = element_text(family = \"MaruBuri\", size = 24), \n    title = element_text(family = \"MaruBuri\"),\n    axis.title = element_text(family = \"MaruBuri\")\n  ) +\n  labs(title = \"경기도 지방 항구\",\n       caption = \"출처: 경기도 데이터분석센터\") +\n  theme_void(base_family = \"MaruBuri\")  \n\ngg_port_map_gg \n\nragg::agg_jpeg(\"images/항구_통계/01_경기도_어항_행정동.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_port_map_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#항구-행정동추출",
    "href": "gg_analytics_center.html#항구-행정동추출",
    "title": "지도제작 대회",
    "section": "\n2.4 항구 행정동(추출)",
    "text": "2.4 항구 행정동(추출)\n\n코드ports_adm_sf &lt;- st_join(gg_admin_map, port_sf, maxdist = 1000, \n                        join = nngeo::st_nn, left = FALSE) |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  mutate(sgg_name = glue::glue(\"{어항명}\"))\n  # mutate(sgg_name = glue::glue(\"{어항명}: {cty_nm}\"))\n\nports_adm_dong_gg &lt;- ggplot() +\n  geom_sf(data=ports_adm_sf) +\n  ggrepel::geom_text_repel(\n    data = port_sf,\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      size = 3, max.overlaps = Inf, family = \"MaruBrui\") +\n  geom_sf(data=port_sf, size = 1, color = \"red\", alpha=0.3) +\n  coord_sf(xlim = c(gg_city_bbox['xmin']-10000, \n                  gg_city_bbox['xmax']-60000),\n         ylim = c(gg_city_bbox['ymin'], \n                  gg_city_bbox['ymax']-65000)) +\n  theme(\n    text = element_text(family = \"MaruBuri\", size = 24), \n    title = element_text(family = \"MaruBuri\"),\n    axis.title = element_text(family = \"MaruBuri\")\n  ) +\n  labs(title = \"경기도 지방 항구\",\n       subtitle = \"지방항구 시군구 행정동\",\n       caption = \"출처: 경기도 데이터분석센터\") +\n  theme_void(base_family = \"MaruBuri\")  \n  \nports_adm_dong_gg \n\nragg::agg_jpeg(\"images/항구_통계/01_경기도_어항_행정동_추출.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nports_adm_dong_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#김포시-대명항",
    "href": "gg_analytics_center.html#김포시-대명항",
    "title": "지도제작 대회",
    "section": "\n5.1 김포시 대명항",
    "text": "5.1 김포시 대명항\n\n\n김포시 위치\n김포시 대명항\n대명항 인근 1 KM\n\n\n\n\n코드library(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(patchwork)\n\nkatec_crs &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\"\n\ngg_admin_map &lt;- \nst_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_admin_map &lt;- gg_admin_map |&gt; st_set_crs(katec_crs)\n\ngg_city_map &lt;- gg_admin_map |&gt; \n  janitor::clean_names() |&gt; \n  group_by(cty_nm) |&gt; \n  summarise(geometry = st_union(geometry)) |&gt; \n  mutate(cty_target = ifelse(str_detect(cty_nm, \"김포\"), TRUE, FALSE))\n\ngg_gimpo_gg &lt;- ggplot() +\n  geom_sf(data = gg_city_map, aes(fill = cty_target)) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n      data = gg_city_map |&gt; filter(cty_target == TRUE),\n        aes(label = cty_nm, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n      family = \"MaruBrui\") +\n  theme(legend.position = \"none\")\n\ngg_gimpo_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_김포시.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_gimpo_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드## 김포시 \ngimpo_adm_sf &lt;- gg_admin_map |&gt; filter(CTY_NM == \"김포시\")\n\n## 항구\nport_tbl &lt;- readxl::read_excel(\"data/국가어항.xlsx\", sheet = \"경기어항\")\n\nport_sf &lt;- port_tbl |&gt; \n  # WGS84\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  # KATEC\n  st_transform(katec_crs)\n\ngg_gimpo_port_gg &lt;- ggplot() +\n  geom_sf(data = gimpo_adm_sf) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n    data = gimpo_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 4, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), size = 3, color = \"red\", alpha=0.3) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"대명항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\")    \n\ngg_gimpo_port_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_김포시_대명항.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_gimpo_port_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\ncell_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/셀(중심점)/cell_gg_admi2_20210616.shp\")\n\ngimpo_cty_cell_sf &lt;- st_transform(cell_sf, katec_crs) |&gt; \n  filter(CTY_CD == gg_admin_map |&gt; filter(CTY_NM == \"김포시\") |&gt; \n  pull(CTY_CD) |&gt; unique())\n\n## 항구 인근 1 KM\ngimpo_ports_cell_sf &lt;- st_join(gimpo_cty_cell_sf,\n                               port_sf |&gt; filter(어항명 == \"대명항\"), \n                         maxdist = 1000, \n                         join = nngeo::st_nn, left = FALSE)\n\ngimpo_ports_bbox &lt;- st_bbox(gimpo_ports_cell_sf)\n\n### 1. 김포시 Inset\n\ninset_gimpo_gg &lt;- ggplot() +\n  ## 1. 행정동 ---------\n  geom_sf(data = gimpo_adm_sf) +  \n  ggrepel::geom_text_repel(\n    data = gimpo_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 2, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n  ## 2. 항구 ---------  \n  geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), \n          size = 3, color = \"blue\", alpha=0.5) +\n  theme_void(base_family = \"MaruBuri\")  +\n  geom_rect(aes(xmin = gimpo_ports_bbox['xmin']-1000, \n                xmax = gimpo_ports_bbox['xmax']+1000, \n                ymin = gimpo_ports_bbox['ymin']-1000, \n                ymax = gimpo_ports_bbox['ymax']+1000), fill=NA, color=\"red\")\n\ninset_gimpo_gg\n\n### 2. 김포시 대명항\n\ninset_gimpo_daemyung_gg &lt;- ggplot() +\n  geom_sf(data = gimpo_adm_sf) +  \n  geom_sf(data= gimpo_ports_cell_sf, alpha = 0.1) +\n  geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), size = 3, \n          color = \"blue\", alpha=0.5) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"대명항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\") +\n  theme_void(base_family = \"MaruBuri\") +\n    coord_sf(xlim = c(gimpo_ports_bbox['xmin']-1000, \n                      gimpo_ports_bbox['xmax']+1000),\n             ylim = c(gimpo_ports_bbox['ymin']-1000, \n                      gimpo_ports_bbox['ymax']+1000)) +\n  ggspatial::annotation_scale(location = \"br\", width_hint = 0.5,\n                               height = unit(0.3, \"cm\"))\n\n## 3. 김포시 + 대명항 지도 -------------------------------  \ndaemyung_port_inset_map &lt;- inset_gimpo_daemyung_gg + \n  inset_element(inset_gimpo_gg, 0.6, 0.6, 1, 1, align_to = 'full') +\n  plot_annotation(title = '김포시 대명항 및 인근 1 KM지역')\n\ndaemyung_port_inset_map\n\nfs::dir_create(\"images/항구_통계/\")\n\nragg::agg_png(\"images/항구_통계/2_김포_대명항_최종.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\ndaemyung_port_inset_map\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#화성시-궁평항",
    "href": "gg_analytics_center.html#화성시-궁평항",
    "title": "지도제작 대회",
    "section": "\n5.2 화성시 궁평항",
    "text": "5.2 화성시 궁평항\n\n\n화성시 위치\n화성시 궁평항\n궁평항 인근 1 KM\n\n\n\n\n코드library(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(patchwork)\n\nkatec_crs &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\"\n\ngg_admin_map &lt;- \nst_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_admin_map &lt;- gg_admin_map |&gt; st_set_crs(katec_crs)\n\ngg_city_map &lt;- gg_admin_map |&gt; \n  janitor::clean_names() |&gt; \n  group_by(cty_nm) |&gt; \n  summarise(geometry = st_union(geometry)) |&gt; \n  mutate(cty_target = ifelse(str_detect(cty_nm, \"화성\"), TRUE, FALSE))\n\ngg_hw_gg &lt;- ggplot() +\n  geom_sf(data = gg_city_map, aes(fill = cty_target)) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n      data = gg_city_map |&gt; filter(cty_target == TRUE),\n        aes(label = cty_nm, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n      family = \"MaruBrui\") +\n  theme(legend.position = \"none\")\n\ngg_hw_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_화성시.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_hw_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드## 김포시 \nhw_adm_sf &lt;- gg_admin_map |&gt; filter(CTY_NM == \"화성시\")\n\n## 항구\nport_tbl &lt;- readxl::read_excel(\"data/국가어항.xlsx\", sheet = \"경기어항\")\n\nport_sf &lt;- port_tbl |&gt; \n  # WGS84\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  # KATEC\n  st_transform(katec_crs)\n\ngg_hw_port_gg &lt;- ggplot() +\n  geom_sf(data = hw_adm_sf) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n    data = hw_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 4, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    geom_sf(data=port_sf |&gt; filter(어항명 == \"궁평항\"), size = 3, color = \"red\", alpha=0.3) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"궁평항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\")   \n\ngg_hw_port_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_화성시_궁평항.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_hw_port_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\n# cell_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/셀(중심점)/cell_gg_admi2_20210616.shp\")\n\nhw_cty_cell_sf &lt;- st_transform(cell_sf, katec_crs) |&gt; \n  filter(CTY_CD == gg_admin_map |&gt; filter(CTY_NM == \"화성시\") |&gt; \n  pull(CTY_CD) |&gt; unique())\n\n## 항구 인근 1 KM\nhw_ports_cell_sf &lt;- st_join(hw_cty_cell_sf,\n                               port_sf |&gt; filter(어항명 == \"궁평항\"), \n                         maxdist = 1000, \n                         join = nngeo::st_nn, left = FALSE)\n\nhw_ports_bbox &lt;- st_bbox(hw_ports_cell_sf)\n\n### 1. 화성시 Inset\n\ninset_hw_gg &lt;- ggplot() +\n  ## 1. 행정동 ---------\n  geom_sf(data = hw_adm_sf) +  \n  ggrepel::geom_text_repel(\n    data = hw_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 2, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n  ## 2. 항구 ---------  \n  geom_sf(data=port_sf |&gt; filter(어항명 == \"궁평항\"), \n          size = 3, color = \"blue\", alpha=0.5) +\n  theme_void(base_family = \"MaruBuri\")  +\n  geom_rect(aes(xmin = hw_ports_bbox['xmin']-1000, \n                xmax = hw_ports_bbox['xmax']+1000, \n                ymin = hw_ports_bbox['ymin']-1000, \n                ymax = hw_ports_bbox['ymax']+1000), fill=NA, color=\"red\")\n\ninset_hw_gg\n\n### 2. 화성시 궁평항\n\ninset_hw_goongpyung_gg &lt;- ggplot() +\n  geom_sf(data = hw_adm_sf) +  \n  geom_sf(data= hw_ports_cell_sf, alpha = 0.1) +\n  geom_sf(data=port_sf |&gt; filter(어항명 == \"궁평항\"), size = 3, \n          color = \"blue\", alpha=0.5) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"궁평항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\") +\n  theme_void(base_family = \"MaruBuri\") +\n    coord_sf(xlim = c(hw_ports_bbox['xmin']-1000, \n                      hw_ports_bbox['xmax']+1000),\n             ylim = c(hw_ports_bbox['ymin']-1000, \n                      hw_ports_bbox['ymax']+1000)) +\n  ggspatial::annotation_scale(location = \"br\", width_hint = 0.5,\n                               height = unit(0.3, \"cm\"))\n\n## 3. 화성시 + 궁평항 지도 -------------------------------  \ngoongpyung_port_inset_map &lt;- inset_hw_goongpyung_gg + \n  inset_element(inset_hw_gg, 0.6, 0.6, 1, 1, align_to = 'full') +\n  plot_annotation(title = '화성시 궁평항 및 인근 1 KM지역')\n\ngoongpyung_port_inset_map\n\nragg::agg_png(\"images/항구_통계/2_화성_궁평항_최종.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngoongpyung_port_inset_map\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#안산시-탄도항",
    "href": "gg_analytics_center.html#안산시-탄도항",
    "title": "지도제작 대회",
    "section": "\n5.3 안산시 탄도항",
    "text": "5.3 안산시 탄도항\n\n\n안산시 위치\n안산시 탄도항\n안산시 탄도항 인근 1 KM\n\n\n\n\n코드library(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(patchwork)\n\nkatec_crs &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\"\n\ngg_admin_map &lt;- \nst_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_admin_map &lt;- gg_admin_map |&gt; st_set_crs(katec_crs)\n\ngg_city_map &lt;- gg_admin_map |&gt; \n  janitor::clean_names() |&gt; \n  group_by(cty_nm) |&gt; \n  summarise(geometry = st_union(geometry)) |&gt; \n  mutate(cty_target = ifelse(str_detect(cty_nm, \"안산\"), TRUE, FALSE))\n\ngg_ansan_gg &lt;- ggplot() +\n  geom_sf(data = gg_city_map, aes(fill = cty_target)) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n      data = gg_city_map |&gt; filter(cty_target == TRUE),\n        aes(label = cty_nm, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n      family = \"MaruBrui\") +\n  theme(legend.position = \"none\")\n\ngg_ansan_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_안산시.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_ansan_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드## 안산시\nansan_adm_sf &lt;- gg_admin_map |&gt; filter(CTY_NM == \"안산시\")\n\n## 항구\nport_tbl &lt;- readxl::read_excel(\"data/국가어항.xlsx\", sheet = \"경기어항\")\n\nport_sf &lt;- port_tbl |&gt; \n  # WGS84\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  # KATEC\n  st_transform(katec_crs)\n\ngg_ansan_port_gg &lt;- ggplot() +\n  geom_sf(data = ansan_adm_sf) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n    data = ansan_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 4, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    geom_sf(data=port_sf |&gt; filter(어항명 == \"탄도항\"), size = 3, color = \"red\", alpha=0.3) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"탄도항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\")   \n\ngg_ansan_port_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_안산시_탄도항.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_ansan_port_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\n# cell_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/셀(중심점)/cell_gg_admi2_20210616.shp\")\n\nansan_cty_cell_sf &lt;- st_transform(cell_sf, katec_crs) |&gt; \n  filter(CTY_CD == gg_admin_map |&gt; filter(CTY_NM == \"안산시\") |&gt; \n  pull(CTY_CD) |&gt; unique())\n\n## 항구 인근 1 KM\nansan_ports_cell_sf &lt;- st_join(ansan_cty_cell_sf,\n                               port_sf |&gt; filter(어항명 == \"탄도항\"), \n                         maxdist = 1000, \n                         join = nngeo::st_nn, left = FALSE)\n\nansan_ports_bbox &lt;- st_bbox(ansan_ports_cell_sf)\n\n### 1. 안산시 Inset\n\ninset_ansan_gg &lt;- ggplot() +\n  ## 1. 행정동 ---------\n  geom_sf(data = ansan_adm_sf) +  \n  ggrepel::geom_text_repel(\n    data = ansan_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 2, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n  ## 2. 항구 ---------  \n  geom_sf(data=port_sf |&gt; filter(어항명 == \"탄도항\"), \n          size = 3, color = \"blue\", alpha=0.5) +\n  theme_void(base_family = \"MaruBuri\")  +\n  geom_rect(aes(xmin = ansan_ports_bbox['xmin']-1000, \n                xmax = ansan_ports_bbox['xmax']+1000, \n                ymin = ansan_ports_bbox['ymin']-1000, \n                ymax = ansan_ports_bbox['ymax']+1000), fill=NA, color=\"red\") +\n    theme(axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      axis.ticks.length = unit(0, \"pt\"),\n      axis.title=element_blank(),\n      plot.margin = margin(0, 0, 0, 0, \"cm\"),\n      panel.background = element_rect(fill = \"lightblue\"))\n\ninset_ansan_gg\n\n### 2. 안산시 탄도항\n\ninset_ansan_tando_gg &lt;- ggplot() +\n  geom_sf(data = ansan_adm_sf) +  \n  geom_sf(data= ansan_ports_cell_sf, alpha = 0.1) +\n  geom_sf(data=port_sf |&gt; filter(어항명 == \"탄도항\"), size = 3, \n          color = \"blue\", alpha=0.5) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"탄도항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\") +\n  theme_void(base_family = \"MaruBuri\") +\n    coord_sf(xlim = c(ansan_ports_bbox['xmin']-1000, \n                      ansan_ports_bbox['xmax']+1000),\n             ylim = c(ansan_ports_bbox['ymin']-1000, \n                      ansan_ports_bbox['ymax']+1000)) +\n  ggspatial::annotation_scale(location = \"br\", width_hint = 0.5,\n                               height = unit(0.3, \"cm\"))\n\n## 3. 안산시 + 탄도항 지도 -------------------------------  \ntando_port_inset_map &lt;- inset_ansan_tando_gg + \n  inset_element(inset_ansan_gg, 0.5, 0.5, 1, 1, align_to = 'full') +\n  plot_annotation(title = '안산시 탄도항 및 인근 1 KM지역')\n\ntando_port_inset_map\n\nragg::agg_png(\"images/항구_통계/3_안산_탄도항_최종.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\ntando_port_inset_map\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#김포시-대명항-위치",
    "href": "gg_analytics_center.html#김포시-대명항-위치",
    "title": "지도제작 대회",
    "section": "\n6.1 김포시 대명항 위치",
    "text": "6.1 김포시 대명항 위치\n\n\n김포시 위치\n김포시 대명항\n대명항 인근 1 KM\n\n\n\n\n코드library(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(sf)\nlibrary(patchwork)\n\nkatec_crs &lt;- \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +units=m +no_defs\"\n\ngg_admin_map &lt;- \nst_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_admin_map &lt;- gg_admin_map |&gt; st_set_crs(katec_crs)\n\ngg_city_map &lt;- gg_admin_map |&gt; \n  janitor::clean_names() |&gt; \n  group_by(cty_nm) |&gt; \n  summarise(geometry = st_union(geometry)) |&gt; \n  mutate(cty_target = ifelse(str_detect(cty_nm, \"김포\"), TRUE, FALSE))\n\ngg_gimpo_gg &lt;- ggplot() +\n  geom_sf(data = gg_city_map, aes(fill = cty_target)) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n      data = gg_city_map |&gt; filter(cty_target == TRUE),\n        aes(label = cty_nm, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n      family = \"MaruBrui\") +\n  theme(legend.position = \"none\")\n\ngg_gimpo_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_김포시.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_gimpo_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드## 김포시 \ngimpo_adm_sf &lt;- gg_admin_map |&gt; filter(CTY_NM == \"김포시\")\n\n## 항구\nport_tbl &lt;- readxl::read_excel(\"data/국가어항.xlsx\", sheet = \"경기어항\")\n\nport_sf &lt;- port_tbl |&gt; \n  # WGS84\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4326) |&gt; \n  # KATEC\n  st_transform(katec_crs)\n\ngg_gimpo_port_gg &lt;- ggplot() +\n  geom_sf(data = gimpo_adm_sf) +\n  theme_void(base_family = \"MaruBuri\") +\n  scale_fill_manual(values = c(\"gray90\", \"skyblue\")) +\n  ggrepel::geom_text_repel(\n    data = gimpo_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 4, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), size = 3, color = \"red\", alpha=0.3) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"대명항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\")    \n\ngg_gimpo_port_gg\n\nragg::agg_jpeg(\"images/항구_통계/02_경기도_김포시_대명항.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\ngg_gimpo_port_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\ncell_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/셀(중심점)/cell_gg_admi2_20210616.shp\")\n\ngimpo_cty_cell_sf &lt;- st_transform(cell_sf, katec_crs) |&gt; \n  filter(CTY_CD == gg_admin_map |&gt; filter(CTY_NM == \"김포시\") |&gt; \n  pull(CTY_CD) |&gt; unique())\n\n## 항구 인근 1 KM\ngimpo_ports_cell_sf &lt;- st_join(gimpo_cty_cell_sf,\n                               port_sf |&gt; filter(어항명 == \"대명항\"), \n                         maxdist = 1000, \n                         join = nngeo::st_nn, left = FALSE)\n\ngimpo_ports_cell_sf |&gt; \n  write_rds(\"data/gimpo_ports_cell_sf.rds\")\n\ngimpo_ports_bbox &lt;- st_bbox(gimpo_ports_cell_sf)\n\n### 1. 김포시 Inset\n\ninset_gimpo_gg &lt;- ggplot() +\n  ## 1. 행정동 ---------\n  geom_sf(data = gimpo_adm_sf) +  \n  ggrepel::geom_text_repel(\n    data = gimpo_adm_sf,\n      aes(label = ADMI_NM, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 1, size = 2, max.overlaps = Inf, family = \"MaruBrui\") +\n    theme(legend.position = \"none\") +\n  ## 2. 항구 ---------  \n  geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), \n          size = 3, color = \"blue\", alpha=0.5) +\n  theme_void(base_family = \"MaruBuri\")  +\n  geom_rect(aes(xmin = gimpo_ports_bbox['xmin']-1000, \n                xmax = gimpo_ports_bbox['xmax']+1000, \n                ymin = gimpo_ports_bbox['ymin']-1000, \n                ymax = gimpo_ports_bbox['ymax']+1000), fill=NA, color=\"red\")\n\ninset_gimpo_gg\n\n### 2. 김포시 대명항\n\ninset_gimpo_daemyung_gg &lt;- ggplot() +\n  geom_sf(data = gimpo_adm_sf) +  \n  geom_sf(data= gimpo_ports_cell_sf, alpha = 0.1) +\n  geom_sf(data=port_sf |&gt; filter(어항명 == \"대명항\"), size = 3, \n          color = \"blue\", alpha=0.5) +\n  ggrepel::geom_text_repel(\n    data = port_sf |&gt; filter(어항명 == \"대명항\"),\n      aes(label = 어항명, geometry = geometry), stat = \"sf_coordinates\", \n      min.segment.length = 3, size = 4, max.overlaps = Inf, family = \"MaruBrui\", color = \"blue\") +\n  theme_void(base_family = \"MaruBuri\") +\n    coord_sf(xlim = c(gimpo_ports_bbox['xmin']-1000, \n                      gimpo_ports_bbox['xmax']+1000),\n             ylim = c(gimpo_ports_bbox['ymin']-1000, \n                      gimpo_ports_bbox['ymax']+1000)) +\n  ggspatial::annotation_scale(location = \"br\", width_hint = 0.5,\n                               height = unit(0.3, \"cm\"))\n\n## 3. 김포시 + 대명항 지도 -------------------------------  \ndaemyung_port_inset_map &lt;- inset_gimpo_daemyung_gg + \n  inset_element(inset_gimpo_gg, 0.6, 0.6, 1, 1, align_to = 'full') +\n  plot_annotation(title = '김포시 대명항 및 인근 1 KM지역')\n\ndaemyung_port_inset_map\n\nfs::dir_create(\"images/항구_통계/\")\n\nragg::agg_png(\"images/항구_통계/2_김포_대명항_최종.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\ndaemyung_port_inset_map\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#유동인구",
    "href": "gg_analytics_center.html#유동인구",
    "title": "지도제작 대회",
    "section": "\n6.2 유동인구",
    "text": "6.2 유동인구\n\n6.2.1 KT 데이터\n\n코드## 1. 대상파일\nkt_cell_files_raw &lt;- fs::dir_ls(\"data/KT유동인구데이터/셀단위/sex_age/\")\n\nkt_cell_files_raw &lt;- kt_cell_files_raw[str_detect(kt_cell_files_raw, \"sex_age_\\\\d{6}\")]\n\n## 2. 함수\n\npoint_map &lt;- st_read(\"data/sgg_cell_point/광명시.geojson\")\n\nget_sex_age &lt;- function(yearmon=\"data/KT유동인구데이터/셀단위/sex_age/sex_age_201801.csv\") {\n  \n  cat(\"\\n ------------------\\n\", yearmon, \"\\n\")\n  \n  sex_age_raw &lt;- read_csv(yearmon)\n\n  km_sex_age &lt;- sex_age_raw %&gt;% \n      ## 광명시만 추출\n    filter(cell_id %in% unique(point_map$cell_id)) %&gt;% \n    ## 자료구조 변환\n    pivot_longer(cols = M00_09:F60_up, names_to = \"name\", values_to = \"인구수\") %&gt;% \n    mutate(성별 = str_sub(name, 1,1),\n           연령대 = str_sub(name, 2, 6)) %&gt;% \n    ## 자료형 변환\n    mutate(연령대 = factor(연령대, levels = c(\"00_09\", \"10_19\", \"20_29\", \"30_39\", \"40_49\", \"50_59\", \"60_up\")),\n           성별 = factor(성별, levels = c(\"M\", \"F\"), labels = c(\"남성\", \"여성\"))) %&gt;% \n    select(-name)\n\n  return(km_sex_age)\n}\n\nget_sex_age()\n\n## 3. 김포시 데이터\n\nkt_cell_files &lt;- kt_cell_files_raw %&gt;% \n  enframe() %&gt;% \n  ## 2018~2022년만 추출\n  mutate(년월 = str_sub(str_extract(name, \"\\\\d+\"), 1, 4)) %&gt;% \n  filter(!년월 %in% c(\"2017\")) %&gt;% \n  ## 2018~2022년만 추출\n  mutate(년월 = str_sub(str_extract(name, \"\\\\d+\"), 1, 6)) %&gt;% \n  mutate(년월 = lubridate::ym(년월))\n\nage_sex_yearmon &lt;- kt_cell_files  %&gt;% \n  mutate(data = map(name, get_sex_age))\n\nage_sex_yearmon |&gt; \n  write_rds(\"data/gimpo_age_sex_2018_2022.rds\")\n\n\n\n6.2.2 대명항 1 KM 유동인구\n\n코드gimpo_ports_cell_sf &lt;- \n  read_rds(\"data/gimpo_ports_cell_sf.rds\")\n\nport_cell_id &lt;- gimpo_ports_cell_sf |&gt; \n  pull(cell_id) |&gt; \n  unique()\n\nage_sex_yearmon &lt;- \n  read_rds(\"data/gimpo_age_sex_2018_2022.rds\")\n\nage_sex_yearmon_tbl &lt;- age_sex_yearmon |&gt; \n  select(년월, data) |&gt; \n  unnest(data)\n\nport_age_sex_tbl &lt;- age_sex_yearmon_tbl |&gt; \n  filter(cell_id %in% port_cell_id)\n\nport_age_sex_tbl |&gt; \n  write_rds(\"data/port_age_sex_tbl.rds\")"
  },
  {
    "objectID": "gg_analytics_center.html#유동인구-분석",
    "href": "gg_analytics_center.html#유동인구-분석",
    "title": "지도제작 대회",
    "section": "\n6.3 유동인구 분석",
    "text": "6.3 유동인구 분석\n\n\n성별\n연령별\n\n\n\n\n코드extrafont::loadfonts()\n\nport_age_sex_tbl &lt;- \n  read_rds(\"data/port_age_sex_tbl.rds\")\n\nport_kt_sex_gg &lt;- port_age_sex_tbl |&gt; \n  group_by(년월, 성별) |&gt; \n  summarise(유동인구 = sum(인구수) / 10^4) |&gt; \n  ggplot(aes(x = 년월, y = 유동인구, color = 성별)) +\n    geom_line() +\n    geom_point() +\n    theme_minimal(base_family = \"MaruBrui\") +\n    labs(title = \"김포시 대명항 인근 1 KM 유동인구\",\n         subtitle = \"성별, 2018년 1월 ~ 2022년 12월\",\n         caption = \"자료출처: 경기도 분석센터 KT 유동인구\",\n         x = \"\",\n         y = \"유동인구 (만명)\") +\n    theme(legend.position = \"top\") +\n    scale_color_manual(values = c(\"blue\", \"black\"))\n\nport_kt_sex_gg\n\nragg::agg_jpeg(\"images/항구_통계/김포_대명항_유동인구_성별.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nport_kt_sex_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nport_kt_age_gg &lt;- port_age_sex_tbl |&gt; \n  group_by(년월,연령대) |&gt; \n  summarise(유동인구 = sum(인구수) / 10^4) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 년월, y = 유동인구, color = 연령대)) +\n    geom_line() +\n    geom_point() +\n    theme_minimal(base_family = \"MaruBrui\") +\n    labs(title = \"김포시 대명항 인근 1 KM 유동인구\",\n         subtitle = \"연령별, 2018년 1월 ~ 2022년 12월\",\n         caption = \"자료출처: 경기도 분석센터 KT 유동인구\",\n         x = \"\",\n         y = \"유동인구 (만명)\") +\n    theme(legend.position = \"top\") +\n    guides(colour = guide_legend(nrow = 1))  \n\nport_kt_age_gg\n\nragg::agg_jpeg(\"images/항구_통계/김포_대명항_유동인구_연령별.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nport_kt_age_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#매출금액",
    "href": "gg_analytics_center.html#매출금액",
    "title": "지도제작 대회",
    "section": "\n6.4 매출금액",
    "text": "6.4 매출금액\n\n6.4.1 데이터\n\n6.4.1.1 BC 카드\n\n코드## 1. 대상파일\n\namt_files &lt;- fs::dir_ls(\"data/BC카드데이터/TBSH_GYEONGGI_SELNG/\")\n\namt_raw &lt;- amt_files %&gt;% \n  enframe() %&gt;% \n  mutate(data = map(value, read_delim)) %&gt;% \n  select(name, data) %&gt;% \n  mutate(name = str_extract(name, \"\\\\d+\\\\.txt$\")) %&gt;% \n  unnest(data)\n\namt_tbl &lt;- amt_raw %&gt;% \n  janitor::clean_names() %&gt;% \n  mutate(ta_ym = lubridate::ym(ta_ym))\n\n\n\n6.4.1.2 셀_블록\n\n코드cell_blk_raw &lt;- read_delim(\"data/(공통)셀블록도로행정동/셀_블록_행정동/kt_cell_v6_20210528.csv\")\n\nport_cell_blk_raw &lt;- cell_blk_raw |&gt; \n  janitor::clean_names() |&gt; \n  rename(cell_id = id) |&gt;   \n  filter(cell_id %in% port_cell_id) \n\nport_cell_blk_cd &lt;- port_cell_blk_raw |&gt; \n  pull(blk_cd) |&gt; unique()\n\n\n\n6.4.1.3 대명항 인근 1 KM\n\n코드port_amt_tbl &lt;- amt_tbl |&gt; \n  filter(blk_cd %in% port_cell_blk_cd)"
  },
  {
    "objectID": "gg_analytics_center.html#결재금액-분석",
    "href": "gg_analytics_center.html#결재금액-분석",
    "title": "지도제작 대회",
    "section": "\n6.5 결재금액 분석",
    "text": "6.5 결재금액 분석\n\n\n연도별\n음식점별\n\n\n\n\n코드bc_yearmon_gg &lt;- port_amt_tbl |&gt; \n  group_by(ta_ym) |&gt; \n  summarise(결재건수 = sum(total_cnt)/ 10^4,\n            결재금액 = sum(total_amt)/ 10^8,) |&gt; \n  ggplot(aes(x = ta_ym, y = 결재금액)) +\n    geom_line() +\n    geom_point() +\n    theme_light(base_family = \"MaruBrui\") +\n    labs(title = \"김포시 대명항 인근 1 KM 결재금액\",\n         subtitle = \"연령별, 2018년 1월 ~ 2022년 12월\",\n         caption = \"자료출처: 경기도 분석센터 KT 유동인구\",\n         x = \"\",\n         y = \"결재금액(억원)\") +\n    theme(legend.position = \"top\") +\n    guides(colour = guide_legend(nrow = 1)) \n\nbc_yearmon_gg\n\nragg::agg_jpeg(\"images/항구_통계/김포_대명항_결재금액.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nbc_yearmon_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드code_table &lt;- tribble(~\"mer_buz_code\", ~\"업종명\",\n8001,   \"일반한식\",\n8002,   \"갈비전문점\",\n8003,   \"한정식\",\n8004,   \"일식회집\",\n8005,   \"중국음식\",\n8006,   \"서양음식\")\n\n\nbc_type_yearmon_gg &lt;- port_amt_tbl |&gt; \n  filter(mer_buz_code %in% c(8001, 8004, 8005, 8006)) |&gt; \n  left_join(code_table) |&gt; \n  group_by(ta_ym, 업종명) |&gt; \n  summarise(결재건수 = sum(total_cnt)/ 10^4,\n            결재금액 = sum(total_amt)/ 10^8,) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = ta_ym, y = 결재금액, color = 업종명)) +\n    geom_line() +\n    geom_point() +\n    theme_light(base_family = \"MaruBrui\") +\n    labs(title = \"김포시 대명항 인근 1 KM 업종별 결재금액\",\n         subtitle = \"연령별, 2018년 1월 ~ 2022년 12월\",\n         caption = \"자료출처: 경기도 분석센터 KT 유동인구\",\n         x = \"\",\n         y = \"결재금액(억원)\") +\n    theme(legend.position = \"top\") +\n    guides(colour = guide_legend(nrow = 1)) \n\nbc_type_yearmon_gg\n\nragg::agg_jpeg(\"images/항구_통계/김포_대명항_음식점_결재금액.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nbc_type_yearmon_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#월별-매출금액",
    "href": "gg_analytics_center.html#월별-매출금액",
    "title": "지도제작 대회",
    "section": "\n5.1 월별 매출금액",
    "text": "5.1 월별 매출금액\n\n코드extrafont::loadfonts()\n\namt_files &lt;- fs::dir_ls(\"data/BC카드데이터/TBSH_GYEONGGI_SELNG/\")\n\namt_raw &lt;- amt_files %&gt;% \n  enframe() %&gt;% \n  mutate(data = map(value, read_delim)) %&gt;% \n  select(name, data) %&gt;% \n  mutate(name = str_extract(name, \"\\\\d+\\\\.txt$\")) %&gt;% \n  unnest(data)\n\namt_tbl &lt;- amt_raw %&gt;% \n  janitor::clean_names() %&gt;% \n  mutate(ta_ym = lubridate::ym(ta_ym))\n\nmonthly_amt_tbl &lt;- amt_tbl %&gt;% \n  group_by(ta_ym) %&gt;% \n  summarize(결재건수 = sum(total_cnt, na.rm=TRUE)/10^4,\n            결재금액 = sum(total_amt, na.rm=TRUE)/10^8)\n\nmonthly_amt_gg &lt;- monthly_amt_tbl %&gt;% \n  pivot_longer(-ta_ym) %&gt;% \n  ggplot() +\n    geom_line(aes(x = ta_ym, y = value, color = name))  +\n    facet_wrap(~name, scales = \"free_y\") +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x=\"\", y= \"\",\n         title = \"경기도 카드 매출 추세\",\n         subtitle = \"BC 카드 월별 결재건수(단위: 만건)와 금액(단위:억원)\",\n         caption = \"출처: 경기도 데이터분석포털 민간 데이터셋\") +\n    scale_y_continuous(labels = scales::comma) +\n    theme(legend.position = \"none\") \n\nmonthly_amt_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_매출_건수_추세.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nmonthly_amt_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#개인법인-매출",
    "href": "gg_analytics_center.html#개인법인-매출",
    "title": "지도제작 대회",
    "section": "\n5.2 개인/법인 매출",
    "text": "5.2 개인/법인 매출\n\n코드\nmonthly_type_amt_tbl &lt;- amt_tbl %&gt;% \n  group_by(ta_ym) %&gt;% \n  summarize(개인건수 = sum(indv_cnt, na.rm=TRUE)/10^4,\n            개인금액 = sum(indv_amt, na.rm=TRUE)/10^8,\n            법인건수 = sum(entp_cnt, na.rm=TRUE)/10^4,\n            법인금액 = sum(entp_amt, na.rm=TRUE)/10^8)\n\nmonthly_type_amt_gg &lt;- monthly_type_amt_tbl %&gt;% \n  pivot_longer(-ta_ym) %&gt;% \n  mutate(구분 = ifelse(str_detect(name, \"개인\"), \"개인카드\", \"법인카드\"),\n         금액건수 = ifelse(str_detect(name, \"건수\"), \"건수\", \"금액\")) %&gt;% \n  ggplot() +\n    geom_line(aes(x = ta_ym, y = value, color = 구분))  +\n    facet_wrap(~금액건수, scales = \"free_y\") +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x=\"\", y= \"\",\n         title = \"경기도 카드 매출 추세\",\n         subtitle = \"BC 카드 월별 카드유형별 결재건수(단위: 만건)와 금액(단위:억원)\",\n         caption = \"출처: 경기도 데이터분석포털 민간 데이터셋\") +\n    scale_y_sqrt(labels = scales::comma) +\n    theme(legend.position = \"top\") +\n    scale_color_manual(values = c(\"blue\", \"red\")) +\n    scale_x_date(breaks = \"1 year\", minor_breaks = \"3 months\",\n                 date_labels = \"%Y\")\n\nmonthly_type_amt_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_카드유형_매출_건수_추세.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nmonthly_type_amt_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#블록코드-시군구-매칭작업",
    "href": "gg_analytics_center.html#블록코드-시군구-매칭작업",
    "title": "지도제작 대회",
    "section": "\n2.1 블록코드 시군구 매칭작업",
    "text": "2.1 블록코드 시군구 매칭작업\n\n코드library(sf)\n\nmst_tbl &lt;- read_csv(\"data/(공통)셀블록도로행정동/경기도_시군구_행정동_명,CD.csv\",\n                    locale = locale('ko',encoding='euc-kr'))\n\ngg_blk_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/블록경계/블록_v6_경기도/tbshp_block_v6_gg_20210412.shp\")\n\ngg_blk_tbl &lt;- gg_blk_sf  %&gt;% \n  st_drop_geometry() %&gt;% \n  as_tibble()\n\ngg_blk_mst_raw &lt;- mst_tbl %&gt;% \n  left_join(gg_blk_tbl)"
  },
  {
    "objectID": "gg_analytics_center.html#시군구별-월별-매출금액",
    "href": "gg_analytics_center.html#시군구별-월별-매출금액",
    "title": "지도제작 대회",
    "section": "\n2.2 시군구별 월별 매출금액",
    "text": "2.2 시군구별 월별 매출금액\n\n코드gg_blk_mst_tbl &lt;- gg_blk_mst_raw %&gt;% janitor::clean_names() %&gt;% \n  select(cty_cd, cty_nm, admi_cd, admi_nm, blk_cd)\n\nsgg_amt_tbl &lt;- amt_tbl %&gt;% \n  left_join(gg_blk_mst_tbl) %&gt;% \n  group_by(ta_ym, cty_cd, cty_nm) %&gt;% \n  summarise(결재금액 = sum(total_amt, na.rm=TRUE) / 10^8,\n            결재건수 = sum(total_cnt, na.rm=TRUE) / 10^4) %&gt;% \n  ungroup()\n\nsgg_amt_max_tbl &lt;- sgg_amt_tbl %&gt;% \n  filter(ta_ym == max(ta_ym)) %&gt;% \n  pivot_longer(결재금액:결재건수)\n\nlibrary(ggrepel)\n\nsgg_amt_tbl_gg &lt;- sgg_amt_tbl %&gt;% \n  pivot_longer(결재금액:결재건수) %&gt;% \n  ggplot() +\n    geom_line(aes(x = ta_ym, y = value, color = cty_nm))  +\n    facet_wrap(~name, scales = \"free_y\") +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x=\"\", y= \"\",\n         title = \"경기도 카드 매출 추세\",\n         subtitle = \"BC 카드 월별 시군구 결재건수(단위: 만건)와 금액(단위:억원)\",\n         caption = \"출처: 경기도 데이터분석포털 민간 데이터셋\") +\n    scale_y_sqrt(labels = scales::comma) +\n    theme(legend.position = \"none\") +\n    scale_x_date(breaks = \"1 year\", minor_breaks = \"3 months\",\n                 date_labels = \"%Y\") +\n    geom_point(data = sgg_amt_max_tbl, aes(x=ta_ym, y = value, color = cty_nm)) +\n    geom_text_repel(data = sgg_amt_max_tbl, aes(x=ta_ym, y = value, color = cty_nm, label= cty_nm), size = 3)\n\nsgg_amt_tbl_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_시군구_매출_건수_추세.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsgg_amt_tbl_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#서해-인접-시군구",
    "href": "gg_analytics_center.html#서해-인접-시군구",
    "title": "지도제작 대회",
    "section": "\n2.3 서해 인접 시군구",
    "text": "2.3 서해 인접 시군구\n\n2.3.1 블록코드 시군구 매칭작업\n\n코드sea_sgg_mst &lt;- gg_blk_mst_raw %&gt;% \n  filter(str_detect(CTY_NM, \"(^김포)|(^안산)|(^평택)|(^화성)|(^시흥)\"))\n\n\n\n2.3.2 서해인접 시군구 월별 매출금액\n\n코드sea_sgg_mst_tbl &lt;- sea_sgg_mst %&gt;% janitor::clean_names() %&gt;% \n  select(cty_cd, cty_nm, admi_cd, admi_nm, blk_cd)\n\nsea_sgg_amt_tbl &lt;- amt_tbl %&gt;% \n  left_join(sea_sgg_mst_tbl) %&gt;% \n  group_by(ta_ym, cty_cd, cty_nm) %&gt;% \n  summarise(결재금액 = sum(total_amt, na.rm=TRUE) / 10^8,\n            결재건수 = sum(total_cnt, na.rm=TRUE) / 10^4) %&gt;% \n  ungroup() %&gt;% \n  drop_na()\n\nsea_sgg_amt_max_tbl &lt;- sea_sgg_amt_tbl %&gt;% \n  filter(ta_ym == max(ta_ym)) %&gt;% \n  pivot_longer(결재금액:결재건수)\n\nsea_sgg_amt_tbl_gg &lt;- sea_sgg_amt_tbl %&gt;% \n  pivot_longer(결재금액:결재건수) %&gt;% \n  ggplot() +\n    geom_line(aes(x = ta_ym, y = value, color = cty_nm))  +\n    facet_wrap(~name, scales = \"free_y\") +\n    theme_bw(base_family = \"MaruBuri\") +\n    labs(x=\"\", y= \"\",\n         title = \"경기도 카드 매출 추세\",\n         subtitle = \"BC 카드 월별 서해인접 시군구 결재건수(단위: 만건)와 금액(단위:억원)\",\n         caption = \"출처: 경기도 데이터분석포털 민간 데이터셋\") +\n    scale_y_sqrt(labels = scales::comma) +\n    theme(legend.position = \"none\") +\n    scale_x_date(breaks = \"1 year\", minor_breaks = \"3 months\",\n                 date_labels = \"%Y\") +\n    geom_point(data = sea_sgg_amt_max_tbl, aes(x=ta_ym, y = value, color = cty_nm)) +\n    geom_text_repel(data = sea_sgg_amt_max_tbl, aes(x=ta_ym, y = value, color = cty_nm, label= cty_nm), size = 3)\n\nsea_sgg_amt_tbl_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_서해인접_시군구_매출_건수_추세.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsea_sgg_amt_tbl_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#서해-인접-행정동",
    "href": "gg_analytics_center.html#서해-인접-행정동",
    "title": "지도제작 대회",
    "section": "\n2.4 서해 인접 행정동",
    "text": "2.4 서해 인접 행정동\n\n2.4.1 서해인접 시군구\n\n코드gg_blk_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/블록경계/블록_v6_경기도/tbshp_block_v6_gg_20210412.shp\")\n\nmst_tbl &lt;- read_csv(\"data/(공통)셀블록도로행정동/경기도_시군구_행정동_명,CD.csv\",\n                    locale = locale('ko',encoding='euc-kr'))\n\nsea_blk_sf &lt;- gg_blk_sf %&gt;% \n  left_join(mst_tbl) %&gt;% \n  filter(str_detect(CTY_NM, \"(^김포)|(^안산)|(^평택)|(^화성)|(^시흥)\")) \n\nsea_blk_sf %&gt;% \n  ggplot() +\n    geom_sf() +\n    theme_void()\n\n\n\n\n2017년 1월\n2023년 5월\n5개 시군구별\n\n\n\n\n코드김포_sf &lt;- st_read(\"data/sgg_map/김포시.geojson\")\n\namt_start_tbl &lt;- amt_tbl %&gt;% \n  filter(ta_ym == min(ta_ym))\n\namt_end_tbl &lt;- amt_tbl %&gt;% \n  filter(ta_ym == max(ta_ym))\n\nsea_blk_amt_sf &lt;- sea_blk_sf %&gt;% \n  janitor::clean_names() %&gt;% \n  left_join(amt_start_tbl) %&gt;% \n  mutate(total_manwon_amt = total_amt / 10^8)\n\nsea_blk_amt_sf &lt;- st_set_crs(sea_blk_amt_sf, sf::st_crs(김포_sf))\n\nsea_blk_amt_sf_gg &lt;- sea_blk_amt_sf %&gt;% \n  ggplot() +\n    geom_sf(aes(fill = total_manwon_amt)) +\n    geom_sf(data = sea_blk_amt_sf, color = \"red\", fill = \"transparent\") +\n    scale_fill_viridis_c(option = \"D\", direction = 1) +\n    theme_void() +\n    labs(fill = \"결재금액(억원)\")\n\nsea_blk_amt_sf_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_서해인접_시군구_매출_201701.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsea_blk_amt_sf_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드sea_blk_end_amt_sf &lt;- sea_blk_sf %&gt;% \n  janitor::clean_names() %&gt;% \n  left_join(amt_end_tbl) %&gt;% \n  mutate(total_manwon_amt = total_amt / 10^8)\n\nsea_blk_end_amt_sf &lt;- st_set_crs(sea_blk_end_amt_sf, sf::st_crs(김포_sf))\n\nsea_blk_end_amt_gg &lt;- sea_blk_end_amt_sf %&gt;% \n  ggplot() +\n    geom_sf(aes(fill = total_manwon_amt)) +\n    scale_fill_viridis_c(option = \"D\", direction = 1) +\n    theme_void() +\n    labs(fill = \"결재금액(억원)\")\n\nsea_blk_end_amt_gg\n\nragg::agg_png(\"images/BC/카드매출_월별_서해인접_시군구_매출_202305.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsea_blk_end_amt_gg\ndev.off()\n\n\n\n\n\n\n\n코드\nbbox_lim &lt;- st_bbox(sea_blk_end_amt_sf)\n\nsea_blk_end_amt_sf %&gt;% \n  ggplot() +\n    geom_sf(aes(fill = total_manwon_amt)) +\n    scale_fill_viridis_c(option = \"D\", direction = 1) +\n    theme_void() +\n    labs(fill = \"결재금액(억원)\") +\n    coord_sf(xlim = c(bbox_lim[1]-100000, bbox_lim[3]),\n             ylim = bbox_lim[c(2,4)])\n\n\n\n\n\n코드\nsgg_names &lt;- sea_blk_end_amt_sf %&gt;% \n  st_drop_geometry() %&gt;% \n  count(cty_nm) %&gt;% \n  pull(cty_nm)\n\nsgg_maps &lt;- map(.x = sgg_names, \n            .f = function(x) sea_blk_end_amt_sf %&gt;% \n              filter(cty_nm == x) %&gt;% \n              ggplot() +\n                geom_sf(aes(fill = total_manwon_amt)) +\n                scale_fill_viridis_c(option = \"D\", direction = 1) +\n                theme_void() +\n                labs(fill = \"결재금액(억원)\"))\n\n## use COWplot to combine and add single legend\nlibrary(cowplot)\n\nsgg_individual_plot &lt;- plot_grid(plotlist = sgg_maps, labels = sgg_names, label_size = 10, nrow = 2)\n\nsgg_individual_plot\n\nragg::agg_png(\"images/BC/카드매출_월별_서해인접_시군구_개별_매출_202305.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsgg_individual_plot\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#개-시군구별",
    "href": "gg_analytics_center.html#개-시군구별",
    "title": "지도제작 대회",
    "section": "\n5.7 5개 시군구별",
    "text": "5.7 5개 시군구별\n\n코드\nsgg_names &lt;- sea_blk_end_amt_sf %&gt;% \n  st_drop_geometry() %&gt;% \n  count(cty_nm) %&gt;% \n  pull(cty_nm)\n\nsgg_maps &lt;- map(.x = sgg_names, \n            .f = function(x) sea_blk_end_amt_sf %&gt;% \n              filter(cty_nm == x) %&gt;% \n              ggplot() +\n                geom_sf(aes(fill = total_manwon_amt)) +\n                scale_fill_viridis_c(option = \"D\", direction = 1) +\n                theme_void() +\n                labs(fill = \"결재금액(억원)\"))\n\n## use COWplot to combine and add single legend\nlibrary(cowplot)\n\nsgg_individual_plot &lt;- plot_grid(plotlist = sgg_maps, labels = sgg_names, label_size = 10, nrow = 2)\n\nsgg_individual_plot\n\nragg::agg_png(\"images/BC/카드매출_월별_서해인접_시군구_개별_매출_202305.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nsgg_individual_plot\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#지도",
    "href": "gg_analytics_center.html#지도",
    "title": "지도제작 대회",
    "section": "\n3.1 지도",
    "text": "3.1 지도\n\n\n경기도\n셀(격자)\n도로\n셀블럭\n\n\n\n\n코드library(sf)\n# gg_sf &lt;- sf::read_sf(\"(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/행정동경계_경기도_좌표4326.shp\")\n\ngg_sf &lt;- sf::read_sf(\"(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/tbshp_admi_gg_20210614.shp\")\n\ngg_sf %&gt;% \n  select(CTY_NM, geometry) %&gt;% \n  plot()\n\n\n\n\n\n\n자료구조는 다음과 같다.\n\n코드gg_sf %&gt;% \n  head() \n\n\n\n\n광명시 CTY_CD == 4121\n\n코드# cell_sf &lt;- sf::read_sf(\"(공통)셀블록도로행정동/셀(격자)/cell_gg_square_admi2_20210614.shp\")\n\n# fs::dir_create(\"km_sf\")\n# \n# cell_sf %&gt;% \n#   filter(CTY_CD == \"4121\") %&gt;% \n#   sf::write_sf(\"km_sf/kwangmyung.shp\")\n\nkwangmyung_cell_sf &lt;- sf::read_sf(\"km_sf/kwangmyung.shp\")\n\nkwangmyung_cell_sf %&gt;% \n  filter(CTY_CD == \"4121\") %&gt;% \n  select(CTY_CD, geometry) %&gt;% \n  plot()\n\n\n\n\n\n\n자료구조는 다음과 같다.\n\n코드kwangmyung_cell_sf\n\n\n\n\n\n코드road_sf &lt;- sf::read_sf(\"(공통)셀블록도로행정동/도로/addr_line_50m.shp\")\n\nplot(road_sf %&gt;% slice(1:500))\n\n\n\n\n\n\n자료구조는 다음과 같다.\n\n코드road_sf\n\n\n\n\n광명시 CTY_CD == 4121\n\n코드cell_block_raw &lt;- read_delim(\"(공통)셀블록도로행정동/셀_블록_행정동/kt_cell_v6_20210528.csv\")\n\ncell_block_mask &lt;- cell_block_raw %&gt;% \n  complete.cases()\n\ncell_block_raw &lt;- cell_block_raw %&gt;% \n  filter(cell_block_mask)\n\ncell_block_sf &lt;- st_as_sf(x = cell_block_raw, \n                          coords = c(\"X_AXIS\", \"Y_AXIS\"),\n                          crs = \"+proj=tmerc +lat_0=38 +lon_0=128 +k=0.9999 +x_0=400000 +y_0=600000 +ellps=bessel +towgs84=-115.8,474.99,674.11,1.16,-2.31,-1.63,6.43 +units=m +no_defs\")\n\nkwangmyung_block_cell_sf &lt;- cell_block_sf %&gt;% \n  mutate(CTY_CD = str_sub(ADMI_CD, 1, 4)) %&gt;% \n  filter(CTY_CD == \"4121\")\n\nkwangmyung_block_cell_sf %&gt;%\n  sf::write_sf(\"km_sf/kwangmyung_cell_block.shp\")\n\n\n\n코드kwangmyung_block_cell_sf &lt;- sf::read_sf(\"km_sf/kwangmyung_cell_block.shp\")\n\nkwangmyung_block_cell_sf %&gt;% \n  select(CTY_CD, geometry) %&gt;% \n  plot()"
  },
  {
    "objectID": "gg_analytics_center.html#행정동-결합",
    "href": "gg_analytics_center.html#행정동-결합",
    "title": "지도제작 대회",
    "section": "\n3.2 행정동 결합",
    "text": "3.2 행정동 결합\n\n3.2.1 시군구 행정동명\n\n코드sgg_cd_tbl &lt;- read_csv(\"data/(공통)셀블록도로행정동/경기도_시군구_행정동_명,CD.csv\") %&gt;% \n  mutate(MEGA_NM = iconv(MEGA_NM, \"euc-kr\", \"utf-8\"),\n         CTY_NM  = iconv(CTY_NM, \"euc-kr\", \"utf-8\"),\n         ADMI_NM  = iconv(ADMI_NM, \"euc-kr\", \"utf-8\"))\n\nsgg_cd_tbl\n\n\n\n3.2.2 셀코드\n시군구 행정동명에서 셀코드를 추출하는 방법을 기술한다.\n\n코드cell_cd_raw &lt;- read_csv(\"data/(공통)셀블록도로행정동/셀(격자)/cell_gg_square_admi2_20210614.csv\") \n\nget_city_cd &lt;- function(city_name = \"광명\") {\n  sgg_cd_tbl %&gt;% \n    filter(str_detect(CTY_NM, city_name)) %&gt;% \n    pull(CTY_CD) %&gt;% \n    unique()\n}\n\nkwangmyung_cell &lt;- cell_cd_raw %&gt;% \n  filter(CTY_CD == get_city_cd(\"광명\")) %&gt;% \n  pull(cell_id) %&gt;% \n  unique(.)\n\n\n\n\n광명시 행정동 지도\n셀 지도\n\n\n\n\n코드library(sf)\n\ngg_dong_sf &lt;- st_read(\"data/(공통)셀블록도로행정동/행정동경계/행정동경계_경기도/행정동경계_경기도_좌표4326.shp\")\n\nkm_dong_sf &lt;- gg_dong_sf %&gt;% \n  filter(str_sub(ADMI_CD, 1, 4) == get_city_cd(\"광명\"))\n\nplot(st_geometry(km_dong_sf))\n\n\n\n\n\n\n\n\n\n코드library(sf)\nlibrary(rgdal)\n\ngg_raw &lt;- sf::st_read(\"data/(공통)셀블록도로행정동/셀(중심점)/cell_gg_admi2_20210616.shp\")\n\n## 좌표계 변환 KATEC --&gt; WGS84\nkm_sf &lt;- gg_raw %&gt;% \n  filter(CTY_CD == get_city_cd(\"광명\")) %&gt;% \n  st_transform(crs = \"+proj=longlat +ellps=bessel +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\")\n\nkm_sf %&gt;%\n  st_write(\"data/km_cell.geojson\")\n\n\n\n\n\n\n\n코드library(sf)\n\nkm_sf &lt;- st_read(\"data/km_cell.geojson\")\n\nplot(st_geometry(km_sf))"
  },
  {
    "objectID": "gg_analytics_center.html#국가공간정보포털",
    "href": "gg_analytics_center.html#국가공간정보포털",
    "title": "지도제작 대회",
    "section": "\n3.3 국가공간정보포털",
    "text": "3.3 국가공간정보포털\n국가공간정보포털 (센서스경계)행정동경계 파일을 다운로드 받아 이를 점검해보자.\n한국 주요 좌표계 EPSG코드 및 proj4 인자 정리\n\n*Bessel 1841 경위도: 한국과 일본에 잘 맞는 지역타원체를 사용한 좌표계 EPSG:4004, EPSG:4162 (Korean 1985) +proj=longlat +ellps=bessel +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\n\n\n\n매칭\n광명시 행정동\n결합\n\n\n\n\n코드nsdi_sf &lt;- sf::st_read(\"data/kosis_map/Z_SOP_BND_ADM_DONG_PG.shp\")\n\nnsdi_sf &lt;- nsdi_sf %&gt;% \n  st_transform(crs = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +n8o_defs\")\n\n\nkm_nsdi_sf &lt;- nsdi_sf %&gt;% \n  mutate(CTY_CD = str_sub(ADM_CD, 1, 5)) %&gt;% \n  filter(CTY_CD == 31060)\n\n\n\n코드ggplot() +\n  geom_sf(data = km_sf, aes(geometry = geometry),\n          color = \"blue\", size = 0.01, alpha = 0.5) +  \n  geom_sf(data = km_nsdi_sf, aes(geometry = geometry),\n          color = \"red\", fill = \"white\", alpha = 0)\n\n\n\n\n\n\n\n\n\n코드library(sf)\n\nkm_dong_sf &lt;- gg_dong_sf %&gt;% \n  filter(str_sub(ADMI_CD, 1, 4) == get_city_cd(\"광명\")) %&gt;% \n  mutate(행정동 = str_sub(ADMI_CD, 1, 7)) %&gt;% \n  group_by(행정동) %&gt;% \n  summarize(geometry = st_union(geometry)) %&gt;% \n  st_transform(crs = \"+proj=longlat +ellps=bessel +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\")\n\nplot(st_geometry(km_dong_sf))\n\n\n\n\n\n\n\n\n\n코드ggplot() +\n  geom_sf(data = km_sf, aes(geometry = geometry),\n          color = \"blue\", size = 0.01, alpha = 0.5) +  \n  geom_sf(data = km_dong_sf, aes(geometry = geometry),\n          color = \"red\", fill = \"white\", alpha = 0)"
  },
  {
    "objectID": "gg_analytics_center.html#광명시-유동인구",
    "href": "gg_analytics_center.html#광명시-유동인구",
    "title": "지도제작 대회",
    "section": "\n3.4 광명시 유동인구",
    "text": "3.4 광명시 유동인구\n\n3.4.1 데이터셋\n\n3.4.1.1 2017년 6월 (Script)\n\n코드extrafont::loadfonts()\n\nkt_cell_files &lt;- fs::dir_ls(\"data/KT유동인구데이터/셀단위/sex_age/\")\n\nsex_age_raw &lt;- read_csv(\"data/KT유동인구데이터/셀단위/sex_age/sex_age_201706.csv\")\n\nkm_sex_age &lt;- sex_age_raw %&gt;% \n    ## 광명시만 추출\n  filter(cell_id %in% unique(km_cell_sf$cell_id)) %&gt;% \n  ## 자료구조 변환\n  pivot_longer(cols = M00_09:F60_up, names_to = \"name\", values_to = \"인구수\") %&gt;% \n  mutate(성별 = str_sub(name, 1,1),\n         연령대 = str_sub(name, 2, 6)) %&gt;% \n  ## 자료형 변환\n  mutate(연령대 = factor(연령대, levels = c(\"00_09\", \"10_19\", \"20_29\", \"30_39\", \"40_49\", \"50_59\", \"60_up\")),\n         성별 = factor(성별, levels = c(\"M\", \"F\"), labels = c(\"남성\", \"여성\"))) %&gt;% \n  select(-name)\n\nkm_grid_tbl &lt;- st_drop_geometry(grid_map) %&gt;% \n  as_tibble()\n\nkm_tbl &lt;- st_drop_geometry(km_map) %&gt;% \n  as_tibble()\n\nkm_dong_tbl &lt;- left_join(km_grid_tbl, km_tbl, by = c(\"MEGA_CD\", \"ADMI_CD\"))\n\nkm_sex_age_tbl &lt;- km_sex_age %&gt;% \n  left_join(km_dong_tbl)\n  \nkm_sex_age_tbl %&gt;% \n  group_by(etl_ym, ADMI_NM) %&gt;% \n  summarise(인구수 = sum(인구수))\n\n\n\n3.4.1.2 2017년 6월 (함수)\n\n코드\n## MEGA_CD, ADMI_CD, cell_id 결합\nkm_grid_tbl &lt;- st_drop_geometry(grid_map) %&gt;% \n  as_tibble()\n\nkm_tbl &lt;- st_drop_geometry(km_map) %&gt;% \n  as_tibble()\n\nkm_dong_tbl &lt;- left_join(km_grid_tbl, km_tbl, by = c(\"MEGA_CD\", \"ADMI_CD\"))\n\n## 광명시 \nget_km_sex_age &lt;- function(yearmon=\"data/KT유동인구데이터/셀단위/sex_age/sex_age_201706.csv\") {\n  \n  cat(\"\\n ------------------\\n\", yearmon, \"\\n\")\n  \n  sex_age_raw &lt;- read_csv(yearmon)\n\n  km_sex_age &lt;- sex_age_raw %&gt;% \n      ## 광명시만 추출\n    filter(cell_id %in% unique(km_cell_sf$cell_id)) %&gt;% \n    ## 자료구조 변환\n    pivot_longer(cols = M00_09:F60_up, names_to = \"name\", values_to = \"인구수\") %&gt;% \n    mutate(성별 = str_sub(name, 1,1),\n           연령대 = str_sub(name, 2, 6)) %&gt;% \n    ## 자료형 변환\n    mutate(연령대 = factor(연령대, levels = c(\"00_09\", \"10_19\", \"20_29\", \"30_39\", \"40_49\", \"50_59\", \"60_up\")),\n           성별 = factor(성별, levels = c(\"M\", \"F\"), labels = c(\"남성\", \"여성\"))) %&gt;% \n    select(-name)\n\n  km_sex_age_tbl &lt;- km_sex_age %&gt;% \n    left_join(km_dong_tbl)\n    \n  return(km_sex_age_tbl)\n}\n\nget_km_sex_age()\n\n\n\n3.4.1.3 2018~2022년\n\n코드kt_cell_files_raw &lt;- fs::dir_ls(\"data/KT유동인구데이터/셀단위/sex_age/\")\n\nkt_cell_files &lt;- kt_cell_files_raw %&gt;% \n  enframe() %&gt;% \n  ## 2018~2022년만 추출\n  mutate(년월 = str_sub(str_extract(name, \"\\\\d+\"), 1, 4)) %&gt;% \n  filter(!년월 %in% c(\"2017\")) %&gt;% \n  ## 2018~2022년만 추출\n  mutate(년월 = str_sub(str_extract(name, \"\\\\d+\"), 1, 6)) %&gt;% \n  mutate(년월 = lubridate::ym(년월))\n\nkm_age_sex_yearmon &lt;- kt_cell_files  %&gt;% \n  mutate(data = map(name, get_km_sex_age))\n\nkm_age_sex_yearmon %&gt;% \n  write_rds(\"data/km_age_sex_yearmon.rds\")"
  },
  {
    "objectID": "gg_analytics_center.html#분석",
    "href": "gg_analytics_center.html#분석",
    "title": "지도제작 대회",
    "section": "\n3.5 분석",
    "text": "3.5 분석\n\n\n추세\n행정동별\n성별\n연령대별\n\n\n\n\n코드extrafont::loadfonts()\n\nkm_age_sex_yearmon &lt;- \n  read_rds(\"data/km_age_sex_yearmon.rds\")\n\nkm_age_sex_yearmon_tbl &lt;- km_age_sex_yearmon %&gt;% \n  unnest(data) %&gt;% \n  mutate(년월 = lubridate::ym(etl_ym))\n\nkm_year_mon_total &lt;- km_age_sex_yearmon_tbl %&gt;% \n  group_by(년월) %&gt;% \n  summarise(인구수 = sum(인구수))\n\nkm_year_mon_total_gg &lt;- km_year_mon_total %&gt;% \n  mutate(인구수 = 인구수 / 10^4) %&gt;% \n  ggplot(aes(x=년월, y=인구수)) +\n    geom_point() +\n    geom_line() +\n    theme_bw(base_family = \"Malgun Gothic\") +\n    labs(title = \"광명시 월별 유동인구\",\n         subtitle = \"2018년 1월 ~ 2022년 12월\",\n         x = \"\",\n         y = \"유동인구(만명)\",\n         caption = \"데이터 출처: KT 유동인구 데이터(경기도 데이터분석센터\") +\n    scale_y_continuous(labels = scales::comma)\n\nkm_year_mon_total_gg\n\nfs::dir_create(\"images/KT\")\n\n\nragg::agg_png(\"images/KT/광명시_월별_유동인구.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nkm_year_mon_total_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드km_year_mon_total_dong &lt;- km_age_sex_yearmon_tbl %&gt;% \n  group_by(년월, ADMI_NM) %&gt;% \n  summarise(인구수 = sum(인구수))\n\nkm_year_mon_total_dong_gg &lt;- km_year_mon_total_dong %&gt;% \n  mutate(인구수 = 인구수 / 10^4) %&gt;% \n  ggplot(aes(x=년월, y=인구수)) +\n    geom_point(size = 0.5) +\n    geom_line() +\n    theme_bw(base_family = \"Malgun Gothic\") +\n    labs(title = \"광명시 동별 유동인구\",\n         subtitle = \"2018년 1월 ~ 2022년 12월\",\n         x = \"\",\n         y = \"유동인구(만명)\",\n         caption = \"데이터 출처: KT 유동인구 데이터(경기도 데이터분석센터\") +\n    scale_y_continuous(labels = scales::comma) +\n    facet_wrap(~ADMI_NM)\n\nkm_year_mon_total_dong_gg\n\nragg::agg_png(\"images/KT/광명시_월별_동별_유동인구.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nkm_year_mon_total_dong_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드km_year_mon_total_dong_sex &lt;- km_age_sex_yearmon_tbl %&gt;% \n  group_by(년월, ADMI_NM, 성별) %&gt;% \n  summarise(인구수 = sum(인구수))\n\nkm_year_mon_total_dong_sex_gg &lt;- km_year_mon_total_dong_sex %&gt;% \n  mutate(인구수 = 인구수 / 10^4) %&gt;% \n  ggplot(aes(x=년월, y=인구수, color = 성별)) +\n    geom_point(size = 0.5) +\n    geom_line() +\n    theme_bw(base_family = \"Malgun Gothic\") +\n    labs(title = \"광명시 동별 유동인구\",\n         subtitle = \"2018년 1월 ~ 2022년 12월\",\n         x = \"\",\n         y = \"유동인구(만명)\",\n         caption = \"데이터 출처: KT 유동인구 데이터(경기도 데이터분석센터\") +\n    scale_y_continuous(labels = scales::comma) +\n    facet_wrap(~ADMI_NM) +\n    scale_color_manual(values = c(\"남성\" = \"blue\", \"여성\" = \"black\"))\n\nkm_year_mon_total_dong_sex_gg\n\nragg::agg_png(\"images/KT/광명시_월별_동별_성별_유동인구.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nkm_year_mon_total_dong_sex_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드library(hrbrthemes)\n\nkm_year_mon_total_dong_age &lt;- km_age_sex_yearmon_tbl %&gt;% \n  mutate(세대별 = case_when(연령대 %in% c(\"00_09\", \"10_19\") ~ \"00~19\",\n                            연령대 %in% c(\"20_29\") ~ \"20~29\",\n                            연령대 %in% c(\"30_39\", \"40_49\") ~ \"30~49\",\n                            연령대 %in% c(\"50_59\") ~ \"50~59\",\n                            연령대 %in% c(\"60_up\") ~ \"60~이상\")) %&gt;% \n  group_by(년월, ADMI_NM, 세대별) %&gt;% \n  summarise(인구수 = sum(인구수))\n\nkm_year_mon_total_dong_age_gg &lt;- km_year_mon_total_dong_age %&gt;% \n  mutate(인구수 = 인구수 / 10^4) %&gt;% \n  ggplot(aes(x=년월, y=인구수, color = 세대별)) +\n    geom_point(size = 0.5) +\n    geom_line() +\n    theme_minimal(base_family = \"Malgun Gothic\") +\n    labs(title = \"광명시 세대별 유동인구\",\n         subtitle = \"2018년 1월 ~ 2022년 12월\",\n         x = \"\",\n         y = \"유동인구(만명)\",\n         caption = \"데이터 출처: KT 유동인구 데이터(경기도 데이터분석센터\") +\n    scale_y_continuous(labels = scales::comma) +\n    facet_wrap(~ADMI_NM) \n\nkm_year_mon_total_dong_age_gg\n\nragg::agg_png(\"images/KT/광명시_월별_동별_세대별_유동인구.png\", \n              width = 10, height = 7, units = \"in\", res = 600)\nkm_year_mon_total_dong_age_gg\ndev.off()"
  },
  {
    "objectID": "gg_analytics_center.html#소하2동",
    "href": "gg_analytics_center.html#소하2동",
    "title": "지도제작 대회",
    "section": "\n3.6 소하2동",
    "text": "3.6 소하2동\n\n코드library(classInt)\nextrafont::loadfonts()\n\nkm_dong_raw &lt;- km_age_sex_yearmon_tbl %&gt;% \n  filter(ADMI_NM == \"소하2동\")\n\nkm_dong_tbl &lt;- km_dong_raw %&gt;% \n  mutate(년도 = year(년월)) %&gt;% \n  group_by(cell_id,  x_axis, y_axis, 년도) %&gt;% \n  summarise(인구수 = sum(인구수) / 10^4) %&gt;% \n  ungroup() \n  \n\nbreaks &lt;- classInt::classIntervals(\n    km_dong_tbl$인구수,\n    n = 5,\n    style = \"fisher\"\n)$brks\n\nvmin &lt;- min(\n    km_dong_tbl$인구수,\n    na.rm = T\n)\n\nvmax &lt;- max(\n    km_dong_tbl$인구수,\n    na.rm = T\n)\n\nkm_dong_sf &lt;- st_as_sf(x = km_dong_tbl,                         \n        coords = c(\"x_axis\", \"y_axis\"),\n        crs = st_crs(km_map))\n\nkm_dong_year_gg &lt;- km_dong_sf %&gt;% \n  ggplot() +\n    geom_sf(aes(geometry=geometry, size = 인구수), alpha=0.3) +\n    facet_wrap(~년도, nrow = 1) +\n    scale_size_continuous(\n      breaks = round(breaks, 0),\n      range = c(1, 5),\n      limits = c(vmin, vmax),\n      name = \"유동인구\") +\n    theme_minimal(base_family = \"Malgun Gothic\") +\n    labs(title = \"광명시 소하2동 연도별 유동인구\",\n         subtitle = \"2018년 1월 ~ 2022년 12월\",\n         x = \"\",\n         y = \"\",\n         size = \"유동인구(만명)\",\n         caption = \"데이터 출처: KT 유동인구 데이터(경기도 데이터분석센터\") +\n    guides(size = guide_legend(nrow = 1)) +\n    theme(legend.position = \"bottom\")\n\n\nkm_dong_year_gg\n\nragg::agg_png(\"images/KT/광명시_소하2동_연도별_유동인구.png\", \n              width = 10, height = 5, units = \"in\", res = 600)\nkm_dong_year_gg\ndev.off()"
  },
  {
    "objectID": "precinct_history.html",
    "href": "precinct_history.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "File:South Korean legislative election map (2020).svg 파일을 가져와서 시각화한다.\n\n코드library(magick)\n\nprecinct_svg &lt;- magick::image_read(\"data/South_Korean_legislative_election_map_(2020).svg\")\nimage_ggplot(precinct_svg)"
  },
  {
    "objectID": "precinct_history.html#선거구수-및-정수-현황",
    "href": "precinct_history.html#선거구수-및-정수-현황",
    "title": "지도제작 대회",
    "section": "\n2.1 선거구수 및 정수 현황",
    "text": "2.1 선거구수 및 정수 현황\n\n코드library(tidyverse)\n\nelection_cd &lt;- tribble(~\"선거코드\", ~\"선거명\",\n         \"20200415\", \"제21대\",\n         \"20160413\", \"제20대\",\n         \"20120411\", \"제19대\",\n         \"20080409\", \"제18대\",\n         \"20040415\", \"제17대\")\n\nelection_cd |&gt; \n  gt::gt()\n\n\n\n\n\n\n선거코드\n      선거명\n    \n\n\n20200415\n제21대\n\n\n20160413\n제20대\n\n\n20120411\n제19대\n\n\n20080409\n제18대\n\n\n20040415\n제17대"
  },
  {
    "objectID": "precinct_history.html#제21대-총선",
    "href": "precinct_history.html#제21대-총선",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 총선",
    "text": "2.2 제21대 총선\n\n코드library(httr)\nlibrary(rvest)\n\nreq_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?electionId=0000000000\",\n           \"&requestURI=%2Felectioninfo%2F0000000000%2Fbi%2Fbigi01.jsp\",             \n           \"&topMenuId=BI\",\n           \"&secondMenuId=BIGI01\", \n           \"&menuId=BIGI01\", \n           \"&statementId=BIGI02\",\n           \"&oldElectionType=\", \n           \"&electionType=2\",\n           \"&electionName=20200415\",\n           \"&electionCode=-1\",\n           \"&x=73\", \n           \"&y=20\")\n\nresp &lt;- httr::GET(req_url)\n\nresp_lst &lt;- content(resp) |&gt; \n  html_table()\n\nprecinct &lt;- resp_lst[[1]] |&gt; \n  janitor::clean_names() |&gt; \n  select(1:3) |&gt; \n  set_names(c(\"시도명\", \"선거구수\", \"정수\")) |&gt; \n  slice(4:n()) \n\nprecinct |&gt; \n  gt::gt()\n\n\n\n\n\n\n시도명\n      선거구수\n      정수\n    \n\n\n전국(비례대표)\n1\n47\n\n\n서울특별시\n49\n49\n\n\n부산광역시\n18\n18\n\n\n대구광역시\n12\n12\n\n\n인천광역시\n13\n13\n\n\n광주광역시\n8\n8\n\n\n대전광역시\n7\n7\n\n\n울산광역시\n6\n6\n\n\n세종특별자치시\n2\n2\n\n\n경기도\n59\n59\n\n\n강원도\n8\n8\n\n\n충청북도\n8\n8\n\n\n충청남도\n11\n11\n\n\n전라북도\n10\n10\n\n\n전라남도\n10\n10\n\n\n경상북도\n13\n13\n\n\n경상남도\n16\n16\n\n\n제주특별자치도\n3\n3"
  },
  {
    "objectID": "precinct_history.html#함수로-변환",
    "href": "precinct_history.html#함수로-변환",
    "title": "지도제작 대회",
    "section": "\n2.3 함수로 변환",
    "text": "2.3 함수로 변환\n\n코드get_precinct &lt;- function(election='20200415') {\n  \n  req_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?electionId=0000000000\",\n           \"&requestURI=%2Felectioninfo%2F0000000000%2Fbi%2Fbigi01.jsp\",             \n           \"&topMenuId=BI\",\n           \"&secondMenuId=BIGI01\", \n           \"&menuId=BIGI01\", \n           \"&statementId=BIGI02\",\n           \"&oldElectionType=\", \n           \"&electionType=2\",\n           \"&electionName={election}\",\n           \"&electionCode=-1\",\n           \"&x=73\", \n           \"&y=20\")\n\n  resp &lt;- httr::GET(req_url)\n  \n  resp_lst &lt;- content(resp) |&gt; \n    html_table()\n  \n  precinct &lt;- resp_lst[[1]] |&gt; \n    janitor::clean_names() |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"시도명\", \"선거구수\", \"정수\")) |&gt; \n    slice(4:n()) \n  \n  return(precinct)\n}\n\nget_precinct()\n#&gt; # A tibble: 18 × 3\n#&gt;    시도명         선거구수 정수 \n#&gt;    &lt;chr&gt;          &lt;chr&gt;    &lt;chr&gt;\n#&gt;  1 전국(비례대표) 1        47   \n#&gt;  2 서울특별시     49       49   \n#&gt;  3 부산광역시     18       18   \n#&gt;  4 대구광역시     12       12   \n#&gt;  5 인천광역시     13       13   \n#&gt;  6 광주광역시     8        8    \n#&gt;  7 대전광역시     7        7    \n#&gt;  8 울산광역시     6        6    \n#&gt;  9 세종특별자치시 2        2    \n#&gt; 10 경기도         59       59   \n#&gt; 11 강원도         8        8    \n#&gt; 12 충청북도       8        8    \n#&gt; 13 충청남도       11       11   \n#&gt; 14 전라북도       10       10   \n#&gt; 15 전라남도       10       10   \n#&gt; 16 경상북도       13       13   \n#&gt; 17 경상남도       16       16   \n#&gt; 18 제주특별자치도 3        3"
  },
  {
    "objectID": "precinct_history.html#제1721대-총선",
    "href": "precinct_history.html#제1721대-총선",
    "title": "지도제작 대회",
    "section": "\n2.4 제17~21대 총선",
    "text": "2.4 제17~21대 총선\n\n코드precinct_raw &lt;- election_cd |&gt; \n  mutate(data = map(선거코드, get_precinct))\n\n# precinct_raw |&gt; \n#   write_rds(\"data/precinct_raw.rds\")\n\nprecinct_raw\n#&gt; # A tibble: 5 × 3\n#&gt;   선거코드 선거명 data             \n#&gt;   &lt;chr&gt;    &lt;chr&gt;  &lt;list&gt;           \n#&gt; 1 20200415 제21대 &lt;tibble [18 × 3]&gt;\n#&gt; 2 20160413 제20대 &lt;tibble [18 × 3]&gt;\n#&gt; 3 20120411 제19대 &lt;tibble [18 × 3]&gt;\n#&gt; 4 20080409 제18대 &lt;tibble [17 × 3]&gt;\n#&gt; 5 20040415 제17대 &lt;tibble [17 × 3]&gt;"
  },
  {
    "objectID": "precinct_history.html#지역구-vs-비례대표",
    "href": "precinct_history.html#지역구-vs-비례대표",
    "title": "지도제작 대회",
    "section": "\n3.1 지역구 vs 비례대표",
    "text": "3.1 지역구 vs 비례대표\n\n코드library(ggrepel)\nextrafont::loadfonts()\n\nprecinct_raw &lt;- \n  read_rds(\"data/precinct_raw.rds\")\n\nprecinct_tbl &lt;- precinct_raw |&gt; \n  unnest() |&gt; \n  mutate(선거구수 = parse_integer(선거구수),\n         정수     = parse_integer(정수)) |&gt; \n  mutate(지역비례 = ifelse(str_detect(시도명, \"전국\"), \"비례대표\", \"지역구\")) |&gt; \n  mutate(시도명 = ifelse(시도명 == \"제주도\", \"제주특별자치도\", 시도명))\n\nlocal_prop_gg &lt;- precinct_tbl |&gt; \n  group_by(선거명, 지역비례) |&gt; \n  summarise(정수 = sum(정수)) |&gt; \n  ggplot(aes(x = 선거명, y = 정수, group=지역비례)) +\n    geom_line(aes(color = 지역비례)) +\n    geom_point(aes(color = 지역비례), size = 3) +\n    geom_text_repel(aes(label = 정수, color = 지역비례), size = 4) +\n    theme_light(base_family = \"MaruBuri\") +\n    labs(x = \"\",\n         title = \"역대 국회의원선거 비례대표와 지역구 정수변화\",\n         ) +\n    theme(legend.position = \"top\") +\n    scale_color_manual(values = c(\"black\", \"blue\")) +\n    expand_limits(y=0)\n\nlocal_prop_gg\n\n\n\n\n\n\n코드\nragg::agg_jpeg(\"images/국회의원_지역_비례_정수.jpg\", \n              width = 10, height = 7, units = \"in\", res = 600)\nlocal_prop_gg\ndev.off()\n#&gt; png \n#&gt;   2"
  },
  {
    "objectID": "precinct_history.html#지역구-시도",
    "href": "precinct_history.html#지역구-시도",
    "title": "지도제작 대회",
    "section": "\n3.2 지역구 시도",
    "text": "3.2 지역구 시도\n\n코드library(gt)\nlibrary(gtExtras)\n\nprecinct_sido &lt;- precinct_tbl |&gt; \n  mutate(선거코드 = as.integer(선거코드)) |&gt; \n  filter(!str_detect(시도명, \"전국\")) |&gt; \n  filter(선거코드 == max(선거코드) | 선거코드 == min(선거코드)) |&gt; \n  select(시도명, 선거코드, 정수) |&gt; \n  pivot_wider(names_from = 선거코드, values_from = 정수, values_fill = 0) |&gt; \n  mutate(정수변화 =  `20200415` - `20040415`) |&gt; \n  arrange(-정수변화)\n  # janitor::adorn_totals(name = \"총합\")\n  \n\nprecinct_chg_gt &lt;- precinct_sido |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"국회의원 선거 지역구 시도별 정수 변화\"),\n    subtitle = md(\"중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(`20200415`, `20040415`, 정수변화),\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt; \n  ## 강조 -------------------------------------  \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 시도명 == \"경기도\",\n      columns  = 정수변화\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_fill(color = \"blue\", alpha = 0.1),\n    locations = cells_body(\n      rows = 정수변화 &gt; 0\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows = 정수변화 &lt; 0,\n      columns  = 정수변화\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_fill(color = \"red\", alpha = 0.1),\n    locations = cells_body(\n      rows = 정수변화 &lt; 0\n    )\n  ) |&gt;    \n  ## 변수명 -------------------------------------    \n  cols_label(\n    `20200415` = html(\"제21대 &lt;br&gt; 20200415\"),\n    `20040415` = html(\"제17대 &lt;br&gt; 20040415\")\n  )\n\nprecinct_chg_gt\n\n\n\n\n\n\n\n국회의원 선거 지역구 시도별 정수 변화\n    \n\n중앙선거관리위원회 선거통계\n    \n\n\n      시도명\n      제21대  20200415\n      제17대  20040415\n      정수변화\n    \n\n\n\n\n—\n253\n243\n10\n\n\n\n경기도\n59\n49\n10\n\n\n\n세종특별자치시\n2\n0\n2\n\n\n\n서울특별시\n49\n48\n1\n\n\n\n인천광역시\n13\n12\n1\n\n\n\n광주광역시\n8\n7\n1\n\n\n\n대전광역시\n7\n6\n1\n\n\n\n충청남도\n11\n10\n1\n\n\n\n부산광역시\n18\n18\n0\n\n\n\n대구광역시\n12\n12\n0\n\n\n\n울산광역시\n6\n6\n0\n\n\n\n강원도\n8\n8\n0\n\n\n\n충청북도\n8\n8\n0\n\n\n\n제주특별자치도\n3\n3\n0\n\n\n\n전라북도\n10\n11\n-1\n\n\n\n경상남도\n16\n17\n-1\n\n\n\n경상북도\n13\n15\n-2\n\n\n\n전라남도\n10\n13\n-3\n\n\n\n\n\n코드\n\nprecinct_chg_gt |&gt;\n  gtsave(filename = \"images/precinct_chg_gt.png\")"
  },
  {
    "objectID": "electorate.html#분석-1",
    "href": "electorate.html#분석-1",
    "title": "지도제작 대회",
    "section": "\n2.2 분석",
    "text": "2.2 분석\n\n2.2.1 총계\n\n코드library(tidyverse)\n\npop20_tbl &lt;- \n  read_csv(\"data/제20대총선_선거구_획정.csv\")\n\npop21_tbl &lt;- \n  read_csv(\"data/제21대총선_선거구_획정.csv\")\n\n\n\n2.2.2 시도별\n\n코드pop20_tbl |&gt; \n  count(시도명, name = \"선거구수\", sort=TRUE) |&gt; \n  mutate(비율 = 선거구수 / sum(선거구수)) |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(누적비율 = cumsum(비율)) \n#&gt; # A tibble: 17 × 4\n#&gt;    시도명         선거구수    비율 누적비율\n#&gt;    &lt;chr&gt;             &lt;int&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n#&gt;  1 경기도               65 0.246      0.246\n#&gt;  2 서울특별시           50 0.189      0.436\n#&gt;  3 부산광역시           19 0.0720     0.508\n#&gt;  4 경상남도             16 0.0606     0.568\n#&gt;  5 경상북도             13 0.0492     0.617\n#&gt;  6 인천광역시           13 0.0492     0.667\n#&gt;  7 충청남도             13 0.0492     0.716\n#&gt;  8 대구광역시           12 0.0455     0.761\n#&gt;  9 전라북도             11 0.0417     0.803\n#&gt; 10 전라남도             10 0.0379     0.841\n#&gt; 11 광주광역시            9 0.0341     0.875\n#&gt; 12 강원도                8 0.0303     0.905\n#&gt; 13 충청북도              8 0.0303     0.936\n#&gt; 14 대전광역시            7 0.0265     0.962\n#&gt; 15 울산광역시            6 0.0227     0.985\n#&gt; 16 제주특별자치도        3 0.0114     0.996\n#&gt; 17 세종특별자치시        1 0.00379    1"
  },
  {
    "objectID": "electorate.html#데이터셋",
    "href": "electorate.html#데이터셋",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# 0. packages -------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\n\n# 1. data -----------------------------------------------------------------\nurl &lt;- \"https://namu.wiki/w/%EC%A0%9C21%EB%8C%80%20%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90%20%EC%84%A0%EA%B1%B0/%EC%84%A0%EA%B1%B0%EA%B5%AC%20%ED%9A%8D%EC%A0%95\"\n\nsido_names &lt;- read_html(url) |&gt; \n  html_nodes(\"h3\") |&gt; \n  html_text()\n\nsido_tbl &lt;- sido_names |&gt; \n  enframe() |&gt; \n  separate(value, into = c(\"index\", \"시도명\", \"의석수\"), sep = \" \") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  select(시도명, 의석수)\n\nsido_tbl\n\nsido_numbers &lt;- sido_tbl |&gt; \n pull(의석수)\n\n## 1.2. 시도 인구수-----------------------------------------------------------------\n\nsido_raw &lt;- read_html(url) |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table(header = TRUE)\n\nsido_pop &lt;- sido_raw |&gt; \n  enframe() |&gt; \n  mutate(ncol = map_int(value, ncol),\n         nrow = map_int(value, nrow)) |&gt; \n  filter(ncol == 4) |&gt; \n  mutate(check = ifelse(nrow %in% sido_numbers, TRUE, FALSE)) |&gt; \n  filter(check) |&gt; \n  mutate(names = map(value, names)) |&gt; \n  mutate(names = map_chr(names, paste0, collapse=\" \")) |&gt; \n  filter(str_detect(names, \"변동 인구\")) |&gt; \n  select(value) \n\n## 1.3. 결합-----------------------------------------------------------------\n\npop_tbl &lt;- bind_cols(sido_tbl, sido_pop) |&gt; \n  unnest(value) |&gt; \n  rename(인구수 =  `인구[A]`) |&gt; \n  mutate(인구수 = parse_number(인구수)) |&gt; \n  mutate(선거구 = str_remove(선거구, \"\\\\[\\\\d{1,3}\\\\]\"))  \n\npop_tbl |&gt; \n  write_csv(\"data/제21대총선_선거구_획정.csv\")"
  },
  {
    "objectID": "electorate.html#분석",
    "href": "electorate.html#분석",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npop_tbl &lt;- \n  read_csv(\"data/제21대총선_선거구_획정.csv\")\n\npop_tbl |&gt; \n  mutate(변동여부 = ifelse(is.na(변동), \"없음\", \"변동\")) |&gt; \n  count(변동여부, name = \"선거구수\") |&gt; \n  mutate(비율 = 선거구수 / sum(선거구수)) |&gt; \n  janitor::adorn_totals(name = \"합계\")\n#&gt;  변동여부 선거구수      비율\n#&gt;      변동       45 0.1778656\n#&gt;      없음      208 0.8221344\n#&gt;      합계      253 1.0000000\n\n\n\n\n코드pop_tbl |&gt; \n  mutate(변동여부 = ifelse(is.na(변동), \"미변동\", \"변동\")) |&gt; \n  count(시도명, 변동여부, name = \"선거구수\") |&gt; \n  pivot_wider(names_from = 변동여부, values_from = 선거구수, values_fill = 0) |&gt; \n  mutate(총선거구 = 변동 + 미변동) |&gt; \n  mutate(변동비율 = 변동 / 총선거구) |&gt; \n  arrange(desc(변동비율))\n#&gt; # A tibble: 17 × 5\n#&gt;    시도명         미변동  변동 총선거구 변동비율\n#&gt;    &lt;chr&gt;           &lt;int&gt; &lt;int&gt;    &lt;int&gt;    &lt;dbl&gt;\n#&gt;  1 세종특별자치시      0     2        2    1    \n#&gt;  2 강원도              3     5        8    0.625\n#&gt;  3 전라남도            6     4       10    0.4  \n#&gt;  4 인천광역시          8     5       13    0.385\n#&gt;  5 경상북도            9     4       13    0.308\n#&gt;  6 경기도             41    18       59    0.305\n#&gt;  7 전라북도            7     3       10    0.3  \n#&gt;  8 경상남도           14     2       16    0.125\n#&gt;  9 부산광역시         16     2       18    0.111\n#&gt; 10 광주광역시          8     0        8    0    \n#&gt; 11 대구광역시         12     0       12    0    \n#&gt; 12 대전광역시          7     0        7    0    \n#&gt; 13 서울특별시         49     0       49    0    \n#&gt; 14 울산광역시          6     0        6    0    \n#&gt; 15 제주특별자치도      3     0        3    0    \n#&gt; 16 충청남도           11     0       11    0    \n#&gt; 17 충청북도            8     0        8    0"
  },
  {
    "objectID": "electorate.html#데이터셋-1",
    "href": "electorate.html#데이터셋-1",
    "title": "지도제작 대회",
    "section": "\n2.1 데이터셋",
    "text": "2.1 데이터셋\n\n코드# 0. packages -------------------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(rvest)\n\n# 1. data -----------------------------------------------------------------\nurl &lt;- \"https://namu.wiki/w/%EC%A0%9C20%EB%8C%80%20%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90%20%EC%84%A0%EA%B1%B0/%EC%84%A0%EA%B1%B0%EA%B5%AC%20%ED%9A%8D%EC%A0%95\"\n\nsido_names &lt;- read_html(url) |&gt; \n  html_nodes(\"h3\") |&gt; \n  html_text()\n\nsido20_tbl &lt;- sido_names |&gt; \n  enframe() |&gt; \n  separate(value, into = c(\"index\", \"idx2\", \"시도명\"), sep = \"\\\\.\")  |&gt; \n  mutate(시도명 = str_extract(시도명, pattern = '(.*?)(?=\\\\[)') |&gt; str_trim())  |&gt; \n  select(시도명)\n\nsido20_tbl\n\n## 1.2. 시도 인구수-----------------------------------------------------------------\n\nsido20_raw &lt;- read_html(url) |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table(header = TRUE)\n\nsido20_pop &lt;- sido20_raw |&gt; \n  enframe() |&gt; \n  mutate(names = map(value, names)) |&gt; \n  mutate(names = map_chr(names, paste0, collapse=\" \")) |&gt; \n  filter(str_detect(names, \"선거구의 명칭\")) |&gt; \n  select(value) \n\n## 1.3. 결합-----------------------------------------------------------------\n\npop20_tbl &lt;- bind_cols(sido20_tbl, sido20_pop) |&gt; \n  unnest(value) |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  rename(인구수 =  인구,\n         선거구 = 선거구의_명칭) |&gt; \n  mutate(인구수 = parse_number(인구수)) |&gt; \n  mutate(선거구 = str_remove(선거구, \"\\\\[\\\\d{1,3}\\\\]\"))\n\npop20_tbl |&gt; \n  write_csv(\"data/제20대총선_선거구_획정.csv\")"
  },
  {
    "objectID": "electorate.html#변경된-선거구",
    "href": "electorate.html#변경된-선거구",
    "title": "지도제작 대회",
    "section": "\n3.1 변경된 선거구",
    "text": "3.1 변경된 선거구\n\n코드pop_tbl |&gt; \n  count(변경내역)\n#&gt; # A tibble: 3 × 2\n#&gt;   변경내역     n\n#&gt;   &lt;chr&gt;    &lt;int&gt;\n#&gt; 1 변동없음   232\n#&gt; 2 생성        21\n#&gt; 3 소멸        21"
  },
  {
    "objectID": "electorate.html#제21대-선거결과",
    "href": "electorate.html#제21대-선거결과",
    "title": "지도제작 대회",
    "section": "\n3.1 제21대 선거결과",
    "text": "3.1 제21대 선거결과\n\n코드winner_21 &lt;- krvote::chongun_winner |&gt; \n  ungroup() |&gt; \n  rename(시도명 = sido_name,\n         선거구 = 선거구명) |&gt;  \n  filter(cs_name == \"제21대\")\n\n\npop_tbl |&gt; \n  filter(변경내역 == \"생성\") |&gt; \n  left_join(winner_21, by = c(\"시도명\", \"선거구\")) |&gt; \n  count(정당명, name = \"지역구수\") |&gt; \n  mutate(비율 = 지역구수 / sum(지역구수))\n#&gt; # A tibble: 3 × 3\n#&gt;   정당명       지역구수   비율\n#&gt;   &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;\n#&gt; 1 더불어민주당       11 0.524 \n#&gt; 2 무소속              1 0.0476\n#&gt; 3 미래통합당          9 0.429"
  },
  {
    "objectID": "electorate.html#제20대-선거결과",
    "href": "electorate.html#제20대-선거결과",
    "title": "지도제작 대회",
    "section": "\n3.2 제20대 선거결과",
    "text": "3.2 제20대 선거결과\n\n코드winner_20 &lt;- krvote::chongun_winner |&gt; \n  ungroup() |&gt; \n  rename(시도명 = sido_name,\n         선거구 = 선거구명) |&gt;  \n  filter(cs_name == \"제20대\")\n\n\npop_tbl |&gt; \n  filter(변경내역 == \"소멸\") |&gt; \n  left_join(winner_20, by = c(\"시도명\", \"선거구\")) |&gt; \n  count(정당명, name = \"지역구수\") |&gt; \n  mutate(비율 = 지역구수 / sum(지역구수))\n#&gt; # A tibble: 4 × 3\n#&gt;   정당명       지역구수   비율\n#&gt;   &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;\n#&gt; 1 국민의당            1 0.0476\n#&gt; 2 더불어민주당        6 0.286 \n#&gt; 3 무소속              4 0.190 \n#&gt; 4 새누리당           10 0.476"
  },
  {
    "objectID": "electorate.html#선거구-총계",
    "href": "electorate.html#선거구-총계",
    "title": "지도제작 대회",
    "section": "\n4.1 선거구 총계",
    "text": "4.1 선거구 총계\n\n코드library(gt)\nlibrary(gtExtras)\n\nchg_total_gt &lt;- pop_tbl |&gt; \n  count(변경내역, name = \"선거구수\") |&gt; \n  pivot_wider(names_from = 변경내역, values_from = 선거구수)  |&gt; \n  mutate(비율 = 생성 / (변동없음+생성),\n         총선거구 = 생성 + 변동없음) |&gt; \n  relocate(총선거구, .before = 변동없음) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"변경된 국회의원 선거구\"),\n    subtitle = md(\"나무위키: 제21대 국회의원 선거/선거구 획정 \")\n  ) |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  tab_spanner(\n    label = \"변경 선거구수\",\n    columns = c(\n      생성, 소멸\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 비율\n    )\n  )\n\nchg_total_gt\n\n\n\n\n\n\n\n변경된 국회의원 선거구\n    \n\n나무위키: 제21대 국회의원 선거/선거구 획정\n    \n\n총선거구\n      변동없음\n      \n        변경 선거구수\n      \n      비율\n    \n\n생성\n      소멸\n    \n\n\n253\n232\n21\n21\n8.3%\n\n\n\n\n코드\nchg_total_gt |&gt;\n  gtsave(filename = \"images/chg_total_gt.png\")"
  },
  {
    "objectID": "electorate.html#정당별-선거결과",
    "href": "electorate.html#정당별-선거결과",
    "title": "지도제작 대회",
    "section": "\n4.2 정당별 선거결과",
    "text": "4.2 정당별 선거결과\n\n코드winner_21 &lt;- krvote::chongun_winner |&gt; \n  ungroup() |&gt; \n  rename(시도명 = sido_name,\n         선거구 = 선거구명) |&gt;  \n  filter(cs_name == \"제21대\")\n\nchg_party_gt &lt;- pop_tbl |&gt; \n  filter(변경내역 == \"생성\") |&gt; \n  left_join(winner_21, by = c(\"시도명\", \"선거구\")) |&gt; \n  count(정당명, name = \"지역구수\") |&gt; \n  mutate(비율 = 지역구수 / sum(지역구수)) |&gt; \n  arrange(desc(지역구수)) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"변경 국회의원 선거구 선거결과\"),\n    subtitle = md(\"나무위키 및 중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(지역구수),\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 1),\n    side = \"top\"\n  )  \n\nchg_party_gt\n\n\n\n\n\n\n\n변경 국회의원 선거구 선거결과\n    \n\n나무위키 및 중앙선거관리위원회 선거통계\n    \n\n\n      정당명\n      지역구수\n      비율\n    \n\n\n\n\n—\n21\n100.0%\n\n\n\n더불어민주당\n11\n52.4%\n\n\n\n미래통합당\n9\n42.9%\n\n\n\n무소속\n1\n4.8%\n\n\n\n\n\n코드\nchg_party_gt |&gt;\n  gtsave(filename = \"images/chg_party_gt.png\")"
  },
  {
    "objectID": "electorate.html#시도별-선거구",
    "href": "electorate.html#시도별-선거구",
    "title": "지도제작 대회",
    "section": "\n4.3 시도별 선거구",
    "text": "4.3 시도별 선거구\n\n코드winner_21 &lt;- krvote::chongun_winner |&gt; \n  ungroup() |&gt; \n  rename(시도명 = sido_name,\n         선거구 = 선거구명) |&gt;  \n  filter(cs_name == \"제21대\")\n\nchg_party_sido_gt &lt;- pop_tbl |&gt; \n  filter(변경내역 == \"생성\") |&gt; \n  left_join(winner_21, by = c(\"시도명\", \"선거구\")) |&gt; \n  count(시도명, 정당명, name = \"지역구수\") |&gt; \n  mutate(비율 = 지역구수 / sum(지역구수)) |&gt; \n  arrange(desc(지역구수)) |&gt; \n  gt(groupname_col = \"정당명\") |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"시도별 변경 국회의원 선거구 선거결과\"),\n    subtitle = md(\"나무위키 및 중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(지역구수),\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 1),\n    side = \"top\"\n  )  \n\nchg_party_sido_gt\n\n\n\n\n\n\n\n시도별 변경 국회의원 선거구 선거결과\n    \n\n나무위키 및 중앙선거관리위원회 선거통계\n    \n\n\n      시도명\n      지역구수\n      비율\n    \n\n\n\n\n—\n21\n100.0%\n\n\n더불어민주당\n    \n\n\n경기도\n5\n23.8%\n\n\n\n세종특별자치시\n2\n9.5%\n\n\n\n전라남도\n2\n9.5%\n\n\n\n강원도\n1\n4.8%\n\n\n\n인천광역시\n1\n4.8%\n\n\n미래통합당\n    \n\n\n강원도\n4\n19.0%\n\n\n\n경상북도\n4\n19.0%\n\n\n\n인천광역시\n1\n4.8%\n\n\n무소속\n    \n\n\n인천광역시\n1\n4.8%\n\n\n\n\n\n코드\nchg_party_sido_gt |&gt;\n  gtsave(filename = \"images/chg_party_sido_gt.png\")"
  },
  {
    "objectID": "precinct_sido.html",
    "href": "precinct_sido.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(httr2)\n\nlibrary(httr)\n\n# Set the parameters\nparams &lt;- list(\n  pageNo = 1,\n  numOfRows = 1000,\n  resultType = \"json\",\n  sgId = 20200415,\n  sgTypecode = 2,\n  sdName = \"서울특별시\",\n  wiwName = \"종로구\",\n  serviceKey = Sys.getenv('NEC_KEY')\n)\n\n# Construct the URL\nURL &lt;- \"http://apis.data.go.kr/9760000/ElcntInfoInqireService/getElpcElcntInfoInqire\"\n\n# Make the GET request\nres &lt;- GET(url = URL, query = params)\n\nres_text &lt;- content(res, as = 'text')\n\nres_json &lt;- jsonlite::fromJSON(res_text)\n\nres_json$getElpcElcntInfoInqire$item \n#&gt;    num     sgId     sdName      sggName  wiwName emdCount tpgCount ppltCnt\n#&gt; 1    1 20200415 서울특별시         합계     합계      424     2252 9736986\n#&gt; 2    2 20200415 서울특별시       종로구     합계       17       43  151296\n#&gt; 3    3 20200415 서울특별시       종로구   종로구       17       43  151296\n#&gt; 4    4 20200415 서울특별시 중구성동구갑     합계       13       52  217842\n#&gt; 5    5 20200415 서울특별시 중구성동구갑   성동구       13       52  217842\n#&gt; 6    6 20200415 서울특별시 중구성동구을     합계       19       63  207715\n#&gt; 7    7 20200415 서울특별시 중구성동구을     중구       19       63  207715\n#&gt; 8    8 20200415 서울특별시       용산구     합계       16       59  229623\n#&gt; 9    9 20200415 서울특별시       용산구   용산구       16       59  229623\n#&gt; 10  10 20200415 서울특별시     광진구갑     합계        8       42  179793\n#&gt; 11  11 20200415 서울특별시     광진구갑   광진구        8       42  179793\n#&gt; 12  12 20200415 서울특별시     광진구을     합계        7       42  170817\n#&gt; 13  13 20200415 서울특별시     광진구을   광진구        7       42  170817\n#&gt; 14  14 20200415 서울특별시   동대문구갑     합계        8       44  165160\n#&gt; 15  15 20200415 서울특별시   동대문구갑 동대문구        8       44  165160\n#&gt; 16  16 20200415 서울특별시   동대문구을     합계        6       43  181003\n#&gt; 17  17 20200415 서울특별시   동대문구을 동대문구        6       43  181003\n#&gt; 18  18 20200415 서울특별시     중랑구갑     합계        8       39  175556\n#&gt; 19  19 20200415 서울특별시     중랑구갑   중랑구        8       39  175556\n#&gt; 20  20 20200415 서울특별시     중랑구을     합계        8       47  220352\n#&gt; 21  21 20200415 서울특별시     중랑구을   중랑구        8       47  220352\n#&gt; 22  22 20200415 서울특별시     성북구갑     합계       11       49  234555\n#&gt; 23  23 20200415 서울특별시     성북구갑   성북구       11       49  234555\n#&gt; 24  24 20200415 서울특별시     성북구을     합계        9       47  208048\n#&gt; 25  25 20200415 서울특별시     성북구을   성북구        9       47  208048\n#&gt; 26  26 20200415 서울특별시     강북구갑     합계        7       38  156283\n#&gt; 27  27 20200415 서울특별시     강북구갑   강북구        7       38  156283\n#&gt; 28  28 20200415 서울특별시     강북구을     합계        6       43  156685\n#&gt; 29  29 20200415 서울특별시     강북구을   강북구        6       43  156685\n#&gt; 30  30 20200415 서울특별시     도봉구갑     합계        7       38  162896\n#&gt; 31  31 20200415 서울특별시     도봉구갑   도봉구        7       38  162896\n#&gt; 32  32 20200415 서울특별시     도봉구을     합계        7       42  168619\n#&gt; 33  33 20200415 서울특별시     도봉구을   도봉구        7       42  168619\n#&gt; 34  34 20200415 서울특별시     노원구갑     합계        5       38  160158\n#&gt; 35  35 20200415 서울특별시     노원구갑   노원구        5       38  160158\n#&gt; 36  36 20200415 서울특별시     노원구을     합계        7       43  196550\n#&gt; 37  37 20200415 서울특별시     노원구을   노원구        7       43  196550\n#&gt; 38  38 20200415 서울특별시     노원구병     합계        7       38  174623\n#&gt; 39  39 20200415 서울특별시     노원구병   노원구        7       38  174623\n#&gt; 40  40 20200415 서울특별시     은평구갑     합계        9       49  236540\n#&gt; 41  41 20200415 서울특별시     은평구갑   은평구        9       49  236540\n#&gt; 42  42 20200415 서울특별시     은평구을     합계        7       48  241845\n#&gt; 43  43 20200415 서울특별시     은평구을   은평구        7       48  241845\n#&gt; 44  44 20200415 서울특별시   서대문구갑     합계        7       39  148667\n#&gt; 45  45 20200415 서울특별시   서대문구갑 서대문구        7       39  148667\n#&gt; 46  46 20200415 서울특별시   서대문구을     합계        7       39  163753\n#&gt; 47  47 20200415 서울특별시   서대문구을 서대문구        7       39  163753\n#&gt; 48  48 20200415 서울특별시     마포구갑     합계        7       40  157500\n#&gt; 49  49 20200415 서울특별시     마포구갑   마포구        7       40  157500\n#&gt; 50  50 20200415 서울특별시     마포구을     합계        9       53  217048\n#&gt; 51  51 20200415 서울특별시     마포구을   마포구        9       53  217048\n#&gt; 52  52 20200415 서울특별시     양천구갑     합계        9       57  252921\n#&gt; 53  53 20200415 서울특별시     양천구갑   양천구        9       57  252921\n#&gt; 54  54 20200415 서울특별시     양천구을     합계        9       51  203671\n#&gt; 55  55 20200415 서울특별시     양천구을   양천구        9       51  203671\n#&gt; 56  56 20200415 서울특별시     강서구갑     합계        6       40  203177\n#&gt; 57  57 20200415 서울특별시     강서구갑   강서구        6       40  203177\n#&gt; 58  58 20200415 서울특별시     강서구을     합계        7       53  201044\n#&gt; 59  59 20200415 서울특별시     강서구을   강서구        7       53  201044\n#&gt; 60  60 20200415 서울특별시     강서구병     합계        7       37  185333\n#&gt; 61  61 20200415 서울특별시     강서구병   강서구        7       37  185333\n#&gt; 62  62 20200415 서울특별시     구로구갑     합계        9       55  238812\n#&gt; 63  63 20200415 서울특별시     구로구갑   구로구        9       55  238812\n#&gt; 64  64 20200415 서울특별시     구로구을     합계        7       44  167152\n#&gt; 65  65 20200415 서울특별시     구로구을   구로구        7       44  167152\n#&gt; 66  66 20200415 서울특별시       금천구     합계       10       59  232751\n#&gt; 67  67 20200415 서울특별시       금천구   금천구       10       59  232751\n#&gt; 68  68 20200415 서울특별시   영등포구갑     합계        9       50  213665\n#&gt; 69  69 20200415 서울특별시   영등포구갑 영등포구        9       50  213665\n#&gt; 70  70 20200415 서울특별시   영등포구을     합계        9       46  158029\n#&gt; 71  71 20200415 서울특별시   영등포구을 영등포구        9       46  158029\n#&gt; 72  72 20200415 서울특별시     동작구갑     합계        8       46  212103\n#&gt; 73  73 20200415 서울특별시     동작구갑   동작구        8       46  212103\n#&gt; 74  74 20200415 서울특별시     동작구을     합계        7       41  183047\n#&gt; 75  75 20200415 서울특별시     동작구을   동작구        7       41  183047\n#&gt; 76  76 20200415 서울특별시     관악구갑     합계       11       53  268997\n#&gt; 77  77 20200415 서울특별시     관악구갑   관악구       11       53  268997\n#&gt; 78  78 20200415 서울특별시     관악구을     합계       10       49  230456\n#&gt; 79  79 20200415 서울특별시     관악구을   관악구       10       49  230456\n#&gt; 80  80 20200415 서울특별시     서초구갑     합계        9       46  198810\n#&gt; 81  81 20200415 서울특별시     서초구갑   서초구        9       46  198810\n#&gt; 82  82 20200415 서울특별시     서초구을     합계        9       53  232128\n#&gt; 83  83 20200415 서울특별시     서초구을   서초구        9       53  232128\n#&gt; 84  84 20200415 서울특별시     강남구갑     합계        7       42  192324\n#&gt; 85  85 20200415 서울특별시     강남구갑   강남구        7       42  192324\n#&gt; 86  86 20200415 서울특별시     강남구을     합계        8       40  166628\n#&gt; 87  87 20200415 서울특별시     강남구을   강남구        8       40  166628\n#&gt; 88  88 20200415 서울특별시     강남구병     합계        7       37  186403\n#&gt; 89  89 20200415 서울특별시     강남구병   강남구        7       37  186403\n#&gt; 90  90 20200415 서울특별시     송파구갑     합계        9       39  186538\n#&gt; 91  91 20200415 서울특별시     송파구갑   송파구        9       39  186538\n#&gt; 92  92 20200415 서울특별시     송파구을     합계        8       48  234842\n#&gt; 93  93 20200415 서울특별시     송파구을   송파구        8       48  234842\n#&gt; 94  94 20200415 서울특별시     송파구병     합계       10       53  253364\n#&gt; 95  95 20200415 서울특별시     송파구병   송파구       10       53  253364\n#&gt; 96  96 20200415 서울특별시     강동구갑     합계       10       57  265882\n#&gt; 97  97 20200415 서울특별시     강동구갑   강동구       10       57  265882\n#&gt; 98  98 20200415 서울특별시     강동구을     합계        7       38  185982\n#&gt; 99  99 20200415 서울특별시     강동구을   강동구        7       38  185982\n#&gt;    ntabPpltCnt frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt\n#&gt; 1        29483            0    8465419      25796             0       4088006\n#&gt; 2          891            0     134516        778             0         65194\n#&gt; 3          891            0     134516        778             0         65194\n#&gt; 4          656            0     192161        571             0         94727\n#&gt; 5          656            0     192161        571             0         94727\n#&gt; 6         1029            0     183779        921             0         88334\n#&gt; 7         1029            0     183779        921             0         88334\n#&gt; 8         1677            0     203233       1516             0         97097\n#&gt; 9         1677            0     203233       1516             0         97097\n#&gt; 10         398            0     156559        366             0         75276\n#&gt; 11         398            0     156559        366             0         75276\n#&gt; 12         492            0     152526        431             0         73153\n#&gt; 13         492            0     152526        431             0         73153\n#&gt; 14         477            0     148982        424             0         74192\n#&gt; 15         477            0     148982        424             0         74192\n#&gt; 16         363            0     156971        318             0         77044\n#&gt; 17         363            0     156971        318             0         77044\n#&gt; 18         252            0     158409        220             0         78771\n#&gt; 19         252            0     158409        220             0         78771\n#&gt; 20         330            0     192460        273             0         94288\n#&gt; 21         330            0     192460        273             0         94288\n#&gt; 22         722            0     202294        621             0         95779\n#&gt; 23         722            0     202294        621             0         95779\n#&gt; 24         424            0     180743        365             0         87606\n#&gt; 25         424            0     180743        365             0         87606\n#&gt; 26         310            0     141126        277             0         68638\n#&gt; 27         310            0     141126        277             0         68638\n#&gt; 28         245            0     137495        213             0         66258\n#&gt; 29         245            0     137495        213             0         66258\n#&gt; 30         330            0     142625        289             0         68500\n#&gt; 31         330            0     142625        289             0         68500\n#&gt; 32         328            0     148641        294             0         72729\n#&gt; 33         328            0     148641        294             0         72729\n#&gt; 34         270            0     138917        226             0         67429\n#&gt; 35         270            0     138917        226             0         67429\n#&gt; 36         318            0     163736        273             0         76767\n#&gt; 37         318            0     163736        273             0         76767\n#&gt; 38         284            0     151435        235             0         72650\n#&gt; 39         284            0     151435        235             0         72650\n#&gt; 40         495            0     206917        442             0         99237\n#&gt; 41         495            0     206917        442             0         99237\n#&gt; 42         658            0     210129        585             0         99573\n#&gt; 43         658            0     210129        585             0         99573\n#&gt; 44         701            0     131930        623             0         62081\n#&gt; 45         701            0     131930        623             0         62081\n#&gt; 46         455            0     141386        396             0         67931\n#&gt; 47         455            0     141386        396             0         67931\n#&gt; 48         712            0     136147        628             0         64353\n#&gt; 49         712            0     136147        628             0         64353\n#&gt; 50         797            0     189669        690             0         87760\n#&gt; 51         797            0     189669        690             0         87760\n#&gt; 52         651            0     206747        558             0         99218\n#&gt; 53         651            0     206747        558             0         99218\n#&gt; 54         342            0     176413        285             0         86957\n#&gt; 55         342            0     176413        285             0         86957\n#&gt; 56         404            0     173756        353             0         83096\n#&gt; 57         404            0     173756        353             0         83096\n#&gt; 58         502            0     176017        451             0         84427\n#&gt; 59         502            0     176017        451             0         84427\n#&gt; 60         411            0     161351        362             0         77455\n#&gt; 61         411            0     161351        362             0         77455\n#&gt; 62         376            0     205756        319             0        100784\n#&gt; 63         376            0     205756        319             0        100784\n#&gt; 64         416            0     146644        354             0         72312\n#&gt; 65         416            0     146644        354             0         72312\n#&gt; 66         364            0     207730        297             0        105281\n#&gt; 67         364            0     207730        297             0        105281\n#&gt; 68         591            0     187997        514             0         93291\n#&gt; 69         591            0     187997        514             0         93291\n#&gt; 70         622            0     139384        553             0         67927\n#&gt; 71         622            0     139384        553             0         67927\n#&gt; 72         560            0     185301        490             0         89132\n#&gt; 73         560            0     185301        490             0         89132\n#&gt; 74         604            0     162038        509             0         77588\n#&gt; 75         604            0     162038        509             0         77588\n#&gt; 76         616            0     243127        540             0        118304\n#&gt; 77         616            0     243127        540             0        118304\n#&gt; 78         426            0     209866        373             0        108403\n#&gt; 79         426            0     209866        373             0        108403\n#&gt; 80        1180            0     162807       1046             0         75439\n#&gt; 81        1180            0     162807       1046             0         75439\n#&gt; 82        1269            0     196164       1109             0         93426\n#&gt; 83        1269            0     196164       1109             0         93426\n#&gt; 84        1673            0     167537       1448             0         77635\n#&gt; 85        1673            0     167537       1448             0         77635\n#&gt; 86         614            0     140330        547             0         66528\n#&gt; 87         614            0     140330        547             0         66528\n#&gt; 88        1031            0     151713        908             0         71929\n#&gt; 89        1031            0     151713        908             0         71929\n#&gt; 90         670            0     159514        591             0         75389\n#&gt; 91         670            0     159514        591             0         75389\n#&gt; 92         919            0     199967        824             0         93830\n#&gt; 93         919            0     199967        824             0         93830\n#&gt; 94         618            0     215647        538             0        105532\n#&gt; 95         618            0     215647        538             0        105532\n#&gt; 96         566            0     221217        489             0        107873\n#&gt; 97         566            0     221217        489             0        107873\n#&gt; 98         444            0     165610        363             0         80883\n#&gt; 99         444            0     165610        363             0         80883\n#&gt;    cfmtnManRacnt cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt\n#&gt; 1          10513                0       4377413         15283                0\n#&gt; 2            327                0         69322           451                0\n#&gt; 3            327                0         69322           451                0\n#&gt; 4            226                0         97434           345                0\n#&gt; 5            226                0         97434           345                0\n#&gt; 6            346                0         95445           575                0\n#&gt; 7            346                0         95445           575                0\n#&gt; 8            612                0        106136           904                0\n#&gt; 9            612                0        106136           904                0\n#&gt; 10           148                0         81283           218                0\n#&gt; 11           148                0         81283           218                0\n#&gt; 12           175                0         79373           256                0\n#&gt; 13           175                0         79373           256                0\n#&gt; 14           169                0         74790           255                0\n#&gt; 15           169                0         74790           255                0\n#&gt; 16           128                0         79927           190                0\n#&gt; 17           128                0         79927           190                0\n#&gt; 18            87                0         79638           133                0\n#&gt; 19            87                0         79638           133                0\n#&gt; 20           109                0         98172           164                0\n#&gt; 21           109                0         98172           164                0\n#&gt; 22           244                0        106515           377                0\n#&gt; 23           244                0        106515           377                0\n#&gt; 24           157                0         93137           208                0\n#&gt; 25           157                0         93137           208                0\n#&gt; 26           123                0         72488           154                0\n#&gt; 27           123                0         72488           154                0\n#&gt; 28            80                0         71237           133                0\n#&gt; 29            80                0         71237           133                0\n#&gt; 30           121                0         74125           168                0\n#&gt; 31           121                0         74125           168                0\n#&gt; 32           111                0         75912           183                0\n#&gt; 33           111                0         75912           183                0\n#&gt; 34            81                0         71488           145                0\n#&gt; 35            81                0         71488           145                0\n#&gt; 36           103                0         86969           170                0\n#&gt; 37           103                0         86969           170                0\n#&gt; 38            82                0         78785           153                0\n#&gt; 39            82                0         78785           153                0\n#&gt; 40           182                0        107680           260                0\n#&gt; 41           182                0        107680           260                0\n#&gt; 42           226                0        110556           359                0\n#&gt; 43           226                0        110556           359                0\n#&gt; 44           237                0         69849           386                0\n#&gt; 45           237                0         69849           386                0\n#&gt; 46           143                0         73455           253                0\n#&gt; 47           143                0         73455           253                0\n#&gt; 48           273                0         71794           355                0\n#&gt; 49           273                0         71794           355                0\n#&gt; 50           271                0        101909           419                0\n#&gt; 51           271                0        101909           419                0\n#&gt; 52           233                0        107529           325                0\n#&gt; 53           233                0        107529           325                0\n#&gt; 54           114                0         89456           171                0\n#&gt; 55           114                0         89456           171                0\n#&gt; 56           124                0         90660           229                0\n#&gt; 57           124                0         90660           229                0\n#&gt; 58           183                0         91590           268                0\n#&gt; 59           183                0         91590           268                0\n#&gt; 60           146                0         83896           216                0\n#&gt; 61           146                0         83896           216                0\n#&gt; 62           126                0        104972           193                0\n#&gt; 63           126                0        104972           193                0\n#&gt; 64           143                0         74332           211                0\n#&gt; 65           143                0         74332           211                0\n#&gt; 66           134                0        102449           163                0\n#&gt; 67           134                0        102449           163                0\n#&gt; 68           214                0         94706           300                0\n#&gt; 69           214                0         94706           300                0\n#&gt; 70           236                0         71457           317                0\n#&gt; 71           236                0         71457           317                0\n#&gt; 72           202                0         96169           288                0\n#&gt; 73           202                0         96169           288                0\n#&gt; 74           214                0         84450           295                0\n#&gt; 75           214                0         84450           295                0\n#&gt; 76           233                0        124823           307                0\n#&gt; 77           233                0        124823           307                0\n#&gt; 78           139                0        101463           234                0\n#&gt; 79           139                0        101463           234                0\n#&gt; 80           438                0         87368           608                0\n#&gt; 81           438                0         87368           608                0\n#&gt; 82           485                0        102738           624                0\n#&gt; 83           485                0        102738           624                0\n#&gt; 84           599                0         89902           849                0\n#&gt; 85           599                0         89902           849                0\n#&gt; 86           231                0         73802           316                0\n#&gt; 87           231                0         73802           316                0\n#&gt; 88           390                0         79784           518                0\n#&gt; 89           390                0         79784           518                0\n#&gt; 90           245                0         84125           346                0\n#&gt; 91           245                0         84125           346                0\n#&gt; 92           364                0        106137           460                0\n#&gt; 93           364                0        106137           460                0\n#&gt; 94           206                0        110115           332                0\n#&gt; 95           206                0        110115           332                0\n#&gt; 96           208                0        113344           281                0\n#&gt; 97           208                0        113344           281                0\n#&gt; 98           145                0         84727           218                0\n#&gt; 99           145                0         84727           218                0\n#&gt;    cfmtnRdvtDccnt cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt\n#&gt; 1           12947                  7             10093                     5\n#&gt; 2             247                  0               205                     0\n#&gt; 3             247                  0               205                     0\n#&gt; 4             244                  0               202                     0\n#&gt; 5             244                  0               202                     0\n#&gt; 6             348                  1               211                     0\n#&gt; 7             348                  1               211                     0\n#&gt; 8             252                  0               200                     0\n#&gt; 9             252                  0               200                     0\n#&gt; 10            204                  0               166                     0\n#&gt; 11            204                  0               166                     0\n#&gt; 12            161                  0               133                     0\n#&gt; 13            161                  0               133                     0\n#&gt; 14            229                  0               183                     0\n#&gt; 15            229                  0               183                     0\n#&gt; 16            231                  0               190                     0\n#&gt; 17            231                  0               190                     0\n#&gt; 18            194                  1               165                     1\n#&gt; 19            194                  1               165                     1\n#&gt; 20            375                  0               239                     0\n#&gt; 21            375                  0               239                     0\n#&gt; 22            280                  0               219                     0\n#&gt; 23            280                  0               219                     0\n#&gt; 24            208                  0               173                     0\n#&gt; 25            208                  0               173                     0\n#&gt; 26            248                  0               208                     0\n#&gt; 27            248                  0               208                     0\n#&gt; 28            191                  0               151                     0\n#&gt; 29            191                  0               151                     0\n#&gt; 30            206                  0               162                     0\n#&gt; 31            206                  0               162                     0\n#&gt; 32            333                  0               250                     0\n#&gt; 33            333                  0               250                     0\n#&gt; 34            219                  0               178                     0\n#&gt; 35            219                  0               178                     0\n#&gt; 36            397                  0               275                     0\n#&gt; 37            397                  0               275                     0\n#&gt; 38            293                  0               232                     0\n#&gt; 39            293                  0               232                     0\n#&gt; 40            312                  0               249                     0\n#&gt; 41            312                  0               249                     0\n#&gt; 42            839                  0               752                     0\n#&gt; 43            839                  0               752                     0\n#&gt; 44            219                  1               172                     1\n#&gt; 45            219                  1               172                     1\n#&gt; 46            191                  0               148                     0\n#&gt; 47            191                  0               148                     0\n#&gt; 48            153                  0               121                     0\n#&gt; 49            153                  0               121                     0\n#&gt; 50            265                  0               201                     0\n#&gt; 51            265                  0               201                     0\n#&gt; 52            235                  0               184                     0\n#&gt; 53            235                  0               184                     0\n#&gt; 54            236                  0               196                     0\n#&gt; 55            236                  0               196                     0\n#&gt; 56            210                  0               169                     0\n#&gt; 57            210                  0               169                     0\n#&gt; 58            308                  0               238                     0\n#&gt; 59            308                  0               238                     0\n#&gt; 60            453                  2               257                     1\n#&gt; 61            453                  2               257                     1\n#&gt; 62            374                  0               269                     0\n#&gt; 63            374                  0               269                     0\n#&gt; 64            173                  0               145                     0\n#&gt; 65            173                  0               145                     0\n#&gt; 66            298                  0               226                     0\n#&gt; 67            298                  0               226                     0\n#&gt; 68            232                  0               183                     0\n#&gt; 69            232                  0               183                     0\n#&gt; 70            187                  0               149                     0\n#&gt; 71            187                  0               149                     0\n#&gt; 72            269                  1               209                     1\n#&gt; 73            269                  1               209                     1\n#&gt; 74            219                  0               166                     0\n#&gt; 75            219                  0               166                     0\n#&gt; 76            290                  0               227                     0\n#&gt; 77            290                  0               227                     0\n#&gt; 78            267                  0               209                     0\n#&gt; 79            267                  0               209                     0\n#&gt; 80            197                  0               159                     0\n#&gt; 81            197                  0               159                     0\n#&gt; 82            277                  0               208                     0\n#&gt; 83            277                  0               208                     0\n#&gt; 84            180                  1               146                     1\n#&gt; 85            180                  1               146                     1\n#&gt; 86            206                  0               153                     0\n#&gt; 87            206                  0               153                     0\n#&gt; 88            172                  0               142                     0\n#&gt; 89            172                  0               142                     0\n#&gt; 90            176                  0               148                     0\n#&gt; 91            176                  0               148                     0\n#&gt; 92            219                  0               176                     0\n#&gt; 93            219                  0               176                     0\n#&gt; 94            305                  0               249                     0\n#&gt; 95            305                  0               249                     0\n#&gt; 96            416                  0               330                     0\n#&gt; 97            416                  0               330                     0\n#&gt; 98            209                  0               170                     0\n#&gt; 99            209                  0               170                     0\n#&gt;    cfmtnRdvtFmlDccnt cfmtnNtabRdvtFmlDccnt\n#&gt; 1               2854                     2\n#&gt; 2                 42                     0\n#&gt; 3                 42                     0\n#&gt; 4                 42                     0\n#&gt; 5                 42                     0\n#&gt; 6                137                     1\n#&gt; 7                137                     1\n#&gt; 8                 52                     0\n#&gt; 9                 52                     0\n#&gt; 10                38                     0\n#&gt; 11                38                     0\n#&gt; 12                28                     0\n#&gt; 13                28                     0\n#&gt; 14                46                     0\n#&gt; 15                46                     0\n#&gt; 16                41                     0\n#&gt; 17                41                     0\n#&gt; 18                29                     0\n#&gt; 19                29                     0\n#&gt; 20               136                     0\n#&gt; 21               136                     0\n#&gt; 22                61                     0\n#&gt; 23                61                     0\n#&gt; 24                35                     0\n#&gt; 25                35                     0\n#&gt; 26                40                     0\n#&gt; 27                40                     0\n#&gt; 28                40                     0\n#&gt; 29                40                     0\n#&gt; 30                44                     0\n#&gt; 31                44                     0\n#&gt; 32                83                     0\n#&gt; 33                83                     0\n#&gt; 34                41                     0\n#&gt; 35                41                     0\n#&gt; 36               122                     0\n#&gt; 37               122                     0\n#&gt; 38                61                     0\n#&gt; 39                61                     0\n#&gt; 40                63                     0\n#&gt; 41                63                     0\n#&gt; 42                87                     0\n#&gt; 43                87                     0\n#&gt; 44                47                     0\n#&gt; 45                47                     0\n#&gt; 46                43                     0\n#&gt; 47                43                     0\n#&gt; 48                32                     0\n#&gt; 49                32                     0\n#&gt; 50                64                     0\n#&gt; 51                64                     0\n#&gt; 52                51                     0\n#&gt; 53                51                     0\n#&gt; 54                40                     0\n#&gt; 55                40                     0\n#&gt; 56                41                     0\n#&gt; 57                41                     0\n#&gt; 58                70                     0\n#&gt; 59                70                     0\n#&gt; 60               196                     1\n#&gt; 61               196                     1\n#&gt; 62               105                     0\n#&gt; 63               105                     0\n#&gt; 64                28                     0\n#&gt; 65                28                     0\n#&gt; 66                72                     0\n#&gt; 67                72                     0\n#&gt; 68                49                     0\n#&gt; 69                49                     0\n#&gt; 70                38                     0\n#&gt; 71                38                     0\n#&gt; 72                60                     0\n#&gt; 73                60                     0\n#&gt; 74                53                     0\n#&gt; 75                53                     0\n#&gt; 76                63                     0\n#&gt; 77                63                     0\n#&gt; 78                58                     0\n#&gt; 79                58                     0\n#&gt; 80                38                     0\n#&gt; 81                38                     0\n#&gt; 82                69                     0\n#&gt; 83                69                     0\n#&gt; 84                34                     0\n#&gt; 85                34                     0\n#&gt; 86                53                     0\n#&gt; 87                53                     0\n#&gt; 88                30                     0\n#&gt; 89                30                     0\n#&gt; 90                28                     0\n#&gt; 91                28                     0\n#&gt; 92                43                     0\n#&gt; 93                43                     0\n#&gt; 94                56                     0\n#&gt; 95                56                     0\n#&gt; 96                86                     0\n#&gt; 97                86                     0\n#&gt; 98                39                     0\n#&gt; 99                39                     0"
  },
  {
    "objectID": "precinct_disctric.html",
    "href": "precinct_disctric.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "국회전자도서관에서 제20/21대 국회의원 선거 선거구획정위원회 백서 PDF 파일을 받을 수 있다.\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472\n\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565\n\n\n\n\n\n\n현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_disctric.html#제20대-국회의원선거",
    "href": "precinct_disctric.html#제20대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472"
  },
  {
    "objectID": "precinct_disctric.html#제21대-국회의원선거",
    "href": "precinct_disctric.html#제21대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565"
  },
  {
    "objectID": "precinct_disctric.html#비교",
    "href": "precinct_disctric.html#비교",
    "title": "지도제작 대회",
    "section": "",
    "text": "현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_sido.html#제20대-국회의원선거",
    "href": "precinct_sido.html#제20대-국회의원선거",
    "title": "지도제작 대회",
    "section": "\n2.1 제20대 국회의원선거",
    "text": "2.1 제20대 국회의원선거\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472"
  },
  {
    "objectID": "precinct_sido.html#제21대-국회의원선거",
    "href": "precinct_sido.html#제21대-국회의원선거",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 국회의원선거",
    "text": "2.2 제21대 국회의원선거\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565"
  },
  {
    "objectID": "precinct_sido.html#비교",
    "href": "precinct_sido.html#비교",
    "title": "지도제작 대회",
    "section": "\n2.3 비교",
    "text": "2.3 비교\n현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_disctrict.html",
    "href": "precinct_disctrict.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "국회전자도서관에서 제20/21대 국회의원 선거 선거구획정위원회 백서 PDF 파일을 받을 수 있다.\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472\n\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565\n\n\n\n\n\n\n현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_disctrict.html#제20대-국회의원선거",
    "href": "precinct_disctrict.html#제20대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472"
  },
  {
    "objectID": "precinct_disctrict.html#제21대-국회의원선거",
    "href": "precinct_disctrict.html#제21대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565"
  },
  {
    "objectID": "precinct_disctrict.html#비교",
    "href": "precinct_disctrict.html#비교",
    "title": "지도제작 대회",
    "section": "",
    "text": "현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_district.html",
    "href": "precinct_district.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "국회전자도서관에서 제20/21대 국회의원 선거 선거구획정위원회 백서 PDF 파일을 받을 수 있다.\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472\n\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565\n\n\n\n\n\n\n현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "precinct_district.html#제20대-국회의원선거",
    "href": "precinct_district.html#제20대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2016 &lt;- tribble(~\"총인구수\", ~\"지역선거구\", ~\"평균인구수\", ~\"상한인구수\", ~\"하한인구수\",\n        \"51,465,228\",  \"246\", \"209,209\", \"278,945\", \"139,473\")\n\nprecinct_2016_tbl &lt;- precinct_2016 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2016_tbl |&gt; \n  mutate(평균 = 총인구수 / 지역선거구,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      지역선거구\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,465,228\n246\n209,209\n278,945\n139,473\n209,208\n278,944\n139,472"
  },
  {
    "objectID": "precinct_district.html#제21대-국회의원선거",
    "href": "precinct_district.html#제21대-국회의원선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(gt)\nlibrary(gtExtras)\n\nprecinct_2020 &lt;- tribble(~\"총인구수\", ~\"선거구수\", ~\"평균인구수\", ~\"하한인구수\", ~\"상한인구수\",\n        \"51,826,287\", \"253\", \"204,847\", \"136,565\", \"273,129\")\n\n\nprecinct_2020_tbl &lt;- precinct_2020 |&gt; \n  mutate_all(parse_number)\n\nprecinct_2020_tbl |&gt; \n  mutate(평균 = 총인구수 / 선거구수,\n         상한 = 평균 * 4/3,\n         하한 = 평균 * 2/3) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt;  \n  fmt_integer(columns = everything()) |&gt; \n  tab_spanner(\n    label = \"평균 및 상하한 인구수\",\n    columns = c(\n      평균인구수, 상한인구수, 하한인구수\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"검증\",\n    columns = c(\n      평균, 상한, 하한\n    )\n  )  |&gt; \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20대 국회의원 선거구획정 인구자료\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) \n\n\n\n\n\n\n\n제20대 국회의원 선거구획정 인구자료\n    \n\n국회의원 선거구획정위원회\n    \n\n총인구수\n      선거구수\n      \n        평균 및 상하한 인구수\n      \n      \n        검증\n      \n    \n\n평균인구수\n      상한인구수\n      하한인구수\n      평균\n      상한\n      하한\n    \n\n\n51,826,287\n253\n204,847\n273,129\n136,565\n204,847\n273,129\n136,565"
  },
  {
    "objectID": "precinct_district.html#비교",
    "href": "precinct_district.html#비교",
    "title": "지도제작 대회",
    "section": "",
    "text": "현재시점 2023-07-30 기준 51,558,034명\n\n코드precincts_tbl &lt;- precinct_2016_tbl |&gt; \n  mutate(선거 = \"제20대\") |&gt; \n  select(선거, 총인구수, 선거구수 = 지역선거구, 평균인구수, 상한인구수, 하한인구수) |&gt; \n  bind_rows(\n    precinct_2020_tbl |&gt; \n    mutate(선거 = \"제21대\") |&gt; \n    select(선거, 총인구수, 선거구수, 평균인구수, 상한인구수, 하한인구수)\n  )\n\nprecincts_district_gt &lt;- precincts_tbl |&gt;  \n  add_row(선거 = \"제22대\", 총인구수 = 51558034, 선거구수 = 253, \n          평균인구수 = 203786.7, 상한인구수 = 271715.6, 하한인구수 = 135857.8 ) |&gt; \n  pivot_longer(-선거, names_to = \"구분\") |&gt; \n  pivot_wider(names_from = 선거, values_from = value) |&gt; \n  mutate(차이 = 제21대 - 제20대)  |&gt; \n  relocate(차이, .after = 제20대) |&gt; \n  mutate(차이2 = 제22대 - 제21대) |&gt; \n  relocate(차이2, .after = 제21대) |&gt;\n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제20/21대 국회의원 선거구획정 비교\"),\n    subtitle = md(\"국회의원 선거구획정위원회\")\n  ) |&gt; \n  fmt_integer(columns = -구분) |&gt; \n  cols_label(\n    차이 = md(\"&lt;small&gt;차이&lt;/small&gt;\"),\n    차이2 = md(\"&lt;small&gt;차이&lt;/small&gt;\")\n  )  |&gt; \n  tab_spanner(\n    label = \"제21 - 20대 차이\",\n    columns = c(\n      제20대, 차이, 제21대\n    )\n  ) |&gt;  \n  tab_spanner(\n    label = \"제22 - 21대 차이\",\n    columns = c(\n      제21대, 차이2, 제22대\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      columns  = 차이2\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"출처: 국가통계포털(KOSIS), https://kosis.kr/search/search.do?query=인구수\",\n    locations = cells_column_labels(columns = 제22대)\n  )  \n\nprecincts_district_gt |&gt; \n  gtsave(\"images/precincts_district_gt.png\")"
  },
  {
    "objectID": "district_issue.html",
    "href": "district_issue.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "중앙선거관리위원회 코드정보에서 다음 정보를 API로 불러올 수 있다.\n\ngetCommonSgCodeList: 선거코드 조회\ngetCommonGusigunCodeList: 구시군코드 조회\ngetCommonSggCodeList: 선거구코드 조회\ngetCommonPartyCodeList: 정당코드 조회\ngetCommonJobCodeList: 직업코드 조회\ngetCommonEduBckgrdCodeList: 학력코드 조회\n\n\n\n코드library(tidyverse)\nlibrary(httr2)\nlibrary(httr)\n\n##---------------------------------------------------------------- ---\n##                      선거코드                                --\n##---------------------------------------------------------------- ---\n\n# 1. 선거코드 -------------------------\n## 1.1. GET 요청 -------------------------\n\ndata_portal_election_code_request &lt;-\n  glue::glue(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSgCodeList\",\n             \"?resultType=json\",\n             \"&numOfRows=1000\",\n             \"&serviceKey={Sys.getenv('PORTAL_NEC_KEY')}\")\n\n\nelection_code_list &lt;- GET(data_portal_election_code_request) %&gt;%\n  content(as = \"text\") %&gt;%\n  jsonlite::fromJSON()\n\n## 1.2. 데이터 정제 -------------------------\ncode_election &lt;- election_code_list %&gt;%\n  pluck('getCommonSgCodeList') %&gt;%\n  pluck('item') %&gt;%\n  as_tibble() %&gt;%\n  janitor::clean_names(ascii = FALSE) %&gt;%\n  select(선거코드 = sg_id, 선거명 = sg_name, 선거구분 = sg_typecode)\n\ncode_election\n#&gt; # A tibble: 101 × 3\n#&gt;    선거코드 선거명               선거구분\n#&gt;    &lt;chr&gt;    &lt;chr&gt;                &lt;chr&gt;   \n#&gt;  1 19971218 제15대 대통령선거    0       \n#&gt;  2 19971218 대통령선거           1       \n#&gt;  3 20000413 제16대 국회의원선거  0       \n#&gt;  4 20000413 국회의원선거         2       \n#&gt;  5 20000413 비례대표국회의원선거 7       \n#&gt;  6 20021219 제16대 대통령선거    0       \n#&gt;  7 20021219 대통령선거           1       \n#&gt;  8 20040415 제17대 국회의원선거  0       \n#&gt;  9 20040415 국회의원선거         2       \n#&gt; 10 20040415 비례대표국회의원선거 7       \n#&gt; # ℹ 91 more rows\n\n\n\n\n코드\nsgg_resp &lt;- GET(url = \"http://apis.data.go.kr/9760000/CommonCodeService/getCommonGusigunCodeList\", \n           query = list(             \n             resultType='json',\n             sgId='20220309',\n             sdName='서울특별시',\n             numOfRows='1000',\n             pageNo='1',\n             serviceKey=I(Sys.getenv('PORTAL_NEC_KEY'))))\n\n\nsgg_code_list &lt;- sgg_resp %&gt;%\n  content(as = \"text\") %&gt;%\n  jsonlite::fromJSON()\n\n## 1.2. 데이터 정제 -------------------------\nsgg_code &lt;- sgg_code_list %&gt;%\n  pluck('getCommonGusigunCodeList') %&gt;%\n  pluck('item') %&gt;%\n  as_tibble() %&gt;%\n  janitor::clean_names(ascii=FALSE) |&gt; \n  select(선거코드 = sg_id, 선거구명 = wiw_name, 시도명 = sd_name)"
  },
  {
    "objectID": "district_issue.html#선거코드",
    "href": "district_issue.html#선거코드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(httr2)\nlibrary(httr)\n\n##---------------------------------------------------------------- ---\n##                      선거코드                                --\n##---------------------------------------------------------------- ---\n\n# 1. 선거코드 -------------------------\n## 1.1. GET 요청 -------------------------\n\ndata_portal_election_code_request &lt;-\n  glue::glue(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSgCodeList\",\n             \"?resultType=json\",\n             \"&numOfRows=1000\",\n             \"&serviceKey={Sys.getenv('PORTAL_NEC_KEY')}\")\n\n\nelection_code_list &lt;- GET(data_portal_election_code_request) %&gt;%\n  content(as = \"text\") %&gt;%\n  jsonlite::fromJSON()\n\n## 1.2. 데이터 정제 -------------------------\ncode_election &lt;- election_code_list %&gt;%\n  pluck('getCommonSgCodeList') %&gt;%\n  pluck('item') %&gt;%\n  as_tibble() %&gt;%\n  janitor::clean_names(ascii = FALSE) %&gt;%\n  select(선거코드 = sg_id, 선거명 = sg_name, 선거구분 = sg_typecode)\n\ncode_election\n#&gt; # A tibble: 101 × 3\n#&gt;    선거코드 선거명               선거구분\n#&gt;    &lt;chr&gt;    &lt;chr&gt;                &lt;chr&gt;   \n#&gt;  1 19971218 제15대 대통령선거    0       \n#&gt;  2 19971218 대통령선거           1       \n#&gt;  3 20000413 제16대 국회의원선거  0       \n#&gt;  4 20000413 국회의원선거         2       \n#&gt;  5 20000413 비례대표국회의원선거 7       \n#&gt;  6 20021219 제16대 대통령선거    0       \n#&gt;  7 20021219 대통령선거           1       \n#&gt;  8 20040415 제17대 국회의원선거  0       \n#&gt;  9 20040415 국회의원선거         2       \n#&gt; 10 20040415 비례대표국회의원선거 7       \n#&gt; # ℹ 91 more rows"
  },
  {
    "objectID": "district_issue.html#선거구",
    "href": "district_issue.html#선거구",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nsgg_resp &lt;- GET(url = \"http://apis.data.go.kr/9760000/CommonCodeService/getCommonGusigunCodeList\", \n           query = list(             \n             resultType='json',\n             sgId='20220309',\n             sdName='서울특별시',\n             numOfRows='1000',\n             pageNo='1',\n             serviceKey=I(Sys.getenv('PORTAL_NEC_KEY'))))\n\n\nsgg_code_list &lt;- sgg_resp %&gt;%\n  content(as = \"text\") %&gt;%\n  jsonlite::fromJSON()\n\n## 1.2. 데이터 정제 -------------------------\nsgg_code &lt;- sgg_code_list %&gt;%\n  pluck('getCommonGusigunCodeList') %&gt;%\n  pluck('item') %&gt;%\n  as_tibble() %&gt;%\n  janitor::clean_names(ascii=FALSE) |&gt; \n  select(선거코드 = sg_id, 선거구명 = wiw_name, 시도명 = sd_name)"
  },
  {
    "objectID": "district_issue.html#제20대",
    "href": "district_issue.html#제20대",
    "title": "지도제작 대회",
    "section": "\n2.1 제20대",
    "text": "2.1 제20대\n\n코드library(ggbeeswarm)\n\nelectroate20_tbl |&gt; \nggplot(aes(x = \"\", y = 인구수)) + \n  geom_violin(trim=FALSE,fill=\"gray\") + \n  geom_boxplot(width=0.1) + \n  geom_jitter() +\n  # geom_beeswarm(method =\"compactswarm\", priority = \"density\") +\n  theme_minimal() +\n  labs(x = \"전국 선거구\",\n       y = \"선거구별 인구수\") +\n  scale_y_continuous(labels = scales::comma) +\n  geom_hline(yintercept = 209209) +\n  geom_hline(yintercept = 209209*2/3, linetype=2) +\n  geom_hline(yintercept = 209209*4/3, linetype=2)"
  },
  {
    "objectID": "district_issue.html#제21대",
    "href": "district_issue.html#제21대",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대",
    "text": "2.2 제21대\n\n코드library(ggbeeswarm)\n\nelectroate21_tbl |&gt; \nggplot(aes(x = \"\", y = 인구수)) + \n  geom_violin(trim=FALSE,fill=\"gray\") + \n  geom_boxplot(width=0.1) + \n  geom_jitter() +\n  # geom_beeswarm(method =\"compactswarm\", priority = \"density\") +\n  theme_minimal() +\n  labs(x = \"전국 선거구\",\n       y = \"선거구별 인구수\") +\n  scale_y_continuous(labels = scales::comma) +\n  geom_hline(yintercept = 204847) +\n  geom_hline(yintercept = 204847*2/3, linetype=2) +\n  geom_hline(yintercept = 204847*4/3, linetype=2)"
  },
  {
    "objectID": "district_issue.html#강원도-인구수",
    "href": "district_issue.html#강원도-인구수",
    "title": "지도제작 대회",
    "section": "\n3.1 강원도 인구수",
    "text": "3.1 강원도 인구수\n\n코드library(rvest)\n\nurl &lt;- \"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml\"\n\nparams &lt;- list(\n              \"electionId\"= \"0000000000\",\n              \"requestURI\"= \"/electioninfo/0000000000/cd/cdpb02.jsp\",\n              \"topMenuId\"= \"CD\",\n              \"secondMenuId\"= \"CDPB02\",\n              \"menuId\"= \"CDPB02\",\n              \"statementId\"= \"CDPB02_#3_2_1\",\n              \"oldElectionType\"= \"1\",\n              \"electionType\"= \"2\",\n              \"electionName\"= \"20200415\",\n              \"searchType\"= \"3\",\n              \"electionCode\"= \"2\",\n              \"cityCode\"= \"4900\",\n              \"townCode\"= \"-1\",\n              \"sggCityCode\"= \"-1\",\n              \"x\"= \"48\",\n              \"y\"= \"22\")\n\nelectorate &lt;- GET(url = url,\n    query = params)\n\nelectorate_tables &lt;- electorate |&gt; \n  read_html() |&gt; \n  html_nodes('.table01') |&gt; \n  html_table()\n\nelectorate_tbl &lt;- electorate_tables[[2]] |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  filter(선거구명 != \"합계\",\n         선거구명 != \"\")  |&gt; \n  select(선거구명, 인구수 = 인구수_선거인명부작성기준일_현재,\n         성별 = 확정선거인수, 선거인수 = 확정선거인수_2) |&gt; \n  filter(성별 == \"계\") |&gt; \n  ## 인구수 --------------------------\n  separate(인구수, into = c(\"인구수\", \"재외및외국\"), sep = \"\\\\(\") |&gt; \n  separate(재외및외국, into = c(\"재외국민\", \"외국인\"), sep = \",\") |&gt; \n  mutate(인구수   = parse_number(인구수),\n         재외국민 = parse_number(재외국민),\n         외국인 = parse_number(외국인)) |&gt; \n  ## 선거인수 --------------------------\n  separate(선거인수, into = c(\"선거인수\", \"선거인_재외및외국\"), sep = \"\\\\(\") |&gt; \n  separate(선거인_재외및외국, into = c(\"선거재외국민\", \"선거외국인\"), sep = \",\") |&gt; \n  mutate(선거인수   = parse_number(선거인수),\n         선거재외국민 = parse_number(선거재외국민),\n         선거외국인 = parse_number(선거외국인))  |&gt; \n  select(-성별)\n  \nelectorate_tbl\n#&gt; # A tibble: 3 × 7\n#&gt;   선거구명 인구수 재외국민 외국인 선거인수 선거재외국민 선거외국인\n#&gt;   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 제주시갑 253218      617      0   208660          578          0\n#&gt; 2 제주시을 236224      517      0   191862          471          0\n#&gt; 3 서귀포시 181386      371      0   152676          330          0"
  },
  {
    "objectID": "district_issue.html#함수",
    "href": "district_issue.html#함수",
    "title": "지도제작 대회",
    "section": "\n3.2 함수",
    "text": "3.2 함수\n\n코드\nget_electorate &lt;- function(cityCode = \"4900\") { # 제주도\n  \n  url &lt;- \"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml\"\n\n  params &lt;- list(\n                \"electionId\"= \"0000000000\",\n                \"requestURI\"= \"/electioninfo/0000000000/cd/cdpb02.jsp\",\n                \"topMenuId\"= \"CD\",\n                \"secondMenuId\"= \"CDPB02\",\n                \"menuId\"= \"CDPB02\",\n                \"statementId\"= \"CDPB02_#3_2_1\",\n                \"oldElectionType\"= \"1\",\n                \"electionType\"= \"2\",\n                \"electionName\"= \"20200415\",\n                \"searchType\"= \"3\",\n                \"electionCode\"= \"2\",\n                \"cityCode\"= cityCode,\n                \"townCode\"= \"-1\",\n                \"sggCityCode\"= \"-1\",\n                \"x\"= \"48\",\n                \"y\"= \"22\")\n  \n  electorate &lt;- GET(url = url,\n      query = params)\n  \n  electorate_tables &lt;- electorate |&gt; \n    read_html() |&gt; \n    html_nodes('.table01') |&gt; \n    html_table()\n  \n  electorate_tbl &lt;- electorate_tables[[2]] |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    filter(선거구명 != \"합계\",\n           선거구명 != \"\")  |&gt; \n    select(선거구명, 인구수 = 인구수_선거인명부작성기준일_현재,\n           성별 = 확정선거인수, 선거인수 = 확정선거인수_2) |&gt; \n    filter(성별 == \"계\") |&gt; \n    ## 인구수 --------------------------\n    separate(인구수, into = c(\"인구수\", \"재외및외국\"), sep = \"\\\\(\") |&gt; \n    separate(재외및외국, into = c(\"재외국민\", \"외국인\"), sep = \",\") |&gt; \n    mutate(인구수   = parse_number(인구수),\n           재외국민 = parse_number(재외국민),\n           외국인 = parse_number(외국인)) |&gt; \n    ## 선거인수 --------------------------\n    separate(선거인수, into = c(\"선거인수\", \"선거인_재외및외국\"), sep = \"\\\\(\") |&gt; \n    separate(선거인_재외및외국, into = c(\"선거재외국민\", \"선거외국인\"), sep = \",\") |&gt; \n    mutate(선거인수   = parse_number(선거인수),\n           선거재외국민 = parse_number(선거재외국민),\n           선거외국인 = parse_number(선거외국인))  |&gt; \n    select(-성별)\n    \n  return(electorate_tbl)\n}\n\nget_electorate(\"4900\")\n#&gt; # A tibble: 3 × 7\n#&gt;   선거구명 인구수 재외국민 외국인 선거인수 선거재외국민 선거외국인\n#&gt;   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 제주시갑 253218      617      0   208660          578          0\n#&gt; 2 제주시을 236224      517      0   191862          471          0\n#&gt; 3 서귀포시 181386      371      0   152676          330          0"
  },
  {
    "objectID": "district_issue.html#제21대-총선",
    "href": "district_issue.html#제21대-총선",
    "title": "지도제작 대회",
    "section": "\n3.3 제21대 총선",
    "text": "3.3 제21대 총선\n\n코드sido_tbl &lt;- tribble(~\"sido_cd\", ~\"sido_nm\",\n                    '1100', \"서울특별시\", \n                    '2600', \"부산광역시\", \n                    '2700', \"대구광역시\", \n                    '2800', \"인천광역시\", \n                    '2900', \"광주광역시\", \n                    '3000', \"대전광역시\", \n                    '3100', \"울산광역시\", \n                    '5100', \"세종특별자치시\", \n                    '4100', \"경기도\", \n                    '4200', \"강원도\", \n                    '4300', \"충청북도\", \n                    '4400', \"충청남도\", \n                    '4500', \"전라북도\", \n                    '4600', \"전라남도\", \n                    '4700', \"경상북도\", \n                    '4800', \"경상남도\", \n                    '4900', \"제주특별자치도\")\n\nelectorate_raw &lt;- sido_tbl |&gt; \n  mutate(data = map(sido_cd, get_electorate))\n\nelectorate_2020_tbl &lt;- electorate_raw |&gt; \n  rename(시도코드 = sido_cd, 시도명 = sido_nm) |&gt; \n  unnest(data)\n\nelectorate_2020_tbl |&gt; \n  write_rds(\"data/electorate_2020_tbl.rds\")"
  },
  {
    "objectID": "district_issue.html#선거구획정-표",
    "href": "district_issue.html#선거구획정-표",
    "title": "지도제작 대회",
    "section": "\n4.1 선거구획정 표",
    "text": "4.1 선거구획정 표\n\n코드library(gt)\nlibrary(gtExtras)\n\nelectorate_2020_tbl &lt;- \n  read_rds(\"data/electorate_2020_tbl.rds\")\n\nget_percentage &lt;- function(dataframe) {\n  pcnt_number &lt;- dataframe |&gt; \n    select(-비적정비율) |&gt; \n    summarise_if(is.numeric, sum) |&gt; \n    mutate(비적정비율 = (상한초과 + 하한미달) / (적정 + 상한초과 + 하한미달)) |&gt; \n    pull(비적정비율)\n  \n  return(pcnt_number)\n}\n\nelectorate_2020_gt_tbl &lt;- electorate_2020_tbl |&gt; \n  mutate(획정구 = case_when(인구수 &gt; 204847*4/3 ~ \"상한초과\",\n                         인구수 &lt; 204847*2/3 ~ \"하한미달\",\n                         TRUE ~ \"적정\")) |&gt; \n  count(시도명, 획정구) |&gt; \n  pivot_wider(names_from = 획정구, values_from = n, values_fill = 0)  |&gt; \n  arrange(desc(상한초과)) |&gt; \n  mutate(비적정비율 = (상한초과 + 하한미달) / (적정+상한초과 + 하한미달)) |&gt; \n  arrange(desc(비적정비율))\n\nelectorate_2020_gt &lt;- electorate_2020_gt_tbl |&gt; \n  gt::gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"제21대 국회의원 선거구획정 현황\"),\n    subtitle = md(\"중앙선거관리위원회 선거인수현황 통계\")\n  ) |&gt; \n  fmt_percent(columns = 비적정비율, decimals = 1) |&gt; \n  tab_spanner(\n    label = \"선거구 현황\",\n    columns = c(\n      적정, 상한초과, 하한미달\n    )\n  )  |&gt; \n  tab_footnote(\n    footnote = md(\"선거구별 **271,716** 명 초과시\"),\n    locations = cells_column_labels(columns = 상한초과)\n  )  |&gt; \n  tab_footnote(\n    footnote = md(\"선거구별 **136,565** 명 미달시\"),\n    locations = cells_column_labels(columns = 하한미달)\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 상한초과 &gt; 0,\n      columns = 상한초과\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 하한미달 &gt; 0,\n      columns = 하한미달\n    )\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(적정, 상한초과, 하한미달),\n    fns =  list(label = \"선거구수\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  ) |&gt; \n  grand_summary_rows(\n    columns = 비적정비율,\n    fns =  list(\"선거구비율\" = ~ get_percentage(electorate_2020_gt_tbl)),\n    fmt = ~ fmt_percent(., decimals = 1),\n    side = \"top\"\n  )    \n\nelectorate_2020_gt\n\n\n\n\n\n\n\n제21대 국회의원 선거구획정 현황\n    \n\n중앙선거관리위원회 선거인수현황 통계\n    \n\n\n      시도명\n      \n        선거구 현황\n      \n      비적정비율\n    \n\n적정\n      상한초과1\n\n      하한미달2\n\n    \n\n\n\n선거구수\n—\n236\n12\n5\n—\n\n\n선거구비율\n—\n—\n—\n—\n6.7%\n\n\n\n전라북도\n7\n1\n2\n30.0%\n\n\n\n경기도\n51\n8\n0\n13.6%\n\n\n\n부산광역시\n16\n0\n2\n11.1%\n\n\n\n전라남도\n9\n0\n1\n10.0%\n\n\n\n충청남도\n10\n1\n0\n9.1%\n\n\n\n인천광역시\n12\n1\n0\n7.7%\n\n\n\n경상남도\n15\n1\n0\n6.2%\n\n\n\n강원도\n8\n0\n0\n0.0%\n\n\n\n경상북도\n13\n0\n0\n0.0%\n\n\n\n광주광역시\n8\n0\n0\n0.0%\n\n\n\n대구광역시\n12\n0\n0\n0.0%\n\n\n\n대전광역시\n7\n0\n0\n0.0%\n\n\n\n서울특별시\n49\n0\n0\n0.0%\n\n\n\n세종특별자치시\n2\n0\n0\n0.0%\n\n\n\n울산광역시\n6\n0\n0\n0.0%\n\n\n\n제주특별자치도\n3\n0\n0\n0.0%\n\n\n\n충청북도\n8\n0\n0\n0.0%\n\n\n\n\n\n1 선거구별 271,716 명 초과시\n    \n\n\n2 선거구별 136,565 명 미달시\n    \n\n\n\n\n코드\n# electorate_2020_gt |&gt; \n#   gtsave(\"images/electorate_2020_gt.png\")"
  },
  {
    "objectID": "district_issue.html#조정-필요-선거구",
    "href": "district_issue.html#조정-필요-선거구",
    "title": "지도제작 대회",
    "section": "\n4.2 조정 필요 선거구",
    "text": "4.2 조정 필요 선거구\n\n코드library(ggrepel)\nextrafont::loadfonts()\n\nelectorate_2020_region &lt;- electorate_2020_tbl |&gt; \n  mutate(시도권역 = case_when(str_detect(시도명, \"자치|강원\") ~ \"강원/제주/세종\",\n                              str_detect(시도명, \"경상\") ~ \"경상남북\",\n                              str_detect(시도명, \"전라\") ~ \"전라남북\",\n                              str_detect(시도명, \"충청\") ~ \"충청남북\",\n                              TRUE ~ 시도명)) |&gt;\n  mutate(시도권역 = factor(시도권역, levels = c(\"서울특별시\", \"경기도\", \"광주광역시\", \"대구광역시\", \n                                        \"대전광역시\", \"부산광역시\", \"울산광역시\", \"인천광역시\", \n                                        \"경상남북\", \"전라남북\", \"충청남북\", \"강원/제주/세종\"))) \n\nelectorate_2020_region_issue &lt;- electorate_2020_region |&gt; \n  mutate(획정구 = case_when(인구수 &gt; 204847*4/3 ~ \"상한초과\",\n                         인구수 &lt; 204847*2/3 ~ \"하한미달\",\n                         TRUE ~ \"적정\")) |&gt; \n  filter(획정구 != \"적정\")\n\nelectorate_2020_region_gg &lt;-  electorate_2020_region |&gt; \n  ggplot(aes(x = 인구수, y = 선거인수, color = 시도권역)) +\n    geom_point(size = 0.7) +\n    geom_smooth(method = \"lm\", se=FALSE, size=0.4) +\n    geom_vline(xintercept = 204847) +\n    geom_vline(xintercept = 204847*2/3, linetype=2) +\n    geom_vline(xintercept = 204847*4/3, linetype=2)  +\n    facet_wrap(~시도권역) +\n    theme_minimal(base_family=\"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    labs(title = \"제21대 국회의원 선거 시도별 인구 상·하한 초과·미달 선거구\",\n         x = \"선거구 인구수\",\n         y = \"선거구 선거인수\") +\n    scale_x_continuous(labels = scales::unit_format(unit = \"만\", scale = 1e-4, sep = \"\")) +\n    scale_y_continuous(labels = scales::unit_format(unit = \"만\", scale = 1e-4, sep = \"\")) +\n    geom_text_repel(data = electorate_2020_region_issue, aes(label = 선거구명),\n                    size = 1.5, min.segment.length = 0, force = 0.5, max.overlaps=Inf,\n                    color = \"black\") +\n    geom_point(data = electorate_2020_region_issue, \n                    size = 1)\n\nelectorate_2020_region_gg\n\n\n\n\n\n\n코드\n# ragg::agg_jpeg(\"images/제21대_국회의원선거_인구수_조정선거구.png\",\n#               width = 10, height = 7, units = \"in\", res = 600)\n# electorate_2020_region_gg\n# dev.off()"
  },
  {
    "objectID": "district_issue.html#데이터",
    "href": "district_issue.html#데이터",
    "title": "지도제작 대회",
    "section": "\n5.1 데이터",
    "text": "5.1 데이터\n\n5.1.1 시도별 인구수\n\n코드library(tidyverse)\nlibrary(rvest)\n\nnamu_url &lt;- \"https://namu.wiki/w/%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD/%EC%9D%B8%EA%B5%AC\"\n\nnamu_html &lt;- read_html(namu_url)\n\nnamu_lst &lt;- namu_html |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table(header = TRUE)\n\navg_electorate &lt;- 51392745 / 253\n\nelectorate_tbl &lt;- namu_lst[[13]] |&gt; \n  mutate(인구 = parse_number(인구),\n         비율 = parse_number(비율)/100) |&gt; \n  mutate(선거구수 = 인구/ avg_electorate)\n\nelectorate_tbl\n#&gt; # A tibble: 18 × 5\n#&gt;    순위  광역자치단체       인구   비율 선거구수\n#&gt;    &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;\n#&gt;  1 1위   경기도         13618969 0.265     67.0 \n#&gt;  2 2위   서울특별시      9414093 0.183     46.3 \n#&gt;  3 3위   부산광역시      3306993 0.0643    16.3 \n#&gt;  4 4위   경상남도        3263251 0.0635    16.1 \n#&gt;  5 5위   인천광역시      2978749 0.058     14.7 \n#&gt;  6 6위   경상북도        2565674 0.0499    12.6 \n#&gt;  7 7위   대구광역시      2379602 0.0463    11.7 \n#&gt;  8 8위   충청남도        2126374 0.0414    10.5 \n#&gt;  9 9위   전라남도        1811554 0.0352     8.92\n#&gt; 10 10위  전라북도        1762021 0.0343     8.67\n#&gt; 11 11위  충청북도        1593931 0.031      7.85\n#&gt; 12 12위  강원특별자치도  1532617 0.0298     7.54\n#&gt; 13 13위  대전광역시      1445126 0.0281     7.11\n#&gt; 14 14위  광주광역시      1424818 0.0277     7.01\n#&gt; 15 15위  울산광역시      1106015 0.0215     5.44\n#&gt; 16 16위  제주특별자치도   676832 0.0132     3.33\n#&gt; 17 17위  세종특별자치시   386126 0.0075     1.90\n#&gt; 18 총합  총합           51392745 1        253\n\n\n\n5.1.2 선거구\n\n코드library(readxl)\n\nnec_raw &lt;- read_excel(\"data/선거구수_및_정수현황.xlsx\", skip = 5)\n\nnec_tbl &lt;- nec_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:2) |&gt; \n  set_names(c(\"광역자치단체\", \"현선거구수\"))\n\nnec_tbl\n#&gt; # A tibble: 19 × 2\n#&gt;    광역자치단체   현선거구수\n#&gt;    &lt;chr&gt;          &lt;chr&gt;     \n#&gt;  1 합계           254       \n#&gt;  2 전국(비례대표) 1         \n#&gt;  3 서울특별시     49        \n#&gt;  4 부산광역시     18        \n#&gt;  5 대구광역시     12        \n#&gt;  6 인천광역시     13        \n#&gt;  7 광주광역시     8         \n#&gt;  8 대전광역시     7         \n#&gt;  9 울산광역시     6         \n#&gt; 10 세종특별자치시 2         \n#&gt; 11 경기도         59        \n#&gt; 12 강원도         8         \n#&gt; 13 충청북도       8         \n#&gt; 14 충청남도       11        \n#&gt; 15 전라북도       10        \n#&gt; 16 전라남도       10        \n#&gt; 17 경상북도       13        \n#&gt; 18 경상남도       16        \n#&gt; 19 제주특별자치도 3\n\n\n\n5.1.3 결합\n\n코드electorate_table &lt;- electorate_tbl |&gt; \n  filter(순위 != \"총합\") |&gt; \n  left_join(nec_tbl |&gt; mutate(광역자치단체 = ifelse(str_detect(광역자치단체, \"강원\"), \n                                              \"강원특별자치도\", 광역자치단체))) |&gt; \n  mutate(현선거구수 = parse_integer(현선거구수)) |&gt; \n  mutate(차이 = round(현선거구수 - 선거구수, 1)) |&gt; \n  janitor::adorn_totals(name = \"합계\")\n\nelectorate_table\n#&gt;  순위   광역자치단체     인구   비율   선거구수 현선거구수 차이\n#&gt;   1위         경기도 13618969 0.2650  67.044466         59 -8.0\n#&gt;   2위     서울특별시  9414093 0.1832  46.344392         49  2.7\n#&gt;   3위     부산광역시  3306993 0.0643  16.279909         18  1.7\n#&gt;   4위       경상남도  3263251 0.0635  16.064573         16 -0.1\n#&gt;   5위     인천광역시  2978749 0.0580  14.664006         13 -1.7\n#&gt;   6위       경상북도  2565674 0.0499  12.630489         13  0.4\n#&gt;   7위     대구광역시  2379602 0.0463  11.714480         12  0.3\n#&gt;   8위       충청남도  2126374 0.0414  10.467871         11  0.5\n#&gt;   9위       전라남도  1811554 0.0352   8.918052         10  1.1\n#&gt;  10위       전라북도  1762021 0.0343   8.674207         10  1.3\n#&gt;  11위       충청북도  1593931 0.0310   7.846721          8  0.2\n#&gt;  12위 강원특별자치도  1532617 0.0298   7.544880          8  0.5\n#&gt;  13위     대전광역시  1445126 0.0281   7.114173          7 -0.1\n#&gt;  14위     광주광역시  1424818 0.0277   7.014199          8  1.0\n#&gt;  15위     울산광역시  1106015 0.0215   5.444772          6  0.6\n#&gt;  16위 제주특별자치도   676832 0.0132   3.331959          3 -0.3\n#&gt;  17위 세종특별자치시   386126 0.0075   1.900850          2  0.1\n#&gt;  합계              - 51392745 0.9999 253.000000        253  0.2"
  },
  {
    "objectID": "district_issue.html#시각화",
    "href": "district_issue.html#시각화",
    "title": "지도제작 대회",
    "section": "\n5.2 시각화",
    "text": "5.2 시각화\n\n5.2.1 표\n\n코드library(gt)\nlibrary(gtExtras)\n\nelectorate_diff_gt &lt;- electorate_table |&gt; \n  relocate(차이, .before = 현선거구수) |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    heading.title.font.size = px(16L),\n    column_labels.font.size = px(14L),\n    table.font.size = px(12L)\n  ) |&gt;   \n  cols_align(align = \"center\") |&gt; \n  tab_header(\n    title = md(\"국회의원 선거구 시도별 적정 인구수\"),\n    subtitle = md(\"중앙선관위 선거구수 및 정수현황과 시도별 인구수\")\n  )  |&gt; \n  fmt_integer(인구) |&gt;\n  fmt_number(선거구수, decimals = 1) |&gt;   \n  fmt_percent(비율, decimals = 1) |&gt; \n  cols_align(\"center\") |&gt; \n  tab_spanner(label = \"선거구수 비교\",\n              columns = c(선거구수, 차이, 현선거구수)) |&gt; \n  ## 차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &gt; 0.5,\n      columns = 차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(13L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &lt; -0.5,\n      columns = 차이\n    )\n  )    \n\nelectorate_diff_gt\n\n\n\n\n\n\n\n국회의원 선거구 시도별 적정 인구수\n    \n\n중앙선관위 선거구수 및 정수현황과 시도별 인구수\n    \n\n순위\n      광역자치단체\n      인구\n      비율\n      \n        선거구수 비교\n      \n    \n\n선거구수\n      차이\n      현선거구수\n    \n\n\n\n1위\n경기도\n13,618,969\n26.5%\n67.0\n-8.0\n59\n\n\n2위\n서울특별시\n9,414,093\n18.3%\n46.3\n2.7\n49\n\n\n3위\n부산광역시\n3,306,993\n6.4%\n16.3\n1.7\n18\n\n\n4위\n경상남도\n3,263,251\n6.3%\n16.1\n-0.1\n16\n\n\n5위\n인천광역시\n2,978,749\n5.8%\n14.7\n-1.7\n13\n\n\n6위\n경상북도\n2,565,674\n5.0%\n12.6\n0.4\n13\n\n\n7위\n대구광역시\n2,379,602\n4.6%\n11.7\n0.3\n12\n\n\n8위\n충청남도\n2,126,374\n4.1%\n10.5\n0.5\n11\n\n\n9위\n전라남도\n1,811,554\n3.5%\n8.9\n1.1\n10\n\n\n10위\n전라북도\n1,762,021\n3.4%\n8.7\n1.3\n10\n\n\n11위\n충청북도\n1,593,931\n3.1%\n7.8\n0.2\n8\n\n\n12위\n강원특별자치도\n1,532,617\n3.0%\n7.5\n0.5\n8\n\n\n13위\n대전광역시\n1,445,126\n2.8%\n7.1\n-0.1\n7\n\n\n14위\n광주광역시\n1,424,818\n2.8%\n7.0\n1.0\n8\n\n\n15위\n울산광역시\n1,106,015\n2.1%\n5.4\n0.6\n6\n\n\n16위\n제주특별자치도\n676,832\n1.3%\n3.3\n-0.3\n3\n\n\n17위\n세종특별자치시\n386,126\n0.8%\n1.9\n0.1\n2\n\n\n합계\n-\n51,392,745\n100.0%\n253.0\n0.2\n253\n\n\n\n\n\n코드\n# chromote::default_chromote_object()\n\n# electorate_diff_gt |&gt;\n#   gtsave(filename = \"images/electorate_diff_gt.png\")"
  },
  {
    "objectID": "kwangmyung.html",
    "href": "kwangmyung.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(krvote)\n\npresident &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"경기도\",\n         구시군명 == \"광명시\")\n\nlocal_sido &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"경기도\") |&gt; \n  unnest(data) |&gt; \n  filter(구시군명 == \"광명시\")\n\nlocal_mayor &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(시도명 == \"경기도\",\n         구시군명 == \"광명시\")\n\nchongsun &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"경기\",\n         str_detect(선거구, \"광명\")) |&gt; \n  unnest(data) |&gt; \n  mutate(구분 = case_when(str_detect(구분, \"^[가-힣]\") ~ 구분,\n                            TRUE ~ iconv(구분, from = \"CP949\", to = \"UTF-8\")))\n\n\n\n\n선거\n민주당\n국민의힘\n\n\n\n2022년 대선\n103,470\n87,112\n\n\n2022년 도지사\n72,415\n63,270\n\n\n2022년 시장\n73,759\n64,255\n\n\n2020년 총선 갑\n43,019\n33,380\n\n\n2020년 총선 을\n58,130\n27,671"
  },
  {
    "objectID": "kwangmyung.html#종합",
    "href": "kwangmyung.html#종합",
    "title": "지도제작 대회",
    "section": "\n2.1 종합",
    "text": "2.1 종합\n\n코드# 대통령\npresident_ttl &lt;- president |&gt; \n  pivot_longer(이재명:김민찬) |&gt; \n  mutate(정당 = case_when(name == \"이재명\" ~ \"민주당\",\n                          name == \"윤석열\" ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(value)) |&gt; \n  mutate(선거 = \"대선_2022\")\n\n# 도지사\nlocal_sido_ttl &lt;- local_sido |&gt; \n  pivot_longer(더불어민주당_김동연:무소속_강용석) |&gt; \n  separate(name, into = c(\"정당\", \"후보명\"), sep = \"_\") |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(value)) |&gt; \n  mutate(선거 = \"도지사_2022\")  \n\n# 시장\nlocal_mayor_ttl &lt;- local_mayor |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  mutate(선거 = \"시장_2022\")    \n\n# 국회의원\nchongsun_ttl &lt;- chongsun |&gt; \n  filter(구분 %in% c(\"국가혁명배당금당 김상연\", \"국가혁명배당금당 김현애\", \"더불어민주당 양기대\", \"더불어민주당 임오경\", \"무소속 권태진\", \"무소속 김경표\", \"무소속 김기윤\", \"미래통합당 김용태\", \"미래통합당 양주상\", \"민생당 양순필\")) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  mutate(선거 = \"총선_2020\")      \n\n\n\n코드ttl_tbl &lt;- bind_rows(chongsun_ttl, president_ttl) |&gt; \n  bind_rows(local_sido_ttl) |&gt; \n  bind_rows(local_mayor_ttl) |&gt; \n  mutate(선거 = factor(선거, levels = c(\"총선_2020\", \"대선_2022\", \"도지사_2022\", \"시장_2022\")))\n\nkwangmyung_ttl_gg &lt;- ttl_tbl |&gt; \n  ggplot(aes(x = 선거, y = 득표, color = 정당, group = 정당)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::comma) +\n    labs(x=\"\", y=\"득표수\",\n         title = \"광명시 역대 선거 정당별 득표수\") +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\"   = \"blue\",\n                                  \"기타\"     = \"gray50\")) +\n    theme(legend.position = \"top\")\n\nkwangmyung_ttl_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_총계.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkwangmyung_ttl_gg\ndev.off()"
  },
  {
    "objectID": "kwangmyung.html#동별",
    "href": "kwangmyung.html#동별",
    "title": "지도제작 대회",
    "section": "\n2.2 동별",
    "text": "2.2 동별\n\n코드# 대통령\npresident_dong &lt;- president |&gt; \n  pivot_longer(이재명:김민찬) |&gt; \n  mutate(정당 = case_when(name == \"이재명\" ~ \"민주당\",\n                          name == \"윤석열\" ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  filter(!str_detect(읍면동명, \"^잘못\")) |&gt; \n  mutate(읍면동명 = case_when(str_detect(읍면동명, \"국외|재외\") ~ \"국외부재자\",\n                              str_detect(읍면동명, \"거소\") ~ \"거소·선상\",\n                              TRUE ~ 읍면동명)) |&gt;   \n  group_by(읍면동명, 정당) |&gt; \n  summarise(득표 = sum(value)) |&gt; \n  ungroup() |&gt; \n  mutate(선거 = \"대선_2022\")\n\n# 도지사\nlocal_sido_dong &lt;- local_sido |&gt; \n  pivot_longer(더불어민주당_김동연:무소속_강용석) |&gt; \n  separate(name, into = c(\"정당\", \"후보명\"), sep = \"_\") |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  filter(!str_detect(읍면동명, \"^잘못\")) |&gt; \n  mutate(읍면동명 = case_when(str_detect(읍면동명, \"국외|재외\") ~ \"국외부재자\",\n                              str_detect(읍면동명, \"거소\") ~ \"거소·선상\",\n                              TRUE ~ 읍면동명)) |&gt;   \n  group_by(읍면동명, 정당) |&gt; \n  summarise(득표 = sum(value)) |&gt; \n  ungroup() |&gt;   \n  mutate(선거 = \"도지사_2022\")\n\n# 시장\nlocal_mayor_dong &lt;- local_mayor |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"국민의힘\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  filter(!str_detect(읍면동명, \"^잘못\")) |&gt; \n  mutate(읍면동명 = case_when(str_detect(읍면동명, \"국외|재외\") ~ \"국외부재자\",\n                              str_detect(읍면동명, \"거소\") ~ \"거소·선상\",\n                              TRUE ~ 읍면동명)) |&gt;   \n  group_by(읍면동명, 정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  ungroup() |&gt;     \n  mutate(선거 = \"시장_2022\")\n\n\n# 국회의원\nchongsun_dong &lt;- chongsun |&gt; \n  filter(구분 %in% c(\"국가혁명배당금당 김상연\", \"국가혁명배당금당 김현애\", \"더불어민주당 양기대\", \"더불어민주당 임오경\", \"무소속 권태진\", \"무소속 김경표\", \"무소속 김기윤\", \"미래통합당 김용태\", \"미래통합당 양주상\", \"민생당 양순필\")) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  filter(!str_detect(읍면동명, \"^잘못\")) |&gt; \n  mutate(읍면동명 = case_when(str_detect(읍면동명, \"국외|재외\") ~ \"국외부재자\",\n                              str_detect(읍면동명, \"거소\") ~ \"거소·선상\",\n                              TRUE ~ 읍면동명)) |&gt;   \n  group_by(읍면동명, 정당) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  ungroup() |&gt;       \n  mutate(선거 = \"총선_2020\")\n     \n  \n\n\n\n코드dong_tbl &lt;- bind_rows(chongsun_dong, president_dong) |&gt; \n  bind_rows(local_sido_dong) |&gt; \n  bind_rows(local_mayor_dong) |&gt; \n  mutate(선거 = factor(선거, levels = c(\"총선_2020\", \"대선_2022\", \"도지사_2022\", \"시장_2022\")))\n\nkwangmyung_dong_gg &lt;- dong_tbl |&gt; \n  ggplot(aes(x = 선거, y = 득표, color = 정당, group = 정당)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::comma) +\n    labs(x=\"\", y=\"득표수\",\n         title = \"광명시 역대 선거 정당별 득표수\") +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\"   = \"blue\",\n                                  \"기타\"     = \"gray50\")) +\n    theme(legend.position = \"top\") +\n    facet_wrap(~읍면동명, scales = \"free_y\")\n\nkwangmyung_dong_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_동별.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkwangmyung_dong_gg\ndev.off()"
  },
  {
    "objectID": "kwangmyung.html#데이터-1",
    "href": "kwangmyung.html#데이터-1",
    "title": "지도제작 대회",
    "section": "\n3.1 데이터",
    "text": "3.1 데이터\n행정안전부 주민등록 인구통계\n\n코드library(readxl)\n\n# 2020-04-15 ---------------------------------\npop_202004_raw &lt;- read_excel(\"data/202004_202004_연령별인구현황_월간.xlsx\", skip = 2)\n\npop_202004 &lt;- pop_202004_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(x1, x2, x107:x208, x210:x311) |&gt; \n  janitor::row_to_names(row_number = 1) |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  pivot_longer(cols = 연령구간인구수:x100세_이상_2) |&gt; \n  filter(!str_detect(name, \"^연령구간\")) |&gt; \n  mutate(성별 = ifelse(str_detect(name, \"_2$\"), \"여자\", \"남자\")) |&gt; \n  mutate(나이 = parse_number(name),\n         인구수 = parse_number(value)) |&gt; \n  filter(!str_detect(행정기관, \"경기도 경기도\") )  |&gt; \n  mutate(행정동 = str_remove(행정기관, \"경기도 광명시 \")) |&gt; \n  mutate(시점 = \"2020-04-15\") |&gt; \n  select(시점, 행정동, 성별, 나이, 인구수) \n\npop_202004\n\n# 2022-03-15 ---------------------------------\npop_202203_raw &lt;- read_excel(\"data/202203_202203_연령별인구현황_월간.xlsx\", skip = 2)\n\npop_202203 &lt;- pop_202203_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(x1, x2, x107:x208, x210:x311) |&gt; \n  janitor::row_to_names(row_number = 1) |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  pivot_longer(cols = 연령구간인구수:x100세_이상_2) |&gt; \n  filter(!str_detect(name, \"^연령구간\")) |&gt; \n  mutate(성별 = ifelse(str_detect(name, \"_2$\"), \"여자\", \"남자\")) |&gt; \n  mutate(나이 = parse_number(name),\n         인구수 = parse_number(value)) |&gt; \n  filter(!str_detect(행정기관, \"경기도 경기도\") )  |&gt; \n  mutate(행정동 = str_remove(행정기관, \"경기도 광명시 \")) |&gt; \n  mutate(시점 = \"2022-03-15\") |&gt; \n  select(시점, 행정동, 성별, 나이, 인구수) \n\npop_202203\n\n# 2023-07-15 ---------------------------------\npop_202307_raw &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip = 2)\n\npop_202307 &lt;- pop_202307_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(x1, x2, x107:x208, x210:x311) |&gt; \n  janitor::row_to_names(row_number = 1) |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  pivot_longer(cols = 연령구간인구수:x100세_이상_2) |&gt; \n  filter(!str_detect(name, \"^연령구간\")) |&gt; \n  mutate(성별 = ifelse(str_detect(name, \"_2$\"), \"여자\", \"남자\")) |&gt; \n  mutate(나이 = parse_number(name),\n         인구수 = parse_number(value)) |&gt; \n  filter(!str_detect(행정기관, \"경기도 경기도\") )  |&gt; \n  mutate(행정동 = str_remove(행정기관, \"경기도 광명시 \")) |&gt; \n  mutate(시점 = \"2023-07-15\") |&gt; \n  select(시점, 행정동, 성별, 나이, 인구수) \n\npop_202307\n\npop_tbl &lt;- bind_rows(pop_202307, pop_202203, pop_202004)\n\npop_tbl |&gt; \n  write_rds(\"data/kwangmyung_pop.rds\")"
  },
  {
    "objectID": "kwangmyung.html#분석-1",
    "href": "kwangmyung.html#분석-1",
    "title": "지도제작 대회",
    "section": "\n3.2 분석",
    "text": "3.2 분석\n\n3.2.1 유권자\n\n코드library(ggrepel)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\") |&gt; \n  mutate(시점 = lubridate::ymd(시점))\n\nkm_voter_ttl_gg &lt;- pop_tbl |&gt; \n  mutate(유권자 = ifelse(나이 &gt;= 19, \"유권자\", \"무권자\")) |&gt; \n  group_by(시점, 유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 유권자, color = 유권자)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_continuous(labels = scales::comma) +\n    expand_limits(y = c(0, 300000)) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 최근 인구수와 유권자수\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\") +\n    scale_color_manual(values = c(\"유권자\" = \"blue\",\n                                  \"무권자\" = \"gray30\")) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\")\n\nkm_voter_ttl_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_voter_ttl_gg\ndev.off()  \n\n\n\n\n\n\n\n3.2.2 동별 유권자\n\n코드km_voter_dong_gg &lt;- pop_tbl |&gt; \n  mutate(유권자 = ifelse(나이 &gt;= 19, \"유권자\", \"무권자\")) |&gt; \n  group_by(시점, 행정동, 유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 인구수 / sum(인구수)) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 유권자, color = 유권자)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_sqrt(labels = scales::comma) +\n    expand_limits(y = c(0, 45000)) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 동별 인구수와 유권자수\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\",\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_color_manual(values = c(\"유권자\" = \"blue\",\n                                  \"무권자\" = \"gray30\")) +\n    facet_wrap(~행정동) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\")\n  \n\nkm_voter_dong_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_동별_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_voter_dong_gg\ndev.off()  \n\n\n\n\n\n\n\n3.2.3 세대별 (3040기준)\n\n코드km_age_ttl_gg &lt;- pop_tbl |&gt; \n  mutate(세대 = case_when(나이 &gt;= 19 & 나이 &lt; 30 ~ \"1020대\",\n                            나이 &gt;= 30 & 나이 &lt; 50 ~ \"3040대\",\n                            나이 &gt;= 50 ~ \"50이상\")) |&gt; \n  filter(!is.na(세대)) |&gt; \n  group_by(시점, 세대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 세대, color = 세대)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_continuous(labels = scales::comma) +\n    expand_limits(y = c(50000, 120000)) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 연령별 유권자수\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\",\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_color_manual(values = c(\"1020대\" = \"black\",\n                                  \"3040대\" = \"blue\",\n                                  \"50이상\" = \"red\")) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\")\n  \n\nkm_age_ttl_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_세대별_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_age_ttl_gg\ndev.off()  \n\n\n\n\n\n\n\n3.2.4 세대별 (4050기준)\n\n코드km_age_ttl_4050_gg &lt;- pop_tbl |&gt; \n  mutate(세대 = case_when(나이 &gt;= 19 & 나이 &lt; 40 ~ \"1030대\",\n                            나이 &gt;= 40 & 나이 &lt; 60 ~ \"4050대\",\n                            나이 &gt;= 60 ~ \"60이상\")) |&gt; \n  filter(!is.na(세대)) |&gt; \n  group_by(시점, 세대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 세대, color = 세대)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_continuous(labels = scales::comma) +\n    expand_limits(y = c(50000, 120000)) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 연령별 유권자수\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\",\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_color_manual(values = c(\"1030대\" = \"black\",\n                                  \"4050대\" = \"blue\",\n                                  \"60이상\" = \"red\")) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\")\n  \n\nkm_age_ttl_4050_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_세대별_4050_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_age_ttl_4050_gg\ndev.off()  \n\n\n\n\n\n\n\n3.2.5 동별X세대별 (3040기준)\n\n코드km_age_dong_gg &lt;- pop_tbl |&gt; \n  mutate(세대 = case_when(나이 &gt;= 19 & 나이 &lt; 30 ~ \"1020대\",\n                            나이 &gt;= 30 & 나이 &lt; 50 ~ \"3040대\",\n                            나이 &gt;= 50 ~ \"50이상\")) |&gt; \n  filter(!is.na(세대)) |&gt; \n  group_by(시점, 행정동, 세대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 세대, color = 세대)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_continuous(labels = scales::comma) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 동별, 연령별 유권자수(3040기준)\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\",\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_color_manual(values = c(\"1020대\" = \"black\",\n                                  \"3040대\" = \"blue\",\n                                  \"50이상\" = \"red\")) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\") +\n    facet_wrap(~행정동)\n  \n\nkm_age_dong_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_동별_세대별_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_age_dong_gg\ndev.off()  \n\n\n\n\n\n\n\n3.2.6 동별X세대별 (4050기준)\n\n코드km_age_dong_4050_gg &lt;- pop_tbl |&gt; \n  mutate(세대 = case_when(나이 &gt;= 19 & 나이 &lt; 40 ~ \"1030대\",\n                            나이 &gt;= 40 & 나이 &lt; 60 ~ \"4050대\",\n                            나이 &gt;= 60 ~ \"60이상\")) |&gt; \n  filter(!is.na(세대)) |&gt; \n  group_by(시점, 행정동, 세대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = 시점, y = 인구수, group = 세대, color = 세대)) +\n    geom_line() +\n    geom_point(size = 3) +\n    scale_y_continuous(labels = scales::comma) +\n    geom_text_repel(aes(label = scales::comma(인구수))) +\n    labs(x = \"\",\n         y = \"인구수\",\n         title = \"광명시 연령별 행정동별 유권자수 (4050기준)\",\n         subtitle = \"행정안전부 주민등록, 광명시 19세이상 유권자 기준\") +\n    theme(legend.position = \"top\",\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n    scale_color_manual(values = c(\"1030대\" = \"black\",\n                                  \"4050대\" = \"blue\",\n                                  \"60이상\" = \"red\")) +\n    scale_x_date(date_labels = \"%y-%m\", date_breaks = \"6 month\") +\n    facet_wrap(~행정동)\n\nkm_age_dong_4050_gg\n\nragg::agg_jpeg(\"images/kwangmyung/광명시_세대별_동별_4050_유권자수.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nkm_age_dong_4050_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html",
    "href": "approval_rate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 윤석열 대통령\n\n코드library(tidyverse)\nlibrary(rvest)\n\nyoon_url &lt;- 'https://namu.wiki/w/%EC%9C%A4%EC%84%9D%EC%97%B4/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nyoon_html &lt;- read_html(yoon_url)\n\nyoon_list &lt;- yoon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nyoon_raw &lt;- yoon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 54) |&gt; \n  mutate(조사회사 = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nyoon_tbl &lt;- yoon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nyoon_approval_gg &lt;- yoon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\",\n         조사기간 &gt;= as.Date(\"2022-05-07\")) |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    facet_wrap(~조사회사) +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"윤석열 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    expand_limits(x = c(as.Date(\"2022-05-10\"), as.Date(\"2027-05-09\"))) +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\")  \n\nyoon_approval_gg\n\n\n\n\n\n\n\n\n2 문재인 대통령\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmoon_url &lt;- 'https://namu.wiki/w/%EB%AC%B8%EC%9E%AC%EC%9D%B8/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nmoon_html &lt;- read_html(moon_url)\n\nmoon_list &lt;- moon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nmoon_raw &lt;- moon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(id = row_number(),\n         조사회사 = ifelse(id &gt;6, \"리얼미터\", \"한국갤럽\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nmoon_tbl &lt;- moon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 250) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nmoon_approval_gg &lt;- moon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\") |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    facet_wrap(~조사회사) +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"문재인 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nmoon_approval_gg\n\n\n\n\n\n\n\n\n3 박근혜 대통령\n\n코드\npark_url &lt;- 'https://namu.wiki/w/%EB%B0%95%EA%B7%BC%ED%98%9C/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\npark_html &lt;- read_html(park_url)\n\npark_list &lt;- park_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\npark_raw &lt;- park_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\npark_tbl &lt;- park_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 200) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\npark_approval_gg &lt;- park_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"박근혜 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\npark_approval_gg\n\n\n\n\n\n\n\n\n4 이명박 대통령\n\n코드\nlee_url &lt;- 'https://namu.wiki/w/%EC%9D%B4%EB%AA%85%EB%B0%95/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nlee_html &lt;- read_html(lee_url)\n\nlee_list &lt;- lee_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nlee_raw &lt;- lee_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\nconvert_ym_date &lt;- function(korean_date) {\n  \n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year and month\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  \n  # Construct the date - the first day of the month and year\n  date &lt;- make_date(year, month, 15)\n  \n  return(date)\n}\n\nlee_tbl &lt;- lee_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 90) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n  \n\nlee_approval_gg &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"이명박 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\")\n\nlee_approval_gg\n\n\n\n\n\n\n\n\n5 노무현 대통령\n\n코드\nrho_url &lt;- 'https://namu.wiki/w/%ED%8B%80:%ED%95%9C%EA%B5%AD%EA%B0%A4%EB%9F%BD%20%EB%85%B8%EB%AC%B4%ED%98%84%20%EB%8C%80%ED%86%B5%EB%A0%B9%20%EA%B5%AD%EC%A0%95%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nrho_html &lt;- read_html(rho_url)\n\nrho_list &lt;- rho_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrho_raw &lt;- rho_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\nrho_tbl &lt;- rho_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 20) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n  \n\nrho_approval_gg &lt;- rho_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"노무현 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nrho_approval_gg\n\n\n\n\n\n\n\n\n6 결합\n\n코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n#&gt; # A tibble: 20 × 4\n#&gt;    조사회사 조사기간    긍정  부정\n#&gt;    &lt;chr&gt;    &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1 한국갤럽 2003-02-15    60    19\n#&gt;  2 한국갤럽 2003-05-15    40    41\n#&gt;  3 한국갤럽 2003-08-15    29    53\n#&gt;  4 한국갤럽 2003-11-15    22    62\n#&gt;  5 한국갤럽 2004-02-15    25    57\n#&gt;  6 한국갤럽 2004-05-15    34    46\n#&gt;  7 한국갤럽 2004-08-15    23    60\n#&gt;  8 한국갤럽 2004-11-15    27    57\n#&gt;  9 한국갤럽 2005-02-15    33    55\n#&gt; 10 한국갤럽 2005-05-15    34    53\n#&gt; 11 한국갤럽 2005-08-15    28    61\n#&gt; 12 한국갤럽 2005-11-15    23    67\n#&gt; 13 한국갤럽 2006-02-15    27    63\n#&gt; 14 한국갤럽 2006-05-15    20    70\n#&gt; 15 한국갤럽 2006-08-15    16    74\n#&gt; 16 한국갤럽 2006-11-15    12    79\n#&gt; 17 한국갤럽 2007-02-15    16    78\n#&gt; 18 한국갤럽 2007-05-15    24    66\n#&gt; 19 한국갤럽 2007-08-15    27    64\n#&gt; 20 한국갤럽 2007-11-15    27    62\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n#&gt; # A tibble: 75 × 4\n#&gt;    조사회사 조사기간    긍정  부정\n#&gt;    &lt;chr&gt;    &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1 한국갤럽 2008-02-15    52    29\n#&gt;  2 한국갤럽 2008-05-15    21    69\n#&gt;  3 한국갤럽 2008-08-15    24    65\n#&gt;  4 한국갤럽 2008-11-15    32    55\n#&gt;  5 한국갤럽 2009-02-15    34    55\n#&gt;  6 한국갤럽 2009-05-15    27    55\n#&gt;  7 한국갤럽 2009-08-15    36    55\n#&gt;  8 한국갤럽 2009-11-15    47    45\n#&gt;  9 한국갤럽 2010-02-15    44    45\n#&gt; 10 한국갤럽 2010-05-15    49    41\n#&gt; # ℹ 65 more rows\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n#&gt; # A tibble: 214 × 4\n#&gt;    조사회사 조사기간        긍정  부정\n#&gt;    &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1 한국갤럽 2013년 1월 3주    55    19\n#&gt;  2 한국갤럽 2013년 1월 4주    56    19\n#&gt;  3 한국갤럽 2013년 1월 5주    52    21\n#&gt;  4 한국갤럽 2013년 2월 1주    48    29\n#&gt;  5 한국갤럽 2013년 2월 2주    49    29\n#&gt;  6 한국갤럽 2013년 2월 3주    44    32\n#&gt;  7 한국갤럽 2013년 3월 3주    44    19\n#&gt;  8 한국갤럽 2013년 3월 4주    41    28\n#&gt;  9 한국갤럽 2013년 4월 1주    41    29\n#&gt; 10 한국갤럽 2013년 4월 2주    44    29\n#&gt; # ℹ 204 more rows\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n#&gt; # A tibble: 257 × 4\n#&gt;    조사회사 조사기간        긍정  부정\n#&gt;    &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt;\n#&gt;  1 한국갤럽 2017년 6월 1주    84     7\n#&gt;  2 한국갤럽 2017년 6월 2주    82    10\n#&gt;  3 한국갤럽 2017년 6월 3주    83    10\n#&gt;  4 한국갤럽 2017년 6월 4주    79    14\n#&gt;  5 한국갤럽 2017년 6월 5주    80    13\n#&gt;  6 한국갤럽 2017년 7월 1주    83     9\n#&gt;  7 한국갤럽 2017년 7월 2주    80    12\n#&gt;  8 한국갤럽 2017년 7월 3주    74    16\n#&gt;  9 한국갤럽 2017년 7월 4주    77    13\n#&gt; 10 한국갤럽 2017년 8월 1주    77    15\n#&gt; # ℹ 247 more rows\n\n\n\n코드library(patchwork)\n\n(rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\n\n\n\n\n\n코드\n(lee_approval_gg)  / (yoon_approval_gg)"
  }
]