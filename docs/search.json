[
  {
    "objectID": "day_01.html",
    "href": "day_01.html",
    "title": "점(Point)",
    "section": "",
    "text": "About this site\n\n# Libraries Loading -------------------------------------------------------\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(sf)\n\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n\nlibrary(ggtext)\nlibrary(maps)\n\n\n다음의 패키지를 부착합니다: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n# Data Reading and Wrangling ----------------------------------------------\n# Generating pixel grid \nlat <- tibble(lat = seq(-90, 90, by = .5))\nlong <- tibble(long = seq(-180, 180, by = .5))\n\ndots <- lat %>% \n  full_join(long, by = character())\n  as_tibble()\n\nWarning: The `x` argument of `as_tibble()` can't be missing as of tibble 3.0.0.\n\n\n# A tibble: 0 × 0\n\ndots <- dots %>% \n  mutate(country = map.where('world', long, lat),\n         lakes = map.where('lakes', long, lat)) %>% \n  filter(!is.na(country) & is.na(lakes)) %>% \n  dplyr::select(-lakes)\n\nworld <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %>% \n  filter(region_wb != \"Antarctica\")\n\ndots <- dots %>% \n  mutate(\n    country = case_when(\n      country %in% c(\"Comoros:Grande Comore\", \"Comoros:Anjouan\") ~ \"Comoros\",\n      country %in% c(\"Cape Verde:Santo Antao\",\"Cape Verde:Sao Tiago\") ~ \"Cape Verde\",\n      country == \"Guinea-Bissau\" ~ \"Guinea Bissau\", \n      country == \"Equatorial Guinea:Rio Muni\" ~ \"Equatorial Guinea\", \n      country ==  \"Malawi:3\" ~ \"Malawi\",\n      country == \"Somalia:Somaliland\" ~ \"Somaliland\",\n      country == \"Tanzania\" ~ \"United Republic of Tanzania\", \n      TRUE ~ country))\n\nasia_dots <- world %>%\n  filter(continent == \"Asia\") %>% \n  dplyr::select(admin, mapcolor7) %>% \n  left_join(dots, by = c(\"admin\" = \"country\")) \n\n# Graphic -----------------------------------------------------------------\npalette <- c(\"#8931EF\", \"#F2CA19\", \"#FF00BD\" , \"#0057E9\", \"#87E911\", \"#E11845\", \"#FF8A12\") \n\n# 2021 Version ----\nasia_dots %>% \n  ggplot() + \n  geom_point(aes(x = long, y = lat, color = factor(mapcolor7)), size = .95) + \n  guides(color =\"none\") +\n  scale_color_manual(\n    values = palette\n  ) + \n  labs(\n    title = \"AFRICA\", \n    subtitle = glue::glue(\"1 continent, {nrow(asia_dots)} points\"), \n    caption = \"#30DayMapChallenge - Day 1 : Points · Abdoul ISSA BIDA\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"Gotham Narrow\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125, color = \"white\") + \n  coord_fixed(clip = \"off\") + \n  theme_void() + \n  theme(\n    plot.background = element_rect(fill = \"#111111\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3), color = \"white\", family = \"Gotham Black\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, size = rel(2.5), color = \"white\",family = \"Mercury\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.125), hjust = .5, color = \"white\", family = \"Gotham Medium\", margin = margin(b = 15))\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 12 rows containing missing values (`geom_point()`).\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): 윈도우즈\n폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): 윈도우즈\n폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): 윈도우즈\n폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\n\n\n# 2022 Version ---- \nasia_dots %>% \n  ggplot() + \n  geom_point(aes(x = long, y = lat), color = \"#F61753\", size = .05) + \n  labs(\n    title = \"아시아\", \n    subtitle = glue::glue(\"1 continent, {nrow(asia_dots)} points\"), \n    caption = \"#30DayMapChallenge - Day 1 : Points · Abdoul ISSA BIDA\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"Gotham Narrow\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125) + \n  coord_fixed(clip = \"off\") + \n  theme_void() + \n  theme(\n    plot.background = element_rect(fill = \"#FFFFFF\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3),  family = \"Gotham Black\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, color =\"grey30\", size = rel(2.5), family = \"Mercury\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.5), hjust = .5, family = \"Gotham Narrow\", margin = margin(b = 15))\n  )\n\nWarning: Removed 12 rows containing missing values (`geom_point()`).\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): 윈도우즈\n폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\n윈도우즈 폰트데이터베이스에서 찾을 수 없는 폰트페밀리입니다"
  },
  {
    "objectID": "day_02.html",
    "href": "day_02.html",
    "title": "elevatr 고도",
    "section": "",
    "text": "고도 데이터\nelevatr\n\nFind GPS Coordinates on Google maps\n\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(rgdal)\n\n필요한 패키지를 로딩중입니다: sp\nPlease note that rgdal will be retired during 2023,\nplan transition to sf/stars/terra functions using GDAL and PROJ\nat your earliest convenience.\nSee https://r-spatial.org/r/2022/04/12/evolution.html and https://github.com/r-spatial/evolution\nrgdal: version: 1.6-4, (SVN revision 1196)\nGeospatial Data Abstraction Library extensions to R successfully loaded\nLoaded GDAL runtime: GDAL 3.5.2, released 2022/09/02\nPath to GDAL shared files: C:/Users/statkclee/AppData/Local/R/win-library/4.2/rgdal/gdal\nGDAL binary built with GEOS: TRUE \nLoaded PROJ runtime: Rel. 8.2.1, January 1st, 2022, [PJ_VERSION: 821]\nPath to PROJ shared files: C:/Users/statkclee/AppData/Local/R/win-library/4.2/rgdal/proj\nPROJ CDN enabled: FALSE\nLinking to sp version:1.6-0\nTo mute warnings of possible GDAL/OSR exportToProj4() degradation,\nuse options(\"rgdal_show_exportToProj4_warnings\"=\"none\") before loading sp or rgdal.\n\nlibrary(elevatr)\nlibrary(sf)\n\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n\nlibrary(rayshader)\nlibrary(tmap)\n\nwoodo <- tibble(x = 126.95, y = 33.50) %>%\n  st_as_sf(coords = c(\"x\", \"y\"), crs = 4236)\n\nwoodo_elev <- get_elev_raster(woodo, z = 13)\n\nMosaicing & Projecting\nNote: Elevation units are in meters.\n\nwoodo_elmat = raster_to_matrix(woodo_elev)\n\nwoodo_elmat %>%\n  sphere_shade(texture = \"imhof3\") %>%\n  add_water(detect_water(woodo_elmat, cutoff = 0.95), color = \"blue\") %>%\n  plot_map()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge"
  }
]