[
  {
    "objectID": "approval_rate.html",
    "href": "approval_rate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "윤석열 대통령\n문재인 대통령\n박근혜 대통령\n이명박 대통령\n노무현 대통령\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\nextrafont::loadfonts()\n\nyoon_url &lt;- 'https://namu.wiki/w/%EC%9C%A4%EC%84%9D%EC%97%B4/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nyoon_html &lt;- read_html(yoon_url)\n\nyoon_list &lt;- yoon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nyoon_raw &lt;- yoon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 54) |&gt; \n  mutate(조사회사 = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nyoon_tbl &lt;- yoon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nyoon_gg_tbl &lt;- yoon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\",\n         조사기간 &gt;= as.Date(\"2022-05-07\"))\n\nelection_interval &lt;- -interval(ymd(\"2024-04-10\"), ymd('2023-08-05'))\n\nelection_period   &lt;- as.period(election_interval, unit = \"month\") \n\nremaining_ymd &lt;- glue::glue(\"남은 기간:\\n {month(election_period)}월 {day(election_period)}일\")\n\nyoon_approval_gg &lt;- yoon_gg_tbl  |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = yoon_gg_tbl |&gt; filter(조사기간 == max(조사기간)), \n               aes(x = 조사기간, y = 지지율, color= 긍부정), size = 1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +\n    geom_vline(xintercept = as.Date(\"2024-04-10\"), linetype = 1, color = \"gray50\") +    \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"윤석열 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    expand_limits(x = c(as.Date(\"2022-05-10\"), as.Date(\"2027-05-09\"))) +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\")  +\n    geom_text(aes(x=as.Date(\"2023-12-01\"), y = 60, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2024-08-01\"), y = 65, label = \"제22대 총선\\n4월10일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n\nyoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/윤석열.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nyoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmoon_url &lt;- 'https://namu.wiki/w/%EB%AC%B8%EC%9E%AC%EC%9D%B8/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nmoon_html &lt;- read_html(moon_url)\n\nmoon_list &lt;- moon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nmoon_raw &lt;- moon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(id = row_number(),\n         조사회사 = ifelse(id &gt;6, \"리얼미터\", \"한국갤럽\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nmoon_tbl &lt;- moon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 250) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nmoon_approval_gg &lt;- moon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\") |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    # facet_wrap(~조사회사) +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"문재인 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nmoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/문재인.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nmoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\npark_url &lt;- 'https://namu.wiki/w/%EB%B0%95%EA%B7%BC%ED%98%9C/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\npark_html &lt;- read_html(park_url)\n\npark_list &lt;- park_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\npark_raw &lt;- park_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\npark_tbl &lt;- park_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 200) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\npark_approval_gg &lt;- park_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"박근혜 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\npark_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/박근혜.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\npark_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nlee_url &lt;- 'https://namu.wiki/w/%EC%9D%B4%EB%AA%85%EB%B0%95/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nlee_html &lt;- read_html(lee_url)\n\nlee_list &lt;- lee_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nlee_raw &lt;- lee_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\nconvert_ym_date &lt;- function(korean_date) {\n  \n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year and month\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  \n  # Construct the date - the first day of the month and year\n  date &lt;- make_date(year, month, 15)\n  \n  return(date)\n}\n\nlee_tbl &lt;- lee_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 90) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n\nprevious_date &lt;- ymd(\"2012-04-11\") - election_period\n\n\nlee_current_tbl &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt; \n  filter(조사기간 == previous_date+9)\n\nlee_approval_gg &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_text(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정,\n                                          label = 지지율), vjust = -1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"이명박 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\") +\n    geom_vline(xintercept = as.Date(\"2012-04-11\"), linetype = 1, color = \"gray50\") +\n    geom_text(aes(x=as.Date(\"2011-12-01\"), y = 45, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2012-08-01\"), y = 65, label = \"제19대 총선\\n4월11일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n  \nlee_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/이명박.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nlee_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nrho_url &lt;- 'https://namu.wiki/w/%ED%8B%80:%ED%95%9C%EA%B5%AD%EA%B0%A4%EB%9F%BD%20%EB%85%B8%EB%AC%B4%ED%98%84%20%EB%8C%80%ED%86%B5%EB%A0%B9%20%EA%B5%AD%EC%A0%95%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nrho_html &lt;- read_html(rho_url)\n\nrho_list &lt;- rho_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrho_raw &lt;- rho_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\nrho_tbl &lt;- rho_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 20) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n  \n\nrho_approval_gg &lt;- rho_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"노무현 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nrho_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/노무현.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nrho_approval_gg\ndev.off()\n\n\n\n\n\n\n\n코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#결합",
    "href": "approval_rate.html#결합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#년-기준",
    "href": "approval_rate.html#년-기준",
    "title": "지도제작 대회",
    "section": "\n2.1 1년 기준",
    "text": "2.1 1년 기준\n\n코드\nrm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20{2006}%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8')\n\nrm_html &lt;- read_html(rm_url)\n\nrm_list &lt;- rm_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrm_raw &lt;- rm_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(name == 1) |&gt; \n  mutate(조사회사 = \"리얼미터\") \n\nremove_last &lt;- function(vector) {\n  if(vector[length(vector)] ==\"\") {\n    vector[1:(length(vector)-1)]\n  } else {\n    vector\n  }\n}\n\nmake_dataframe &lt;- function(x_vec, y_vec) {\n  data.frame(x_vec, y_vec)\n}\n\n## 정당명과 지지율\nrm_tbl &lt;- rm_raw |&gt; \n  mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt;\n  select(contains(\"정당지지율\"), x_2) |&gt; \n  set_names(c(\"조사기간\", \"지지율\")) |&gt; \n  mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                      str_split(지지율, \"●\"), NA)) |&gt; \n  mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n  mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n  fill(정당명, .direction = \"down\") |&gt; \n  filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n  mutate(지지율 = str_squish(지지율),\n         정당명 = str_squish(정당명)) |&gt; \n  mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n         지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n  mutate(지지율수 = map_int(지지율, length),\n         정당수   = map_int(정당명, length)) |&gt; \n  mutate(지지율 = ifelse(지지율수 == 정당수, 지지율,\n                      map(지지율, remove_last))) |&gt; \n  filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n  mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n  select(조사기간, data)\n  \nrm_tbl |&gt; \n  unnest(data)"
  },
  {
    "objectID": "approval_rate.html#함수",
    "href": "approval_rate.html#함수",
    "title": "지도제작 대회",
    "section": "\n2.2 함수",
    "text": "2.2 함수\n\n코드\nget_party_data &lt;- function(year = \"2012\") {\n  \n  rm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20',\n                       '{year}',\n                       '%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8') |&gt; as.character()\n\n  rm_html &lt;- read_html(rm_url)\n  \n  rm_list &lt;- rm_html |&gt; \n    html_nodes('table') |&gt; \n    html_table(header = TRUE)\n  \n  rm_raw &lt;- rm_list |&gt; \n    enframe() |&gt; \n    mutate(nrow = map_int(value, nrow)) |&gt; \n    filter(name == 1) |&gt; \n    mutate(조사회사 = \"리얼미터\") \n  \n  remove_last &lt;- function(vector) {\n    \n    if(length(vector) &lt; 3){\n      vector\n    } else if(vector[length(vector)] ==\"\") {\n      vector[1:(length(vector)-1)]\n    } else {\n      vector\n    }\n  }\n  \n  make_dataframe &lt;- function(x_vec, y_vec) {\n    min_row &lt;- min(length(x_vec), length(y_vec))\n    data.frame(x_vec = x_vec[1:min_row], y_vec = y_vec[1:min_row])\n  }\n  \n  ## 정당명과 지지율\n  rm_tbl &lt;- rm_raw |&gt; \n    mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n    select(조사회사, data) |&gt; \n    unnest(data) |&gt;\n    select(contains(\"정당지지율\"), x_2) |&gt; \n    set_names(c(\"조사기간\", \"지지율\")) |&gt; \n    mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                        str_split(지지율, \"●\"), NA)) |&gt; \n    mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n    mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n    fill(정당명, .direction = \"down\") |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n    mutate(지지율 = str_squish(지지율),\n           정당명 = str_squish(정당명)) |&gt; \n    mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n           지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 == 정당수, 지지율, map(지지율, remove_last))) |&gt; \n    filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 != 정당수, NA, 지지율)) |&gt; \n    fill(지지율, .direction = \"up\") |&gt; \n    mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n    select(조사기간, data)\n\n  \n  rm_df &lt;- rm_tbl |&gt; unnest(data) |&gt; mutate(x_vec = parse_number(x_vec)) |&gt; \n    rename(지지율 = x_vec,\n           정당   = y_vec) |&gt; \n    mutate(연도 = year)\n  \n  return(rm_df)\n}\n\nget_party_data(\"2018\")"
  },
  {
    "objectID": "approval_rate.html#결합-1",
    "href": "approval_rate.html#결합-1",
    "title": "지도제작 대회",
    "section": "\n2.3 결합",
    "text": "2.3 결합\n\n코드\nsafely_get_party_data &lt;- safely(get_party_data, otherwise = \"오류\")\n\nyear &lt;- 2006:2023\n\nparty_raw &lt;- year |&gt; \n  enframe()  |&gt; \n  mutate(data = map(value, safely_get_party_data))\n\nparty_tbl &lt;- party_raw |&gt; \n  mutate(result = map(data, \"result\")) |&gt; \n  mutate(check = map_dbl(result, is_tibble)) |&gt; \n  unnest(result) |&gt; \n  select(연도, 조사기간, 정당, 지지율)\n\nparty_tbl |&gt; \n  write_csv(\"data/리얼미터_정당지지율.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge\n\n2 원천 지도\n\n\n국토교통부\n\n\nLX 한국국토정보공사, 구 한국지적공사\n\n공간정보산업진흥원\n\nVWorld, 공간정보오픈플랫폼\n\n\n\n국토지리정보원\n\n국토정보플랫폼\n\n국가공간정보포털\n\n오픈마켓, 90m 표고 데이터: [국토지리정보원] 수치표고모델(DEM)_90M\n\n\n\n\n\n\n대한민국 행정동 경계: admdongkor\n대한민국 최신 행정구역(SHP) 다운로드\n\n3 세계지도\n출처: Fixing maps library data for Pacific centred (0°-360° longitude) display\n\n\n세계지도: giscoR\n세계지도: maps\n세계지도: rnaturalearth\n아시아\n대한민국\n태평양 중심\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\n\n# download.file(url = \"https://gisco-services.ec.europa.eu/distribution/v2/countries/geojson/CNTR_RG_01M_2016_4326.geojson\", destfile = \"data/world.geojson\", mode = \"w\")\n# \n# world_sf &lt;- giscoR::gisco_get_countries(\n#   epsg = \"4326\",\n#   region = \"Asia\",\n#   resolution = \"1\",\n#   cache = TRUE, \n#   update_cache = TRUE\n# )\n\nworld_sf &lt;- sf::st_read(\"data/world.geojson\")\n#&gt; Reading layer `world' from data source `D:\\tcs\\map_challenge\\data\\world.geojson' using driver `GeoJSON'\n#&gt; Simple feature collection with 257 features and 6 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.66498\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_sf))\n\n\n\n\n\n\n\n\n\n\n코드# 필요한 라이브러리를 불러옵니다.\nlibrary(ggplot2)\nlibrary(maps)\n\n# 월드맵 데이터를 불러옵니다.\nworld_map &lt;- map_data(\"world\")\n\n# ggplot2를 사용해 지도를 그립니다.\nggplot() +\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_cartesian(xlim = c(-180, 180)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n코드library(rnaturalearth)\n\n# Get the world map data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Shift the map to center on the Pacific Ocean\nworld_trans &lt;- st_transform(st_wrap_dateline(world, options = c(\"WRAPDATELINE=YES\", \"DATELINEOFFSET=-180\")), crs = \"+proj=robin\")\n\n# Plot the world map\nggplot(data = world_trans) +\n  geom_sf() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n코드asia_sf &lt;- giscoR::gisco_get_countries(\n  epsg = \"4326\",\n  region = \"Asia\",\n  resolution = \"60\",\n  cache = TRUE,\n  update_cache = TRUE\n)\n\nplot(st_geometry(asia_sf))\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(giscoR)\n\nkorea &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\"\n) |&gt;\n    sf::st_transform(\"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\")\n\nplot(st_geometry(korea))\n\n\n\n\n\n\n\n\n\n\n코드library(maps)\n\nplot.map&lt;- function(database,center,...){\n    Obj &lt;- map(database,...,plot=F)\n    coord &lt;- cbind(Obj[[1]],Obj[[2]])\n\n    # split up the coordinates\n    id &lt;- rle(!is.na(coord[,1]))\n    id &lt;- matrix(c(1,cumsum(id$lengths)),ncol=2,byrow=T)\n    polygons &lt;- apply(id,1,function(i){coord[i[1]:i[2],]})\n\n    # split up polygons that differ too much\n    polygons &lt;- lapply(polygons,function(x){\n        x[,1] &lt;- x[,1] + center\n        x[,1] &lt;- ifelse(x[,1]&gt;180,x[,1]-360,x[,1])\n        if(sum(diff(x[,1])&gt;300,na.rm=T) &gt;0){\n          id &lt;- x[,1] &lt; 0\n          x &lt;- rbind(x[id,],c(NA,NA),x[!id,])\n       }\n       x\n    })\n    # reconstruct the object\n    polygons &lt;- do.call(rbind,polygons)\n    Obj[[1]] &lt;- polygons[,1]\n    Obj[[2]] &lt;- polygons[,2]\n\n    map(Obj,...)\n}\n\nplot.map(\"world\", center=210, col=\"white\",bg=\"gray\",\n         fill=TRUE, ylim=c(-60,90),mar=c(0,0,0,0))"
  },
  {
    "objectID": "km_BitGPT.html",
    "href": "km_BitGPT.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60\n\n\n\n\n\n\n\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0\n\n\n\n\n\n\n\n데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "realmeter_metro.html",
    "href": "realmeter_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))\n\n\n\n\n코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))\n\n\n\n\n코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)\n\n\n\n\n코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-링크",
    "href": "realmeter_metro.html#pdf-다운로드-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드",
    "href": "realmeter_metro.html#pdf-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-함수",
    "href": "realmeter_metro.html#pdf-다운로드-함수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)"
  },
  {
    "objectID": "realmeter_metro.html#전체-다운로드",
    "href": "realmeter_metro.html#전체-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#다운로드-목록",
    "href": "realmeter_metro.html#다운로드-목록",
    "title": "지도제작 대회",
    "section": "\n2.1 다운로드 목록",
    "text": "2.1 다운로드 목록\n\n코드library(tidyverse)\nlibrary(rvest)\n\n## 함수\nget_reports &lt;- function(page=\"1\"){\n  \n  cat(\"\\n----------------------------\\n\", \n      \"     \", page, \" 페이지\",\n      \"\\n----------------------------\\n\")\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\n## 다운로드 페이지\n\npdf_pages &lt;- 1:158\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  mutate(data = map(page, get_reports))\n\npdf_report_tbl &lt;- pdf_report_raw |&gt; \n  select(data) |&gt; \n  mutate(nrow = map_int(data, nrow)) |&gt; \n  filter(nrow !=0) |&gt; \n  unnest(data)\n\npdf_report_tbl |&gt; \n  write_rds(\"data/realmeter/pdf_report_tbl.rds\")"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-1",
    "href": "realmeter_metro.html#pdf-다운로드-1",
    "title": "지도제작 대회",
    "section": "\n2.2 PDF 다운로드",
    "text": "2.2 PDF 다운로드\n\n코드pdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\n\ndownload_pdfs &lt;- function(link, filename) {\n  cat(\"\\n----------------------------\\n\", \n      \"     \", filename, \": 파일명\",\n      \"\\n----------------------------\\n\")\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\npdf_report_tbl |&gt; \n  mutate(pdfs = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#윤석열-대통령-이후",
    "href": "realmeter_metro.html#윤석열-대통령-이후",
    "title": "지도제작 대회",
    "section": "\n3.1 윤석열 대통령 이후",
    "text": "3.1 윤석열 대통령 이후\n\n코드library(tidyverse)\nlibrary(fs)\n\npdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\nlocal_path_file &lt;- fs::dir_ls(\"data/realmeter/\") |&gt; \n  enframe(value = \"path_file\") |&gt; \n  mutate(filename = path_file(name)) |&gt; \n  select(path_file, filename)\n\n# 날짜 변환 함수\nconvert_to_date &lt;- function(d) {\n  year &lt;- as.numeric(sub(\"년.*\", \"\", d)) + 2000  # 2000을 더해서 4자리 연도를 만듭니다.\n  month &lt;- as.numeric(sub(\".* (\\\\d+)월.*\", \"\\\\1\", d))\n  week &lt;- as.numeric(sub(\".*월 (\\\\d+)주\", \"\\\\1\", d))\n  start_date &lt;- ymd(paste(year, month, 1, sep = \"-\"))\n  \n  return(start_date + days(7 * (week - 1)))\n}\n\n\nyoon_pdf &lt;- pdf_report_tbl |&gt; \n  left_join(local_path_file) |&gt; \n  select(text, path_file, filename) |&gt; \n  mutate(date = str_extract(text, pattern = '(\\\\d+년 \\\\d+월 \\\\d+주)')) |&gt; \n  mutate(date = convert_to_date(date)) |&gt; \n  filter(date &gt; as.Date(\"2022-05-01\"),\n         str_detect(filename, \"주간통계표\")) |&gt; \n  select(date, path_file, filename) |&gt; \n  arrange(date)\n\nyoon_pdf"
  },
  {
    "objectID": "realmeter_metro.html#응답자-특성",
    "href": "realmeter_metro.html#응답자-특성",
    "title": "지도제작 대회",
    "section": "\n3.2 응답자 특성",
    "text": "3.2 응답자 특성\n\n코드library(pdftools)\nlibrary(openai)\n\nraw_text &lt;- pdftools::pdf_text(pdf = \"data/realmeter/주간통계표22년5월2주최종_y51w.pdf\")\n\ndemo_text &lt;- raw_text |&gt; \n  enframe() |&gt; \n  mutate(value = str_squish(value)) |&gt; \n  # filter(str_detect(value, \"^(?=.*보수)(?=.*중도)(?=.*진보)\")) |&gt; \n  filter(str_detect(value, \"응답자\\\\s+특성\")) |&gt; \n  pull(value)\n\nsystem_task &lt;- glue::glue(\"당신은 통계 데이터 전문가입니다.\n                          당신에게 텍스트 형식의 표로 주어졌을 때,\n                          설명은 없이 텍스트를 표로 바꾸는 것입니다.\",\n                          \"텍스트 형식의 표는 다음과 같습니다.\",\n                          \"데이터의 상단에는 표의 칼럼명이 위치하고 첫번째 혹은 \n                          두번째 칼럼은 다차원표의 범주(Level)에 대한 정보를 담고 있고\n                          나머지 셀은 숫자로 구성됩니다.\")\n                          # \"'만18세 이상 29세 이하'는 하나의 값입니다.\")\n\ngpt_response &lt;- create_chat_completion(\n            # model = \"gpt-3.5-turbo\",\n            model = \"gpt-4\",\n            messages = list(\n              list(\n                \"role\" = \"system\",\n                \"content\" = system_task\n              ),\n              list(\n                \"role\" = \"user\",\n                \"content\" = demo_text\n              )\n            ),\n            temperature = 0,\n            top_p = 1,\n            n = 1,\n            openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),\n            openai_organization = NULL\n          )\n\n\ngpt_response |&gt; \n  write_rds(\"data/realmeter_deom.rds\")\n\n\n\n코드library(tidyverse)\nlibrary(openai)\n\ngpt_response &lt;- \n  read_rds(\"data/realmeter_deom.rds\")\n\nresult_md &lt;- gpt_response |&gt; \n  pluck('choices') |&gt; \n  pull('message.content')  |&gt; \n  str_split(\"\\n\") %&gt;%\n  .[[1]]\n  \nresult_md\n#&gt;  [1] \"| 구 분 | 사례수(명) | 비율(%) | 가중값 사례수(명) | 가중값 비율(%) | 배율 |\"\n#&gt;  [2] \"|---|---|---|---|---|---|\"                                                   \n#&gt;  [3] \"| 전 체 | 2526 | 100.0 | 2526 | 100.0 | 1.00 |\"                              \n#&gt;  [4] \"| 남 자 | 1566 | 62.0 | 1252 | 49.6 | 0.80 |\"                                \n#&gt;  [5] \"| 여 자 | 960 | 38.0 | 1274 | 50.4 | 1.33 |\"                                 \n#&gt;  [6] \"| 만18세이상 | 300 | 11.9 | 437 | 17.3 | 1.46 |\"                             \n#&gt;  [7] \"| 2 9 세 이 하 | 292 | 11.6 | 382 | 15.1 | 1.31 |\"                           \n#&gt;  [8] \"| 4 0 대 | 404 | 16.0 | 467 | 18.5 | 1.16 |\"                                 \n#&gt;  [9] \"| 5 0 대 | 626 | 24.8 | 493 | 19.5 | 0.79 |\"                                 \n#&gt; [10] \"| 6 0 대 | 545 | 21.6 | 410 | 16.2 | 0.75 |\"                                 \n#&gt; [11] \"| 7 0 세 이 상 | 359 | 14.2 | 337 | 13.3 | 0.94 |\"                           \n#&gt; [12] \"| 서 울 | 619 | 24.5 | 478 | 18.9 | 0.77 |\"                                  \n#&gt; [13] \"| 인 천 / 경 기 | 768 | 30.4 | 798 | 31.6 | 1.04 |\"                          \n#&gt; [14] \"| 대전/세종/충청 | 231 | 9.1 | 268 | 10.6 | 1.16 |\"                          \n#&gt; [15] \"| 강 원 | 79 | 3.1 | 74 | 2.9 | 0.94 |\"                                      \n#&gt; [16] \"| 부산/울산/경남 | 315 | 12.5 | 381 | 15.1 | 1.21 |\"                         \n#&gt; [17] \"| 대 구 / 경 북 | 223 | 8.8 | 248 | 9.8 | 1.11 |\"                            \n#&gt; [18] \"| 광 주 / 전 라 | 257 | 10.2 | 248 | 9.8 | 0.96 |\"                           \n#&gt; [19] \"| 제 주 | 34 | 1.3 | 31 | 1.2 | 0.91 |\"\n\n\nmarkdown_to_df &lt;- function(markdown_table) {\n  \n  # Remove rows with only dashes (assuming they're separator rows)\n  markdown_table &lt;- markdown_table[!str_detect(markdown_table, \"^\\\\|[-]+\\\\|\")]\n\n  # Split each line into its components based on the pipe delimiter\n  split_lines &lt;- str_split(markdown_table, \"\\\\|\")\n  \n  # Extract headers and data\n  headers &lt;- str_trim(unlist(split_lines[1]))\n  data &lt;- do.call(rbind, split_lines[-1])\n  \n  # Convert data to dataframe and assign column names\n  df &lt;- as.data.frame(data, stringsAsFactors = FALSE)\n  colnames(df) &lt;- headers\n  \n  return(df)\n}\n\ndemo_raw &lt;- markdown_to_df(result_md)\n\ndeom_tbl &lt;- demo_raw |&gt; \n  janitor::clean_names(ascii= FALSE) |&gt; \n  select(!starts_with(\"x\")) |&gt; \n  set_names(c(\"구분\", \"완료_사례\", \"완료_비율\", \"가중_사례\", \"가중_비율\", \"가중값\")) |&gt; \n  as_tibble() |&gt; \n  mutate_all(str_squish) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s+\")) |&gt; \n  mutate(구분 = case_when(str_detect(구분, \"만18세이상\") ~ \"20대\",\n                          str_detect(구분, \"29세이하\") ~ \"30대\",\n                          TRUE ~ 구분))\n\ndeom_tbl |&gt; \n  gt::gt()\n\n\n\n\n\n구분\n      완료_사례\n      완료_비율\n      가중_사례\n      가중_비율\n      가중값\n    \n\n\n전체\n2526\n100.0\n2526\n100.0\n1.00\n\n\n남자\n1566\n62.0\n1252\n49.6\n0.80\n\n\n여자\n960\n38.0\n1274\n50.4\n1.33\n\n\n20대\n300\n11.9\n437\n17.3\n1.46\n\n\n30대\n292\n11.6\n382\n15.1\n1.31\n\n\n40대\n404\n16.0\n467\n18.5\n1.16\n\n\n50대\n626\n24.8\n493\n19.5\n0.79\n\n\n60대\n545\n21.6\n410\n16.2\n0.75\n\n\n70세이상\n359\n14.2\n337\n13.3\n0.94\n\n\n서울\n619\n24.5\n478\n18.9\n0.77\n\n\n인천/경기\n768\n30.4\n798\n31.6\n1.04\n\n\n대전/세종/충청\n231\n9.1\n268\n10.6\n1.16\n\n\n강원\n79\n3.1\n74\n2.9\n0.94\n\n\n부산/울산/경남\n315\n12.5\n381\n15.1\n1.21\n\n\n대구/경북\n223\n8.8\n248\n9.8\n1.11\n\n\n광주/전라\n257\n10.2\n248\n9.8\n0.96\n\n\n제주\n34\n1.3\n31\n1.2\n0.91"
  },
  {
    "objectID": "nbs_metro.html",
    "href": "nbs_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists\n\n\n\n\n코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links\n\n\n\n\n코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#자료실-목록",
    "href": "nbs_metro.html#자료실-목록",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists"
  },
  {
    "objectID": "nbs_metro.html#페이지별-보고서-링크",
    "href": "nbs_metro.html#페이지별-보고서-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links"
  },
  {
    "objectID": "nbs_metro.html#보고서-파일",
    "href": "nbs_metro.html#보고서-파일",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#한-페이지",
    "href": "nbs_metro.html#한-페이지",
    "title": "지도제작 대회",
    "section": "\n2.1 한 페이지",
    "text": "2.1 한 페이지\n\n코드\n# for(i in 1:length(page_report_links)) {\n#   cat(\"\\n\", i, \"----------\", page_report_links[i], \"\\n\")\n#   download_zip_report(page_report_links[i])\n# }\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "nbs_metro.html#젠체-페이지",
    "href": "nbs_metro.html#젠체-페이지",
    "title": "지도제작 대회",
    "section": "\n2.2 젠체 페이지",
    "text": "2.2 젠체 페이지\n\n코드\nnbs_bbs_lists\n\nget_page_links &lt;- function(nbs_bbs_list) {\n  \n  page_html &lt;- read_html(nbs_bbs_list)\n\n  page_links &lt;- page_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr('href') \n  \n  page_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n  \n  page_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n  \n  page_report_links\n}\n\nnbs_bbs_tbl &lt;- nbs_bbs_lists |&gt; \n  enframe(value = \"page_url\") |&gt; \n  mutate(data = map(page_url, get_page_links))\n\nnbs_bbs_tbl |&gt; \n  unnest(data)\n\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "gallop_metro.html",
    "href": "gallop_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 데이터"
  },
  {
    "objectID": "km_BitGPT.html#원본-데이터",
    "href": "km_BitGPT.html#원본-데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60"
  },
  {
    "objectID": "km_BitGPT.html#가공데이터",
    "href": "km_BitGPT.html#가공데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0"
  },
  {
    "objectID": "km_BitGPT.html#챗gpt-데이터-변환",
    "href": "km_BitGPT.html#챗gpt-데이터-변환",
    "title": "지도제작 대회",
    "section": "",
    "text": "데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수",
    "href": "km_BitGPT.html#연도별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.1 연도별 인구수",
    "text": "4.1 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수-1",
    "href": "km_BitGPT.html#연도별-인구수-1",
    "title": "지도제작 대회",
    "section": "\n4.2 연도별 인구수",
    "text": "4.2 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#동별-인구수",
    "href": "km_BitGPT.html#동별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.3 동별 인구수",
    "text": "4.3 동별 인구수\n\n코드\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도, 행정동) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수, color = 행정동, group=행정동)) +\n    geom_line(size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 동별 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#유권자-비율-1",
    "href": "km_BitGPT.html#유권자-비율-1",
    "title": "지도제작 대회",
    "section": "\n4.4 유권자 비율",
    "text": "4.4 유권자 비율\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=\"\", y=인구수, fill = 유권자)) +\n    geom_bar(width = 1, stat = \"identity\") +\n    coord_polar(\"y\")  +\n    labs(title=\"광명시 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\"))"
  },
  {
    "objectID": "km_BitGPT.html#내림차순-유권자수",
    "href": "km_BitGPT.html#내림차순-유권자수",
    "title": "지도제작 대회",
    "section": "\n4.5 내림차순 유권자수",
    "text": "4.5 내림차순 유권자수\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  filter(연도 == max(연도)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(행정동, 유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 인구수/sum(인구수)) |&gt; \n  ungroup() |&gt; \n    \n  # pivot_wider(names_from = 유권자, values_from = 인구수) |&gt; \n  # mutate(유권자비율 = 유권자/(비유권자+유권자)) |&gt; \n  # arrange(desc(유권자비율))\n\n  # 시각화 -----------------\n  ggplot(aes(x=fct_reorder2(행정동, 유권자, 유권자비율), y=유권자비율, fill = 유권자)) +\n    geom_col() +\n    coord_flip() +\n    labs(title=\"광명시 동별 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\",\n         x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\")) +\n    theme(legend.position = \"top\")"
  },
  {
    "objectID": "minju_party.html",
    "href": "minju_party.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(gt)\nlibrary(gtExtras)\nlibrary(tidyverse)\n\n# Creating the tibble using tribble\nmage_raw &lt;- tribble(\n  ~`연령`, ~비율,\n  \"10대후반\", \"0.1%\",\n  \"20_24\", \"1.7%\",\n  \"25_29\", \"4.2%\",\n  \"30_34\", \"5.3%\",\n  \"35_39\", \"6.3%\",\n  \"40_44\", \"9.8%\",\n  \"45_49\", \"12.2%\",\n  \"50_54\", \"15.8%\",\n  \"55_59\", \"13.8%\",\n  \"60_64\", \"12.8%\",\n  \"65_69\", \"8.1%\",\n  \"70+\", \"10.0%\"\n)\n\nmage_tbl &lt;- mage_raw |&gt; \n  mutate(비율 = parse_number(비율)/100) |&gt; \n  mutate(당원수 = 비율 * 2454332)\n\nmage_tbl |&gt; \n  gt::gt() |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  fmt_integer(columns = 당원수) |&gt; \n  cols_align(\"center\") |&gt; \n  ## 표 전체 합계 -------------- -----------------------\n  grand_summary_rows(\n    columns = 당원수,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt; \n  gt_theme_538()\n\n\n\n\n코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()\n  \n\n\n\n\n코드age_raw &lt;- readxl::read_excel(\"data/혁신안_202307_202307_연령별_월간.xlsx\", skip = 3)\n\nmale_tbl&lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"남_인구수\", \"연령구간인구수_4\", \n          \"x0_4세_5\", \"x5_9세_6\", \"x10_14세_7\", \"x15_19세_8\", \"x20_24세_9\", \n          \"x25_29세_10\", \"x30_34세_11\", \"x35_39세_12\", \"x40_44세_13\", \n          \"x45_49세_14\", \"x50_54세_15\", \"x55_59세_16\", \"x60_64세_17\", \n          \"x65_69세_18\", \"x70_74세_19\", \"x75_79세_20\", \"x80_84세_21\", \n          \"x85_89세_22\", \"x90_94세_23\", \"x95_99세_24\", \"x100세_이상_25\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"남\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n  \n\nfemale_tbl &lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"여_인구수\", \"연령구간인구수_27\", \n           \"x0_4세_28\", \"x5_9세_29\", \"x10_14세_30\", \"x15_19세_31\", \n           \"x20_24세_32\", \"x25_29세_33\", \"x30_34세_34\", \"x35_39세_35\", \n           \"x40_44세_36\", \"x45_49세_37\", \"x50_54세_38\", \"x55_59세_39\", \n           \"x60_64세_40\", \"x65_69세_41\", \"x70_74세_42\", \"x75_79세_43\", \n           \"x80_84세_44\", \"x85_89세_45\", \"x90_94세_46\", \"x95_99세_47\", \"x100세_이상_48\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"여\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n\nage_tbl &lt;- bind_rows(male_tbl, female_tbl) |&gt; \n  filter(!str_detect(행정기관, \"전국\")) |&gt; \n  mutate(연령 = str_extract(연령, '(\\\\d{1,2}_\\\\d{1,2})'))  |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\") ~ \"-19\",\n                            연령 %in% c(\"70_74\", \"75_79\", \"80_84\", \"85_89\", \"90_94\", \"95_99\") ~ \"70+\",\n                              is.na(연령) ~ \"70+\",\n                              TRUE ~ 연령)) |&gt; \n  mutate(인구수 = parse_number(인구수))\n\nage_tbl |&gt;\n  write_rds(\"data/혁신안_2023년_연령인구수.rds\")"
  },
  {
    "objectID": "minju_party.html#시도별",
    "href": "minju_party.html#시도별",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()"
  },
  {
    "objectID": "minju_party.html#당원-통계",
    "href": "minju_party.html#당원-통계",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(gt)\nlibrary(gtExtras)\nlibrary(tidyverse)\n\n# Creating the tibble using tribble\nmage_raw &lt;- tribble(\n  ~`연령`, ~비율,\n  \"10대후반\", \"0.1%\",\n  \"20_24\", \"1.7%\",\n  \"25_29\", \"4.2%\",\n  \"30_34\", \"5.3%\",\n  \"35_39\", \"6.3%\",\n  \"40_44\", \"9.8%\",\n  \"45_49\", \"12.2%\",\n  \"50_54\", \"15.8%\",\n  \"55_59\", \"13.8%\",\n  \"60_64\", \"12.8%\",\n  \"65_69\", \"8.1%\",\n  \"70+\", \"10.0%\"\n)\n\nmage_tbl &lt;- mage_raw |&gt; \n  mutate(비율 = parse_number(비율)/100) |&gt; \n  mutate(당원수 = 비율 * 2454332)\n\nmage_tbl |&gt; \n  gt::gt() |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  fmt_integer(columns = 당원수) |&gt; \n  cols_align(\"center\") |&gt; \n  ## 표 전체 합계 -------------- -----------------------\n  grand_summary_rows(\n    columns = 당원수,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt; \n  gt_theme_538()"
  },
  {
    "objectID": "minju_party.html#행안부-인구통계",
    "href": "minju_party.html#행안부-인구통계",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드age_raw &lt;- readxl::read_excel(\"data/혁신안_202307_202307_연령별_월간.xlsx\", skip = 3)\n\nmale_tbl&lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"남_인구수\", \"연령구간인구수_4\", \n          \"x0_4세_5\", \"x5_9세_6\", \"x10_14세_7\", \"x15_19세_8\", \"x20_24세_9\", \n          \"x25_29세_10\", \"x30_34세_11\", \"x35_39세_12\", \"x40_44세_13\", \n          \"x45_49세_14\", \"x50_54세_15\", \"x55_59세_16\", \"x60_64세_17\", \n          \"x65_69세_18\", \"x70_74세_19\", \"x75_79세_20\", \"x80_84세_21\", \n          \"x85_89세_22\", \"x90_94세_23\", \"x95_99세_24\", \"x100세_이상_25\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"남\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n  \n\nfemale_tbl &lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"여_인구수\", \"연령구간인구수_27\", \n           \"x0_4세_28\", \"x5_9세_29\", \"x10_14세_30\", \"x15_19세_31\", \n           \"x20_24세_32\", \"x25_29세_33\", \"x30_34세_34\", \"x35_39세_35\", \n           \"x40_44세_36\", \"x45_49세_37\", \"x50_54세_38\", \"x55_59세_39\", \n           \"x60_64세_40\", \"x65_69세_41\", \"x70_74세_42\", \"x75_79세_43\", \n           \"x80_84세_44\", \"x85_89세_45\", \"x90_94세_46\", \"x95_99세_47\", \"x100세_이상_48\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"여\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n\nage_tbl &lt;- bind_rows(male_tbl, female_tbl) |&gt; \n  filter(!str_detect(행정기관, \"전국\")) |&gt; \n  mutate(연령 = str_extract(연령, '(\\\\d{1,2}_\\\\d{1,2})'))  |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\") ~ \"-19\",\n                            연령 %in% c(\"70_74\", \"75_79\", \"80_84\", \"85_89\", \"90_94\", \"95_99\") ~ \"70+\",\n                              is.na(연령) ~ \"70+\",\n                              TRUE ~ 연령)) |&gt; \n  mutate(인구수 = parse_number(인구수))\n\nage_tbl |&gt;\n  write_rds(\"data/혁신안_2023년_연령인구수.rds\")"
  },
  {
    "objectID": "minju_party.html#연령비교",
    "href": "minju_party.html#연령비교",
    "title": "지도제작 대회",
    "section": "\n2.1 연령비교",
    "text": "2.1 연령비교\n\n코드mage_temp &lt;- mage_tbl |&gt; \n  filter(연령 != \"10대후반\")\n\nage_temp &lt;- age_tbl |&gt; \n  filter(!str_detect(연령, \"(0_4)|(5_9)|(10_14)|(15_19)\")) |&gt;   \n  group_by(연령) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(인구비율 = 인구수 / sum(인구수))\n\nfull_join(mage_temp, age_temp)\n#&gt; # A tibble: 16 × 5\n#&gt;    연령    비율  당원수  인구수 인구비율\n#&gt;    &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n#&gt;  1 20_24  0.017  41724. 2850804  0.0727 \n#&gt;  2 25_29  0.042 103082. 3433431  0.0876 \n#&gt;  3 30_34  0.053 130080. 3376137  0.0862 \n#&gt;  4 35_39  0.063 154623. 3211899  0.0820 \n#&gt;  5 40_44  0.098 240525.      NA NA      \n#&gt;  6 45_49  0.122 299429. 3938571  0.101  \n#&gt;  7 50_54  0.158 387784. 4535734  0.116  \n#&gt;  8 55_59  0.138 338698. 4095565  0.105  \n#&gt;  9 60_64  0.128 314154. 4280225  0.109  \n#&gt; 10 65_69  0.081 198801. 3291406  0.0840 \n#&gt; 11 70+    0.1   245433.      NA NA      \n#&gt; 12 70_74 NA         NA  2245004  0.0573 \n#&gt; 13 75_79 NA         NA  1662571  0.0424 \n#&gt; 14 80_84 NA         NA  1326976  0.0339 \n#&gt; 15 85_89 NA         NA   698771  0.0178 \n#&gt; 16 90_94 NA         NA   239883  0.00612\n\nage_tbl |&gt; \n  filter(str_detect(연령, \"40\"))\n#&gt; # A tibble: 34 × 5\n#&gt;    행정기관       성별  연령  인구수 연령대\n#&gt;    &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt; \n#&gt;  1 서울특별시     남    40_44 364892 -19   \n#&gt;  2 부산광역시     남    40_44 127280 -19   \n#&gt;  3 대구광역시     남    40_44  88337 -19   \n#&gt;  4 인천광역시     남    40_44 127532 -19   \n#&gt;  5 광주광역시     남    40_44  57462 -19   \n#&gt;  6 대전광역시     남    40_44  55650 -19   \n#&gt;  7 울산광역시     남    40_44  47693 -19   \n#&gt;  8 세종특별자치시 남    40_44  20453 -19   \n#&gt;  9 경기도         남    40_44 594508 -19   \n#&gt; 10 강원특별자치도 남    40_44  52391 -19   \n#&gt; # ℹ 24 more rows"
  },
  {
    "objectID": "minju_party.html#유권자와-민주당",
    "href": "minju_party.html#유권자와-민주당",
    "title": "지도제작 대회",
    "section": "\n2.1 유권자와 민주당",
    "text": "2.1 유권자와 민주당\n\n코드library(gt)\nlibrary(gtExtras)\n\nmage_temp &lt;- mage_tbl |&gt; \n  filter(연령 != \"10대후반\")\n\nage_temp &lt;- age_tbl |&gt; \n  filter(연령대 != \"-19\") |&gt;   \n  group_by(연령대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(인구비율 = 인구수 / sum(인구수))\n\npop_party_raw &lt;- full_join(mage_temp, age_temp, by = c(\"연령\" = \"연령대\"))\n\n\npop_party_tbl &lt;- pop_party_raw |&gt; \n  rename(연령대 = 연령,\n         당원비율 = 비율) |&gt; \n  mutate(차이 = 당원비율 - 인구비율) |&gt; \n  select(연령대, 당원수, 당원비율, 차이, 유권자비율=인구비율, 유권자수=인구수)\n  \nvoter_party_gt &lt;- pop_party_tbl |&gt; \n  gt::gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_header(\n    title = md(\"연령대별 민주당원과 유권자 비교\"),\n    subtitle = md(\"\")\n  ) |&gt;   \n  cols_align(\"center\") |&gt; \n  fmt_percent(columns = c(당원비율, 유권자비율, 차이), decimals = 1) |&gt; \n  fmt_integer(columns = c(당원수, 유권자수)) |&gt; \n  tab_spanner(label = \"민주당원\",\n              id = \"party\",\n              columns = c(당원수, 당원비율)) |&gt; \n  tab_spanner(label = \"유권자\",\n              id = \"voter\",              \n              columns = c(유권자비율, 유권자수)) |&gt; \n  ## 차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &lt; 0,\n      columns = 차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &gt; 0,\n      columns = 차이\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 더불어민주당혁신위 혁신안 설명자료\",\n    location = cells_column_spanners(spanners = \"party\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 행안부 주민등록 인구 및 세대현황\",\n    location = cells_column_spanners(spanners = \"voter\")\n  )  \n\nvoter_party_gt\n  \n# voter_party_gt |&gt; \n#   gtsave(filename = c(\"data/혁신안_민주당_유권자.png\"))"
  },
  {
    "objectID": "minju_party.html#한국갤럽",
    "href": "minju_party.html#한국갤럽",
    "title": "지도제작 대회",
    "section": "\n3.1 한국갤럽",
    "text": "3.1 한국갤럽\n한국갤럽에서 2022년 3월 10일 실시한 “제20대 대통령선거 사후 조사” 조사에서 연령별 지지율은 다은 다음과 같다.\n\n\n\n\n\n\n\n\n\n\n\n연령별\n사례수\n이재명\n윤석열\n심상정\n기타 인물\n모름/응답거절\n\n\n\n18~29세\n171\n40%\n37%\n4%\n3%\n17%\n\n\n30대\n151\n47%\n33%\n2%\n2%\n15%\n\n\n40대\n186\n57%\n26%\n3%\n\n14%\n\n\n50대\n199\n49%\n43%\n1%\n1%\n5%\n\n\n60대\n163\n28%\n59%\n1%\n3%\n10%\n\n\n70대 이상\n133\n23%\n61%\n\n\n14%\n\n\n\n\n코드gallop_raw &lt;- read.csv(text=\"\n연령별, 사례수,이재명,윤석열,심상정,기타인물,모름/응답거절\n18~29세,171,40%,37%,4%,3%,17%\n30대,151,47%,33%,2%,2%,15%\n40대,186,57%,26%,3%,,14%\n50대,199,49%,43%,1%,1%,5%\n60대,163,28%,59%,1%,3%,10%\n70대 이상,133,23%,61%,,14%\n\", header=T, stringsAsFactors=F)\n\ngallop_tbl &lt;- gallop_raw |&gt; \n  as_tibble() |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(연령대=연령별, 이재명, 윤석열, 심상정, 기타인물, 모름_응답거절) |&gt; \n  pivot_longer(-연령대, names_to = \"후보\", values_to = \"지지율\") |&gt; \n  mutate(정당 = case_when(후보 == \"이재명\" ~ \"민주당\",\n                          후보 == \"윤석열\" ~ \"국민의힘\",\n                          TRUE ~ \"기타/무응답\")) |&gt; \n  mutate(지지율 = parse_number(지지율) / 100) |&gt; \n  group_by(연령대, 정당) |&gt; \n  summarise(지지율 = sum(지지율, na.rm = TRUE)) |&gt; \n  ungroup() |&gt; \n  mutate(연령대 = case_when(연령대 == \"18~29세\" ~ \"20대-\",\n                            연령대 == \"70대 이상\" ~\"70대+\",\n                            TRUE ~ 연령대)) |&gt; \n  pivot_wider(names_from = 정당, values_from = 지지율) |&gt; \n  mutate(차이 = 민주당 - 국민의힘)\n\ngallop_tbl"
  },
  {
    "objectID": "minju_party.html#민주당-혁신안",
    "href": "minju_party.html#민주당-혁신안",
    "title": "지도제작 대회",
    "section": "\n3.2 민주당 혁신안",
    "text": "3.2 민주당 혁신안\n\n코드mage_gallop_tbl &lt;- mage_tbl |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"10대후반\", \"20_24\", \"25_29\")~ \"20대-\",\n                            연령 %in% c(\"30_34\", \"35_39\")~ \"30대\",\n                            연령 %in% c(\"40_44\", \"45_49\")~ \"40대\",\n                            연령 %in% c(\"50_54\", \"55_59\")~ \"50대\",\n                            연령 %in% c(\"60_64\", \"65_69\")~ \"60대\",\n                            TRUE ~ \"70대+\")) |&gt; \n  group_by(연령대) |&gt; \n  summarise(당원비율 = sum(비율),\n            당원수   = sum(당원수))\n\nmage_gallop_tbl"
  },
  {
    "objectID": "minju_party.html#행안위-유권자",
    "href": "minju_party.html#행안위-유권자",
    "title": "지도제작 대회",
    "section": "\n3.3 행안위 유권자",
    "text": "3.3 행안위 유권자\n\n코드age_tbl &lt;- \n  read_rds(\"data/혁신안_2023년_연령인구수.rds\")\n\nadm_gallop_tbl &lt;- age_tbl |&gt; \n  filter(!연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\")) |&gt; \n  mutate(연령대 = case_when(연령대 %in% c(\"20_24\", \"25_29\") ~ \"20대-\",\n                            연령대 %in% c(\"30_34\", \"35_39\") ~ \"30대\",\n                         연령대 %in% c(\"40_44\", \"45_49\") ~ \"40대\",\n                         연령대 %in% c(\"50_54\", \"55_59\") ~ \"50대\",\n                         연령대 %in% c(\"60_64\", \"65_69\") ~ \"60대\",\n                         TRUE ~ \"70대+\")) |&gt; \n  group_by(연령대) |&gt; \n  summarise(유권자수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 유권자수 / sum(유권자수))\n\nadm_gallop_tbl"
  },
  {
    "objectID": "minju_party.html#결합",
    "href": "minju_party.html#결합",
    "title": "지도제작 대회",
    "section": "\n3.4 결합",
    "text": "3.4 결합\n\n코드merge_tbl &lt;- adm_gallop_tbl |&gt; \n  left_join(mage_gallop_tbl) |&gt; \n  left_join(gallop_tbl)\n\npresident_age_gt &lt;- merge_tbl |&gt; \n  rename(득표차이 = 차이) |&gt; \n  mutate(구성차이 = 당원비율 - 유권자비율) |&gt;\n  relocate(구성차이, .before = 득표차이) |&gt; \n  relocate(민주당, .before = `기타/무응답`) |&gt; \n  relocate(국민의힘, .after = `기타/무응답`)  |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    footnotes.font.size = px(10L)\n  ) |&gt; \n  tab_header(\n    title = md(\"연령대별 유권자, 민주당원, 대선 득표 비교\"),\n  ) |&gt;   \n  cols_align(\"center\") |&gt; \n  fmt_percent(columns = c(당원비율, 유권자비율, 구성차이, 득표차이,\n                          국민의힘, `기타/무응답`, 민주당), decimals = 0) |&gt; \n  fmt_integer(columns = c(당원수, 유권자수)) |&gt; \n  ## 스패너 ---------------------  \n  tab_spanner(label = \"민주당원\",\n              id = \"party\",\n              columns = c(당원수, 당원비율)) |&gt; \n  tab_spanner(label = \"유권자\",\n              id = \"voter\",              \n              columns = c(유권자비율, 유권자수)) |&gt; \n  tab_spanner(label = \"당원과 유권자 구성비\",\n              id = \"prop\",\n              columns = c(당원수, 당원비율, 유권자수, 유권자비율, 구성차이)) |&gt; \n  tab_spanner(label = \"대통령선거\",\n              id = \"election\",              \n              columns = c(득표차이, 민주당, `기타/무응답`, 국민의힘)) |&gt; \n  ## 차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 구성차이 &lt; 0,\n      columns = 구성차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 구성차이 &gt; 0,\n      columns = 구성차이\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 더불어민주당혁신위 혁신안 설명자료\",\n    location = cells_column_spanners(spanners = \"party\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 행안부 주민등록 인구 및 세대현황\",\n    location = cells_column_spanners(spanners = \"voter\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 한국갤럽 제20대 대통령선거 사후 조사\",\n    location = cells_column_spanners(spanners = \"election\") \n  )  |&gt; \n  ## 득표차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 득표차이 &lt; 0,\n      columns = 득표차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 득표차이 &gt; 0,\n      columns = 득표차이\n    )\n  ) \n  \npresident_age_gt |&gt; \n  gtsave(\"data/연령대별_구성비_대선.png\")"
  },
  {
    "objectID": "by_election.html",
    "href": "by_election.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npresident_tbl &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(이재명:김민찬, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"이재명\") ~ \"민주당\",\n                          str_detect(name, \"윤석열\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_대선\")\n\npresident_tbl\n\n\n\n\n\n코드local_sido_tbl &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(선거구명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(더불어민주당_송영길:무소속_김광종, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"송영길\") ~ \"민주당\",\n                          str_detect(name, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_시도지사\")  \n\nlocal_sido_tbl\n\n\n\n\n코드local_sgg_tbl &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n    mutate(비율 = 득표/ sum(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"김승현\") ~ \"민주당\",\n                          str_detect(후보, \"김태우\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_구청장\")  \n\nlocal_sgg_tbl\n\n\n\n\n코드general_tbl &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"서울\",\n         선거구 %in% c(\"강서구갑\", \"강서구을\", \"강서구병\")) |&gt; \n  unnest(data) |&gt; \n  group_by(구분) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  filter(!is.na(후보)) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  mutate(비율 = 득표 / sum(득표)) |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2020_국회의원\")  \n  \ngeneral_tbl  \n\n\n\n\n코드by_election_tbl &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\") |&gt; \n  filter(후보 != \"후보_계\") |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표수)) |&gt; \n    mutate(비율 = 득표/ sum(득표))  |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"박영선\") ~ \"민주당\",\n                          str_detect(후보, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2021_보궐선거\")\n\nby_election_tbl\n\n\n\n\n코드vote_tbl &lt;- bind_rows(by_election_tbl, general_tbl, local_sgg_tbl, local_sido_tbl, president_tbl)"
  },
  {
    "objectID": "by_election.html#대통령-선거",
    "href": "by_election.html#대통령-선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npresident_tbl &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(이재명:김민찬, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"이재명\") ~ \"민주당\",\n                          str_detect(name, \"윤석열\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_대선\")\n\npresident_tbl"
  },
  {
    "objectID": "by_election.html#지방선거",
    "href": "by_election.html#지방선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드local_sido_tbl &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(선거구명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(더불어민주당_송영길:무소속_김광종, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"송영길\") ~ \"민주당\",\n                          str_detect(name, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_시도지사\")  \n\nlocal_sido_tbl\n\n\n\n\n코드local_sgg_tbl &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n    mutate(비율 = 득표/ sum(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"김승현\") ~ \"민주당\",\n                          str_detect(후보, \"김태우\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_구청장\")  \n\nlocal_sgg_tbl"
  },
  {
    "objectID": "by_election.html#국회의원",
    "href": "by_election.html#국회의원",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드general_tbl &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"서울\",\n         선거구 %in% c(\"강서구갑\", \"강서구을\", \"강서구병\")) |&gt; \n  unnest(data) |&gt; \n  group_by(구분) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  filter(!is.na(후보)) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  mutate(비율 = 득표 / sum(득표)) |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2020_국회의원\")  \n  \ngeneral_tbl"
  },
  {
    "objectID": "by_election.html#보궐선거",
    "href": "by_election.html#보궐선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드by_election_tbl &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\") |&gt; \n  filter(후보 != \"후보_계\") |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표수)) |&gt; \n    mutate(비율 = 득표/ sum(득표))  |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"박영선\") ~ \"민주당\",\n                          str_detect(후보, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2021_보궐선거\")\n\nby_election_tbl"
  },
  {
    "objectID": "by_election.html#데이터-병합",
    "href": "by_election.html#데이터-병합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드vote_tbl &lt;- bind_rows(by_election_tbl, general_tbl, local_sgg_tbl, local_sido_tbl, president_tbl)"
  },
  {
    "objectID": "by_election_dong.html",
    "href": "by_election_dong.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nroll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode=1100\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n\nroll_raw &lt;- read_html(roll_url) |&gt; \n  html_table(header = TRUE) %&gt;%\n  .[[1]]\n\nroll_tbl &lt;- roll_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt;\n  mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n  separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n  separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n  mutate(across(득표수:득표율, parse_number)) |&gt; \n  select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n\nroll_tbl\n\n\n\n\n코드get_electors &lt;- function(sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 부산광역시\nget_electors(\"2600\")\n\n\n\n\n코드\nsido_cd &lt;- tribble(~\"시도코드\", ~\"시도명\",\n                    \"1100\", \"서울특별시\", \n                    \"2600\", \"부산광역시\",\n                    \"2700\", \"대구광역시\", \n                    \"2800\", \"인천광역시\",\n                    \"2900\", \"광주광역시\", \n                    \"3000\", \"대전광역시\",\n                    \"3100\", \"울산광역시\", \n                    \"5100\", \"세종특별자치시\",\n                    \"4100\", \"경기도\", \n                    \"4200\", \"강원도\",\n                    \"4300\", \"충청북도\", \n                    \"4400\", \"충청남도\",\n                    \"4500\", \"전라북도\", \n                    \"4600\", \"전라남도\",\n                    \"4700\", \"경상북도\", \n                    \"4800\", \"경상남도\",\n                    \"4900\", \"제주특별자치도\") \n\nelectors_raw &lt;- sido_cd |&gt; \n  mutate(data = map(시도코드, get_electors))\n\n\n\n코드electors_raw |&gt; \n  write_rds(\"data/제21대_국회의원_당선자.rds\")"
  },
  {
    "objectID": "sido_legislator.html",
    "href": "sido_legislator.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\n## 2020년 제21대 ----------------------------------\nelection_21_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\"\n\nsido_21_2020 &lt;- read_html(election_21_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_21_2020_tbl &lt;- sido_21_2020 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2020_21대\")\n\n\n## 2016년 제20대 ----------------------------------\nelection_20_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제20대_국회의원_선거\"\n\nsido_20_2016 &lt;- read_html(election_20_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_20_2016_tbl &lt;- sido_20_2016 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2016_20대\")\n\n## 2012년 제19대 ----------------------------------\nelection_19_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제19대_국회의원_선거\"\n\nsido_19_2012 &lt;- read_html(election_19_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[13]]\n\nsido_19_2012_tbl &lt;- sido_19_2012 |&gt; \n  set_names(c(\"지역\", \"새누리\", \"민주통합\", \"통합진보\", \"자유선진\", \n\"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2012_19대\")\n\n## 2008년 제18대 ----------------------------------\nelection_18_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제18대_국회의원_선거\"\n\nsido_18_2008 &lt;- read_html(election_18_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_18_2008_tbl &lt;- sido_18_2008 |&gt; \n  set_names(c(\"지역\", \"민주\", \"한나라\", \"자유선진\", \"민노\", \"창조한국\", \n\"친박연대\", \"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2008_18대\")\n\n## 2004년 제17대 ----------------------------------\nelection_17_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제17대_국회의원_선거\"\n\nsido_17_2004 &lt;- read_html(election_17_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[9]]\n\nsido_17_2004_tbl &lt;- sido_17_2004 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2004_17대\")\n\n## 2000년 제16대 ----------------------------------\nelection_16_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제16대_국회의원_선거\"\n\nsido_16_2000 &lt;- read_html(election_16_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_16_2000_tbl &lt;- sido_16_2000 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2000_16대\")\n\n## 1996년 제15대 ----------------------------------\nelection_15_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제15대_국회의원_선거\"\n\nsido_15_1996 &lt;- read_html(election_15_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_15_1996_tbl &lt;- sido_15_1996 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(지역:무소속) |&gt; \n  filter(!str_detect(지역, \"^\\\\d|^지역|^자료|^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1996_15대\")\n\n## 1992년 제14대 ----------------------------------\nelection_14_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제14대_국회의원_선거\"\n\nsido_14_1992 &lt;- read_html(election_14_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_14_1992_tbl &lt;- sido_14_1992 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1992_14대\")\n\n## 1988년 제13대 ----------------------------------\nelection_13_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제13대_국회의원_선거\"\n\nsido_13_1988 &lt;- read_html(election_13_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[7]]\n\nsido_13_1988_tbl &lt;- sido_13_1988 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1988_13대\")\n\n## 역대선거 결합 ----------------------------------\n\nsido_raw &lt;- map_df(mget(ls(pattern = \"*_tbl\")), rbind)\n\nsido_tbl &lt;- sido_raw |&gt; \n  separate(선거, into = c(\"연도\", \"선수\"), sep = \"_\") \n\nsido_tbl |&gt; \n  write_csv(\"data/역대_시도_정당별_의석수.csv\")\n\n\n\n\n코드party_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국의_역대_정당\"\n\nparty_list &lt;- read_html(party_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nparty_list[[6]] |&gt; \n  janitor::clean_names() |&gt; \n  filter(str_detect(x1, \"\\\\d{4}\")) |&gt; \n  select(정부=x1, 여당=x4, 야당1=x6, 야당2=x8, 야당3=x10, 야당4=x12) |&gt; \n  mutate(야당 = str_glue(\"{야당1}, {야당2}, {야당3}, {야당4}\")) |&gt; \n  select(정부, 여당, 야당)  |&gt; \n  mutate(야당 = str_remove_all(야당, \"NA,|NA\") |&gt; str_trim() |&gt; str_remove(pattern=\",$\")) |&gt; \n  gt::gt()"
  },
  {
    "objectID": "sido_legislator.html#시도-정당",
    "href": "sido_legislator.html#시도-정당",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\n## 2020년 제21대 ----------------------------------\nelection_21_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\"\n\nsido_21_2020 &lt;- read_html(election_21_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_21_2020_tbl &lt;- sido_21_2020 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2020_21대\")\n\n\n## 2016년 제20대 ----------------------------------\nelection_20_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제20대_국회의원_선거\"\n\nsido_20_2016 &lt;- read_html(election_20_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_20_2016_tbl &lt;- sido_20_2016 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2016_20대\")\n\n## 2012년 제19대 ----------------------------------\nelection_19_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제19대_국회의원_선거\"\n\nsido_19_2012 &lt;- read_html(election_19_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[13]]\n\nsido_19_2012_tbl &lt;- sido_19_2012 |&gt; \n  set_names(c(\"지역\", \"새누리\", \"민주통합\", \"통합진보\", \"자유선진\", \n\"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2012_19대\")\n\n## 2008년 제18대 ----------------------------------\nelection_18_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제18대_국회의원_선거\"\n\nsido_18_2008 &lt;- read_html(election_18_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_18_2008_tbl &lt;- sido_18_2008 |&gt; \n  set_names(c(\"지역\", \"민주\", \"한나라\", \"자유선진\", \"민노\", \"창조한국\", \n\"친박연대\", \"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2008_18대\")\n\n## 2004년 제17대 ----------------------------------\nelection_17_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제17대_국회의원_선거\"\n\nsido_17_2004 &lt;- read_html(election_17_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[9]]\n\nsido_17_2004_tbl &lt;- sido_17_2004 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2004_17대\")\n\n## 2000년 제16대 ----------------------------------\nelection_16_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제16대_국회의원_선거\"\n\nsido_16_2000 &lt;- read_html(election_16_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_16_2000_tbl &lt;- sido_16_2000 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2000_16대\")\n\n## 1996년 제15대 ----------------------------------\nelection_15_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제15대_국회의원_선거\"\n\nsido_15_1996 &lt;- read_html(election_15_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_15_1996_tbl &lt;- sido_15_1996 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(지역:무소속) |&gt; \n  filter(!str_detect(지역, \"^\\\\d|^지역|^자료|^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1996_15대\")\n\n## 1992년 제14대 ----------------------------------\nelection_14_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제14대_국회의원_선거\"\n\nsido_14_1992 &lt;- read_html(election_14_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_14_1992_tbl &lt;- sido_14_1992 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1992_14대\")\n\n## 1988년 제13대 ----------------------------------\nelection_13_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제13대_국회의원_선거\"\n\nsido_13_1988 &lt;- read_html(election_13_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[7]]\n\nsido_13_1988_tbl &lt;- sido_13_1988 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1988_13대\")\n\n## 역대선거 결합 ----------------------------------\n\nsido_raw &lt;- map_df(mget(ls(pattern = \"*_tbl\")), rbind)\n\nsido_tbl &lt;- sido_raw |&gt; \n  separate(선거, into = c(\"연도\", \"선수\"), sep = \"_\") \n\nsido_tbl |&gt; \n  write_csv(\"data/역대_시도_정당별_의석수.csv\")"
  },
  {
    "objectID": "sido_legislator.html#정당",
    "href": "sido_legislator.html#정당",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드party_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국의_역대_정당\"\n\nparty_list &lt;- read_html(party_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nparty_list[[6]] |&gt; \n  janitor::clean_names() |&gt; \n  filter(str_detect(x1, \"\\\\d{4}\")) |&gt; \n  select(정부=x1, 여당=x4, 야당1=x6, 야당2=x8, 야당3=x10, 야당4=x12) |&gt; \n  mutate(야당 = str_glue(\"{야당1}, {야당2}, {야당3}, {야당4}\")) |&gt; \n  select(정부, 여당, 야당)  |&gt; \n  mutate(야당 = str_remove_all(야당, \"NA,|NA\") |&gt; str_trim() |&gt; str_remove(pattern=\",$\")) |&gt; \n  gt::gt()"
  },
  {
    "objectID": "spatial_basics.html",
    "href": "spatial_basics.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털에서 한국전력공사 전기차 충전소 설치현황 엑셀 데이터를 다운로드 받는다. 이를 위해서 전력데이터 개방 포털시스템 전기차 충전소 설치 현황에서 전국을 선택하고 엑셀파일을 다운로드 한다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\ncharger_raw &lt;- read_excel(\"data/전기차 충전소 설치현황_20230822.xlsx\", skip = 2)\n\ncharger_raw\n#&gt; # A tibble: 4,692 × 6\n#&gt;    시구  설치장소             주소    `급속충전기(대)` `완속충전기(대)` 지원차종\n#&gt;    &lt;chr&gt; &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;            &lt;chr&gt;            &lt;chr&gt;   \n#&gt;  1 전체  가평소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  2 전체  가평종합운동장       경기도… 2                0                BMW i3,…\n#&gt;  3 전체  가평지사             경기도… 1                1                SM3 Z.E…\n#&gt;  4 전체  가평하수도사업소     경기도… 1                0                SM3 Z.E…\n#&gt;  5 전체  상면사무소           경기도… 1                0                SM3 Z.E…\n#&gt;  6 전체  설악면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  7 전체  조종면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  8 전체  조종소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  9 전체  청평소방서           경기도… 1                0                SM3 Z.E…\n#&gt; 10 전체  청평호반문화체육센터 경기도… 1                0                SM3 Z.E…\n#&gt; # ℹ 4,682 more rows\n\n\n\nvuski/admdongkor 최신 행정동 데이터를 가져온다.\n\n코드library(sf)\nsf_use_s2(FALSE)\n\nkorea_map &lt;- read_sf(\"data/HangJeongDong_ver20230401.geojson\")\n\nsido_map &lt;- korea_map |&gt; \n  group_by(sido, sidonm) |&gt; \n  summarise(geometry = sf::st_union(geometry))\n\nst_geometry(sido_map) |&gt; plot()"
  },
  {
    "objectID": "spatial_basics.html#충전소-데이터",
    "href": "spatial_basics.html#충전소-데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털에서 한국전력공사 전기차 충전소 설치현황 엑셀 데이터를 다운로드 받는다. 이를 위해서 전력데이터 개방 포털시스템 전기차 충전소 설치 현황에서 전국을 선택하고 엑셀파일을 다운로드 한다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\ncharger_raw &lt;- read_excel(\"data/전기차 충전소 설치현황_20230822.xlsx\", skip = 2)\n\ncharger_raw\n#&gt; # A tibble: 4,692 × 6\n#&gt;    시구  설치장소             주소    `급속충전기(대)` `완속충전기(대)` 지원차종\n#&gt;    &lt;chr&gt; &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;            &lt;chr&gt;            &lt;chr&gt;   \n#&gt;  1 전체  가평소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  2 전체  가평종합운동장       경기도… 2                0                BMW i3,…\n#&gt;  3 전체  가평지사             경기도… 1                1                SM3 Z.E…\n#&gt;  4 전체  가평하수도사업소     경기도… 1                0                SM3 Z.E…\n#&gt;  5 전체  상면사무소           경기도… 1                0                SM3 Z.E…\n#&gt;  6 전체  설악면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  7 전체  조종면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  8 전체  조종소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  9 전체  청평소방서           경기도… 1                0                SM3 Z.E…\n#&gt; 10 전체  청평호반문화체육센터 경기도… 1                0                SM3 Z.E…\n#&gt; # ℹ 4,682 more rows"
  },
  {
    "objectID": "spatial_basics.html#지도데이터",
    "href": "spatial_basics.html#지도데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "vuski/admdongkor 최신 행정동 데이터를 가져온다.\n\n코드library(sf)\nsf_use_s2(FALSE)\n\nkorea_map &lt;- read_sf(\"data/HangJeongDong_ver20230401.geojson\")\n\nsido_map &lt;- korea_map |&gt; \n  group_by(sido, sidonm) |&gt; \n  summarise(geometry = sf::st_union(geometry))\n\nst_geometry(sido_map) |&gt; plot()"
  },
  {
    "objectID": "spatial_basics.html#api-설정",
    "href": "spatial_basics.html#api-설정",
    "title": "지도제작 대회",
    "section": "\n2.1 API 설정",
    "text": "2.1 API 설정\n주소를 지도에 올릴 수 있도록 위경도 변환한다. 구글 공간정보서비스가 위세를 떨치는 기간에 다음 지도 API가 진화를 하여 kakaomap Maps API로 사용법과 사용량 등 개발자 관점에서 나름 쓸만한 형태로 개선되었다.\nC:\\Program Files\\R\\R-3.5.2\\etc 디렉토리 Rprofile.site 파일에 카카오 개발자센터 앱개발에 사용할 API 키를 KAKAO_MAP_API_KEY 변수에 저장시킨다. 재미있는 것은 Authorization에서 \"KakaoAK \"를 꼭 앞에 붙여야함으로 paste0() 함수로 결합시켜 전달한다. 혹은 usethis 팩키지를 사용해서 edit_r_environ() 명령어를 사용해서 .Renviron 파일에 KAKAO_MAP_API_KEY값을 설정하여 사용하는 것도 좋다.\n카카오 개발자센터 로컬 → REST API 문서에 지오코딩하는 자세한 사항이 나와있다. 한가지 사례로 삼정KPMG주소를 지도위에 표시하는 것을 목표로 먼저 삼정KPMG 주소를 던져서 위도경도를 받아내는 헬로월드 코드를 작성해본다.\n\n코드library(httr)\nlibrary(tidyverse)\nlibrary(jsonlite)\n\n# usethis::edit_r_environ()\n\n# 요청 URL 및 파라미터 설정\nbase_url &lt;- \"https://dapi.kakao.com/v2/local/search/address.json\"\nparams &lt;- list(query = '서울특별시 강남구 역삼동 737' ) # 삼정KPMG 주소\n\n# GET 요청 실행\nresponse &lt;- GET(base_url, \n                add_headers(Authorization = paste(\"KakaoAK\", Sys.getenv(\"KAKAO_MAP_API_KEY\"))),\n                query = params)\n\n# 응답 확인\nprint(content(response, \"text\"))\n#&gt; [1] \"{\\\"documents\\\":[{\\\"address\\\":{\\\"address_name\\\":\\\"서울 강남구 역삼동 737\\\",\\\"b_code\\\":\\\"1168010100\\\",\\\"h_code\\\":\\\"1168064000\\\",\\\"main_address_no\\\":\\\"737\\\",\\\"mountain_yn\\\":\\\"N\\\",\\\"region_1depth_name\\\":\\\"서울\\\",\\\"region_2depth_name\\\":\\\"강남구\\\",\\\"region_3depth_h_name\\\":\\\"역삼1동\\\",\\\"region_3depth_name\\\":\\\"역삼동\\\",\\\"sub_address_no\\\":\\\"\\\",\\\"x\\\":\\\"127.036628730251\\\",\\\"y\\\":\\\"37.4998101243238\\\"},\\\"address_name\\\":\\\"서울 강남구 역삼동 737\\\",\\\"address_type\\\":\\\"REGION_ADDR\\\",\\\"road_address\\\":{\\\"address_name\\\":\\\"서울 강남구 테헤란로 152\\\",\\\"building_name\\\":\\\"강남파이낸스센터\\\",\\\"main_building_no\\\":\\\"152\\\",\\\"region_1depth_name\\\":\\\"서울\\\",\\\"region_2depth_name\\\":\\\"강남구\\\",\\\"region_3depth_name\\\":\\\"역삼동\\\",\\\"road_name\\\":\\\"테헤란로\\\",\\\"sub_building_no\\\":\\\"\\\",\\\"underground_yn\\\":\\\"N\\\",\\\"x\\\":\\\"127.036508620542\\\",\\\"y\\\":\\\"37.5000242405515\\\",\\\"zone_no\\\":\\\"06236\\\"},\\\"x\\\":\\\"127.036628730251\\\",\\\"y\\\":\\\"37.4998101243238\\\"}],\\\"meta\\\":{\\\"is_end\\\":true,\\\"pageable_count\\\":1,\\\"total_count\\\":1}}\"\n\n# KPMG 지리정보 데이터프레임\nkpmg_list &lt;- response %&gt;% \n  content(as = 'text') %&gt;% \n  fromJSON()\n\n## 도로명주소\nkpmg_list$documents$road_address %&gt;% \n  select(address_name, building_name, x,y)\n#&gt;               address_name    building_name                x                y\n#&gt; 1 서울 강남구 테헤란로 152 강남파이낸스센터 127.036508620542 37.5000242405515\n\n## 지명주소\nkpmg_list$documents$address %&gt;% \n  select(address_name, x,y)\n#&gt;             address_name                x                y\n#&gt; 1 서울 강남구 역삼동 737 127.036628730251 37.4998101243238"
  },
  {
    "objectID": "spatial_basics.html#함수-제작",
    "href": "spatial_basics.html#함수-제작",
    "title": "지도제작 대회",
    "section": "\n2.2 함수 제작",
    "text": "2.2 함수 제작\n\n코드\nget_lnglat &lt;- function(address = '서울특별시 강남구 역삼동 737') {\n  \n  base_url &lt;- \"https://dapi.kakao.com/v2/local/search/address.json\"\n  params &lt;- list(query = address ) # 삼정KPMG 주소\n  \n  # GET 요청 실행\n  response &lt;- GET(base_url, \n                  add_headers(Authorization = paste(\"KakaoAK\", Sys.getenv(\"KAKAO_MAP_API_KEY\"))),\n                  query = params)\n  \n\n  # KPMG 지리정보 데이터프레임\n  json_list &lt;- response %&gt;% \n    content(as = 'text') %&gt;% \n    fromJSON()\n  \n\n  ## 위경도 주소\n  return(json_list$documents$address %&gt;% select(x,y) %&gt;% unlist)\n}\n\nget_lnglat(\"경기도 가평군 가평읍 대곡리 213-5\")\n#&gt;                  x                  y \n#&gt; \"127.516690566855\" \"37.8236644879834\""
  },
  {
    "objectID": "spatial_basics.html#충전소-지오코딩",
    "href": "spatial_basics.html#충전소-지오코딩",
    "title": "지도제작 대회",
    "section": "\n2.3 충전소 지오코딩",
    "text": "2.3 충전소 지오코딩\nget_lnglat() 함수는 모든 것이 예정된 방식으로 동작하는 것을 가정한다. 따라서, 가정 중 하나라도 충족하지 않는 경우 오류가 나서 반복 작업이 중단된다.\n\n코드charger_tbl &lt;- charger_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  mutate(data = map(주소, get_lnglat))\n\n\nError in `mutate()`:\nℹ In argument: `data = map(주소, get_lnglat)`.\nCaused by error in `map()`:\nℹ In index: 248.\nCaused by error in `UseMethod()`:\n! no applicable method for 'select' applied to an object of class \"NULL\"\n이를 보완하기 위해 safely(), possibly() 등 부사를 사용해서 가능한 많은 주소를 지오코딩한다.\n\n코드safely_get_lnglat &lt;- safely(get_lnglat, otherwise = \"error\")\n\ncharger_tbl &lt;- charger_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  mutate(data = map(주소, safely_get_lnglat))\n\n# 데이터프레임 출력\n# charger_tbl |&gt; \n#   write_rds(\"data/charger_tbl_raw.rds\")\n\n# 리스트 출력\n# charger_tbl |&gt;\n#   write_rds(\"data/charger_tbl_raw_list.rds\")\n\ncharger_tbl &lt;- \n  read_rds(\"data/charger_tbl_raw_list.rds\")\n\ncharger_lnglat &lt;- charger_tbl |&gt; \n  mutate(result = map(data, \"result\")) |&gt; \n  filter(result != \"error\") |&gt; \n  \n  ## 위경도 변환 --------------------\n  select(-시구, -data) |&gt; \n  mutate(lng = map_chr(result, 1),\n         lat  = map_chr(result, 2)) |&gt; \n  select(-result)\n\ncharger_lnglat |&gt; \n  write_rds(\"data/charger_lnglat.rds\")\n\n\n\n코드charger_lnglat &lt;- \n  read_rds(\"data/charger_lnglat.rds\")\n\ncharger_lnglat\n#&gt; # A tibble: 4,546 × 7\n#&gt;    설치장소             주소    급속충전기_대 완속충전기_대 지원차종 lng   lat  \n#&gt;    &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;\n#&gt;  1 가평소방서           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  2 가평종합운동장       경기도… 2             0             BMW i3,… 127.… 37.8…\n#&gt;  3 가평지사             경기도… 1             1             SM3 Z.E… 127.… 37.8…\n#&gt;  4 가평하수도사업소     경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  5 상면사무소           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  6 설악면사무소         경기도… 1             0             SM3 Z.E… 127.… 37.6…\n#&gt;  7 조종면사무소         경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  8 조종소방서           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  9 청평소방서           경기도… 1             0             SM3 Z.E… 127.… 37.7…\n#&gt; 10 청평호반문화체육센터 경기도… 1             0             SM3 Z.E… 127.… 37.7…\n#&gt; # ℹ 4,536 more rows"
  },
  {
    "objectID": "spatial_basics.html#시도-지도",
    "href": "spatial_basics.html#시도-지도",
    "title": "지도제작 대회",
    "section": "\n3.1 시도 지도",
    "text": "3.1 시도 지도\n\n코드sido_map |&gt; \n  ggplot() +\n    geom_sf(aes(geometry = geometry)) +\n    geom_sf_text(aes(label = sidonm), size = 3, color = \"blue\") +\n    theme_void()"
  },
  {
    "objectID": "spatial_basics.html#충전소-위치",
    "href": "spatial_basics.html#충전소-위치",
    "title": "지도제작 대회",
    "section": "\n3.2 충전소 위치",
    "text": "3.2 충전소 위치\n\n코드charger_sf &lt;- charger_lnglat |&gt; \n  mutate(across(lng:lat, as.numeric)) |&gt; \n  filter(lat &lt; 50) |&gt; ## 충전소 위경도 오류 ㅠㅠ\n  st_as_sf(coords = c(\"lng\", \"lat\"),\n           crs = st_crs(sido_map)) \n\ncharger_sf |&gt; \n  ggplot() +\n    geom_sf(aes(geometry = geometry)) +\n    theme_void()"
  },
  {
    "objectID": "spatial_basics.html#위치-결합",
    "href": "spatial_basics.html#위치-결합",
    "title": "지도제작 대회",
    "section": "\n3.3 위치 결합",
    "text": "3.3 위치 결합\n\n코드ggplot() +\n  geom_sf(data = sido_map, aes(geometry = geometry), fill = \"transparent\", color = \"blue\") +\n  geom_sf(data = charger_sf, aes(geometry = geometry), color = \"black\", size = 0.1)"
  },
  {
    "objectID": "spatial_basics.html#인터랙티브",
    "href": "spatial_basics.html#인터랙티브",
    "title": "지도제작 대회",
    "section": "\n3.4 인터랙티브",
    "text": "3.4 인터랙티브\n\n코드library(leaflet)\n\nleaflet(data = charger_lnglat |&gt; \n          mutate(across(lng:lat, as.numeric)) |&gt; \n          filter(lat &lt; 50)\n        ) %&gt;% \n  addProviderTiles(providers$OpenStreetMap) %&gt;% \n  ## 충전소 상세정보\n  addMarkers(lng=~lng, lat=~lat, \n             clusterOptions = markerClusterOptions(),\n             popup = ~ as.character(paste0(\"&lt;strong&gt;\", 설치장소, \"&lt;/strong&gt;&lt;br&gt;\",\n                                   \"----------------------------------&lt;br&gt;\",\n                                   \"&middot; 주소: \", `주소`, \"&lt;br&gt;\",\n                                   \"&middot; 급속: \", `급속충전기_대`, \"&lt;br&gt;\",\n                                   \"&middot; 완속: \", `완속충전기_대`, \"&lt;br&gt;\",\n                                   \"&middot; 지원차종: \", 지원차종, \"&lt;br&gt;\"))\n             ) |&gt; \n  ## 시도 경계 추가\n  addPolygons(data = sido_map,\n              opacity = 1.0, fillOpacity = 0.1,\n              weight = 1,\n              highlightOptions = highlightOptions(color = \"black\", weight = 3,  bringToFront = TRUE),\n              labelOptions = labelOptions(\n              style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n              textsize = \"15px\",\n              direction = \"auto\"))"
  },
  {
    "objectID": "by_election_dong.html#아파트가격",
    "href": "by_election_dong.html#아파트가격",
    "title": "지도제작 대회",
    "section": "\n2.1 아파트가격",
    "text": "2.1 아파트가격\n\n코드library(tidyverse)\nlibrary(readxl)\n\napt_raw &lt;- read_csv(\"data/apt_seoul_1708_2307.csv\")\n\njscode_raw &lt;- read_excel(\"data/jsocde20230611/KIKmix.20230611.xlsx\")\n\napt_tbl &lt;- apt_raw |&gt; \n  filter(구 == \"강서구\") |&gt; \n  mutate(계약년월 = lubridate::ym(계약년월)) |&gt; \n  mutate(연월 = floor_date(계약년월, \"month\")) |&gt;\n  left_join(jscode_raw |&gt; select(시군구명, 읍면동명, 동리명), by = c(\"동\" = \"동리명\"))  |&gt; \n  group_by(연월, 읍면동명) |&gt; \n  summarise(평당가격 = mean(평당가격)) |&gt; \n  filter(연월 == ym(\"2022-06\"))\n\n\n\n코드votes_apt_gg &lt;- votes_tbl |&gt; \n  mutate(차이 = -1 * 차이) |&gt; \n  left_join(apt_tbl |&gt; select(-연월)) |&gt; \n  ggplot(aes(x = 평당가격, y = 차이, color = label_color )) +\n    geom_point() +\n    geom_text_repel(aes(label = 읍면동명)) +\n    theme_korean() +\n    theme(legend.position = \"none\") +\n    scale_color_manual(values = c(party_palette[1], party_palette[2])) +\n    labs(title = \"강서구 아파트값과 지선 강서구청장 민주당과 국민의힘 득표수 차이\",\n         subtitle = \"득표차이: 국민의힘 - 민주당, 2022년 6월 기준\",\n         x = \"아파트 평당 가격\",\n         y = \"득표차이\") +\n     scale_y_continuous(labels = scales::comma, limits = c(-1500, 2000)) +\n     scale_x_continuous(labels = scales::comma)  +\n     geom_hline(yintercept = 0, linetype = 2, color = \"gray30\")\n\nvotes_apt_gg\n\nragg::agg_jpeg(\"images/강서구청장_지선_아파트가격.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nvotes_apt_gg\ndev.off()"
  },
  {
    "objectID": "by_election_dong.html#함수",
    "href": "by_election_dong.html#함수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드get_electors &lt;- function(sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 부산광역시\nget_electors(\"2600\")"
  },
  {
    "objectID": "by_election_dong.html#시도별-당선자",
    "href": "by_election_dong.html#시도별-당선자",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nsido_cd &lt;- tribble(~\"시도코드\", ~\"시도명\",\n                    \"1100\", \"서울특별시\", \n                    \"2600\", \"부산광역시\",\n                    \"2700\", \"대구광역시\", \n                    \"2800\", \"인천광역시\",\n                    \"2900\", \"광주광역시\", \n                    \"3000\", \"대전광역시\",\n                    \"3100\", \"울산광역시\", \n                    \"5100\", \"세종특별자치시\",\n                    \"4100\", \"경기도\", \n                    \"4200\", \"강원도\",\n                    \"4300\", \"충청북도\", \n                    \"4400\", \"충청남도\",\n                    \"4500\", \"전라북도\", \n                    \"4600\", \"전라남도\",\n                    \"4700\", \"경상북도\", \n                    \"4800\", \"경상남도\",\n                    \"4900\", \"제주특별자치도\") \n\nelectors_raw &lt;- sido_cd |&gt; \n  mutate(data = map(시도코드, get_electors))\n\n\n\n코드electors_raw |&gt; \n  write_rds(\"data/제21대_국회의원_당선자.rds\")"
  },
  {
    "objectID": "by_election_dong.html#제19대-국회의원",
    "href": "by_election_dong.html#제19대-국회의원",
    "title": "지도제작 대회",
    "section": "\n3.1 제19대 국회의원",
    "text": "3.1 제19대 국회의원\n\n코드get_electors_by_election &lt;- function(election_id = \"20120411\", sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName={election_id}\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 제20대, 부산광역시\nget_electors_by_election(\"20160413\", \"2600\")"
  },
  {
    "objectID": "by_election_dong.html#전체-선거-당선자",
    "href": "by_election_dong.html#전체-선거-당선자",
    "title": "지도제작 대회",
    "section": "\n3.2 전체 선거, 당선자",
    "text": "3.2 전체 선거, 당선자\n\n코드election_cd &lt;- tribble(~\"선거코드\", ~\"선거\",\n                       \"20200415\", \"제21대\",\n                       \"20160413\", \"제20대\",\n                       \"20120411\", \"제19대\",\n                       \"20080409\", \"제18대\",\n                       \"20040415\", \"제17대\",\n                       \"20000413\", \"제16대\",\n                       \"19960411\", \"제15대\",\n                       \"19920324\", \"제14대\",\n                       \"19880426\", \"제13대\",\n                       \"19850212\", \"제12대\",\n                       \"19810325\", \"제11대\",\n                       \"19781212\", \"제10대\",\n                       \"19730227\", \"제9대\",\n                       \"19710525\", \"제8대\",\n                       \"19670608\", \"제7대\",\n                       \"19631126\", \"제6대\",\n                       \"19600729\", \"제5대\",\n                       \"19580502\", \"제4대\",\n                       \"19540520\", \"제3대\",\n                       \"19500530\", \"제2대\",\n                       \"19480510\", \"제1대\")\n\nelection_tbl &lt;- election_cd |&gt; \n  mutate(시도 = list(sido_cd)) |&gt; \n  unnest(시도) |&gt; \n  filter(선거 %in% c(\"제19대\", \"제20대\", \"제21대\")) |&gt; \n  mutate(data = map2(선거코드, 시도코드, get_electors_by_election))\n\n\n\n코드election_tbl |&gt; \n  write_rds(\"data/국회의원_19_21_당선자.rds\")"
  },
  {
    "objectID": "movie.html",
    "href": "movie.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "가장 많은 영화제작비가 투입된 영화 10개를 웹 스크레핑으로 가져와서 정제작업을 한다. 와차 대한민국 영화 순제작비 순위를 참조하여 정리한 펨코 역대 한국 영화 순제작비 순위에서 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmovie_url &lt;- \"https://www.fmkorea.com/best/5832255555\"\n\nmovie_html &lt;- read_html(movie_url)\n\nmovie_list &lt;- movie_html |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table() \n\nmovie_list |&gt; \n  enframe() |&gt;\n  mutate(text = map(value, unlist)) |&gt; \n  mutate(text = map_chr(text, paste, collapse = \"\\n\"))  |&gt; \n  pull(text) |&gt; \n  tail(100)\n  write.table(\"clipboard\", row.names = FALSE,   sep = \",\")\n\n\n\n코드# tibble 패키지를 불러온다\nlibrary(tidyverse)\n\n# 데이터프레임을 생성한다\nmovie_raw &lt;- tribble(\n  ~순위, ~영화명, ~개봉년도, ~순제작비, ~총제작비, ~배급사,\n  \"1위\", \"설국열차\", 2013, \"437억원\", \"530억원(해외 포함)\", \"CJ 엔터테인먼트\",\n  \"2위\", \"외계+인 1부\", 2022, \"330억원\", NA, \"CJ 엔터테인먼트\",\n  \"3위\", \"디 워\", 2007, \"315억원\", \"700억원(해외 포함)\", \"쇼박스\",\n  \"4위\", \"더 문\", 2023, \"286억원\", NA, \"CJ 엔터테인먼트\",\n  \"5위\", \"마이웨이\", 2011, \"280억원\", \"350억원\", \"CJ 엔터테인먼트\",\n  \"6위\", \"한산: 용의 출현\", 2022, \"272억원\", \"312억원\", \"롯데 엔터테인먼트\",\n  \"7위\", \"백두산\", 2019, \"260억원\", \"300억원\", \"CJ 엔터테인먼트\",\n  \"8위\", \"비상선언\", 2022, \"260억원\", \"300억원\", \"쇼박스\",\n  \"9위\", \"미스터 고\", 2013, \"225억원\", \"300억원\", \"쇼박스\",\n  \"10위\", \"군함도\", 2017, \"225억원\", \"267억원\", \"CJ 엔터테인먼트\"\n)\n\nmovie_raw\n\n\n\n\n코드library(rvest)\nlibrary(httr)\n\n\nkofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm=%EA%B8%B0%EC%83%9D%EC%B6%A9\")\n\nkofic_resp &lt;- httr::GET(kofic_req)\n\n# convert list to dataframe\nkofic_list &lt;- content(kofic_resp)\n  \nkofic_list$boxOfficeResult$dailyBoxOfficeList |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, bind_rows)) |&gt; \n  unnest(data) |&gt; \n  View()"
  },
  {
    "objectID": "movie.html#크롤링",
    "href": "movie.html#크롤링",
    "title": "지도제작 대회",
    "section": "",
    "text": "가장 많은 영화제작비가 투입된 영화 10개를 웹 스크레핑으로 가져와서 정제작업을 한다. 와차 대한민국 영화 순제작비 순위를 참조하여 정리한 펨코 역대 한국 영화 순제작비 순위에서 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmovie_url &lt;- \"https://www.fmkorea.com/best/5832255555\"\n\nmovie_html &lt;- read_html(movie_url)\n\nmovie_list &lt;- movie_html |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table() \n\nmovie_list |&gt; \n  enframe() |&gt;\n  mutate(text = map(value, unlist)) |&gt; \n  mutate(text = map_chr(text, paste, collapse = \"\\n\"))  |&gt; \n  pull(text) |&gt; \n  tail(100)\n  write.table(\"clipboard\", row.names = FALSE,   sep = \",\")\n\n\n\n코드# tibble 패키지를 불러온다\nlibrary(tidyverse)\n\n# 데이터프레임을 생성한다\nmovie_raw &lt;- tribble(\n  ~순위, ~영화명, ~개봉년도, ~순제작비, ~총제작비, ~배급사,\n  \"1위\", \"설국열차\", 2013, \"437억원\", \"530억원(해외 포함)\", \"CJ 엔터테인먼트\",\n  \"2위\", \"외계+인 1부\", 2022, \"330억원\", NA, \"CJ 엔터테인먼트\",\n  \"3위\", \"디 워\", 2007, \"315억원\", \"700억원(해외 포함)\", \"쇼박스\",\n  \"4위\", \"더 문\", 2023, \"286억원\", NA, \"CJ 엔터테인먼트\",\n  \"5위\", \"마이웨이\", 2011, \"280억원\", \"350억원\", \"CJ 엔터테인먼트\",\n  \"6위\", \"한산: 용의 출현\", 2022, \"272억원\", \"312억원\", \"롯데 엔터테인먼트\",\n  \"7위\", \"백두산\", 2019, \"260억원\", \"300억원\", \"CJ 엔터테인먼트\",\n  \"8위\", \"비상선언\", 2022, \"260억원\", \"300억원\", \"쇼박스\",\n  \"9위\", \"미스터 고\", 2013, \"225억원\", \"300억원\", \"쇼박스\",\n  \"10위\", \"군함도\", 2017, \"225억원\", \"267억원\", \"CJ 엔터테인먼트\"\n)\n\nmovie_raw"
  },
  {
    "objectID": "movie.html#매출정보",
    "href": "movie.html#매출정보",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(rvest)\nlibrary(httr)\n\n\nkofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm=%EA%B8%B0%EC%83%9D%EC%B6%A9\")\n\nkofic_resp &lt;- httr::GET(kofic_req)\n\n# convert list to dataframe\nkofic_list &lt;- content(kofic_resp)\n  \nkofic_list$boxOfficeResult$dailyBoxOfficeList |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, bind_rows)) |&gt; \n  unnest(data) |&gt; \n  View()"
  }
]