[
  {
    "objectID": "day_01.html",
    "href": "day_01.html",
    "title": "지도 색칠",
    "section": "",
    "text": "1 아시아 대륙 색칠\n\n\n코드\n# Libraries Loading -------------------------------------------------------\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggtext)\nlibrary(maps)\nextrafont::loadfonts(\"win\")\n\n\n# Data Reading and Wrangling ----------------------------------------------\n# Generating pixel grid \nlat &lt;- tibble(lat = seq(-90, 90, by = .5))\nlong &lt;- tibble(long = seq(-180, 180, by = .5))\n\ndots &lt;- lat %&gt;% \n  full_join(long, by = character()) %&gt;% \n  as_tibble()\n\ndots &lt;- dots %&gt;% \n  mutate(country = map.where('world', long, lat),\n         lakes = map.where('lakes', long, lat)) %&gt;% \n  filter(!is.na(country) & is.na(lakes)) %&gt;% \n  dplyr::select(-lakes)\n\nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %&gt;% \n  filter(region_wb != \"Antarctica\")\n\ndots &lt;- dots %&gt;% \n  mutate(\n    country = case_when(\n      country %in% c(\"Comoros:Grande Comore\", \"Comoros:Anjouan\") ~ \"Comoros\",\n      country %in% c(\"Cape Verde:Santo Antao\",\"Cape Verde:Sao Tiago\") ~ \"Cape Verde\",\n      country == \"Guinea-Bissau\" ~ \"Guinea Bissau\", \n      country == \"Equatorial Guinea:Rio Muni\" ~ \"Equatorial Guinea\", \n      country ==  \"Malawi:3\" ~ \"Malawi\",\n      country == \"Somalia:Somaliland\" ~ \"Somaliland\",\n      country == \"Tanzania\" ~ \"United Republic of Tanzania\", \n      TRUE ~ country))\n\nasia_dots &lt;- world %&gt;%\n  filter(continent == \"Asia\") %&gt;% \n  dplyr::select(admin, mapcolor7) %&gt;% \n  left_join(dots, by = c(\"admin\" = \"country\")) \n\n# Graphic -----------------------------------------------------------------\npalette &lt;- c(\"#8931EF\", \"#F2CA19\", \"#FF00BD\" , \"#0057E9\", \"#87E911\", \"#E11845\", \"#FF8A12\") \n\n# 2021 Version ----\nasia_dots %&gt;% \n  ggplot() + \n  geom_point(aes(x = long, y = lat, color = factor(mapcolor7)), size = .95) + \n  guides(color =\"none\") +\n  scale_color_manual(\n    values = palette\n  ) + \n  labs(\n    title = \"아시아\", \n    subtitle = glue::glue(\"1 대륙, {scales::comma(nrow(asia_dots))} 점\"), \n    caption = \"#30DayMapChallenge - 1일 : 대륙색칠\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"MaruBuri\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125, color = \"white\") + \n  coord_fixed(clip = \"off\") + \n  theme_void(base_family = \"MaruBuri\") + \n  theme(\n    plot.background = element_rect(fill = \"#111111\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3), color = \"white\", family = \"MaruBuri\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, size = rel(2.5), color = \"white\",family = \"MaruBuri\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.125), hjust = .5, color = \"white\", family = \"MaruBuri\", margin = margin(b = 15))\n  )\n\n\n\n\n\n\n\n\n\n\n\n2 아시아 대륙 점\n\n\n코드\n# 2022 Version ---- \nasia_dots %&gt;% \n  ggplot() + \n  geom_point(aes(x = long, y = lat), color = \"#F61753\", size = .05) + \n  labs(\n    title = \"아시아\", \n    subtitle = glue::glue(\"1 대륙, {scales::comma(nrow(asia_dots))} 점\"), \n    caption = \"#30DayMapChallenge - 1일 : 대륙색칠\"\n  ) + \n  annotate(geom = \"text\", x = 130, y = 38, label = \"대한민국\", size = 4, family = \"MaruBuri\") + \n  annotate(geom = \"segment\", x = -23.5, y = 12, xend = -23.5, yend = 14.5, size = .125) + \n  coord_fixed(clip = \"off\") + \n  theme_void(base_family = \"MaruBuri\") + \n  theme(\n    plot.background = element_rect(fill = \"#FFFFFF\",color = NA),\n    plot.title = element_text(hjust = .5, size = rel(3),  family = \"MaruBuri\", margin = margin(t = 25,b = 15)),\n    plot.subtitle = element_text(hjust = .5, color =\"grey30\", size = rel(2.5), family = \"MaruBuri\", face = \"bold\", margin = margin(b = 35)),\n    plot.caption = element_text(size = rel(1.5), hjust = .5, family = \"MaruBuri\", margin = margin(b = 15))\n  )"
  },
  {
    "objectID": "day_02.html",
    "href": "day_02.html",
    "title": "인구수 점(Point)",
    "section": "",
    "text": "소스코드\n\n\n\nGIS 101: How do I map data points in R"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge"
  },
  {
    "objectID": "day_02.html#인구수",
    "href": "day_02.html#인구수",
    "title": "인구수 점(Point)",
    "section": "1.1 인구수",
    "text": "1.1 인구수\n\n\n코드\nlibrary(readxl)\nlibrary(tidyverse)\n\ngeonames_raw &lt;- read_excel(\"data/geonames-all-cities-with-a-population-1000@public.xlsx\") %&gt;% \n    janitor::clean_names()\n\nkorea_raw &lt;- geonames_raw %&gt;% \n  select(name, country_code, population, coordinates) %&gt;% \n  filter(country_code  == \"KR\") %&gt;% \n  separate(coordinates, into = c(\"lat\", \"long\"), sep = \",\", convert = TRUE)\n\n\nkorea &lt;- korea_raw %&gt;% \n  mutate(도시명 = c(\"한천리\", \"청송군\", \"청산\", \"함열\", \"동면\",\n\"유려\", \"심원\", \"법성\", \"연천\", \"동복\", \"산티옥\",\n\"난겐\", \"제주시\", \"안남\", \"금정\", \"상사\", \"승주\",\n\"불갑\", \"원주\", \"벌교\", \"법원\", \"광주\", \"신안\",\n\"군서\", \"군북\", \"신동\", \"조성\", \"문경\", \"임실\",\n\"용산동\", \"하성\", \"겸백\", \"영광\", \"예산\",\n\"양주\", \"당진\", \"상주\", \"고창\", \"해남\", \"주문진\",\n\"청주시\", \"진천\", \"가이게투리\", \"규암\", \"선원\",\n\"탄현\", \"울산\", \"의정부시\", \"상주\", \"문경\", \"가평\",\n\"현풍\", \"홍성\", \"정옥\", \"장성\", \"신현\",\n\"광명\", \"회남\", \"용산\", \"번암\", \"월곶\", \"장흥\",\n\"아이센\", \"영덕\", \"전산\", \"부여\", \"부산\", \"오산\",\n\"고성\", \"경산시\", \"군위\", \"장흥\", \"성남시\",\n\"미조\", \"옥곡\", \"대구\", \"김제\", \"김천\", \"익산\",\n\"광양\", \"통해\", \"동이\", \"오남\", \"봉강\", \"용화\",\n\"성환\", \"강포\", \"싱왕\", \"정읍\", \"강동\", \"청풍\",\n\"진상\", \"옹룡\", \"봉래\", \"인계\", \"비인\", \"공주\",\n\"충주\", \"안양시\", \"장평\", \"해안\", \"문덕\",\n\"미력\", \"해리\", \"물량\", \"구림\", \"대전\", \"고성\",\n\"교사이\", \"연무\", \"화남\", \"서상\", \"서석\", \"남면\",\n\"해령\", \"송광\", \"상하\", \"동계\", \"서울\", \"아산\",\n\"괴산\", \"하양\", \"진안군\", \"장안\", \"남양주\", \"안내\",\n\"교동\", \"진월\", \"주암\", \"대산\", \"영동\", \"백전\",\n\"토성\", \"공음\", \"담양\", \"보령\", \"속초\", \"광주\",\n\"구룡포\", \"강화군\", \"청양\", \"진주\", \"진잠\", \"안산시\",\n\"발금\", \"별량\", \"남면\", \"태백\", \"푸안\", \"화순\", \"화천\", \"전주\",\n\"지도\", \"이원\", \"화원\", \"서귀포\", \"병곡\", \"통진\",\n\"진접\", \"보성\", \"영암\", \"염산\", \"칠보\", \"아이센\",\n\"포항\", \"목포\", \"구미\", \"김해\", \"천안\", \"일광\",\n\"산서\", \"산내\", \"덕진\", \"대마\", \"완주\", \"수원\",\n\"평창\", \"군포\", \"인천\", \"화성시\", \"창원\", \"창수\",\n\"홍농\", \"양사\", \"광탄\", \"유치\", \"연일\", \"양평\",\n\"왜관\", \"심천\", \"무안\", \"강릉\", \"화도\", \"와부\",\n\"설천\", \"대합\", \"동래\", \"네이츠\", \"신탄신\", \"금산\",\n\"추풍령\", \"안동\", \"청남\", \"황간\", \"창녕\", \"여주\",\n\"밀양\", \"홍천\", \"철원\", \"한남\", \"세종\", \"반남\",\n\"금성\", \"하동\", \"영천\", \"춘천\", \"백수\", \"성수\",\n\"학산\", \"순천\", \"군산\", \"청평\", \"송강동\", \"수동\",\n\"외서\", \"낙월\", \"강진\", \"용안\", \"동래\", \"나주\",\n\"문산\", \"구리시\", \"창평\", \"하점\", \"압해\", \"도포\",\n\"군서\", \"흥해\", \"유성\", \"이양\", \"태산리\", \"부천시\",\n\"논산\", \"광양\", \"이천시\", \"여수\", \"웅상\", \"내선\",\n\"파주\", \"청성\", \"서산\", \"경주\", \"관촌\", \"상월\", \"시종\",\n\"구정\", \"동면\", \"마산\", \"고양시\", \"기장\", \"안성\",\n\"청하\", \"군북\", \"송해\", \"광적\", \"관인\", \"방산\",\n\"노동\", \"나산\", \"임자\", \"양구\", \"일로\", \"오천\",\n\"신서\", \"부평\", \"화양\", \"세지\", \"해보\", \"군남\",\n\"쌍치\", \"양산\", \"옥천\", \"구례\", \"푸발\", \"삼승\",\n\"삼산\", \"신안\", \"정량\", \"해제\")) %&gt;% \n  filter(population &gt; 0) %&gt;% \n  arrange(desc(population))\n\nkorea\n#&gt; # A tibble: 130 × 6\n#&gt;    name        country_code population   lat  long 도시명\n#&gt;    &lt;chr&gt;       &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; \n#&gt;  1 Seoul       KR             10349312  37.6  127. 서울  \n#&gt;  2 Busan       KR              3678555  35.1  129. 부산  \n#&gt;  3 Incheon     KR              2954955  37.5  127. 인천  \n#&gt;  4 Daegu       KR              2566540  35.9  129. 대구  \n#&gt;  5 Gwangju     KR              1490092  35.2  127. 광주  \n#&gt;  6 Daejeon     KR              1469543  36.3  127. 대전  \n#&gt;  7 Suwon       KR              1241311  37.3  127. 수원  \n#&gt;  8 Goyang-si   KR              1073069  37.7  127. 고양시\n#&gt;  9 Seongnam-si KR              1031935  37.4  127. 성남시\n#&gt; 10 Ulsan       KR               962865  35.5  129. 울산  \n#&gt; # ℹ 120 more rows"
  },
  {
    "objectID": "day_02.html#df-sf-객체",
    "href": "day_02.html#df-sf-객체",
    "title": "인구수 점(Point)",
    "section": "2.1 DF → sf 객체",
    "text": "2.1 DF → sf 객체\n\n\n코드\ncrsLONGLAT &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\nkorea_sf &lt;- korea |&gt;\n    sf::st_as_sf(\n        coords = c(\"long\", \"lat\"),\n        crs = crsLONGLAT\n    )\n\nggplot() +\n    geom_sf(\n        data = korea_sf,\n        color = \"#7d1d53\", fill = \"#7d1d53\"\n    )"
  },
  {
    "objectID": "day_02.html#shapefile",
    "href": "day_02.html#shapefile",
    "title": "인구수 점(Point)",
    "section": "2.2 shapefile",
    "text": "2.2 shapefile\ngiscoR 유로스탯 - GISCO(유럽집행위원회 지리정보시스템)에서 데이터를 다운로드 없이 바로 사용할 수 있는 가벼운 API를 제공한다.\n\n\n코드\nkr &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\") |&gt;\n    sf::st_transform(crsLONGLAT)\n\nplot(kr)"
  },
  {
    "objectID": "day_02.html#결합",
    "href": "day_02.html#결합",
    "title": "인구수 점(Point)",
    "section": "2.3 결합",
    "text": "2.3 결합\n\n\n코드\nkr_pop_sf &lt;- sf::st_intersection(korea_sf, kr)\n\nplot(sf::st_geometry(kr_pop_sf))"
  }
]