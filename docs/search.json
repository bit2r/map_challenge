[
  {
    "objectID": "approval_rate.html",
    "href": "approval_rate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "윤석열 대통령\n문재인 대통령\n박근혜 대통령\n이명박 대통령\n노무현 대통령\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\nextrafont::loadfonts()\n\nyoon_url &lt;- 'https://namu.wiki/w/%EC%9C%A4%EC%84%9D%EC%97%B4/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nyoon_html &lt;- read_html(yoon_url)\n\nyoon_list &lt;- yoon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nyoon_raw &lt;- yoon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 54) |&gt; \n  mutate(조사회사 = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nyoon_tbl &lt;- yoon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nyoon_gg_tbl &lt;- yoon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\",\n         조사기간 &gt;= as.Date(\"2022-05-07\"))\n\nelection_interval &lt;- -interval(ymd(\"2024-04-10\"), ymd('2023-08-05'))\n\nelection_period   &lt;- as.period(election_interval, unit = \"month\") \n\nremaining_ymd &lt;- glue::glue(\"남은 기간:\\n {month(election_period)}월 {day(election_period)}일\")\n\nyoon_approval_gg &lt;- yoon_gg_tbl  |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = yoon_gg_tbl |&gt; filter(조사기간 == max(조사기간)), \n               aes(x = 조사기간, y = 지지율, color= 긍부정), size = 1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +\n    geom_vline(xintercept = as.Date(\"2024-04-10\"), linetype = 1, color = \"gray50\") +    \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"윤석열 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    expand_limits(x = c(as.Date(\"2022-05-10\"), as.Date(\"2027-05-09\"))) +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\")  +\n    geom_text(aes(x=as.Date(\"2023-12-01\"), y = 60, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2024-08-01\"), y = 65, label = \"제22대 총선\\n4월10일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n\nyoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/윤석열.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nyoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmoon_url &lt;- 'https://namu.wiki/w/%EB%AC%B8%EC%9E%AC%EC%9D%B8/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nmoon_html &lt;- read_html(moon_url)\n\nmoon_list &lt;- moon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nmoon_raw &lt;- moon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(id = row_number(),\n         조사회사 = ifelse(id &gt;6, \"리얼미터\", \"한국갤럽\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nmoon_tbl &lt;- moon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 250) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nmoon_approval_gg &lt;- moon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\") |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    # facet_wrap(~조사회사) +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"문재인 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nmoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/문재인.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nmoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\npark_url &lt;- 'https://namu.wiki/w/%EB%B0%95%EA%B7%BC%ED%98%9C/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\npark_html &lt;- read_html(park_url)\n\npark_list &lt;- park_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\npark_raw &lt;- park_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\npark_tbl &lt;- park_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 200) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\npark_approval_gg &lt;- park_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"박근혜 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\npark_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/박근혜.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\npark_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nlee_url &lt;- 'https://namu.wiki/w/%EC%9D%B4%EB%AA%85%EB%B0%95/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nlee_html &lt;- read_html(lee_url)\n\nlee_list &lt;- lee_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nlee_raw &lt;- lee_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\nconvert_ym_date &lt;- function(korean_date) {\n  \n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year and month\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  \n  # Construct the date - the first day of the month and year\n  date &lt;- make_date(year, month, 15)\n  \n  return(date)\n}\n\nlee_tbl &lt;- lee_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 90) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n\nprevious_date &lt;- ymd(\"2012-04-11\") - election_period\n\n\nlee_current_tbl &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt; \n  filter(조사기간 == previous_date+9)\n\nlee_approval_gg &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_text(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정,\n                                          label = 지지율), vjust = -1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"이명박 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\") +\n    geom_vline(xintercept = as.Date(\"2012-04-11\"), linetype = 1, color = \"gray50\") +\n    geom_text(aes(x=as.Date(\"2011-12-01\"), y = 45, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2012-08-01\"), y = 65, label = \"제19대 총선\\n4월11일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n  \nlee_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/이명박.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nlee_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nrho_url &lt;- 'https://namu.wiki/w/%ED%8B%80:%ED%95%9C%EA%B5%AD%EA%B0%A4%EB%9F%BD%20%EB%85%B8%EB%AC%B4%ED%98%84%20%EB%8C%80%ED%86%B5%EB%A0%B9%20%EA%B5%AD%EC%A0%95%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nrho_html &lt;- read_html(rho_url)\n\nrho_list &lt;- rho_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrho_raw &lt;- rho_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\nrho_tbl &lt;- rho_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 20) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n  \n\nrho_approval_gg &lt;- rho_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"노무현 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nrho_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/노무현.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nrho_approval_gg\ndev.off()\n\n\n\n\n\n\n\n코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#결합",
    "href": "approval_rate.html#결합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#년-기준",
    "href": "approval_rate.html#년-기준",
    "title": "지도제작 대회",
    "section": "\n2.1 1년 기준",
    "text": "2.1 1년 기준\n\n코드\nrm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20{2006}%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8')\n\nrm_html &lt;- read_html(rm_url)\n\nrm_list &lt;- rm_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrm_raw &lt;- rm_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(name == 1) |&gt; \n  mutate(조사회사 = \"리얼미터\") \n\nremove_last &lt;- function(vector) {\n  if(vector[length(vector)] ==\"\") {\n    vector[1:(length(vector)-1)]\n  } else {\n    vector\n  }\n}\n\nmake_dataframe &lt;- function(x_vec, y_vec) {\n  data.frame(x_vec, y_vec)\n}\n\n## 정당명과 지지율\nrm_tbl &lt;- rm_raw |&gt; \n  mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt;\n  select(contains(\"정당지지율\"), x_2) |&gt; \n  set_names(c(\"조사기간\", \"지지율\")) |&gt; \n  mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                      str_split(지지율, \"●\"), NA)) |&gt; \n  mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n  mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n  fill(정당명, .direction = \"down\") |&gt; \n  filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n  mutate(지지율 = str_squish(지지율),\n         정당명 = str_squish(정당명)) |&gt; \n  mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n         지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n  mutate(지지율수 = map_int(지지율, length),\n         정당수   = map_int(정당명, length)) |&gt; \n  mutate(지지율 = ifelse(지지율수 == 정당수, 지지율,\n                      map(지지율, remove_last))) |&gt; \n  filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n  mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n  select(조사기간, data)\n  \nrm_tbl |&gt; \n  unnest(data)"
  },
  {
    "objectID": "approval_rate.html#함수",
    "href": "approval_rate.html#함수",
    "title": "지도제작 대회",
    "section": "\n2.2 함수",
    "text": "2.2 함수\n\n코드\nget_party_data &lt;- function(year = \"2012\") {\n  \n  rm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20',\n                       '{year}',\n                       '%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8') |&gt; as.character()\n\n  rm_html &lt;- read_html(rm_url)\n  \n  rm_list &lt;- rm_html |&gt; \n    html_nodes('table') |&gt; \n    html_table(header = TRUE)\n  \n  rm_raw &lt;- rm_list |&gt; \n    enframe() |&gt; \n    mutate(nrow = map_int(value, nrow)) |&gt; \n    filter(name == 1) |&gt; \n    mutate(조사회사 = \"리얼미터\") \n  \n  remove_last &lt;- function(vector) {\n    \n    if(length(vector) &lt; 3){\n      vector\n    } else if(vector[length(vector)] ==\"\") {\n      vector[1:(length(vector)-1)]\n    } else {\n      vector\n    }\n  }\n  \n  make_dataframe &lt;- function(x_vec, y_vec) {\n    min_row &lt;- min(length(x_vec), length(y_vec))\n    data.frame(x_vec = x_vec[1:min_row], y_vec = y_vec[1:min_row])\n  }\n  \n  ## 정당명과 지지율\n  rm_tbl &lt;- rm_raw |&gt; \n    mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n    select(조사회사, data) |&gt; \n    unnest(data) |&gt;\n    select(contains(\"정당지지율\"), x_2) |&gt; \n    set_names(c(\"조사기간\", \"지지율\")) |&gt; \n    mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                        str_split(지지율, \"●\"), NA)) |&gt; \n    mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n    mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n    fill(정당명, .direction = \"down\") |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n    mutate(지지율 = str_squish(지지율),\n           정당명 = str_squish(정당명)) |&gt; \n    mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n           지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 == 정당수, 지지율, map(지지율, remove_last))) |&gt; \n    filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 != 정당수, NA, 지지율)) |&gt; \n    fill(지지율, .direction = \"up\") |&gt; \n    mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n    select(조사기간, data)\n\n  \n  rm_df &lt;- rm_tbl |&gt; unnest(data) |&gt; mutate(x_vec = parse_number(x_vec)) |&gt; \n    rename(지지율 = x_vec,\n           정당   = y_vec) |&gt; \n    mutate(연도 = year)\n  \n  return(rm_df)\n}\n\nget_party_data(\"2018\")"
  },
  {
    "objectID": "approval_rate.html#결합-1",
    "href": "approval_rate.html#결합-1",
    "title": "지도제작 대회",
    "section": "\n2.3 결합",
    "text": "2.3 결합\n\n코드\nsafely_get_party_data &lt;- safely(get_party_data, otherwise = \"오류\")\n\nyear &lt;- 2006:2023\n\nparty_raw &lt;- year |&gt; \n  enframe()  |&gt; \n  mutate(data = map(value, safely_get_party_data))\n\nparty_tbl &lt;- party_raw |&gt; \n  mutate(result = map(data, \"result\")) |&gt; \n  mutate(check = map_dbl(result, is_tibble)) |&gt; \n  unnest(result) |&gt; \n  select(연도, 조사기간, 정당, 지지율)\n\nparty_tbl |&gt; \n  write_csv(\"data/리얼미터_정당지지율.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge\n\n2 원천 지도\n\n\n국토교통부\n\n\nLX 한국국토정보공사, 구 한국지적공사\n\n공간정보산업진흥원\n\nVWorld, 공간정보오픈플랫폼\n\n\n\n국토지리정보원\n\n국토정보플랫폼\n\n국가공간정보포털\n\n오픈마켓, 90m 표고 데이터: [국토지리정보원] 수치표고모델(DEM)_90M\n\n\n\n\n\n\n대한민국 행정동 경계: admdongkor\n대한민국 최신 행정구역(SHP) 다운로드\n\n3 세계지도\n출처: Fixing maps library data for Pacific centred (0°-360° longitude) display\n\n\n세계지도: giscoR\n세계지도: maps\n세계지도: rnaturalearth\n아시아\n대한민국\n태평양 중심\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\n\n# download.file(url = \"https://gisco-services.ec.europa.eu/distribution/v2/countries/geojson/CNTR_RG_01M_2016_4326.geojson\", destfile = \"data/world.geojson\", mode = \"w\")\n# \n# world_sf &lt;- giscoR::gisco_get_countries(\n#   epsg = \"4326\",\n#   region = \"Asia\",\n#   resolution = \"1\",\n#   cache = TRUE, \n#   update_cache = TRUE\n# )\n\nworld_sf &lt;- sf::st_read(\"data/world.geojson\")\n#&gt; Reading layer `world' from data source `D:\\tcs\\map_challenge\\data\\world.geojson' using driver `GeoJSON'\n#&gt; Simple feature collection with 257 features and 6 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.66498\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_sf))\n\n\n\n\n\n\n\n\n\n\n코드# 필요한 라이브러리를 불러옵니다.\nlibrary(ggplot2)\nlibrary(maps)\n\n# 월드맵 데이터를 불러옵니다.\nworld_map &lt;- map_data(\"world\")\n\n# ggplot2를 사용해 지도를 그립니다.\nggplot() +\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_cartesian(xlim = c(-180, 180)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n코드library(rnaturalearth)\n\n# Get the world map data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Shift the map to center on the Pacific Ocean\nworld_trans &lt;- st_transform(st_wrap_dateline(world, options = c(\"WRAPDATELINE=YES\", \"DATELINEOFFSET=-180\")), crs = \"+proj=robin\")\n\n# Plot the world map\nggplot(data = world_trans) +\n  geom_sf() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n코드asia_sf &lt;- giscoR::gisco_get_countries(\n  epsg = \"4326\",\n  region = \"Asia\",\n  resolution = \"60\",\n  cache = TRUE,\n  update_cache = TRUE\n)\n\nplot(st_geometry(asia_sf))\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(giscoR)\n\nkorea &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\"\n) |&gt;\n    sf::st_transform(\"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\")\n\nplot(st_geometry(korea))\n\n\n\n\n\n\n\n\n\n\n코드library(maps)\n\nplot.map&lt;- function(database,center,...){\n    Obj &lt;- map(database,...,plot=F)\n    coord &lt;- cbind(Obj[[1]],Obj[[2]])\n\n    # split up the coordinates\n    id &lt;- rle(!is.na(coord[,1]))\n    id &lt;- matrix(c(1,cumsum(id$lengths)),ncol=2,byrow=T)\n    polygons &lt;- apply(id,1,function(i){coord[i[1]:i[2],]})\n\n    # split up polygons that differ too much\n    polygons &lt;- lapply(polygons,function(x){\n        x[,1] &lt;- x[,1] + center\n        x[,1] &lt;- ifelse(x[,1]&gt;180,x[,1]-360,x[,1])\n        if(sum(diff(x[,1])&gt;300,na.rm=T) &gt;0){\n          id &lt;- x[,1] &lt; 0\n          x &lt;- rbind(x[id,],c(NA,NA),x[!id,])\n       }\n       x\n    })\n    # reconstruct the object\n    polygons &lt;- do.call(rbind,polygons)\n    Obj[[1]] &lt;- polygons[,1]\n    Obj[[2]] &lt;- polygons[,2]\n\n    map(Obj,...)\n}\n\nplot.map(\"world\", center=210, col=\"white\",bg=\"gray\",\n         fill=TRUE, ylim=c(-60,90),mar=c(0,0,0,0))"
  },
  {
    "objectID": "km_BitGPT.html",
    "href": "km_BitGPT.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60\n\n\n\n\n\n\n\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0\n\n\n\n\n\n\n\n데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "realmeter_metro.html",
    "href": "realmeter_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))\n\n\n\n\n코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))\n\n\n\n\n코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)\n\n\n\n\n코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-링크",
    "href": "realmeter_metro.html#pdf-다운로드-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드",
    "href": "realmeter_metro.html#pdf-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-함수",
    "href": "realmeter_metro.html#pdf-다운로드-함수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)"
  },
  {
    "objectID": "realmeter_metro.html#전체-다운로드",
    "href": "realmeter_metro.html#전체-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#다운로드-목록",
    "href": "realmeter_metro.html#다운로드-목록",
    "title": "지도제작 대회",
    "section": "\n2.1 다운로드 목록",
    "text": "2.1 다운로드 목록\n\n코드library(tidyverse)\nlibrary(rvest)\n\n## 함수\nget_reports &lt;- function(page=\"1\"){\n  \n  cat(\"\\n----------------------------\\n\", \n      \"     \", page, \" 페이지\",\n      \"\\n----------------------------\\n\")\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\n## 다운로드 페이지\n\npdf_pages &lt;- 1:158\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  mutate(data = map(page, get_reports))\n\npdf_report_tbl &lt;- pdf_report_raw |&gt; \n  select(data) |&gt; \n  mutate(nrow = map_int(data, nrow)) |&gt; \n  filter(nrow !=0) |&gt; \n  unnest(data)\n\npdf_report_tbl |&gt; \n  write_rds(\"data/realmeter/pdf_report_tbl.rds\")"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-1",
    "href": "realmeter_metro.html#pdf-다운로드-1",
    "title": "지도제작 대회",
    "section": "\n2.2 PDF 다운로드",
    "text": "2.2 PDF 다운로드\n\n코드pdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\n\ndownload_pdfs &lt;- function(link, filename) {\n  cat(\"\\n----------------------------\\n\", \n      \"     \", filename, \": 파일명\",\n      \"\\n----------------------------\\n\")\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\npdf_report_tbl |&gt; \n  mutate(pdfs = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#윤석열-대통령-이후",
    "href": "realmeter_metro.html#윤석열-대통령-이후",
    "title": "지도제작 대회",
    "section": "\n3.1 윤석열 대통령 이후",
    "text": "3.1 윤석열 대통령 이후\n\n코드library(tidyverse)\nlibrary(fs)\n\npdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\nlocal_path_file &lt;- fs::dir_ls(\"data/realmeter/\") |&gt; \n  enframe(value = \"path_file\") |&gt; \n  mutate(filename = path_file(name)) |&gt; \n  select(path_file, filename)\n\n# 날짜 변환 함수\nconvert_to_date &lt;- function(d) {\n  year &lt;- as.numeric(sub(\"년.*\", \"\", d)) + 2000  # 2000을 더해서 4자리 연도를 만듭니다.\n  month &lt;- as.numeric(sub(\".* (\\\\d+)월.*\", \"\\\\1\", d))\n  week &lt;- as.numeric(sub(\".*월 (\\\\d+)주\", \"\\\\1\", d))\n  start_date &lt;- ymd(paste(year, month, 1, sep = \"-\"))\n  \n  return(start_date + days(7 * (week - 1)))\n}\n\n\nyoon_pdf &lt;- pdf_report_tbl |&gt; \n  left_join(local_path_file) |&gt; \n  select(text, path_file, filename) |&gt; \n  mutate(date = str_extract(text, pattern = '(\\\\d+년 \\\\d+월 \\\\d+주)')) |&gt; \n  mutate(date = convert_to_date(date)) |&gt; \n  filter(date &gt; as.Date(\"2022-05-01\"),\n         str_detect(filename, \"주간통계표\")) |&gt; \n  select(date, path_file, filename) |&gt; \n  arrange(date)\n\nyoon_pdf"
  },
  {
    "objectID": "realmeter_metro.html#응답자-특성",
    "href": "realmeter_metro.html#응답자-특성",
    "title": "지도제작 대회",
    "section": "\n3.2 응답자 특성",
    "text": "3.2 응답자 특성\n\n코드library(pdftools)\nlibrary(openai)\n\nraw_text &lt;- pdftools::pdf_text(pdf = \"data/realmeter/주간통계표22년5월2주최종_y51w.pdf\")\n\ndemo_text &lt;- raw_text |&gt; \n  enframe() |&gt; \n  mutate(value = str_squish(value)) |&gt; \n  # filter(str_detect(value, \"^(?=.*보수)(?=.*중도)(?=.*진보)\")) |&gt; \n  filter(str_detect(value, \"응답자\\\\s+특성\")) |&gt; \n  pull(value)\n\nsystem_task &lt;- glue::glue(\"당신은 통계 데이터 전문가입니다.\n                          당신에게 텍스트 형식의 표로 주어졌을 때,\n                          설명은 없이 텍스트를 표로 바꾸는 것입니다.\",\n                          \"텍스트 형식의 표는 다음과 같습니다.\",\n                          \"데이터의 상단에는 표의 칼럼명이 위치하고 첫번째 혹은 \n                          두번째 칼럼은 다차원표의 범주(Level)에 대한 정보를 담고 있고\n                          나머지 셀은 숫자로 구성됩니다.\")\n                          # \"'만18세 이상 29세 이하'는 하나의 값입니다.\")\n\ngpt_response &lt;- create_chat_completion(\n            # model = \"gpt-3.5-turbo\",\n            model = \"gpt-4\",\n            messages = list(\n              list(\n                \"role\" = \"system\",\n                \"content\" = system_task\n              ),\n              list(\n                \"role\" = \"user\",\n                \"content\" = demo_text\n              )\n            ),\n            temperature = 0,\n            top_p = 1,\n            n = 1,\n            openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),\n            openai_organization = NULL\n          )\n\n\ngpt_response |&gt; \n  write_rds(\"data/realmeter_deom.rds\")\n\n\n\n코드library(tidyverse)\nlibrary(openai)\n\ngpt_response &lt;- \n  read_rds(\"data/realmeter_deom.rds\")\n\nresult_md &lt;- gpt_response |&gt; \n  pluck('choices') |&gt; \n  pull('message.content')  |&gt; \n  str_split(\"\\n\") %&gt;%\n  .[[1]]\n  \nresult_md\n#&gt;  [1] \"| 구 분 | 사례수(명) | 비율(%) | 가중값 사례수(명) | 가중값 비율(%) | 배율 |\"\n#&gt;  [2] \"|---|---|---|---|---|---|\"                                                   \n#&gt;  [3] \"| 전 체 | 2526 | 100.0 | 2526 | 100.0 | 1.00 |\"                              \n#&gt;  [4] \"| 남 자 | 1566 | 62.0 | 1252 | 49.6 | 0.80 |\"                                \n#&gt;  [5] \"| 여 자 | 960 | 38.0 | 1274 | 50.4 | 1.33 |\"                                 \n#&gt;  [6] \"| 만18세이상 | 300 | 11.9 | 437 | 17.3 | 1.46 |\"                             \n#&gt;  [7] \"| 2 9 세 이 하 | 292 | 11.6 | 382 | 15.1 | 1.31 |\"                           \n#&gt;  [8] \"| 4 0 대 | 404 | 16.0 | 467 | 18.5 | 1.16 |\"                                 \n#&gt;  [9] \"| 5 0 대 | 626 | 24.8 | 493 | 19.5 | 0.79 |\"                                 \n#&gt; [10] \"| 6 0 대 | 545 | 21.6 | 410 | 16.2 | 0.75 |\"                                 \n#&gt; [11] \"| 7 0 세 이 상 | 359 | 14.2 | 337 | 13.3 | 0.94 |\"                           \n#&gt; [12] \"| 서 울 | 619 | 24.5 | 478 | 18.9 | 0.77 |\"                                  \n#&gt; [13] \"| 인 천 / 경 기 | 768 | 30.4 | 798 | 31.6 | 1.04 |\"                          \n#&gt; [14] \"| 대전/세종/충청 | 231 | 9.1 | 268 | 10.6 | 1.16 |\"                          \n#&gt; [15] \"| 강 원 | 79 | 3.1 | 74 | 2.9 | 0.94 |\"                                      \n#&gt; [16] \"| 부산/울산/경남 | 315 | 12.5 | 381 | 15.1 | 1.21 |\"                         \n#&gt; [17] \"| 대 구 / 경 북 | 223 | 8.8 | 248 | 9.8 | 1.11 |\"                            \n#&gt; [18] \"| 광 주 / 전 라 | 257 | 10.2 | 248 | 9.8 | 0.96 |\"                           \n#&gt; [19] \"| 제 주 | 34 | 1.3 | 31 | 1.2 | 0.91 |\"\n\n\nmarkdown_to_df &lt;- function(markdown_table) {\n  \n  # Remove rows with only dashes (assuming they're separator rows)\n  markdown_table &lt;- markdown_table[!str_detect(markdown_table, \"^\\\\|[-]+\\\\|\")]\n\n  # Split each line into its components based on the pipe delimiter\n  split_lines &lt;- str_split(markdown_table, \"\\\\|\")\n  \n  # Extract headers and data\n  headers &lt;- str_trim(unlist(split_lines[1]))\n  data &lt;- do.call(rbind, split_lines[-1])\n  \n  # Convert data to dataframe and assign column names\n  df &lt;- as.data.frame(data, stringsAsFactors = FALSE)\n  colnames(df) &lt;- headers\n  \n  return(df)\n}\n\ndemo_raw &lt;- markdown_to_df(result_md)\n\ndeom_tbl &lt;- demo_raw |&gt; \n  janitor::clean_names(ascii= FALSE) |&gt; \n  select(!starts_with(\"x\")) |&gt; \n  set_names(c(\"구분\", \"완료_사례\", \"완료_비율\", \"가중_사례\", \"가중_비율\", \"가중값\")) |&gt; \n  as_tibble() |&gt; \n  mutate_all(str_squish) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s+\")) |&gt; \n  mutate(구분 = case_when(str_detect(구분, \"만18세이상\") ~ \"20대\",\n                          str_detect(구분, \"29세이하\") ~ \"30대\",\n                          TRUE ~ 구분))\n\ndeom_tbl |&gt; \n  gt::gt()\n\n\n\n\n\n구분\n      완료_사례\n      완료_비율\n      가중_사례\n      가중_비율\n      가중값\n    \n\n\n전체\n2526\n100.0\n2526\n100.0\n1.00\n\n\n남자\n1566\n62.0\n1252\n49.6\n0.80\n\n\n여자\n960\n38.0\n1274\n50.4\n1.33\n\n\n20대\n300\n11.9\n437\n17.3\n1.46\n\n\n30대\n292\n11.6\n382\n15.1\n1.31\n\n\n40대\n404\n16.0\n467\n18.5\n1.16\n\n\n50대\n626\n24.8\n493\n19.5\n0.79\n\n\n60대\n545\n21.6\n410\n16.2\n0.75\n\n\n70세이상\n359\n14.2\n337\n13.3\n0.94\n\n\n서울\n619\n24.5\n478\n18.9\n0.77\n\n\n인천/경기\n768\n30.4\n798\n31.6\n1.04\n\n\n대전/세종/충청\n231\n9.1\n268\n10.6\n1.16\n\n\n강원\n79\n3.1\n74\n2.9\n0.94\n\n\n부산/울산/경남\n315\n12.5\n381\n15.1\n1.21\n\n\n대구/경북\n223\n8.8\n248\n9.8\n1.11\n\n\n광주/전라\n257\n10.2\n248\n9.8\n0.96\n\n\n제주\n34\n1.3\n31\n1.2\n0.91"
  },
  {
    "objectID": "nbs_metro.html",
    "href": "nbs_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists\n\n\n\n\n코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links\n\n\n\n\n코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#자료실-목록",
    "href": "nbs_metro.html#자료실-목록",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists"
  },
  {
    "objectID": "nbs_metro.html#페이지별-보고서-링크",
    "href": "nbs_metro.html#페이지별-보고서-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links"
  },
  {
    "objectID": "nbs_metro.html#보고서-파일",
    "href": "nbs_metro.html#보고서-파일",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#한-페이지",
    "href": "nbs_metro.html#한-페이지",
    "title": "지도제작 대회",
    "section": "\n2.1 한 페이지",
    "text": "2.1 한 페이지\n\n코드\n# for(i in 1:length(page_report_links)) {\n#   cat(\"\\n\", i, \"----------\", page_report_links[i], \"\\n\")\n#   download_zip_report(page_report_links[i])\n# }\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "nbs_metro.html#젠체-페이지",
    "href": "nbs_metro.html#젠체-페이지",
    "title": "지도제작 대회",
    "section": "\n2.2 젠체 페이지",
    "text": "2.2 젠체 페이지\n\n코드\nnbs_bbs_lists\n\nget_page_links &lt;- function(nbs_bbs_list) {\n  \n  page_html &lt;- read_html(nbs_bbs_list)\n\n  page_links &lt;- page_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr('href') \n  \n  page_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n  \n  page_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n  \n  page_report_links\n}\n\nnbs_bbs_tbl &lt;- nbs_bbs_lists |&gt; \n  enframe(value = \"page_url\") |&gt; \n  mutate(data = map(page_url, get_page_links))\n\nnbs_bbs_tbl |&gt; \n  unnest(data)\n\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "gallop_metro.html",
    "href": "gallop_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 데이터"
  },
  {
    "objectID": "km_BitGPT.html#원본-데이터",
    "href": "km_BitGPT.html#원본-데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60"
  },
  {
    "objectID": "km_BitGPT.html#가공데이터",
    "href": "km_BitGPT.html#가공데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0"
  },
  {
    "objectID": "km_BitGPT.html#챗gpt-데이터-변환",
    "href": "km_BitGPT.html#챗gpt-데이터-변환",
    "title": "지도제작 대회",
    "section": "",
    "text": "데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수",
    "href": "km_BitGPT.html#연도별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.1 연도별 인구수",
    "text": "4.1 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수-1",
    "href": "km_BitGPT.html#연도별-인구수-1",
    "title": "지도제작 대회",
    "section": "\n4.2 연도별 인구수",
    "text": "4.2 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#동별-인구수",
    "href": "km_BitGPT.html#동별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.3 동별 인구수",
    "text": "4.3 동별 인구수\n\n코드\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도, 행정동) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수, color = 행정동, group=행정동)) +\n    geom_line(size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 동별 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#유권자-비율-1",
    "href": "km_BitGPT.html#유권자-비율-1",
    "title": "지도제작 대회",
    "section": "\n4.4 유권자 비율",
    "text": "4.4 유권자 비율\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=\"\", y=인구수, fill = 유권자)) +\n    geom_bar(width = 1, stat = \"identity\") +\n    coord_polar(\"y\")  +\n    labs(title=\"광명시 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\"))"
  },
  {
    "objectID": "km_BitGPT.html#내림차순-유권자수",
    "href": "km_BitGPT.html#내림차순-유권자수",
    "title": "지도제작 대회",
    "section": "\n4.5 내림차순 유권자수",
    "text": "4.5 내림차순 유권자수\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  filter(연도 == max(연도)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(행정동, 유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 인구수/sum(인구수)) |&gt; \n  ungroup() |&gt; \n    \n  # pivot_wider(names_from = 유권자, values_from = 인구수) |&gt; \n  # mutate(유권자비율 = 유권자/(비유권자+유권자)) |&gt; \n  # arrange(desc(유권자비율))\n\n  # 시각화 -----------------\n  ggplot(aes(x=fct_reorder2(행정동, 유권자, 유권자비율), y=유권자비율, fill = 유권자)) +\n    geom_col() +\n    coord_flip() +\n    labs(title=\"광명시 동별 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\",\n         x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\")) +\n    theme(legend.position = \"top\")"
  },
  {
    "objectID": "minju_party.html",
    "href": "minju_party.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(gt)\nlibrary(gtExtras)\nlibrary(tidyverse)\n\n# Creating the tibble using tribble\nmage_raw &lt;- tribble(\n  ~`연령`, ~비율,\n  \"10대후반\", \"0.1%\",\n  \"20_24\", \"1.7%\",\n  \"25_29\", \"4.2%\",\n  \"30_34\", \"5.3%\",\n  \"35_39\", \"6.3%\",\n  \"40_44\", \"9.8%\",\n  \"45_49\", \"12.2%\",\n  \"50_54\", \"15.8%\",\n  \"55_59\", \"13.8%\",\n  \"60_64\", \"12.8%\",\n  \"65_69\", \"8.1%\",\n  \"70+\", \"10.0%\"\n)\n\nmage_tbl &lt;- mage_raw |&gt; \n  mutate(비율 = parse_number(비율)/100) |&gt; \n  mutate(당원수 = 비율 * 2454332)\n\nmage_tbl |&gt; \n  gt::gt() |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  fmt_integer(columns = 당원수) |&gt; \n  cols_align(\"center\") |&gt; \n  ## 표 전체 합계 -------------- -----------------------\n  grand_summary_rows(\n    columns = 당원수,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt; \n  gt_theme_538()\n\n\n\n\n코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()\n  \n\n\n\n\n코드age_raw &lt;- readxl::read_excel(\"data/혁신안_202307_202307_연령별_월간.xlsx\", skip = 3)\n\nmale_tbl&lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"남_인구수\", \"연령구간인구수_4\", \n          \"x0_4세_5\", \"x5_9세_6\", \"x10_14세_7\", \"x15_19세_8\", \"x20_24세_9\", \n          \"x25_29세_10\", \"x30_34세_11\", \"x35_39세_12\", \"x40_44세_13\", \n          \"x45_49세_14\", \"x50_54세_15\", \"x55_59세_16\", \"x60_64세_17\", \n          \"x65_69세_18\", \"x70_74세_19\", \"x75_79세_20\", \"x80_84세_21\", \n          \"x85_89세_22\", \"x90_94세_23\", \"x95_99세_24\", \"x100세_이상_25\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"남\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n  \n\nfemale_tbl &lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"여_인구수\", \"연령구간인구수_27\", \n           \"x0_4세_28\", \"x5_9세_29\", \"x10_14세_30\", \"x15_19세_31\", \n           \"x20_24세_32\", \"x25_29세_33\", \"x30_34세_34\", \"x35_39세_35\", \n           \"x40_44세_36\", \"x45_49세_37\", \"x50_54세_38\", \"x55_59세_39\", \n           \"x60_64세_40\", \"x65_69세_41\", \"x70_74세_42\", \"x75_79세_43\", \n           \"x80_84세_44\", \"x85_89세_45\", \"x90_94세_46\", \"x95_99세_47\", \"x100세_이상_48\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"여\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n\nage_tbl &lt;- bind_rows(male_tbl, female_tbl) |&gt; \n  filter(!str_detect(행정기관, \"전국\")) |&gt; \n  mutate(연령 = str_extract(연령, '(\\\\d{1,2}_\\\\d{1,2})'))  |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\") ~ \"-19\",\n                            연령 %in% c(\"70_74\", \"75_79\", \"80_84\", \"85_89\", \"90_94\", \"95_99\") ~ \"70+\",\n                              is.na(연령) ~ \"70+\",\n                              TRUE ~ 연령)) |&gt; \n  mutate(인구수 = parse_number(인구수))\n\nage_tbl |&gt;\n  write_rds(\"data/혁신안_2023년_연령인구수.rds\")"
  },
  {
    "objectID": "minju_party.html#시도별",
    "href": "minju_party.html#시도별",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()"
  },
  {
    "objectID": "minju_party.html#당원-통계",
    "href": "minju_party.html#당원-통계",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(gt)\nlibrary(gtExtras)\nlibrary(tidyverse)\n\n# Creating the tibble using tribble\nmage_raw &lt;- tribble(\n  ~`연령`, ~비율,\n  \"10대후반\", \"0.1%\",\n  \"20_24\", \"1.7%\",\n  \"25_29\", \"4.2%\",\n  \"30_34\", \"5.3%\",\n  \"35_39\", \"6.3%\",\n  \"40_44\", \"9.8%\",\n  \"45_49\", \"12.2%\",\n  \"50_54\", \"15.8%\",\n  \"55_59\", \"13.8%\",\n  \"60_64\", \"12.8%\",\n  \"65_69\", \"8.1%\",\n  \"70+\", \"10.0%\"\n)\n\nmage_tbl &lt;- mage_raw |&gt; \n  mutate(비율 = parse_number(비율)/100) |&gt; \n  mutate(당원수 = 비율 * 2454332)\n\nmage_tbl |&gt; \n  gt::gt() |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  fmt_integer(columns = 당원수) |&gt; \n  cols_align(\"center\") |&gt; \n  ## 표 전체 합계 -------------- -----------------------\n  grand_summary_rows(\n    columns = 당원수,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt; \n  gt_theme_538()"
  },
  {
    "objectID": "minju_party.html#행안부-인구통계",
    "href": "minju_party.html#행안부-인구통계",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드age_raw &lt;- readxl::read_excel(\"data/혁신안_202307_202307_연령별_월간.xlsx\", skip = 3)\n\nmale_tbl&lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"남_인구수\", \"연령구간인구수_4\", \n          \"x0_4세_5\", \"x5_9세_6\", \"x10_14세_7\", \"x15_19세_8\", \"x20_24세_9\", \n          \"x25_29세_10\", \"x30_34세_11\", \"x35_39세_12\", \"x40_44세_13\", \n          \"x45_49세_14\", \"x50_54세_15\", \"x55_59세_16\", \"x60_64세_17\", \n          \"x65_69세_18\", \"x70_74세_19\", \"x75_79세_20\", \"x80_84세_21\", \n          \"x85_89세_22\", \"x90_94세_23\", \"x95_99세_24\", \"x100세_이상_25\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"남\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n  \n\nfemale_tbl &lt;- age_raw |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(c(\"행정기관코드\", \"행정기관\", \"여_인구수\", \"연령구간인구수_27\", \n           \"x0_4세_28\", \"x5_9세_29\", \"x10_14세_30\", \"x15_19세_31\", \n           \"x20_24세_32\", \"x25_29세_33\", \"x30_34세_34\", \"x35_39세_35\", \n           \"x40_44세_36\", \"x45_49세_37\", \"x50_54세_38\", \"x55_59세_39\", \n           \"x60_64세_40\", \"x65_69세_41\", \"x70_74세_42\", \"x75_79세_43\", \n           \"x80_84세_44\", \"x85_89세_45\", \"x90_94세_46\", \"x95_99세_47\", \"x100세_이상_48\")) |&gt; \n  pivot_longer(starts_with(\"x\"), names_to = \"연령\", values_to = \"인구수\") |&gt; \n  mutate(성별 = \"여\") |&gt; \n  select(행정기관, 성별, 연령, 인구수)\n\nage_tbl &lt;- bind_rows(male_tbl, female_tbl) |&gt; \n  filter(!str_detect(행정기관, \"전국\")) |&gt; \n  mutate(연령 = str_extract(연령, '(\\\\d{1,2}_\\\\d{1,2})'))  |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\") ~ \"-19\",\n                            연령 %in% c(\"70_74\", \"75_79\", \"80_84\", \"85_89\", \"90_94\", \"95_99\") ~ \"70+\",\n                              is.na(연령) ~ \"70+\",\n                              TRUE ~ 연령)) |&gt; \n  mutate(인구수 = parse_number(인구수))\n\nage_tbl |&gt;\n  write_rds(\"data/혁신안_2023년_연령인구수.rds\")"
  },
  {
    "objectID": "minju_party.html#연령비교",
    "href": "minju_party.html#연령비교",
    "title": "지도제작 대회",
    "section": "\n2.1 연령비교",
    "text": "2.1 연령비교\n\n코드mage_temp &lt;- mage_tbl |&gt; \n  filter(연령 != \"10대후반\")\n\nage_temp &lt;- age_tbl |&gt; \n  filter(!str_detect(연령, \"(0_4)|(5_9)|(10_14)|(15_19)\")) |&gt;   \n  group_by(연령) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(인구비율 = 인구수 / sum(인구수))\n\nfull_join(mage_temp, age_temp)\n#&gt; # A tibble: 16 × 5\n#&gt;    연령    비율  당원수  인구수 인구비율\n#&gt;    &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n#&gt;  1 20_24  0.017  41724. 2850804  0.0727 \n#&gt;  2 25_29  0.042 103082. 3433431  0.0876 \n#&gt;  3 30_34  0.053 130080. 3376137  0.0862 \n#&gt;  4 35_39  0.063 154623. 3211899  0.0820 \n#&gt;  5 40_44  0.098 240525.      NA NA      \n#&gt;  6 45_49  0.122 299429. 3938571  0.101  \n#&gt;  7 50_54  0.158 387784. 4535734  0.116  \n#&gt;  8 55_59  0.138 338698. 4095565  0.105  \n#&gt;  9 60_64  0.128 314154. 4280225  0.109  \n#&gt; 10 65_69  0.081 198801. 3291406  0.0840 \n#&gt; 11 70+    0.1   245433.      NA NA      \n#&gt; 12 70_74 NA         NA  2245004  0.0573 \n#&gt; 13 75_79 NA         NA  1662571  0.0424 \n#&gt; 14 80_84 NA         NA  1326976  0.0339 \n#&gt; 15 85_89 NA         NA   698771  0.0178 \n#&gt; 16 90_94 NA         NA   239883  0.00612\n\nage_tbl |&gt; \n  filter(str_detect(연령, \"40\"))\n#&gt; # A tibble: 34 × 5\n#&gt;    행정기관       성별  연령  인구수 연령대\n#&gt;    &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt; \n#&gt;  1 서울특별시     남    40_44 364892 -19   \n#&gt;  2 부산광역시     남    40_44 127280 -19   \n#&gt;  3 대구광역시     남    40_44  88337 -19   \n#&gt;  4 인천광역시     남    40_44 127532 -19   \n#&gt;  5 광주광역시     남    40_44  57462 -19   \n#&gt;  6 대전광역시     남    40_44  55650 -19   \n#&gt;  7 울산광역시     남    40_44  47693 -19   \n#&gt;  8 세종특별자치시 남    40_44  20453 -19   \n#&gt;  9 경기도         남    40_44 594508 -19   \n#&gt; 10 강원특별자치도 남    40_44  52391 -19   \n#&gt; # ℹ 24 more rows"
  },
  {
    "objectID": "minju_party.html#유권자와-민주당",
    "href": "minju_party.html#유권자와-민주당",
    "title": "지도제작 대회",
    "section": "\n2.1 유권자와 민주당",
    "text": "2.1 유권자와 민주당\n\n코드library(gt)\nlibrary(gtExtras)\n\nmage_temp &lt;- mage_tbl |&gt; \n  filter(연령 != \"10대후반\")\n\nage_temp &lt;- age_tbl |&gt; \n  filter(연령대 != \"-19\") |&gt;   \n  group_by(연령대) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(인구비율 = 인구수 / sum(인구수))\n\npop_party_raw &lt;- full_join(mage_temp, age_temp, by = c(\"연령\" = \"연령대\"))\n\n\npop_party_tbl &lt;- pop_party_raw |&gt; \n  rename(연령대 = 연령,\n         당원비율 = 비율) |&gt; \n  mutate(차이 = 당원비율 - 인구비율) |&gt; \n  select(연령대, 당원수, 당원비율, 차이, 유권자비율=인구비율, 유권자수=인구수)\n  \nvoter_party_gt &lt;- pop_party_tbl |&gt; \n  gt::gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_header(\n    title = md(\"연령대별 민주당원과 유권자 비교\"),\n    subtitle = md(\"\")\n  ) |&gt;   \n  cols_align(\"center\") |&gt; \n  fmt_percent(columns = c(당원비율, 유권자비율, 차이), decimals = 1) |&gt; \n  fmt_integer(columns = c(당원수, 유권자수)) |&gt; \n  tab_spanner(label = \"민주당원\",\n              id = \"party\",\n              columns = c(당원수, 당원비율)) |&gt; \n  tab_spanner(label = \"유권자\",\n              id = \"voter\",              \n              columns = c(유권자비율, 유권자수)) |&gt; \n  ## 차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &lt; 0,\n      columns = 차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 차이 &gt; 0,\n      columns = 차이\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 더불어민주당혁신위 혁신안 설명자료\",\n    location = cells_column_spanners(spanners = \"party\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 행안부 주민등록 인구 및 세대현황\",\n    location = cells_column_spanners(spanners = \"voter\")\n  )  \n\nvoter_party_gt\n  \n# voter_party_gt |&gt; \n#   gtsave(filename = c(\"data/혁신안_민주당_유권자.png\"))"
  },
  {
    "objectID": "minju_party.html#한국갤럽",
    "href": "minju_party.html#한국갤럽",
    "title": "지도제작 대회",
    "section": "\n3.1 한국갤럽",
    "text": "3.1 한국갤럽\n한국갤럽에서 2022년 3월 10일 실시한 “제20대 대통령선거 사후 조사” 조사에서 연령별 지지율은 다은 다음과 같다.\n\n\n\n\n\n\n\n\n\n\n\n연령별\n사례수\n이재명\n윤석열\n심상정\n기타 인물\n모름/응답거절\n\n\n\n18~29세\n171\n40%\n37%\n4%\n3%\n17%\n\n\n30대\n151\n47%\n33%\n2%\n2%\n15%\n\n\n40대\n186\n57%\n26%\n3%\n\n14%\n\n\n50대\n199\n49%\n43%\n1%\n1%\n5%\n\n\n60대\n163\n28%\n59%\n1%\n3%\n10%\n\n\n70대 이상\n133\n23%\n61%\n\n\n14%\n\n\n\n\n코드gallop_raw &lt;- read.csv(text=\"\n연령별, 사례수,이재명,윤석열,심상정,기타인물,모름/응답거절\n18~29세,171,40%,37%,4%,3%,17%\n30대,151,47%,33%,2%,2%,15%\n40대,186,57%,26%,3%,,14%\n50대,199,49%,43%,1%,1%,5%\n60대,163,28%,59%,1%,3%,10%\n70대 이상,133,23%,61%,,14%\n\", header=T, stringsAsFactors=F)\n\ngallop_tbl &lt;- gallop_raw |&gt; \n  as_tibble() |&gt; \n  janitor::clean_names(ascii = FALSE)  |&gt; \n  select(연령대=연령별, 이재명, 윤석열, 심상정, 기타인물, 모름_응답거절) |&gt; \n  pivot_longer(-연령대, names_to = \"후보\", values_to = \"지지율\") |&gt; \n  mutate(정당 = case_when(후보 == \"이재명\" ~ \"민주당\",\n                          후보 == \"윤석열\" ~ \"국민의힘\",\n                          TRUE ~ \"기타/무응답\")) |&gt; \n  mutate(지지율 = parse_number(지지율) / 100) |&gt; \n  group_by(연령대, 정당) |&gt; \n  summarise(지지율 = sum(지지율, na.rm = TRUE)) |&gt; \n  ungroup() |&gt; \n  mutate(연령대 = case_when(연령대 == \"18~29세\" ~ \"20대-\",\n                            연령대 == \"70대 이상\" ~\"70대+\",\n                            TRUE ~ 연령대)) |&gt; \n  pivot_wider(names_from = 정당, values_from = 지지율) |&gt; \n  mutate(차이 = 민주당 - 국민의힘)\n\ngallop_tbl"
  },
  {
    "objectID": "minju_party.html#민주당-혁신안",
    "href": "minju_party.html#민주당-혁신안",
    "title": "지도제작 대회",
    "section": "\n3.2 민주당 혁신안",
    "text": "3.2 민주당 혁신안\n\n코드mage_gallop_tbl &lt;- mage_tbl |&gt; \n  mutate(연령대 = case_when(연령 %in% c(\"10대후반\", \"20_24\", \"25_29\")~ \"20대-\",\n                            연령 %in% c(\"30_34\", \"35_39\")~ \"30대\",\n                            연령 %in% c(\"40_44\", \"45_49\")~ \"40대\",\n                            연령 %in% c(\"50_54\", \"55_59\")~ \"50대\",\n                            연령 %in% c(\"60_64\", \"65_69\")~ \"60대\",\n                            TRUE ~ \"70대+\")) |&gt; \n  group_by(연령대) |&gt; \n  summarise(당원비율 = sum(비율),\n            당원수   = sum(당원수))\n\nmage_gallop_tbl"
  },
  {
    "objectID": "minju_party.html#행안위-유권자",
    "href": "minju_party.html#행안위-유권자",
    "title": "지도제작 대회",
    "section": "\n3.3 행안위 유권자",
    "text": "3.3 행안위 유권자\n\n코드age_tbl &lt;- \n  read_rds(\"data/혁신안_2023년_연령인구수.rds\")\n\nadm_gallop_tbl &lt;- age_tbl |&gt; \n  filter(!연령 %in% c(\"0_4\", \"5_9\", \"10_14\", \"15_19\")) |&gt; \n  mutate(연령대 = case_when(연령대 %in% c(\"20_24\", \"25_29\") ~ \"20대-\",\n                            연령대 %in% c(\"30_34\", \"35_39\") ~ \"30대\",\n                         연령대 %in% c(\"40_44\", \"45_49\") ~ \"40대\",\n                         연령대 %in% c(\"50_54\", \"55_59\") ~ \"50대\",\n                         연령대 %in% c(\"60_64\", \"65_69\") ~ \"60대\",\n                         TRUE ~ \"70대+\")) |&gt; \n  group_by(연령대) |&gt; \n  summarise(유권자수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 유권자수 / sum(유권자수))\n\nadm_gallop_tbl"
  },
  {
    "objectID": "minju_party.html#결합",
    "href": "minju_party.html#결합",
    "title": "지도제작 대회",
    "section": "\n3.4 결합",
    "text": "3.4 결합\n\n코드merge_tbl &lt;- adm_gallop_tbl |&gt; \n  left_join(mage_gallop_tbl) |&gt; \n  left_join(gallop_tbl)\n\npresident_age_gt &lt;- merge_tbl |&gt; \n  rename(득표차이 = 차이) |&gt; \n  mutate(구성차이 = 당원비율 - 유권자비율) |&gt;\n  relocate(구성차이, .before = 득표차이) |&gt; \n  relocate(민주당, .before = `기타/무응답`) |&gt; \n  relocate(국민의힘, .after = `기타/무응답`)  |&gt; \n  gt() |&gt; \n  gt_theme_538() |&gt; \n  tab_options(\n    footnotes.font.size = px(10L)\n  ) |&gt; \n  tab_header(\n    title = md(\"연령대별 유권자, 민주당원, 대선 득표 비교\"),\n  ) |&gt;   \n  cols_align(\"center\") |&gt; \n  fmt_percent(columns = c(당원비율, 유권자비율, 구성차이, 득표차이,\n                          국민의힘, `기타/무응답`, 민주당), decimals = 0) |&gt; \n  fmt_integer(columns = c(당원수, 유권자수)) |&gt; \n  ## 스패너 ---------------------  \n  tab_spanner(label = \"민주당원\",\n              id = \"party\",\n              columns = c(당원수, 당원비율)) |&gt; \n  tab_spanner(label = \"유권자\",\n              id = \"voter\",              \n              columns = c(유권자비율, 유권자수)) |&gt; \n  tab_spanner(label = \"당원과 유권자 구성비\",\n              id = \"prop\",\n              columns = c(당원수, 당원비율, 유권자수, 유권자비율, 구성차이)) |&gt; \n  tab_spanner(label = \"대통령선거\",\n              id = \"election\",              \n              columns = c(득표차이, 민주당, `기타/무응답`, 국민의힘)) |&gt; \n  ## 차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 구성차이 &lt; 0,\n      columns = 구성차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 구성차이 &gt; 0,\n      columns = 구성차이\n    )\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 더불어민주당혁신위 혁신안 설명자료\",\n    location = cells_column_spanners(spanners = \"party\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 행안부 주민등록 인구 및 세대현황\",\n    location = cells_column_spanners(spanners = \"voter\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"자료출처: 한국갤럽 제20대 대통령선거 사후 조사\",\n    location = cells_column_spanners(spanners = \"election\") \n  )  |&gt; \n  ## 득표차이 색상표식 ---------------------\n  tab_style(\n    style = cell_text(color = \"red\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 득표차이 &lt; 0,\n      columns = 득표차이\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", size = px(15L), weight = \"bold\"),\n    locations = cells_body(\n      rows  = 득표차이 &gt; 0,\n      columns = 득표차이\n    )\n  ) \n  \npresident_age_gt |&gt; \n  gtsave(\"data/연령대별_구성비_대선.png\")"
  },
  {
    "objectID": "by_election.html",
    "href": "by_election.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npresident_tbl &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(이재명:김민찬, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"이재명\") ~ \"민주당\",\n                          str_detect(name, \"윤석열\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_대선\")\n\npresident_tbl\n\n\n\n\n\n코드local_sido_tbl &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(선거구명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(더불어민주당_송영길:무소속_김광종, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"송영길\") ~ \"민주당\",\n                          str_detect(name, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_시도지사\")  \n\nlocal_sido_tbl\n\n\n\n\n코드local_sgg_tbl &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n    mutate(비율 = 득표/ sum(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"김승현\") ~ \"민주당\",\n                          str_detect(후보, \"김태우\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_구청장\")  \n\nlocal_sgg_tbl\n\n\n\n\n코드general_tbl &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"서울\",\n         선거구 %in% c(\"강서구갑\", \"강서구을\", \"강서구병\")) |&gt; \n  unnest(data) |&gt; \n  group_by(구분) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  filter(!is.na(후보)) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  mutate(비율 = 득표 / sum(득표)) |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2020_국회의원\")  \n  \ngeneral_tbl  \n\n\n\n\n코드by_election_tbl &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\") |&gt; \n  filter(후보 != \"후보_계\") |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표수)) |&gt; \n    mutate(비율 = 득표/ sum(득표))  |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"박영선\") ~ \"민주당\",\n                          str_detect(후보, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2021_보궐선거\")\n\nby_election_tbl\n\n\n\n\n코드vote_tbl &lt;- bind_rows(by_election_tbl, general_tbl, local_sgg_tbl, local_sido_tbl, president_tbl)"
  },
  {
    "objectID": "by_election.html#대통령-선거",
    "href": "by_election.html#대통령-선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npresident_tbl &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(이재명:김민찬, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"이재명\") ~ \"민주당\",\n                          str_detect(name, \"윤석열\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_대선\")\n\npresident_tbl"
  },
  {
    "objectID": "by_election.html#지방선거",
    "href": "by_election.html#지방선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드local_sido_tbl &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(선거구명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  summarise(across(더불어민주당_송영길:무소속_김광종, sum)) |&gt; \n  pivot_longer(cols = everything()) |&gt; \n  mutate(비율 = value/ sum(value)) |&gt; \n  mutate(정당 = case_when(str_detect(name, \"송영길\") ~ \"민주당\",\n                          str_detect(name, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_시도지사\")  \n\nlocal_sido_tbl\n\n\n\n\n코드local_sgg_tbl &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n    mutate(비율 = 득표/ sum(득표)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"김승현\") ~ \"민주당\",\n                          str_detect(후보, \"김태우\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2022_지선_구청장\")  \n\nlocal_sgg_tbl"
  },
  {
    "objectID": "by_election.html#국회의원",
    "href": "by_election.html#국회의원",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드general_tbl &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"서울\",\n         선거구 %in% c(\"강서구갑\", \"강서구을\", \"강서구병\")) |&gt; \n  unnest(data) |&gt; \n  group_by(구분) |&gt; \n  summarise(득표 = sum(사람수)) |&gt; \n  separate(구분, into = c(\"정당\", \"후보\"), sep = \" \") |&gt; \n  filter(!is.na(후보)) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  mutate(비율 = 득표 / sum(득표)) |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(정당, \"민주당\") ~ \"민주당\",\n                          str_detect(정당, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2020_국회의원\")  \n  \ngeneral_tbl"
  },
  {
    "objectID": "by_election.html#보궐선거",
    "href": "by_election.html#보궐선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드by_election_tbl &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\") |&gt; \n  filter(후보 != \"후보_계\") |&gt; \n  group_by(후보) |&gt; \n  summarise(득표 = sum(득표수)) |&gt; \n    mutate(비율 = 득표/ sum(득표))  |&gt; \n  arrange(desc(비율)) |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"박영선\") ~ \"민주당\",\n                          str_detect(후보, \"오세훈\") ~ \"국민의힘\",\n                          TRUE ~ \"그외/기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(지지율 = sum(비율)) |&gt; \n  mutate(선거 = \"2021_보궐선거\")\n\nby_election_tbl"
  },
  {
    "objectID": "by_election.html#데이터-병합",
    "href": "by_election.html#데이터-병합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드vote_tbl &lt;- bind_rows(by_election_tbl, general_tbl, local_sgg_tbl, local_sido_tbl, president_tbl)"
  },
  {
    "objectID": "by_election_dong.html",
    "href": "by_election_dong.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nroll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode=1100\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n\nroll_raw &lt;- read_html(roll_url) |&gt; \n  html_table(header = TRUE) %&gt;%\n  .[[1]]\n\nroll_tbl &lt;- roll_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt;\n  mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n  separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n  separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n  mutate(across(득표수:득표율, parse_number)) |&gt; \n  select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n\nroll_tbl\n\n\n\n\n코드get_electors &lt;- function(sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 부산광역시\nget_electors(\"2600\")\n\n\n\n\n코드\nsido_cd &lt;- tribble(~\"시도코드\", ~\"시도명\",\n                    \"1100\", \"서울특별시\", \n                    \"2600\", \"부산광역시\",\n                    \"2700\", \"대구광역시\", \n                    \"2800\", \"인천광역시\",\n                    \"2900\", \"광주광역시\", \n                    \"3000\", \"대전광역시\",\n                    \"3100\", \"울산광역시\", \n                    \"5100\", \"세종특별자치시\",\n                    \"4100\", \"경기도\", \n                    \"4200\", \"강원도\",\n                    \"4300\", \"충청북도\", \n                    \"4400\", \"충청남도\",\n                    \"4500\", \"전라북도\", \n                    \"4600\", \"전라남도\",\n                    \"4700\", \"경상북도\", \n                    \"4800\", \"경상남도\",\n                    \"4900\", \"제주특별자치도\") \n\nelectors_raw &lt;- sido_cd |&gt; \n  mutate(data = map(시도코드, get_electors))\n\n\n\n코드electors_raw |&gt; \n  write_rds(\"data/제21대_국회의원_당선자.rds\")"
  },
  {
    "objectID": "sido_legislator.html",
    "href": "sido_legislator.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\n## 2020년 제21대 ----------------------------------\nelection_21_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\"\n\nsido_21_2020 &lt;- read_html(election_21_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_21_2020_tbl &lt;- sido_21_2020 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2020_21대\")\n\n\n## 2016년 제20대 ----------------------------------\nelection_20_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제20대_국회의원_선거\"\n\nsido_20_2016 &lt;- read_html(election_20_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_20_2016_tbl &lt;- sido_20_2016 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2016_20대\")\n\n## 2012년 제19대 ----------------------------------\nelection_19_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제19대_국회의원_선거\"\n\nsido_19_2012 &lt;- read_html(election_19_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[13]]\n\nsido_19_2012_tbl &lt;- sido_19_2012 |&gt; \n  set_names(c(\"지역\", \"새누리\", \"민주통합\", \"통합진보\", \"자유선진\", \n\"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2012_19대\")\n\n## 2008년 제18대 ----------------------------------\nelection_18_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제18대_국회의원_선거\"\n\nsido_18_2008 &lt;- read_html(election_18_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_18_2008_tbl &lt;- sido_18_2008 |&gt; \n  set_names(c(\"지역\", \"민주\", \"한나라\", \"자유선진\", \"민노\", \"창조한국\", \n\"친박연대\", \"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2008_18대\")\n\n## 2004년 제17대 ----------------------------------\nelection_17_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제17대_국회의원_선거\"\n\nsido_17_2004 &lt;- read_html(election_17_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[9]]\n\nsido_17_2004_tbl &lt;- sido_17_2004 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2004_17대\")\n\n## 2000년 제16대 ----------------------------------\nelection_16_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제16대_국회의원_선거\"\n\nsido_16_2000 &lt;- read_html(election_16_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_16_2000_tbl &lt;- sido_16_2000 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2000_16대\")\n\n## 1996년 제15대 ----------------------------------\nelection_15_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제15대_국회의원_선거\"\n\nsido_15_1996 &lt;- read_html(election_15_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_15_1996_tbl &lt;- sido_15_1996 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(지역:무소속) |&gt; \n  filter(!str_detect(지역, \"^\\\\d|^지역|^자료|^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1996_15대\")\n\n## 1992년 제14대 ----------------------------------\nelection_14_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제14대_국회의원_선거\"\n\nsido_14_1992 &lt;- read_html(election_14_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_14_1992_tbl &lt;- sido_14_1992 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1992_14대\")\n\n## 1988년 제13대 ----------------------------------\nelection_13_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제13대_국회의원_선거\"\n\nsido_13_1988 &lt;- read_html(election_13_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[7]]\n\nsido_13_1988_tbl &lt;- sido_13_1988 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1988_13대\")\n\n## 역대선거 결합 ----------------------------------\n\nsido_raw &lt;- map_df(mget(ls(pattern = \"*_tbl\")), rbind)\n\nsido_tbl &lt;- sido_raw |&gt; \n  separate(선거, into = c(\"연도\", \"선수\"), sep = \"_\") \n\nsido_tbl |&gt; \n  write_csv(\"data/역대_시도_정당별_의석수.csv\")\n\n\n\n\n코드party_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국의_역대_정당\"\n\nparty_list &lt;- read_html(party_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nparty_list[[6]] |&gt; \n  janitor::clean_names() |&gt; \n  filter(str_detect(x1, \"\\\\d{4}\")) |&gt; \n  select(정부=x1, 여당=x4, 야당1=x6, 야당2=x8, 야당3=x10, 야당4=x12) |&gt; \n  mutate(야당 = str_glue(\"{야당1}, {야당2}, {야당3}, {야당4}\")) |&gt; \n  select(정부, 여당, 야당)  |&gt; \n  mutate(야당 = str_remove_all(야당, \"NA,|NA\") |&gt; str_trim() |&gt; str_remove(pattern=\",$\")) |&gt; \n  gt::gt()"
  },
  {
    "objectID": "sido_legislator.html#시도-정당",
    "href": "sido_legislator.html#시도-정당",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\n## 2020년 제21대 ----------------------------------\nelection_21_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\"\n\nsido_21_2020 &lt;- read_html(election_21_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_21_2020_tbl &lt;- sido_21_2020 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2020_21대\")\n\n\n## 2016년 제20대 ----------------------------------\nelection_20_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제20대_국회의원_선거\"\n\nsido_20_2016 &lt;- read_html(election_20_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[15]]\n\nsido_20_2016_tbl &lt;- sido_20_2016 |&gt; \n  filter(지역 != \"전국\") |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2016_20대\")\n\n## 2012년 제19대 ----------------------------------\nelection_19_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제19대_국회의원_선거\"\n\nsido_19_2012 &lt;- read_html(election_19_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[13]]\n\nsido_19_2012_tbl &lt;- sido_19_2012 |&gt; \n  set_names(c(\"지역\", \"새누리\", \"민주통합\", \"통합진보\", \"자유선진\", \n\"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2012_19대\")\n\n## 2008년 제18대 ----------------------------------\nelection_18_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제18대_국회의원_선거\"\n\nsido_18_2008 &lt;- read_html(election_18_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_18_2008_tbl &lt;- sido_18_2008 |&gt; \n  set_names(c(\"지역\", \"민주\", \"한나라\", \"자유선진\", \"민노\", \"창조한국\", \n\"친박연대\", \"무소속\", \"합　계\")) |&gt; \n  select(-`합　계`) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2008_18대\")\n\n## 2004년 제17대 ----------------------------------\nelection_17_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제17대_국회의원_선거\"\n\nsido_17_2004 &lt;- read_html(election_17_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[9]]\n\nsido_17_2004_tbl &lt;- sido_17_2004 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2004_17대\")\n\n## 2000년 제16대 ----------------------------------\nelection_16_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제16대_국회의원_선거\"\n\nsido_16_2000 &lt;- read_html(election_16_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_16_2000_tbl &lt;- sido_16_2000 |&gt; \n  select(-합계) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"2000_16대\")\n\n## 1996년 제15대 ----------------------------------\nelection_15_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제15대_국회의원_선거\"\n\nsido_15_1996 &lt;- read_html(election_15_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[12]]\n\nsido_15_1996_tbl &lt;- sido_15_1996 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(지역:무소속) |&gt; \n  filter(!str_detect(지역, \"^\\\\d|^지역|^자료|^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1996_15대\")\n\n## 1992년 제14대 ----------------------------------\nelection_14_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제14대_국회의원_선거\"\n\nsido_14_1992 &lt;- read_html(election_14_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[8]]\n\nsido_14_1992_tbl &lt;- sido_14_1992 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1992_14대\")\n\n## 1988년 제13대 ----------------------------------\nelection_13_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국_제13대_국회의원_선거\"\n\nsido_13_1988 &lt;- read_html(election_13_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;%\n  .[[7]]\n\nsido_13_1988_tbl &lt;- sido_13_1988 |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(-합계) |&gt; \n  filter(!str_detect(지역, \"^합계\")) |&gt; \n  pivot_longer(-지역, names_to = \"정당\", values_to = \"의석수\") |&gt; \n  mutate(의석수 = parse_number(의석수)) |&gt; \n  mutate(의석수 = ifelse(is.na(의석수), 0, 의석수)) |&gt; \n  mutate(선거 = \"1988_13대\")\n\n## 역대선거 결합 ----------------------------------\n\nsido_raw &lt;- map_df(mget(ls(pattern = \"*_tbl\")), rbind)\n\nsido_tbl &lt;- sido_raw |&gt; \n  separate(선거, into = c(\"연도\", \"선수\"), sep = \"_\") \n\nsido_tbl |&gt; \n  write_csv(\"data/역대_시도_정당별_의석수.csv\")"
  },
  {
    "objectID": "sido_legislator.html#정당",
    "href": "sido_legislator.html#정당",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드party_url &lt;- \"https://ko.wikipedia.org/wiki/대한민국의_역대_정당\"\n\nparty_list &lt;- read_html(party_url) |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nparty_list[[6]] |&gt; \n  janitor::clean_names() |&gt; \n  filter(str_detect(x1, \"\\\\d{4}\")) |&gt; \n  select(정부=x1, 여당=x4, 야당1=x6, 야당2=x8, 야당3=x10, 야당4=x12) |&gt; \n  mutate(야당 = str_glue(\"{야당1}, {야당2}, {야당3}, {야당4}\")) |&gt; \n  select(정부, 여당, 야당)  |&gt; \n  mutate(야당 = str_remove_all(야당, \"NA,|NA\") |&gt; str_trim() |&gt; str_remove(pattern=\",$\")) |&gt; \n  gt::gt()"
  },
  {
    "objectID": "spatial_basics.html",
    "href": "spatial_basics.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털에서 한국전력공사 전기차 충전소 설치현황 엑셀 데이터를 다운로드 받는다. 이를 위해서 전력데이터 개방 포털시스템 전기차 충전소 설치 현황에서 전국을 선택하고 엑셀파일을 다운로드 한다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\ncharger_raw &lt;- read_excel(\"data/전기차 충전소 설치현황_20230822.xlsx\", skip = 2)\n\ncharger_raw\n#&gt; # A tibble: 4,692 × 6\n#&gt;    시구  설치장소             주소    `급속충전기(대)` `완속충전기(대)` 지원차종\n#&gt;    &lt;chr&gt; &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;            &lt;chr&gt;            &lt;chr&gt;   \n#&gt;  1 전체  가평소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  2 전체  가평종합운동장       경기도… 2                0                BMW i3,…\n#&gt;  3 전체  가평지사             경기도… 1                1                SM3 Z.E…\n#&gt;  4 전체  가평하수도사업소     경기도… 1                0                SM3 Z.E…\n#&gt;  5 전체  상면사무소           경기도… 1                0                SM3 Z.E…\n#&gt;  6 전체  설악면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  7 전체  조종면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  8 전체  조종소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  9 전체  청평소방서           경기도… 1                0                SM3 Z.E…\n#&gt; 10 전체  청평호반문화체육센터 경기도… 1                0                SM3 Z.E…\n#&gt; # ℹ 4,682 more rows\n\n\n\nvuski/admdongkor 최신 행정동 데이터를 가져온다.\n\n코드library(sf)\nsf_use_s2(FALSE)\n\nkorea_map &lt;- read_sf(\"data/HangJeongDong_ver20230401.geojson\")\n\nsido_map &lt;- korea_map |&gt; \n  group_by(sido, sidonm) |&gt; \n  summarise(geometry = sf::st_union(geometry))\n\nst_geometry(sido_map) |&gt; plot()"
  },
  {
    "objectID": "spatial_basics.html#충전소-데이터",
    "href": "spatial_basics.html#충전소-데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털에서 한국전력공사 전기차 충전소 설치현황 엑셀 데이터를 다운로드 받는다. 이를 위해서 전력데이터 개방 포털시스템 전기차 충전소 설치 현황에서 전국을 선택하고 엑셀파일을 다운로드 한다.\n\n코드library(readxl)\nlibrary(tidyverse)\n\ncharger_raw &lt;- read_excel(\"data/전기차 충전소 설치현황_20230822.xlsx\", skip = 2)\n\ncharger_raw\n#&gt; # A tibble: 4,692 × 6\n#&gt;    시구  설치장소             주소    `급속충전기(대)` `완속충전기(대)` 지원차종\n#&gt;    &lt;chr&gt; &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;            &lt;chr&gt;            &lt;chr&gt;   \n#&gt;  1 전체  가평소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  2 전체  가평종합운동장       경기도… 2                0                BMW i3,…\n#&gt;  3 전체  가평지사             경기도… 1                1                SM3 Z.E…\n#&gt;  4 전체  가평하수도사업소     경기도… 1                0                SM3 Z.E…\n#&gt;  5 전체  상면사무소           경기도… 1                0                SM3 Z.E…\n#&gt;  6 전체  설악면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  7 전체  조종면사무소         경기도… 1                0                SM3 Z.E…\n#&gt;  8 전체  조종소방서           경기도… 1                0                SM3 Z.E…\n#&gt;  9 전체  청평소방서           경기도… 1                0                SM3 Z.E…\n#&gt; 10 전체  청평호반문화체육센터 경기도… 1                0                SM3 Z.E…\n#&gt; # ℹ 4,682 more rows"
  },
  {
    "objectID": "spatial_basics.html#지도데이터",
    "href": "spatial_basics.html#지도데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "vuski/admdongkor 최신 행정동 데이터를 가져온다.\n\n코드library(sf)\nsf_use_s2(FALSE)\n\nkorea_map &lt;- read_sf(\"data/HangJeongDong_ver20230401.geojson\")\n\nsido_map &lt;- korea_map |&gt; \n  group_by(sido, sidonm) |&gt; \n  summarise(geometry = sf::st_union(geometry))\n\nst_geometry(sido_map) |&gt; plot()"
  },
  {
    "objectID": "spatial_basics.html#api-설정",
    "href": "spatial_basics.html#api-설정",
    "title": "지도제작 대회",
    "section": "\n2.1 API 설정",
    "text": "2.1 API 설정\n주소를 지도에 올릴 수 있도록 위경도 변환한다. 구글 공간정보서비스가 위세를 떨치는 기간에 다음 지도 API가 진화를 하여 kakaomap Maps API로 사용법과 사용량 등 개발자 관점에서 나름 쓸만한 형태로 개선되었다.\nC:\\Program Files\\R\\R-3.5.2\\etc 디렉토리 Rprofile.site 파일에 카카오 개발자센터 앱개발에 사용할 API 키를 KAKAO_MAP_API_KEY 변수에 저장시킨다. 재미있는 것은 Authorization에서 \"KakaoAK \"를 꼭 앞에 붙여야함으로 paste0() 함수로 결합시켜 전달한다. 혹은 usethis 팩키지를 사용해서 edit_r_environ() 명령어를 사용해서 .Renviron 파일에 KAKAO_MAP_API_KEY값을 설정하여 사용하는 것도 좋다.\n카카오 개발자센터 로컬 → REST API 문서에 지오코딩하는 자세한 사항이 나와있다. 한가지 사례로 삼정KPMG주소를 지도위에 표시하는 것을 목표로 먼저 삼정KPMG 주소를 던져서 위도경도를 받아내는 헬로월드 코드를 작성해본다.\n\n코드library(httr)\nlibrary(tidyverse)\nlibrary(jsonlite)\n\n# usethis::edit_r_environ()\n\n# 요청 URL 및 파라미터 설정\nbase_url &lt;- \"https://dapi.kakao.com/v2/local/search/address.json\"\nparams &lt;- list(query = '서울특별시 강남구 역삼동 737' ) # 삼정KPMG 주소\n\n# GET 요청 실행\nresponse &lt;- GET(base_url, \n                add_headers(Authorization = paste(\"KakaoAK\", Sys.getenv(\"KAKAO_MAP_API_KEY\"))),\n                query = params)\n\n# 응답 확인\nprint(content(response, \"text\"))\n#&gt; [1] \"{\\\"documents\\\":[{\\\"address\\\":{\\\"address_name\\\":\\\"서울 강남구 역삼동 737\\\",\\\"b_code\\\":\\\"1168010100\\\",\\\"h_code\\\":\\\"1168064000\\\",\\\"main_address_no\\\":\\\"737\\\",\\\"mountain_yn\\\":\\\"N\\\",\\\"region_1depth_name\\\":\\\"서울\\\",\\\"region_2depth_name\\\":\\\"강남구\\\",\\\"region_3depth_h_name\\\":\\\"역삼1동\\\",\\\"region_3depth_name\\\":\\\"역삼동\\\",\\\"sub_address_no\\\":\\\"\\\",\\\"x\\\":\\\"127.036628730251\\\",\\\"y\\\":\\\"37.4998101243238\\\"},\\\"address_name\\\":\\\"서울 강남구 역삼동 737\\\",\\\"address_type\\\":\\\"REGION_ADDR\\\",\\\"road_address\\\":{\\\"address_name\\\":\\\"서울 강남구 테헤란로 152\\\",\\\"building_name\\\":\\\"강남파이낸스센터\\\",\\\"main_building_no\\\":\\\"152\\\",\\\"region_1depth_name\\\":\\\"서울\\\",\\\"region_2depth_name\\\":\\\"강남구\\\",\\\"region_3depth_name\\\":\\\"역삼동\\\",\\\"road_name\\\":\\\"테헤란로\\\",\\\"sub_building_no\\\":\\\"\\\",\\\"underground_yn\\\":\\\"N\\\",\\\"x\\\":\\\"127.036508620542\\\",\\\"y\\\":\\\"37.5000242405515\\\",\\\"zone_no\\\":\\\"06236\\\"},\\\"x\\\":\\\"127.036628730251\\\",\\\"y\\\":\\\"37.4998101243238\\\"}],\\\"meta\\\":{\\\"is_end\\\":true,\\\"pageable_count\\\":1,\\\"total_count\\\":1}}\"\n\n# KPMG 지리정보 데이터프레임\nkpmg_list &lt;- response %&gt;% \n  content(as = 'text') %&gt;% \n  fromJSON()\n\n## 도로명주소\nkpmg_list$documents$road_address %&gt;% \n  select(address_name, building_name, x,y)\n#&gt;               address_name    building_name                x                y\n#&gt; 1 서울 강남구 테헤란로 152 강남파이낸스센터 127.036508620542 37.5000242405515\n\n## 지명주소\nkpmg_list$documents$address %&gt;% \n  select(address_name, x,y)\n#&gt;             address_name                x                y\n#&gt; 1 서울 강남구 역삼동 737 127.036628730251 37.4998101243238"
  },
  {
    "objectID": "spatial_basics.html#함수-제작",
    "href": "spatial_basics.html#함수-제작",
    "title": "지도제작 대회",
    "section": "\n2.2 함수 제작",
    "text": "2.2 함수 제작\n\n코드\nget_lnglat &lt;- function(address = '서울특별시 강남구 역삼동 737') {\n  \n  base_url &lt;- \"https://dapi.kakao.com/v2/local/search/address.json\"\n  params &lt;- list(query = address ) # 삼정KPMG 주소\n  \n  # GET 요청 실행\n  response &lt;- GET(base_url, \n                  add_headers(Authorization = paste(\"KakaoAK\", Sys.getenv(\"KAKAO_MAP_API_KEY\"))),\n                  query = params)\n  \n\n  # KPMG 지리정보 데이터프레임\n  json_list &lt;- response %&gt;% \n    content(as = 'text') %&gt;% \n    fromJSON()\n  \n\n  ## 위경도 주소\n  return(json_list$documents$address %&gt;% select(x,y) %&gt;% unlist)\n}\n\nget_lnglat(\"경기도 가평군 가평읍 대곡리 213-5\")\n#&gt;                  x                  y \n#&gt; \"127.516690566855\" \"37.8236644879834\""
  },
  {
    "objectID": "spatial_basics.html#충전소-지오코딩",
    "href": "spatial_basics.html#충전소-지오코딩",
    "title": "지도제작 대회",
    "section": "\n2.3 충전소 지오코딩",
    "text": "2.3 충전소 지오코딩\nget_lnglat() 함수는 모든 것이 예정된 방식으로 동작하는 것을 가정한다. 따라서, 가정 중 하나라도 충족하지 않는 경우 오류가 나서 반복 작업이 중단된다.\n\n코드charger_tbl &lt;- charger_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  mutate(data = map(주소, get_lnglat))\n\n\nError in `mutate()`:\nℹ In argument: `data = map(주소, get_lnglat)`.\nCaused by error in `map()`:\nℹ In index: 248.\nCaused by error in `UseMethod()`:\n! no applicable method for 'select' applied to an object of class \"NULL\"\n이를 보완하기 위해 safely(), possibly() 등 부사를 사용해서 가능한 많은 주소를 지오코딩한다.\n\n코드safely_get_lnglat &lt;- safely(get_lnglat, otherwise = \"error\")\n\ncharger_tbl &lt;- charger_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  mutate(data = map(주소, safely_get_lnglat))\n\n# 데이터프레임 출력\n# charger_tbl |&gt; \n#   write_rds(\"data/charger_tbl_raw.rds\")\n\n# 리스트 출력\n# charger_tbl |&gt;\n#   write_rds(\"data/charger_tbl_raw_list.rds\")\n\ncharger_tbl &lt;- \n  read_rds(\"data/charger_tbl_raw_list.rds\")\n\ncharger_lnglat &lt;- charger_tbl |&gt; \n  mutate(result = map(data, \"result\")) |&gt; \n  filter(result != \"error\") |&gt; \n  \n  ## 위경도 변환 --------------------\n  select(-시구, -data) |&gt; \n  mutate(lng = map_chr(result, 1),\n         lat  = map_chr(result, 2)) |&gt; \n  select(-result)\n\ncharger_lnglat |&gt; \n  write_rds(\"data/charger_lnglat.rds\")\n\n\n\n코드charger_lnglat &lt;- \n  read_rds(\"data/charger_lnglat.rds\")\n\ncharger_lnglat\n#&gt; # A tibble: 4,546 × 7\n#&gt;    설치장소             주소    급속충전기_대 완속충전기_대 지원차종 lng   lat  \n#&gt;    &lt;chr&gt;                &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;\n#&gt;  1 가평소방서           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  2 가평종합운동장       경기도… 2             0             BMW i3,… 127.… 37.8…\n#&gt;  3 가평지사             경기도… 1             1             SM3 Z.E… 127.… 37.8…\n#&gt;  4 가평하수도사업소     경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  5 상면사무소           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  6 설악면사무소         경기도… 1             0             SM3 Z.E… 127.… 37.6…\n#&gt;  7 조종면사무소         경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  8 조종소방서           경기도… 1             0             SM3 Z.E… 127.… 37.8…\n#&gt;  9 청평소방서           경기도… 1             0             SM3 Z.E… 127.… 37.7…\n#&gt; 10 청평호반문화체육센터 경기도… 1             0             SM3 Z.E… 127.… 37.7…\n#&gt; # ℹ 4,536 more rows"
  },
  {
    "objectID": "spatial_basics.html#시도-지도",
    "href": "spatial_basics.html#시도-지도",
    "title": "지도제작 대회",
    "section": "\n3.1 시도 지도",
    "text": "3.1 시도 지도\n\n코드sido_map |&gt; \n  ggplot() +\n    geom_sf(aes(geometry = geometry)) +\n    geom_sf_text(aes(label = sidonm), size = 3, color = \"blue\") +\n    theme_void()"
  },
  {
    "objectID": "spatial_basics.html#충전소-위치",
    "href": "spatial_basics.html#충전소-위치",
    "title": "지도제작 대회",
    "section": "\n3.2 충전소 위치",
    "text": "3.2 충전소 위치\n\n코드charger_sf &lt;- charger_lnglat |&gt; \n  mutate(across(lng:lat, as.numeric)) |&gt; \n  filter(lat &lt; 50) |&gt; ## 충전소 위경도 오류 ㅠㅠ\n  st_as_sf(coords = c(\"lng\", \"lat\"),\n           crs = st_crs(sido_map)) \n\ncharger_sf |&gt; \n  ggplot() +\n    geom_sf(aes(geometry = geometry)) +\n    theme_void()"
  },
  {
    "objectID": "spatial_basics.html#위치-결합",
    "href": "spatial_basics.html#위치-결합",
    "title": "지도제작 대회",
    "section": "\n3.3 위치 결합",
    "text": "3.3 위치 결합\n\n코드ggplot() +\n  geom_sf(data = sido_map, aes(geometry = geometry), fill = \"transparent\", color = \"blue\") +\n  geom_sf(data = charger_sf, aes(geometry = geometry), color = \"black\", size = 0.1)"
  },
  {
    "objectID": "spatial_basics.html#인터랙티브",
    "href": "spatial_basics.html#인터랙티브",
    "title": "지도제작 대회",
    "section": "\n3.4 인터랙티브",
    "text": "3.4 인터랙티브\n\n코드library(leaflet)\n\nleaflet(data = charger_lnglat |&gt; \n          mutate(across(lng:lat, as.numeric)) |&gt; \n          filter(lat &lt; 50)\n        ) %&gt;% \n  addProviderTiles(providers$OpenStreetMap) %&gt;% \n  ## 충전소 상세정보\n  addMarkers(lng=~lng, lat=~lat, \n             clusterOptions = markerClusterOptions(),\n             popup = ~ as.character(paste0(\"&lt;strong&gt;\", 설치장소, \"&lt;/strong&gt;&lt;br&gt;\",\n                                   \"----------------------------------&lt;br&gt;\",\n                                   \"&middot; 주소: \", `주소`, \"&lt;br&gt;\",\n                                   \"&middot; 급속: \", `급속충전기_대`, \"&lt;br&gt;\",\n                                   \"&middot; 완속: \", `완속충전기_대`, \"&lt;br&gt;\",\n                                   \"&middot; 지원차종: \", 지원차종, \"&lt;br&gt;\"))\n             ) |&gt; \n  ## 시도 경계 추가\n  addPolygons(data = sido_map,\n              opacity = 1.0, fillOpacity = 0.1,\n              weight = 1,\n              highlightOptions = highlightOptions(color = \"black\", weight = 3,  bringToFront = TRUE),\n              labelOptions = labelOptions(\n              style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n              textsize = \"15px\",\n              direction = \"auto\"))"
  },
  {
    "objectID": "by_election_dong.html#아파트가격",
    "href": "by_election_dong.html#아파트가격",
    "title": "지도제작 대회",
    "section": "\n2.1 아파트가격",
    "text": "2.1 아파트가격\n\n코드library(tidyverse)\nlibrary(readxl)\n\napt_raw &lt;- read_csv(\"data/apt_seoul_1708_2307.csv\")\n\njscode_raw &lt;- read_excel(\"data/jsocde20230611/KIKmix.20230611.xlsx\")\n\napt_tbl &lt;- apt_raw |&gt; \n  filter(구 == \"강서구\") |&gt; \n  mutate(계약년월 = lubridate::ym(계약년월)) |&gt; \n  mutate(연월 = floor_date(계약년월, \"month\")) |&gt;\n  left_join(jscode_raw |&gt; select(시군구명, 읍면동명, 동리명), by = c(\"동\" = \"동리명\"))  |&gt; \n  group_by(연월, 읍면동명) |&gt; \n  summarise(평당가격 = mean(평당가격)) |&gt; \n  filter(연월 == ym(\"2022-06\"))\n\n\n\n코드votes_apt_gg &lt;- votes_tbl |&gt; \n  mutate(차이 = -1 * 차이) |&gt; \n  left_join(apt_tbl |&gt; select(-연월)) |&gt; \n  ggplot(aes(x = 평당가격, y = 차이, color = label_color )) +\n    geom_point() +\n    geom_text_repel(aes(label = 읍면동명)) +\n    theme_korean() +\n    theme(legend.position = \"none\") +\n    scale_color_manual(values = c(party_palette[1], party_palette[2])) +\n    labs(title = \"강서구 아파트값과 지선 강서구청장 민주당과 국민의힘 득표수 차이\",\n         subtitle = \"득표차이: 국민의힘 - 민주당, 2022년 6월 기준\",\n         x = \"아파트 평당 가격\",\n         y = \"득표차이\") +\n     scale_y_continuous(labels = scales::comma, limits = c(-1500, 2000)) +\n     scale_x_continuous(labels = scales::comma)  +\n     geom_hline(yintercept = 0, linetype = 2, color = \"gray30\")\n\nvotes_apt_gg\n\nragg::agg_jpeg(\"images/강서구청장_지선_아파트가격.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nvotes_apt_gg\ndev.off()"
  },
  {
    "objectID": "by_election_dong.html#함수",
    "href": "by_election_dong.html#함수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드get_electors &lt;- function(sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName=20200415\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 부산광역시\nget_electors(\"2600\")"
  },
  {
    "objectID": "by_election_dong.html#시도별-당선자",
    "href": "by_election_dong.html#시도별-당선자",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nsido_cd &lt;- tribble(~\"시도코드\", ~\"시도명\",\n                    \"1100\", \"서울특별시\", \n                    \"2600\", \"부산광역시\",\n                    \"2700\", \"대구광역시\", \n                    \"2800\", \"인천광역시\",\n                    \"2900\", \"광주광역시\", \n                    \"3000\", \"대전광역시\",\n                    \"3100\", \"울산광역시\", \n                    \"5100\", \"세종특별자치시\",\n                    \"4100\", \"경기도\", \n                    \"4200\", \"강원도\",\n                    \"4300\", \"충청북도\", \n                    \"4400\", \"충청남도\",\n                    \"4500\", \"전라북도\", \n                    \"4600\", \"전라남도\",\n                    \"4700\", \"경상북도\", \n                    \"4800\", \"경상남도\",\n                    \"4900\", \"제주특별자치도\") \n\nelectors_raw &lt;- sido_cd |&gt; \n  mutate(data = map(시도코드, get_electors))\n\n\n\n코드electors_raw |&gt; \n  write_rds(\"data/제21대_국회의원_당선자.rds\")"
  },
  {
    "objectID": "by_election_dong.html#제19대-국회의원",
    "href": "by_election_dong.html#제19대-국회의원",
    "title": "지도제작 대회",
    "section": "\n3.1 제19대 국회의원",
    "text": "3.1 제19대 국회의원\n\n코드get_electors_by_election &lt;- function(election_id = \"20120411\", sido_cd = \"1100\") {\n  \n  roll_url &lt;- glue::glue(\"http://info.nec.go.kr/electioninfo/electionInfo_report.xhtml?\",\n                       \"electionId=0000000000\",\n                       \"&requestURI=%2Felectioninfo%2F0000000000%2Fep%2Fepei01.jsp&topMenuId=EP\", \n                       \"&secondMenuId=EPEI01\",\n                       \"&menuId=EPEI01\",\n                       \"&statementId=EPEI01_%231\",\n                       \"&oldElectionType=1\",\n                       \"&electionType=2\",\n                       \"&electionName={election_id}\", \n                       \"&electionCode=2\",\n                       \"&cityCode={sido_cd}\",\n                       \"&proportionalRepresentationCode=-1\",\n                       \"&townCode=-1\",\n                       \"&x=57\",\n                       \"&y=21\")\n  \n  roll_raw &lt;- read_html(roll_url) |&gt; \n    html_table(header = TRUE) %&gt;%\n    .[[1]]\n  \n  roll_tbl &lt;- roll_raw |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt;\n    mutate(나이 = str_extract(생년월일_연령, \"\\\\((\\\\d+)세\\\\)\") |&gt; parse_number()) |&gt; \n    separate(득표수_득표율, into = c(\"득표수\", \"득표율\"), sep = \"\\\\(\") |&gt;\n    separate(성명_한자, into = c(\"성명\", \"한자명\"), sep = \"\\\\(\") |&gt; \n    mutate(across(득표수:득표율, parse_number)) |&gt; \n    select(선거구명, 정당명, 성명, 성별, 나이, 득표수, 득표율)\n  \n  roll_tbl\n}\n\n## 제20대, 부산광역시\nget_electors_by_election(\"20160413\", \"2600\")"
  },
  {
    "objectID": "by_election_dong.html#전체-선거-당선자",
    "href": "by_election_dong.html#전체-선거-당선자",
    "title": "지도제작 대회",
    "section": "\n3.2 전체 선거, 당선자",
    "text": "3.2 전체 선거, 당선자\n\n코드election_cd &lt;- tribble(~\"선거코드\", ~\"선거\",\n                       \"20200415\", \"제21대\",\n                       \"20160413\", \"제20대\",\n                       \"20120411\", \"제19대\",\n                       \"20080409\", \"제18대\",\n                       \"20040415\", \"제17대\",\n                       \"20000413\", \"제16대\",\n                       \"19960411\", \"제15대\",\n                       \"19920324\", \"제14대\",\n                       \"19880426\", \"제13대\",\n                       \"19850212\", \"제12대\",\n                       \"19810325\", \"제11대\",\n                       \"19781212\", \"제10대\",\n                       \"19730227\", \"제9대\",\n                       \"19710525\", \"제8대\",\n                       \"19670608\", \"제7대\",\n                       \"19631126\", \"제6대\",\n                       \"19600729\", \"제5대\",\n                       \"19580502\", \"제4대\",\n                       \"19540520\", \"제3대\",\n                       \"19500530\", \"제2대\",\n                       \"19480510\", \"제1대\")\n\nelection_tbl &lt;- election_cd |&gt; \n  mutate(시도 = list(sido_cd)) |&gt; \n  unnest(시도) |&gt; \n  filter(선거 %in% c(\"제19대\", \"제20대\", \"제21대\")) |&gt; \n  mutate(data = map2(선거코드, 시도코드, get_electors_by_election))\n\n\n\n코드election_tbl |&gt; \n  write_rds(\"data/국회의원_19_21_당선자.rds\")"
  },
  {
    "objectID": "movie.html",
    "href": "movie.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "가장 많은 영화제작비가 투입된 영화 10개를 웹 스크레핑으로 가져와서 정제작업을 한다. 와차 대한민국 영화 순제작비 순위를 참조하여 정리한 펨코 역대 한국 영화 순제작비 순위에서 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmovie_url &lt;- \"https://www.fmkorea.com/best/5832255555\"\n\nmovie_html &lt;- read_html(movie_url)\n\nmovie_list &lt;- movie_html |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table() \n\nmovie_list |&gt; \n  enframe() |&gt;\n  mutate(text = map(value, unlist)) |&gt; \n  mutate(text = map_chr(text, paste, collapse = \"\\n\"))  |&gt; \n  pull(text) |&gt; \n  tail(100)\n  write.table(\"clipboard\", row.names = FALSE,   sep = \",\")\n\n\n\n코드# tibble 패키지를 불러온다\nlibrary(tidyverse)\n\n# 데이터프레임을 생성한다\ntop_movie_raw &lt;- tribble(\n  ~순위, ~영화명, ~개봉년도, ~순제작비, ~총제작비, ~배급사,\n  \"1위\", \"설국열차\", 2013, \"437억원\", \"530억원(해외 포함)\", \"CJ 엔터테인먼트\",\n  \"2위\", \"외계+인 1부\", 2022, \"330억원\", NA, \"CJ 엔터테인먼트\",\n  \"3위\", \"디 워\", 2007, \"315억원\", \"700억원(해외 포함)\", \"쇼박스\",\n  \"4위\", \"더 문\", 2023, \"286억원\", NA, \"CJ 엔터테인먼트\",\n  \"5위\", \"마이웨이\", 2011, \"280억원\", \"350억원\", \"CJ 엔터테인먼트\",\n  \"6위\", \"한산: 용의 출현\", 2022, \"272억원\", \"312억원\", \"롯데 엔터테인먼트\",\n  \"7위\", \"백두산\", 2019, \"260억원\", \"300억원\", \"CJ 엔터테인먼트\",\n  \"8위\", \"비상선언\", 2022, \"260억원\", \"300억원\", \"쇼박스\",\n  \"9위\", \"미스터 고\", 2013, \"225억원\", \"300억원\", \"쇼박스\",\n  \"10위\", \"군함도\", 2017, \"225억원\", \"267억원\", \"CJ 엔터테인먼트\"\n)\n\ntop_movie_raw\n#&gt; # A tibble: 10 × 6\n#&gt;    순위  영화명          개봉년도 순제작비 총제작비           배급사           \n#&gt;    &lt;chr&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;              &lt;chr&gt;            \n#&gt;  1 1위   설국열차            2013 437억원  530억원(해외 포함) CJ 엔터테인먼트  \n#&gt;  2 2위   외계+인 1부         2022 330억원  &lt;NA&gt;               CJ 엔터테인먼트  \n#&gt;  3 3위   디 워               2007 315억원  700억원(해외 포함) 쇼박스           \n#&gt;  4 4위   더 문               2023 286억원  &lt;NA&gt;               CJ 엔터테인먼트  \n#&gt;  5 5위   마이웨이            2011 280억원  350억원            CJ 엔터테인먼트  \n#&gt;  6 6위   한산: 용의 출현     2022 272억원  312억원            롯데 엔터테인먼트\n#&gt;  7 7위   백두산              2019 260억원  300억원            CJ 엔터테인먼트  \n#&gt;  8 8위   비상선언            2022 260억원  300억원            쇼박스           \n#&gt;  9 9위   미스터 고           2013 225억원  300억원            쇼박스           \n#&gt; 10 10위  군함도              2017 225억원  267억원            CJ 엔터테인먼트\n\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(httr)\n\n\nkofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm={URLencode('군함도')}\")\n\nmovie_resp &lt;- httr::GET(kofic_req)\n\n# convert list to dataframe\nmovie_json &lt;- content(movie_resp, \"text\", encoding = \"UTF-8\")\n\nmovie_raw &lt;- jsonlite::fromJSON(movie_json) |&gt; \n  as.data.frame()\n\nmovie_columns &lt;- str_extract(names(movie_raw), \"[^.]*$\")\n\nmovie_tbl &lt;- movie_raw |&gt; \n  set_names(movie_columns)\n\nmovie_tbl\n#&gt;   totCnt         source  movieCd       movieNm\n#&gt; 1      2 영화진흥위원회 20177063 군함도 감독판\n#&gt; 2      2 영화진흥위원회 20161481        군함도\n#&gt;                               movieNmEn prdtYear   openDt typeNm prdtStatNm\n#&gt; 1 The Battleship Island: Director's Cut     2017            장편       기타\n#&gt; 2                 The Battleship Island     2017 20170726   장편       개봉\n#&gt;   nationAlt    genreAlt repNationNm repGenreNm directors\n#&gt; 1      한국 액션,드라마        한국       액션    류승완\n#&gt; 2      한국 액션,드라마        한국       액션    류승완\n#&gt;                                         companys\n#&gt; 1                         20100374, (주)외유내강\n#&gt; 2 20100374, 20186561, (주)외유내강, (주)필름케이\n\n\n\n\n코드\nget_movie_info &lt;- function(movie_name = \"군함도\") {\n  \n  cat(\"영화정보를 가져옵니다.\", movie_name, \"\\n\")\n  \n  kofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm={URLencode(movie_name)}\")\n\n  movie_resp &lt;- httr::GET(kofic_req)\n  \n  # convert list to dataframe\n  movie_json &lt;- content(movie_resp, \"text\", encoding = \"UTF-8\")\n  \n  movie_raw &lt;- jsonlite::fromJSON(movie_json) |&gt; \n    as.data.frame()\n  \n  movie_columns &lt;- str_extract(names(movie_raw), \"[^.]*$\")\n  \n  movie_tbl &lt;- movie_raw |&gt; \n    set_names(movie_columns)\n  \n  return(movie_tbl)\n}\n\nget_movie_info(\"디 워\")\n#&gt; 영화정보를 가져옵니다. 디 워\n#&gt;    totCnt         source  movieCd\n#&gt; 1      13 영화진흥위원회 20227226\n#&gt; 2      13 영화진흥위원회 20227292\n#&gt; 3      13 영화진흥위원회 20224237\n#&gt; 4      13 영화진흥위원회 20070316\n#&gt; 5      13 영화진흥위원회 19998877\n#&gt; 6      13 영화진흥위원회 20080782\n#&gt; 7      13 영화진흥위원회 20136396\n#&gt; 8      13 영화진흥위원회 20136395\n#&gt; 9      13 영화진흥위원회 19968423\n#&gt; 10     13 영화진흥위원회 20070403\n#&gt;                                                 movieNm\n#&gt; 1                     9월 프레임 워크: 마리 멘켄 단편선\n#&gt; 2                                             앤디 워홀\n#&gt; 3                                   부카니마: 앤디 워홀\n#&gt; 4                                                  디워\n#&gt; 5                                      도망자: 바디워크\n#&gt; 6                                             앤디 워홀\n#&gt; 7                                           디워-드래곤\n#&gt; 8                                    디워 : 익룡의 공습\n#&gt; 9                                나는 앤디워홀을 쏘았다\n#&gt; 10 시네마정동-판타스틱4:실버서퍼의 위협,라따뚜이, 디워 \n#&gt;                          movieNmEn prdtYear   openDt   typeNm prdtStatNm\n#&gt; 1                                      2022          옴니버스       기타\n#&gt; 2                      Andy Warhol     1965              단편       기타\n#&gt; 3           Bookanima: Andy Warhol     2020              단편       기타\n#&gt; 4                            D-War     2007 20070801     장편       개봉\n#&gt; 5                         Bodywork     1999              장편       기타\n#&gt; 6  Andy Warhol: A Documentary Film     2006              장편       기타\n#&gt; 7                  Dragon Dynasty      2006              장편       기타\n#&gt; 8                         Warbirds     2008              장편       기타\n#&gt; 9               I Shot Andy Warhol     1996                         기타\n#&gt; 10               Package Screening          20070808     장편           \n#&gt;    nationAlt        genreAlt repNationNm repGenreNm          directors\n#&gt; 1       미국            기타        미국       기타               NULL\n#&gt; 2       미국            기타        미국       기타               NULL\n#&gt; 3  한국,미국      애니메이션        한국 애니메이션               NULL\n#&gt; 4       한국     액션,판타지        한국       액션             심형래\n#&gt; 5       영국            범죄        영국       범죄 가레스 라이스 존스\n#&gt; 6       미국      다큐멘터리        미국 다큐멘터리            릭 번스\n#&gt; 7       미국 어드벤처,판타지        미국   어드벤처          매트 코드\n#&gt; 8       미국  SF,스릴러,전쟁        미국         SF        케빈 겐드류\n#&gt; 9                                                                 NULL\n#&gt; 10      기타            기타        기타       기타               NULL\n#&gt;                companys\n#&gt; 1                  NULL\n#&gt; 2                  NULL\n#&gt; 3                  NULL\n#&gt; 4  20100170, ㈜영구아트\n#&gt; 5                  NULL\n#&gt; 6                  NULL\n#&gt; 7                  NULL\n#&gt; 8                  NULL\n#&gt; 9                  NULL\n#&gt; 10                 NULL\n\n\n\n\n코드top_movie_raw &lt;- top_movie_raw |&gt; \n  mutate(data = map(영화명, get_movie_info)) \n#&gt; 영화정보를 가져옵니다. 설국열차 \n#&gt; 영화정보를 가져옵니다. 외계+인 1부 \n#&gt; 영화정보를 가져옵니다. 디 워 \n#&gt; 영화정보를 가져옵니다. 더 문 \n#&gt; 영화정보를 가져옵니다. 마이웨이 \n#&gt; 영화정보를 가져옵니다. 한산: 용의 출현 \n#&gt; 영화정보를 가져옵니다. 백두산 \n#&gt; 영화정보를 가져옵니다. 비상선언 \n#&gt; 영화정보를 가져옵니다. 미스터 고 \n#&gt; 영화정보를 가져옵니다. 군함도\n\ntop_movie_tbl &lt;- top_movie_raw |&gt; \n  unnest(data)  |&gt; \n  mutate(movieNm = if_else(movieNm == \"디워\", \"디 워\", movieNm)) |&gt;\n  filter(영화명 == movieNm) \n\ntop_movie_tbl |&gt; \n  select(movieCd, 순위, 영화명, 개봉년도, 순제작비, 배급사, prdtYear, openDt)\n#&gt; # A tibble: 11 × 8\n#&gt;    movieCd  순위  영화명          개봉년도 순제작비 배급사       prdtYear openDt\n#&gt;    &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt; \n#&gt;  1 20126674 1위   설국열차            2013 437억원  CJ 엔터테인… 2013     20130…\n#&gt;  2 20208446 2위   외계+인 1부         2022 330억원  CJ 엔터테인… 2022     20220…\n#&gt;  3 20070316 3위   디 워               2007 315억원  쇼박스       2007     20070…\n#&gt;  4 20218935 4위   더 문               2023 286억원  CJ 엔터테인… 2023     20230…\n#&gt;  5 20090810 4위   더 문               2023 286억원  CJ 엔터테인… 2009     20091…\n#&gt;  6 19790083 5위   마이웨이            2011 280억원  CJ 엔터테인… 1975     19750…\n#&gt;  7 20209343 6위   한산: 용의 출현     2022 272억원  롯데 엔터테… 2021     20220…\n#&gt;  8 20192206 7위   백두산              2019 260억원  CJ 엔터테인… 2019     20191…\n#&gt;  9 20196410 8위   비상선언            2022 260억원  쇼박스       2022     20220…\n#&gt; 10 20124082 9위   미스터 고           2013 225억원  쇼박스       2013     20130…\n#&gt; 11 20161481 10위  군함도              2017 225억원  CJ 엔터테인… 2017     20170…"
  },
  {
    "objectID": "movie.html#크롤링",
    "href": "movie.html#크롤링",
    "title": "지도제작 대회",
    "section": "",
    "text": "가장 많은 영화제작비가 투입된 영화 10개를 웹 스크레핑으로 가져와서 정제작업을 한다. 와차 대한민국 영화 순제작비 순위를 참조하여 정리한 펨코 역대 한국 영화 순제작비 순위에서 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmovie_url &lt;- \"https://www.fmkorea.com/best/5832255555\"\n\nmovie_html &lt;- read_html(movie_url)\n\nmovie_list &lt;- movie_html |&gt; \n  html_nodes(\"table\") |&gt; \n  html_table() \n\nmovie_list |&gt; \n  enframe() |&gt;\n  mutate(text = map(value, unlist)) |&gt; \n  mutate(text = map_chr(text, paste, collapse = \"\\n\"))  |&gt; \n  pull(text) |&gt; \n  tail(100)\n  write.table(\"clipboard\", row.names = FALSE,   sep = \",\")\n\n\n\n코드# tibble 패키지를 불러온다\nlibrary(tidyverse)\n\n# 데이터프레임을 생성한다\ntop_movie_raw &lt;- tribble(\n  ~순위, ~영화명, ~개봉년도, ~순제작비, ~총제작비, ~배급사,\n  \"1위\", \"설국열차\", 2013, \"437억원\", \"530억원(해외 포함)\", \"CJ 엔터테인먼트\",\n  \"2위\", \"외계+인 1부\", 2022, \"330억원\", NA, \"CJ 엔터테인먼트\",\n  \"3위\", \"디 워\", 2007, \"315억원\", \"700억원(해외 포함)\", \"쇼박스\",\n  \"4위\", \"더 문\", 2023, \"286억원\", NA, \"CJ 엔터테인먼트\",\n  \"5위\", \"마이웨이\", 2011, \"280억원\", \"350억원\", \"CJ 엔터테인먼트\",\n  \"6위\", \"한산: 용의 출현\", 2022, \"272억원\", \"312억원\", \"롯데 엔터테인먼트\",\n  \"7위\", \"백두산\", 2019, \"260억원\", \"300억원\", \"CJ 엔터테인먼트\",\n  \"8위\", \"비상선언\", 2022, \"260억원\", \"300억원\", \"쇼박스\",\n  \"9위\", \"미스터 고\", 2013, \"225억원\", \"300억원\", \"쇼박스\",\n  \"10위\", \"군함도\", 2017, \"225억원\", \"267억원\", \"CJ 엔터테인먼트\"\n)\n\ntop_movie_raw\n#&gt; # A tibble: 10 × 6\n#&gt;    순위  영화명          개봉년도 순제작비 총제작비           배급사           \n#&gt;    &lt;chr&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;              &lt;chr&gt;            \n#&gt;  1 1위   설국열차            2013 437억원  530억원(해외 포함) CJ 엔터테인먼트  \n#&gt;  2 2위   외계+인 1부         2022 330억원  &lt;NA&gt;               CJ 엔터테인먼트  \n#&gt;  3 3위   디 워               2007 315억원  700억원(해외 포함) 쇼박스           \n#&gt;  4 4위   더 문               2023 286억원  &lt;NA&gt;               CJ 엔터테인먼트  \n#&gt;  5 5위   마이웨이            2011 280억원  350억원            CJ 엔터테인먼트  \n#&gt;  6 6위   한산: 용의 출현     2022 272억원  312억원            롯데 엔터테인먼트\n#&gt;  7 7위   백두산              2019 260억원  300억원            CJ 엔터테인먼트  \n#&gt;  8 8위   비상선언            2022 260억원  300억원            쇼박스           \n#&gt;  9 9위   미스터 고           2013 225억원  300억원            쇼박스           \n#&gt; 10 10위  군함도              2017 225억원  267억원            CJ 엔터테인먼트"
  },
  {
    "objectID": "movie.html#매출정보",
    "href": "movie.html#매출정보",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(rvest)\nlibrary(httr)\n\n\nkofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm=%EA%B8%B0%EC%83%9D%EC%B6%A9\")\n\nkofic_resp &lt;- httr::GET(kofic_req)\n\n# convert list to dataframe\nkofic_list &lt;- content(kofic_resp)\n  \nkofic_list$boxOfficeResult$dailyBoxOfficeList |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, bind_rows)) |&gt; \n  unnest(data) |&gt; \n  View()"
  },
  {
    "objectID": "movie.html#영화정보",
    "href": "movie.html#영화정보",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\nlibrary(httr)\n\n\nkofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm={URLencode('군함도')}\")\n\nmovie_resp &lt;- httr::GET(kofic_req)\n\n# convert list to dataframe\nmovie_json &lt;- content(movie_resp, \"text\", encoding = \"UTF-8\")\n\nmovie_raw &lt;- jsonlite::fromJSON(movie_json) |&gt; \n  as.data.frame()\n\nmovie_columns &lt;- str_extract(names(movie_raw), \"[^.]*$\")\n\nmovie_tbl &lt;- movie_raw |&gt; \n  set_names(movie_columns)\n\nmovie_tbl\n#&gt;   totCnt         source  movieCd       movieNm\n#&gt; 1      2 영화진흥위원회 20177063 군함도 감독판\n#&gt; 2      2 영화진흥위원회 20161481        군함도\n#&gt;                               movieNmEn prdtYear   openDt typeNm prdtStatNm\n#&gt; 1 The Battleship Island: Director's Cut     2017            장편       기타\n#&gt; 2                 The Battleship Island     2017 20170726   장편       개봉\n#&gt;   nationAlt    genreAlt repNationNm repGenreNm directors\n#&gt; 1      한국 액션,드라마        한국       액션    류승완\n#&gt; 2      한국 액션,드라마        한국       액션    류승완\n#&gt;                                         companys\n#&gt; 1                         20100374, (주)외유내강\n#&gt; 2 20100374, 20186561, (주)외유내강, (주)필름케이\n\n\n\n\n코드\nget_movie_info &lt;- function(movie_name = \"군함도\") {\n  \n  cat(\"영화정보를 가져옵니다.\", movie_name, \"\\n\")\n  \n  kofic_req &lt;- glue::glue(\"http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json\",\n           \"?key={Sys.getenv('KOFIC_API_KEY')}\",\n           \"&movieNm={URLencode(movie_name)}\")\n\n  movie_resp &lt;- httr::GET(kofic_req)\n  \n  # convert list to dataframe\n  movie_json &lt;- content(movie_resp, \"text\", encoding = \"UTF-8\")\n  \n  movie_raw &lt;- jsonlite::fromJSON(movie_json) |&gt; \n    as.data.frame()\n  \n  movie_columns &lt;- str_extract(names(movie_raw), \"[^.]*$\")\n  \n  movie_tbl &lt;- movie_raw |&gt; \n    set_names(movie_columns)\n  \n  return(movie_tbl)\n}\n\nget_movie_info(\"디 워\")\n#&gt; 영화정보를 가져옵니다. 디 워\n#&gt;    totCnt         source  movieCd\n#&gt; 1      13 영화진흥위원회 20227226\n#&gt; 2      13 영화진흥위원회 20227292\n#&gt; 3      13 영화진흥위원회 20224237\n#&gt; 4      13 영화진흥위원회 20070316\n#&gt; 5      13 영화진흥위원회 19998877\n#&gt; 6      13 영화진흥위원회 20080782\n#&gt; 7      13 영화진흥위원회 20136396\n#&gt; 8      13 영화진흥위원회 20136395\n#&gt; 9      13 영화진흥위원회 19968423\n#&gt; 10     13 영화진흥위원회 20070403\n#&gt;                                                 movieNm\n#&gt; 1                     9월 프레임 워크: 마리 멘켄 단편선\n#&gt; 2                                             앤디 워홀\n#&gt; 3                                   부카니마: 앤디 워홀\n#&gt; 4                                                  디워\n#&gt; 5                                      도망자: 바디워크\n#&gt; 6                                             앤디 워홀\n#&gt; 7                                           디워-드래곤\n#&gt; 8                                    디워 : 익룡의 공습\n#&gt; 9                                나는 앤디워홀을 쏘았다\n#&gt; 10 시네마정동-판타스틱4:실버서퍼의 위협,라따뚜이, 디워 \n#&gt;                          movieNmEn prdtYear   openDt   typeNm prdtStatNm\n#&gt; 1                                      2022          옴니버스       기타\n#&gt; 2                      Andy Warhol     1965              단편       기타\n#&gt; 3           Bookanima: Andy Warhol     2020              단편       기타\n#&gt; 4                            D-War     2007 20070801     장편       개봉\n#&gt; 5                         Bodywork     1999              장편       기타\n#&gt; 6  Andy Warhol: A Documentary Film     2006              장편       기타\n#&gt; 7                  Dragon Dynasty      2006              장편       기타\n#&gt; 8                         Warbirds     2008              장편       기타\n#&gt; 9               I Shot Andy Warhol     1996                         기타\n#&gt; 10               Package Screening          20070808     장편           \n#&gt;    nationAlt        genreAlt repNationNm repGenreNm          directors\n#&gt; 1       미국            기타        미국       기타               NULL\n#&gt; 2       미국            기타        미국       기타               NULL\n#&gt; 3  한국,미국      애니메이션        한국 애니메이션               NULL\n#&gt; 4       한국     액션,판타지        한국       액션             심형래\n#&gt; 5       영국            범죄        영국       범죄 가레스 라이스 존스\n#&gt; 6       미국      다큐멘터리        미국 다큐멘터리            릭 번스\n#&gt; 7       미국 어드벤처,판타지        미국   어드벤처          매트 코드\n#&gt; 8       미국  SF,스릴러,전쟁        미국         SF        케빈 겐드류\n#&gt; 9                                                                 NULL\n#&gt; 10      기타            기타        기타       기타               NULL\n#&gt;                companys\n#&gt; 1                  NULL\n#&gt; 2                  NULL\n#&gt; 3                  NULL\n#&gt; 4  20100170, ㈜영구아트\n#&gt; 5                  NULL\n#&gt; 6                  NULL\n#&gt; 7                  NULL\n#&gt; 8                  NULL\n#&gt; 9                  NULL\n#&gt; 10                 NULL\n\n\n\n\n코드top_movie_raw &lt;- top_movie_raw |&gt; \n  mutate(data = map(영화명, get_movie_info)) \n#&gt; 영화정보를 가져옵니다. 설국열차 \n#&gt; 영화정보를 가져옵니다. 외계+인 1부 \n#&gt; 영화정보를 가져옵니다. 디 워 \n#&gt; 영화정보를 가져옵니다. 더 문 \n#&gt; 영화정보를 가져옵니다. 마이웨이 \n#&gt; 영화정보를 가져옵니다. 한산: 용의 출현 \n#&gt; 영화정보를 가져옵니다. 백두산 \n#&gt; 영화정보를 가져옵니다. 비상선언 \n#&gt; 영화정보를 가져옵니다. 미스터 고 \n#&gt; 영화정보를 가져옵니다. 군함도\n\ntop_movie_tbl &lt;- top_movie_raw |&gt; \n  unnest(data)  |&gt; \n  mutate(movieNm = if_else(movieNm == \"디워\", \"디 워\", movieNm)) |&gt;\n  filter(영화명 == movieNm) \n\ntop_movie_tbl |&gt; \n  select(movieCd, 순위, 영화명, 개봉년도, 순제작비, 배급사, prdtYear, openDt)\n#&gt; # A tibble: 11 × 8\n#&gt;    movieCd  순위  영화명          개봉년도 순제작비 배급사       prdtYear openDt\n#&gt;    &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt; \n#&gt;  1 20126674 1위   설국열차            2013 437억원  CJ 엔터테인… 2013     20130…\n#&gt;  2 20208446 2위   외계+인 1부         2022 330억원  CJ 엔터테인… 2022     20220…\n#&gt;  3 20070316 3위   디 워               2007 315억원  쇼박스       2007     20070…\n#&gt;  4 20218935 4위   더 문               2023 286억원  CJ 엔터테인… 2023     20230…\n#&gt;  5 20090810 4위   더 문               2023 286억원  CJ 엔터테인… 2009     20091…\n#&gt;  6 19790083 5위   마이웨이            2011 280억원  CJ 엔터테인… 1975     19750…\n#&gt;  7 20209343 6위   한산: 용의 출현     2022 272억원  롯데 엔터테… 2021     20220…\n#&gt;  8 20192206 7위   백두산              2019 260억원  CJ 엔터테인… 2019     20191…\n#&gt;  9 20196410 8위   비상선언            2022 260억원  쇼박스       2022     20220…\n#&gt; 10 20124082 9위   미스터 고           2013 225억원  쇼박스       2013     20130…\n#&gt; 11 20161481 10위  군함도              2017 225억원  CJ 엔터테인… 2017     20170…"
  },
  {
    "objectID": "after_by_election.html",
    "href": "after_by_election.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황에서 서울특별시 구별 인구수를 강서구 중심으로 살펴본자.\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\n\npop_raw &lt;- read_csv(\"data/202308_202308_주민등록인구및세대현황_월간.csv\",\n                   locale = locale('ko',encoding='euc-kr'))\nseoul_pop &lt;- pop_raw |&gt; \n  select(구명 = 행정구역, 인구수 = `2023년08월_총인구수`) |&gt; \n  mutate(구명 = str_extract(구명, \"\\\\w+구\")) |&gt; \n  drop_na() |&gt; \n  mutate(강북강남 = ifelse(구명 %in% c(\"은평구\", \"서대문구\", \"마포구\", \"종로구\", \"중구\", \"용산구\", \"동대문구\", \"성동구\", \"성북구\", \"중랑구\", \"광진구\", \"강북구\", \"도봉구\", \"노원구\"), \"강북\", \"강남\"))\n\n \nseoul_pop_gt &lt;- seoul_pop |&gt;\n  arrange(desc(인구수)) |&gt; \n  gt() |&gt; \n    gt_theme_538() |&gt; \n    cols_align(\"center\") |&gt; \n    fmt_integer(columns = 인구수) |&gt; \n    grand_summary_rows(\n      columns = 인구수,\n      fns = list(\n        합계 ~ sum(.)\n      ),\n      fmt = ~ fmt_integer(., use_seps = TRUE)\n    ) |&gt;\n    tab_header(\n      title = md(\"**서울특별시 구별 인구수**\"),\n      subtitle = md(\"2023년 8월 기준\")\n    ) |&gt;\n    data_color(\n      column = 강북강남,\n      method = \"factor\",\n      palette = c(\"red\", \"blue\"),\n      alpha = 0.8\n    )\n\nseoul_pop_gt\n\n\n\n\n\n\n서울특별시 구별 인구수\n    \n\n2023년 8월 기준\n    \n\n\n      구명\n      인구수\n      강북강남\n    \n\n\n\n\n송파구\n656,176\n강남\n\n\n\n강서구\n565,195\n강남\n\n\n\n강남구\n540,730\n강남\n\n\n\n노원구\n499,908\n강북\n\n\n\n관악구\n485,994\n강남\n\n\n\n은평구\n465,977\n강북\n\n\n\n강동구\n458,400\n강남\n\n\n\n양천구\n437,665\n강남\n\n\n\n성북구\n428,122\n강북\n\n\n\n서초구\n404,616\n강남\n\n\n\n구로구\n394,363\n강남\n\n\n\n중랑구\n383,072\n강북\n\n\n\n동작구\n380,478\n강남\n\n\n\n영등포구\n375,526\n강남\n\n\n\n마포구\n364,573\n강북\n\n\n\n동대문구\n340,333\n강북\n\n\n\n광진구\n336,446\n강북\n\n\n\n도봉구\n307,968\n강북\n\n\n\n서대문구\n307,672\n강북\n\n\n\n강북구\n290,583\n강북\n\n\n\n성동구\n278,750\n강북\n\n\n\n금천구\n228,858\n강남\n\n\n\n용산구\n216,547\n강북\n\n\n\n종로구\n140,032\n강북\n\n\n\n중구\n121,482\n강북\n\n\n합계\n—\n9,409,466\n—\n\n\n\n\n\n코드\n# gtsave(seoul_pop_gt, \"images/seoul_pop_gt.png\")\n\n\n\n\n코드# draw dot plot with ggplot2 \nlibrary(ggrepel)\nextrafont::loadfonts(device = \"win\")\n\ncomma_man &lt;- function(x) {\n  ifelse(x &gt;= 10000, \n         paste0(format(x / 10000, big.mark = \",\"), \"만\"),\n         as.character(x))\n}\n\nseoul_pop_gg &lt;- seoul_pop |&gt; \n  mutate(기준 = 1) |&gt; \n  mutate(강서구여부 = ifelse(구명 == \"강서구\", \"강서구\", \"강서구아님\")) |&gt;\n  ggplot(aes(y=인구수)) +\n    geom_vline(xintercept = 1, color = \"gray90\") +\n    geom_point(aes(x=기준, color=강서구여부), size=2) +\n    geom_text_repel(aes(x = 기준, y = 인구수, label = 구명), \n                        size = 3, family = \"MaruBuri\",\n                        nudge_y = 0.001 ) +\n    scale_color_manual(values = c(\"black\", \"gray70\")) +\n    scale_y_continuous(labels = comma_man) +\n    labs(title = \"서울특별시 구별 인구수\",\n         subtitle = \"2023년 8월 기준\",\n         x = NULL,\n         y = NULL,\n         caption = \"자료출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    coord_flip() +\n    # coord_fixed(ratio = 0.1) +  # Set the aspect ratio\n    theme_korean() +\n    theme(legend.position = \"none\",\n          panel.grid.major = element_blank(), \n          panel.grid.minor = element_blank(),\n          plot.margin = unit(c(1.5, 1, 11, 1), \"cm\"),\n          axis.ticks.y = element_blank(),  # Hide y-axis ticks\n          axis.text.y = element_blank())   # Hide y-axis tick labels \n\nseoul_pop_gg\n\nragg::agg_jpeg(\"images/seoul_pop_gg.jpeg\",\n               width = 10, height = 7, units = \"in\", res = 600)\nseoul_pop_gg\ndev.off()"
  },
  {
    "objectID": "after_by_election.html#인구수",
    "href": "after_by_election.html#인구수",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황에서 서울특별시 구별 인구수를 강서구 중심으로 살펴본자.\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\n\npop_raw &lt;- read_csv(\"data/202308_202308_주민등록인구및세대현황_월간.csv\",\n                   locale = locale('ko',encoding='euc-kr'))\nseoul_pop &lt;- pop_raw |&gt; \n  select(구명 = 행정구역, 인구수 = `2023년08월_총인구수`) |&gt; \n  mutate(구명 = str_extract(구명, \"\\\\w+구\")) |&gt; \n  drop_na() |&gt; \n  mutate(강북강남 = ifelse(구명 %in% c(\"은평구\", \"서대문구\", \"마포구\", \"종로구\", \"중구\", \"용산구\", \"동대문구\", \"성동구\", \"성북구\", \"중랑구\", \"광진구\", \"강북구\", \"도봉구\", \"노원구\"), \"강북\", \"강남\"))\n\n \nseoul_pop |&gt;\n  arrange(desc(인구수)) |&gt; \n  gt() |&gt; \n    gt_theme_538() |&gt; \n    cols_align(\"center\") |&gt; \n    fmt_integer(columns = 인구수) |&gt; \n    grand_summary_rows(\n      columns = 인구수,\n      fns = list(\n        합계 ~ sum(.)\n      ),\n      fmt = ~ fmt_integer(., use_seps = TRUE)\n    ) |&gt;\n    tab_header(\n      title = md(\"**서울특별시 구별 인구수**\"),\n      subtitle = md(\"2023년 8월 기준\")\n    ) |&gt;\n    data_color(\n      column = 강북강남,\n      method = \"factor\",\n      palette = c(\"red\", \"blue\"),\n      alpha = 0.8\n    )\n\n\n\n\n\n\n서울특별시 구별 인구수\n    \n\n2023년 8월 기준\n    \n\n\n      구명\n      인구수\n      강북강남\n    \n\n\n\n\n송파구\n656,176\n강남\n\n\n\n강서구\n565,195\n강남\n\n\n\n강남구\n540,730\n강남\n\n\n\n노원구\n499,908\n강북\n\n\n\n관악구\n485,994\n강남\n\n\n\n은평구\n465,977\n강북\n\n\n\n강동구\n458,400\n강남\n\n\n\n양천구\n437,665\n강남\n\n\n\n성북구\n428,122\n강북\n\n\n\n서초구\n404,616\n강남\n\n\n\n구로구\n394,363\n강남\n\n\n\n중랑구\n383,072\n강북\n\n\n\n동작구\n380,478\n강남\n\n\n\n영등포구\n375,526\n강남\n\n\n\n마포구\n364,573\n강북\n\n\n\n동대문구\n340,333\n강북\n\n\n\n광진구\n336,446\n강북\n\n\n\n도봉구\n307,968\n강북\n\n\n\n서대문구\n307,672\n강북\n\n\n\n강북구\n290,583\n강북\n\n\n\n성동구\n278,750\n강북\n\n\n\n금천구\n228,858\n강남\n\n\n\n용산구\n216,547\n강북\n\n\n\n종로구\n140,032\n강북\n\n\n\n중구\n121,482\n강북\n\n\n합계\n—\n9,409,466\n—"
  },
  {
    "objectID": "after_by_election.html#시각화",
    "href": "after_by_election.html#시각화",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# draw dot plot with ggplot2 \nlibrary(ggrepel)\nextrafont::loadfonts(device = \"win\")\n\ncomma_man &lt;- function(x) {\n  ifelse(x &gt;= 10000, \n         paste0(format(x / 10000, big.mark = \",\"), \"만\"),\n         as.character(x))\n}\n\nseoul_pop_gg &lt;- seoul_pop |&gt; \n  mutate(기준 = 1) |&gt; \n  mutate(강서구여부 = ifelse(구명 == \"강서구\", \"강서구\", \"강서구아님\")) |&gt;\n  ggplot(aes(y=인구수)) +\n    geom_vline(xintercept = 1, color = \"gray90\") +\n    geom_point(aes(x=기준, color=강서구여부), size=2) +\n    geom_text_repel(aes(x = 기준, y = 인구수, label = 구명), \n                        size = 3, family = \"MaruBuri\",\n                        nudge_y = 0.001 ) +\n    scale_color_manual(values = c(\"black\", \"gray70\")) +\n    scale_y_continuous(labels = comma_man) +\n    labs(title = \"서울특별시 구별 인구수\",\n         subtitle = \"2023년 8월 기준\",\n         x = NULL,\n         y = NULL,\n         caption = \"자료출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    coord_flip() +\n    # coord_fixed(ratio = 0.1) +  # Set the aspect ratio\n    theme_korean() +\n    theme(legend.position = \"none\",\n          panel.grid.major = element_blank(), \n          panel.grid.minor = element_blank(),\n          plot.margin = unit(c(1.5, 1, 11, 1), \"cm\"),\n          axis.ticks.y = element_blank(),  # Hide y-axis ticks\n          axis.text.y = element_blank())   # Hide y-axis tick labels \n\nseoul_pop_gg\n\nragg::agg_jpeg(\"images/seoul_pop_gg.jpeg\",\n               width = 10, height = 7, units = \"in\", res = 600)\nseoul_pop_gg\ndev.off()"
  },
  {
    "objectID": "after_by_election.html#시각화-1",
    "href": "after_by_election.html#시각화-1",
    "title": "지도제작 대회",
    "section": "\n2.2 시각화",
    "text": "2.2 시각화\n“강서구”와 가장 비슷한 선거 결과를 보인 구를 챗GPT로 찾아보자.\n\n코드history_cor &lt;- history_raw |&gt; \n  pivot_longer(cols = -구시군명, names_to = \"선거\", values_to = \"정당\") |&gt;  \n  mutate(선거 = factor(선거, levels = c(\"총선2020\", \"재보궐2021\", \"대선2022\", \"지선2022\", \"구청장2022\"))) |&gt;\n  mutate(구시군명 = factor(구시군명, levels = c(\"송파구\", \"강서구\", \"강남구\", \"노원구\", \"관악구\", \n                                      \"은평구\", \"강동구\", \"양천구\", \"성북구\", \"서초구\", \n                                      \"구로구\", \"중랑구\", \"동작구\", \"영등포구\", \"마포구\", \n                                      \"동대문구\", \"광진구\", \"도봉구\", \"서대문구\", \"강북구\", \n                                      \"성동구\", \"금천구\", \"용산구\", \"종로구\", \"중구\")) |&gt; fct_rev()) |&gt; \n  pivot_wider(names_from = 구시군명, values_from = 정당) \n  # mutate(across(-선거, \\(x) factor(x, levels = c(\"민주당\", \"국민의힘\"))))\n  # clipr::write_clip(breaks = \",\")    \n\n\n\n2.2.1 구청장 확대\n\n코드# jaccard &lt;- function(a, b) {\n#     intersection = length(intersect(a, b))\n#     union = length(a) + length(b) - intersection\n#     return (intersection/union)\n# }\n\n# jaccard(hisotry_cor$강서구, hisotry_cor$도봉구)\nhistory_cor_tbl &lt;- history_cor |&gt; select(-선거) |&gt; \n  mutate(across(everything(), \\(x) factor(x, levels = c(\"민주당\", \"국민의힘\"))))\n  # mutate(across(everything(), \\(x) factor(x, levels = c(\"민주당\", \"국민의힘\"))))\n\n## Goodman and Kruskal's lambda\nlibrary(DescTools)\n\nhistory_res &lt;- sapply(history_cor_tbl, \\(X) sapply(history_cor_tbl, \\(Y) Lambda(table(X, Y))))\n\n강서구동일구 &lt;- history_res |&gt; \n  as_tibble() |&gt;\n  mutate(구시군명 = rownames(history_res)) |&gt;\n  pivot_longer(-구시군명, names_to = \"구시군\", values_to = \"상관계수\") |&gt; \n  filter(구시군명 == \"강서구\") |&gt; \n  filter(상관계수 == 1) |&gt; \n  pull(구시군) \n\n강서구동일구\n#&gt; [1] \"강서구\"   \"구로구\"   \"도봉구\"   \"서대문구\"\n\n\n\n코드history_raw |&gt; \n  pivot_longer(cols = -구시군명, names_to = \"선거\", values_to = \"정당\") |&gt;  \n  mutate(선거 = factor(선거, levels = c(\"총선2020\", \"재보궐2021\", \"대선2022\", \"지선2022\",\n                                    \"구청장2022\"))) |&gt;\n  mutate(구시군명 = factor(구시군명, levels = c(\"송파구\", \"강서구\", \"강남구\", \"노원구\", \"관악구\", \n                                      \"은평구\", \"강동구\", \"양천구\", \"성북구\", \"서초구\", \n                                      \"구로구\", \"중랑구\", \"동작구\", \"영등포구\", \"마포구\", \n                                      \"동대문구\", \"광진구\", \"도봉구\", \"서대문구\", \"강북구\", \n                                      \"성동구\", \"금천구\", \"용산구\", \"종로구\", \"중구\")) |&gt; fct_rev()) |&gt;\n  mutate(강서구 = ifelse(구시군명 %in% c('강서구', '강북구', '관악구', '구로구', '금천구', '노원구', '도봉구'), \"강서구\", \"비강서구\")) |&gt; \n  arrange(강서구) |&gt; \n  # filter(강서구 == \"강서구\") |&gt; \n  filter(구시군명 %in% dput(강서구동일구)) |&gt; \n  ggplot(aes(x = 선거, y = 구시군명, color = 정당, group = 구시군명)) +\n    geom_line(color = \"gray50\") +\n    geom_point(size = 3) +\n    scale_color_manual(values = c(\"민주당\" = \"blue\", \"국민의힘\" = \"red\")) +\n    labs(x = \"\",\n         y = \"\",\n         title = \"강서구와 동일한 선거 결과를 보인 구\",\n         caption = \"자료출처: 중앙선거관리위원회 선거통계시스템\") +\n    theme(legend.position = \"top\")\n#&gt; c(\"강서구\", \"구로구\", \"도봉구\", \"서대문구\")\n\n\n\n\n\n\n\n\n2.2.2 3대 선거로 한정\n\n코드history_big_tbl &lt;- history_cor |&gt; \n  filter(선거 != \"구청장2022\") |&gt;\n  select(-선거) |&gt; \n  mutate(across(everything(), \\(x) factor(x, levels = c(\"민주당\", \"국민의힘\"))))\n  # mutate(across(everything(), \\(x) factor(x, levels = c(\"민주당\", \"국민의힘\"))))\n\n## Goodman and Kruskal's lambda\n\nhistory_big &lt;- sapply(history_big_tbl, \\(X) sapply(history_big_tbl, \\(Y) Lambda(table(X, Y))))\n\n강서구빅3 &lt;- history_big |&gt; \n  as_tibble() |&gt;\n  mutate(구시군명 = rownames(history_res)) |&gt;\n  pivot_longer(-구시군명, names_to = \"구시군\", values_to = \"상관계수\") |&gt; \n  filter(구시군명 == \"강서구\") |&gt; \n  filter(상관계수 == 1) |&gt; \n  pull(구시군) \n\n강서구빅3\n#&gt;  [1] \"강북구\"   \"강서구\"   \"관악구\"   \"구로구\"   \"금천구\"   \"노원구\"  \n#&gt;  [7] \"도봉구\"   \"서대문구\" \"성북구\"   \"은평구\"   \"중랑구\"\n\n\n\n코드history_gg &lt;- history_raw |&gt; \n  pivot_longer(cols = -구시군명, names_to = \"선거\", values_to = \"정당\") |&gt;  \n  mutate(선거 = factor(선거, levels = c(\"총선2020\", \"재보궐2021\", \"대선2022\", \"지선2022\",\n                                    \"구청장2022\"))) |&gt;\n  mutate(구시군명 = factor(구시군명, levels = c(\"강서구\", \"구로구\", \"도봉구\", \"서대문구\", \n                                        \"강북구\", \"관악구\", \"금천구\", \"노원구\", \"성북구\", \n                                        \"은평구\", \"중랑구\" )) |&gt; fct_rev()) |&gt;\n  mutate(강서구 = ifelse(구시군명 %in% dput(강서구동일구), \"강서구\", \"비강서구\")) |&gt; \n  filter(구시군명 %in% dput(강서구빅3)) |&gt; \n  arrange(강서구) |&gt; \n  ggplot(aes(x = 선거, y = 구시군명, color = 정당, group = 구시군명)) +\n    geom_line(color = \"gray50\") +\n    geom_point(size = 3) +\n    scale_color_manual(values = c(\"민주당\" = \"blue\", \"국민의힘\" = \"red\")) +\n    labs(x = \"\",\n         y = \"\",\n         title = \"강서구와 동일한 선거 결과를 보인 구\",\n         caption = \"자료출처: 중앙선거관리위원회 선거통계시스템\") +\n    theme(legend.position = \"top\")\n#&gt; c(\"강서구\", \"구로구\", \"도봉구\", \"서대문구\")\n#&gt; c(\"강북구\", \"강서구\", \"관악구\", \"구로구\", \"금천구\", \n#&gt; \"노원구\", \"도봉구\", \"서대문구\", \"성북구\", \"은평구\", \n#&gt; \"중랑구\")\n\nhistory_gg\n\n\n\n\n\n\n코드\nragg::agg_jpeg(\"images/history_gg.jpeg\",\n               width = 10, height = 7, units = \"in\", res = 600)\nhistory_gg\ndev.off()\n#&gt; png \n#&gt;   2"
  },
  {
    "objectID": "after_by_election.html#데이터셋",
    "href": "after_by_election.html#데이터셋",
    "title": "지도제작 대회",
    "section": "\n2.1 데이터셋",
    "text": "2.1 데이터셋\n\n코드library(krvote)\n\n대선_2022 &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\") |&gt; \n  group_by(구시군명) |&gt; \n  summarise(민주당 = sum(이재명),\n            국민의힘 = sum(윤석열)) |&gt; \n  ungroup() |&gt; \n  mutate(대선2022 = ifelse(민주당 &gt; 국민의힘, \"민주당\", \"국민의힘\"))  |&gt; \n  select(구시군명, 대선2022)\n\n지선_2022 &lt;- krvote::local_sido_20220601 |&gt; \n  filter(str_detect(선거구명, \"서울\")) |&gt; \n  unnest(data) |&gt; \n  group_by(구시군명) |&gt; \n  summarise(민주당 = sum(더불어민주당_송영길),\n            국민의힘 = sum(국민의힘_오세훈)) |&gt; \n  ungroup() |&gt; \n  mutate(지선2022 = ifelse(민주당 &gt; 국민의힘, \"민주당\", \"국민의힘\")) |&gt; \n  select(구시군명, 지선2022)\n\n구청장_2022 &lt;- krvote::local_sgg_20220601 |&gt; \n  filter(str_detect(시도명, \"서울\")) |&gt; \n  mutate(득표 = parse_number(득표)) |&gt; \n  group_by(구시군명 = 선거구_구시군, 정당) |&gt; \n  summarise(득표 = sum(득표)) |&gt; \n  ungroup() |&gt;\n  pivot_wider(names_from = 정당, values_from = 득표, values_fill = 0) |&gt; \n  mutate(구청장2022 = ifelse(더불어민주당 &gt; 국민의힘, \"민주당\", \"국민의힘\")) |&gt;\n  select(구시군명, 구청장2022)\n\n\n총선_2020 &lt;- krvote::general_2020 |&gt; \n  filter(str_detect(시도, \"서울\")) |&gt; \n  unnest(data) |&gt; \n  mutate(구시군명 = str_remove(선거구, \"[갑|을|병]$\")) |&gt; \n  mutate(정당 = case_when(str_detect(구분, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(구분, \"미래통합당\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(구시군명, 정당) |&gt;\n  summarise(사람수 = sum(사람수)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(names_from = 정당, values_from = 사람수, values_fill = 0) |&gt;\n  mutate(총선2020 = ifelse(민주당 &gt; 국민의힘, \"민주당\", \"국민의힘\")) |&gt; \n  select(구시군명, 총선2020)  |&gt; \n  mutate(구시군명 = str_remove(구시군명, \"중구성동구갑_|중구성동구을_\"))\n\n재보궐2021 &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\") |&gt; \n  group_by(구시군, 후보) |&gt; \n  summarise(득표수 = sum(득표수)) |&gt; \n  ungroup() |&gt; \n  mutate(정당 = case_when(str_detect(후보, \"더불어민주당\") ~ \"민주당\",\n                          str_detect(후보, \"국민의힘\") ~ \"국민의힘\",\n                          TRUE ~ \"기타\")) |&gt; \n  group_by(구시군명=구시군, 정당) |&gt;\n  summarise(득표수 = sum(득표수)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(names_from = 정당, values_from = 득표수, values_fill = 0) |&gt;\n  mutate(재보궐2021 = ifelse(민주당 &gt; 국민의힘, \"민주당\", \"국민의힘\")) |&gt; \n  select(구시군명, 재보궐2021)\n\nhistory_raw &lt;- left_join(총선_2020, 재보궐2021)  |&gt; \n  left_join(대선_2022) |&gt; \n  left_join(지선_2022) |&gt; \n  left_join(구청장_2022)"
  },
  {
    "objectID": "day_05.html",
    "href": "day_05.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "소스코드\n\n\n\n3D digital elevation maps with R\n\n\n\n1 패키지\n\n코드# install rayvista\n# devtools::install_github(\"h-a-graham/rayvista\", dependencies = T)\n# # install elevatr\n# devtools::install_github(\"jhollist/elevatr\")\n# \n# remotes::install_github(\"tylermorganwall/rayshader\")\n# remotes::install_github(\"tylermorganwall/rayrender\")\n# remotes::install_github(\"dmurdoch/rgl\")\n\n# libraries we need\nlibs &lt;- c(\n    \"rayvista\", \"elevatr\",\n    \"rayshader\", \"sf\", \"giscoR\"\n)\n\n# install missing libraries\ninstalled_libs &lt;- libs %in% rownames(installed.packages())\nif (any(installed_libs == F)) {\n    install.packages(libs[!installed_libs])\n}\n\n# load libraries\ninvisible(lapply(libs, library, character.only = T))\n\ncrs_LONGLAT &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\n\n\n\n2 대한민국\n\n코드# 3. RAYVISTA - COUNTRY\n#----------------------\n\nkorea_sf &lt;- giscoR::gisco_get_countries(country = \"KR\",\n                                        resolution = \"1\") |&gt; \n  sf::st_transform(crs = crs_LONGLAT)\n\n\n\ncountry_elevation &lt;- elevatr::get_elev_raster(\n    locations = korea_sf,\n    z = 7,\n    clip = \"locations\"\n)\n\n\nnames(country_elevation) &lt;- \"elevation\"\n\nrgl::close3d()\n\nkorea_dem &lt;- rayvista::plot_3d_vista(\n    dem = country_elevation$elevation,\n    overlay_detail = 11,\n    zscale = 10,\n    zoom = .8,\n    phi = 85,\n    theta = 0,\n    solid = F,\n    windowsize = c(800, 800)\n)\n\nrayshader::render_camera(phi = 75, zoom = .7, theta = 0)\n\nrayshader::render_highquality(\n    filename = \"images/korea-dem.png\",\n    preview = FALSE,\n    light = T,\n    lightdirection = 225,\n    lightaltitude = 60,\n    lightintensity = 400,\n    parallel = TRUE,\n    width = 4000,\n    height = 4000,\n    interactive = FALSE\n)\n\n\n\n\n\n\n\n3 독도\n\n코드get_area_bbox &lt;- function() {\n    xmin &lt;- 131.860035\n    ymin &lt;- 37.237007\n    xmax &lt;- 131.874372\n    ymax &lt;- 37.245153\n\n    bbox &lt;- sf::st_sfc(\n        sf::st_polygon(\n            list(\n                cbind(\n                    c(xmin, xmax, xmax, xmin, xmin),\n                    c(ymin, ymin, ymax, ymax, ymin)\n                )\n            )\n        ), crs = crs_LONGLAT\n    ) |&gt; sf::st_as_sf()\n\n    return(bbox)\n}\n\ndokdo_bbox &lt;- get_area_bbox()\n\nrgl::close3d()\n\ndokdo_dem &lt;- rayvista::plot_3d_vista(\n    req_area = dokdo_bbox,\n    phi = 80,\n    theta = 0,\n    zscale = 0.1,\n    outlier_filter = .001\n)\n\nrayshader::render_snapshot(\n    filename = \"images/dokdo.png\",\n    clear = T\n)\n\n\n\n4 독도 (위경도)\n\n코드.lat  &lt;- (37.237007 + 37.245153) / 2\n.long &lt;- (131.860035 + 131.874372) / 2\n \ndokdo &lt;- plot_3d_vista(lat = .lat, long = .long,\n    radius =1000,\n    zscale = 5,\n    zoom = .8,\n    solid = TRUE,\n    elevation_detail = 13,\n    overlay_detail = 15,\n    theta = 0,\n    windowsize = 800)\n\nrayshader::render_camera(\n    zoom = .7, theta = 0, phi = 30\n)\n\nrayshader::render_highquality(\n    filename = \"images/dokdo_highqual.png\",\n    preview = T,\n    light = T,\n    lightdirection = 225,\n    lightintensity = 1200,\n    lightaltitude = 60,\n    interactive = F,\n    width = 4000,\n    height = 4000\n)"
  },
  {
    "objectID": "legislators.html",
    "href": "legislators.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털 중앙선거관리위원회 당선인정보 API 를 통해 당선인 정보를 조회한다. (선거종류, 선거구명, 시도명, 구시군명, 기호, 정당, 성명, 성별, 연령, 경력, 득표수, 득표율 등을 조회)\n\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\n# iconv(names(krvote::code_election), from = \"EUC-KR\", to = \"UTF-8\")\n\ncode_election &lt;- krvote::code_election\n\nnames(code_election) &lt;- c(\"선거코드\", \"선거명\", \"선거구분\")\n\nlegislator_code &lt;- code_election |&gt; \n  dplyr::filter(str_detect(선거명, \"국회의원\")) |&gt; \n  pull(선거코드) |&gt; \n  unique()\n\nlegislator_code\n#&gt; [1] \"20040415\" \"20080409\" \"20120411\" \"20160413\" \"20180613\" \"20190403\" \"20200415\"\n#&gt; [8] \"20220309\"\n\n\n\n\n\n코드library(httr)\nlibrary(jsonlite)\n\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = \"20220309\",\n                              sgTypecode = \"1\",\n                              sdName = \"전국\",\n                              sggName = \"대한민국\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          1 100138362 대한민국   전국            2           \n#&gt;     jdName   name hanjaName gender birthday age                         addr\n#&gt; 1 국민의힘 윤석열    尹錫悅     남 19601218  61 서울특별시 서초구 서초중앙로\n#&gt;   jobId    job eduId                              edu              career1\n#&gt; 1    75 정치인   221 서울대학교 대학원 졸업(법학석사) (전) 제43대 검찰총장\n#&gt;                          career2    dugsu dugyul\n#&gt; 1 (전) 서울중앙지방검찰청 검사장 16394815  48.56\n\n\n\n\n코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = legislator_code[8],\n                              sgTypecode = \"2\",\n                              sdName = \"서울특별시\",\n                              sggName = \"종로구\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid sggName     sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          2 100138535  종로구 서울특별시  종로구    2           \n#&gt;     jdName   name hanjaName gender birthday age                            addr\n#&gt; 1 국민의힘 최재형    崔在亨     남 19560902  65 서울특별시 양천구 목동중앙로7길\n#&gt;   jobId    job eduId                    edu      career1          career2 dugsu\n#&gt; 1    75 정당인    68 서울대학교 법학과 졸업 (전)감사원장 (전)사법연수원장 49637\n#&gt;   dugyul\n#&gt; 1  52.09\n\n\n\n선거종류코드(sgTypecode): (0) 대표선거명, (1)대통령,(2)국회의원,(3)시도지사,(4)구시군장,(5)시도의원,(6)구시군의회의원,(7)국회의원비례대표,(8)광역의원비례대표,(9)기초의원비례대표,(10)교육의원,(11)교육감\n\n\n코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                query = list(sgId = legislator_code[7],\n                              sgTypecode = \"2\",\n                              numOfRows =  \"1000\",\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getCommonSggCodeList$item\n\nresponse_tbl\n#&gt;     num     sgId sgTypecode                    sggName         sdName\n#&gt; 1     1 20200415          2                     종로구     서울특별시\n#&gt; 2     2 20200415          2               중구성동구갑     서울특별시\n#&gt; 3     3 20200415          2               중구성동구을     서울특별시\n#&gt; 4     4 20200415          2                     용산구     서울특별시\n#&gt; 5     5 20200415          2                   광진구갑     서울특별시\n#&gt; 6     6 20200415          2                   광진구을     서울특별시\n#&gt; 7     7 20200415          2                 동대문구갑     서울특별시\n#&gt; 8     8 20200415          2                 동대문구을     서울특별시\n#&gt; 9     9 20200415          2                   중랑구갑     서울특별시\n#&gt; 10   10 20200415          2                   중랑구을     서울특별시\n#&gt; 11   11 20200415          2                   성북구갑     서울특별시\n#&gt; 12   12 20200415          2                   성북구을     서울특별시\n#&gt; 13   13 20200415          2                   강북구갑     서울특별시\n#&gt; 14   14 20200415          2                   강북구을     서울특별시\n#&gt; 15   15 20200415          2                   도봉구갑     서울특별시\n#&gt; 16   16 20200415          2                   도봉구을     서울특별시\n#&gt; 17   17 20200415          2                   노원구갑     서울특별시\n#&gt; 18   18 20200415          2                   노원구을     서울특별시\n#&gt; 19   19 20200415          2                   노원구병     서울특별시\n#&gt; 20   20 20200415          2                   은평구갑     서울특별시\n#&gt; 21   21 20200415          2                   은평구을     서울특별시\n#&gt; 22   22 20200415          2                 서대문구갑     서울특별시\n#&gt; 23   23 20200415          2                 서대문구을     서울특별시\n#&gt; 24   24 20200415          2                   마포구갑     서울특별시\n#&gt; 25   25 20200415          2                   마포구을     서울특별시\n#&gt; 26   26 20200415          2                   양천구갑     서울특별시\n#&gt; 27   27 20200415          2                   양천구을     서울특별시\n#&gt; 28   28 20200415          2                   강서구갑     서울특별시\n#&gt; 29   29 20200415          2                   강서구을     서울특별시\n#&gt; 30   30 20200415          2                   강서구병     서울특별시\n#&gt; 31   31 20200415          2                   구로구갑     서울특별시\n#&gt; 32   32 20200415          2                   구로구을     서울특별시\n#&gt; 33   33 20200415          2                     금천구     서울특별시\n#&gt; 34   34 20200415          2                 영등포구갑     서울특별시\n#&gt; 35   35 20200415          2                 영등포구을     서울특별시\n#&gt; 36   36 20200415          2                   동작구갑     서울특별시\n#&gt; 37   37 20200415          2                   동작구을     서울특별시\n#&gt; 38   38 20200415          2                   관악구갑     서울특별시\n#&gt; 39   39 20200415          2                   관악구을     서울특별시\n#&gt; 40   40 20200415          2                   서초구갑     서울특별시\n#&gt; 41   41 20200415          2                   서초구을     서울특별시\n#&gt; 42   42 20200415          2                   강남구갑     서울특별시\n#&gt; 43   43 20200415          2                   강남구을     서울특별시\n#&gt; 44   44 20200415          2                   강남구병     서울특별시\n#&gt; 45   45 20200415          2                   송파구갑     서울특별시\n#&gt; 46   46 20200415          2                   송파구을     서울특별시\n#&gt; 47   47 20200415          2                   송파구병     서울특별시\n#&gt; 48   48 20200415          2                   강동구갑     서울특별시\n#&gt; 49   49 20200415          2                   강동구을     서울특별시\n#&gt; 50   50 20200415          2                 중구영도구     부산광역시\n#&gt; 51   51 20200415          2                   서구동구     부산광역시\n#&gt; 52   52 20200415          2                 부산진구갑     부산광역시\n#&gt; 53   53 20200415          2                 부산진구을     부산광역시\n#&gt; 54   54 20200415          2                     동래구     부산광역시\n#&gt; 55   55 20200415          2                     남구갑     부산광역시\n#&gt; 56   56 20200415          2                     남구을     부산광역시\n#&gt; 57   57 20200415          2               북구강서구갑     부산광역시\n#&gt; 58   58 20200415          2               북구강서구을     부산광역시\n#&gt; 59   59 20200415          2                 해운대구갑     부산광역시\n#&gt; 60   60 20200415          2                 해운대구을     부산광역시\n#&gt; 61   61 20200415          2                   사하구갑     부산광역시\n#&gt; 62   62 20200415          2                   사하구을     부산광역시\n#&gt; 63   63 20200415          2                     금정구     부산광역시\n#&gt; 64   64 20200415          2                     연제구     부산광역시\n#&gt; 65   65 20200415          2                     수영구     부산광역시\n#&gt; 66   66 20200415          2                     사상구     부산광역시\n#&gt; 67   67 20200415          2                     기장군     부산광역시\n#&gt; 68   68 20200415          2                   중구남구     대구광역시\n#&gt; 69   69 20200415          2                     동구갑     대구광역시\n#&gt; 70   70 20200415          2                     동구을     대구광역시\n#&gt; 71   71 20200415          2                       서구     대구광역시\n#&gt; 72   72 20200415          2                     북구갑     대구광역시\n#&gt; 73   73 20200415          2                     북구을     대구광역시\n#&gt; 74   74 20200415          2                   수성구갑     대구광역시\n#&gt; 75   75 20200415          2                   수성구을     대구광역시\n#&gt; 76   76 20200415          2                   달서구갑     대구광역시\n#&gt; 77   77 20200415          2                   달서구을     대구광역시\n#&gt; 78   78 20200415          2                   달서구병     대구광역시\n#&gt; 79   79 20200415          2                     달성군     대구광역시\n#&gt; 80   80 20200415          2           중구강화군옹진군     인천광역시\n#&gt; 81   81 20200415          2             동구미추홀구갑     인천광역시\n#&gt; 82   82 20200415          2             동구미추홀구을     인천광역시\n#&gt; 83   83 20200415          2                   연수구갑     인천광역시\n#&gt; 84   84 20200415          2                   연수구을     인천광역시\n#&gt; 85   85 20200415          2                   남동구갑     인천광역시\n#&gt; 86   86 20200415          2                   남동구을     인천광역시\n#&gt; 87   87 20200415          2                   부평구갑     인천광역시\n#&gt; 88   88 20200415          2                   부평구을     인천광역시\n#&gt; 89   89 20200415          2                   계양구갑     인천광역시\n#&gt; 90   90 20200415          2                   계양구을     인천광역시\n#&gt; 91   91 20200415          2                     서구갑     인천광역시\n#&gt; 92   92 20200415          2                     서구을     인천광역시\n#&gt; 93   93 20200415          2                 동구남구갑     광주광역시\n#&gt; 94   94 20200415          2                 동구남구을     광주광역시\n#&gt; 95   95 20200415          2                     서구갑     광주광역시\n#&gt; 96   96 20200415          2                     서구을     광주광역시\n#&gt; 97   97 20200415          2                     북구갑     광주광역시\n#&gt; 98   98 20200415          2                     북구을     광주광역시\n#&gt; 99   99 20200415          2                   광산구갑     광주광역시\n#&gt; 100 100 20200415          2                   광산구을     광주광역시\n#&gt; 101 101 20200415          2                       동구     대전광역시\n#&gt; 102 102 20200415          2                       중구     대전광역시\n#&gt; 103 103 20200415          2                     서구갑     대전광역시\n#&gt; 104 104 20200415          2                     서구을     대전광역시\n#&gt; 105 105 20200415          2                   유성구갑     대전광역시\n#&gt; 106 106 20200415          2                   유성구을     대전광역시\n#&gt; 107 107 20200415          2                     대덕구     대전광역시\n#&gt; 108 108 20200415          2                       중구     울산광역시\n#&gt; 109 109 20200415          2                     남구갑     울산광역시\n#&gt; 110 110 20200415          2                     남구을     울산광역시\n#&gt; 111 111 20200415          2                       동구     울산광역시\n#&gt; 112 112 20200415          2                       북구     울산광역시\n#&gt; 113 113 20200415          2                     울주군     울산광역시\n#&gt; 114 114 20200415          2           세종특별자치시갑 세종특별자치시\n#&gt; 115 115 20200415          2           세종특별자치시을 세종특별자치시\n#&gt; 116 116 20200415          2                   수원시갑         경기도\n#&gt; 117 117 20200415          2                   수원시을         경기도\n#&gt; 118 118 20200415          2                   수원시병         경기도\n#&gt; 119 119 20200415          2                   수원시정         경기도\n#&gt; 120 120 20200415          2                   수원시무         경기도\n#&gt; 121 121 20200415          2               성남시수정구         경기도\n#&gt; 122 122 20200415          2               성남시중원구         경기도\n#&gt; 123 123 20200415          2             성남시분당구갑         경기도\n#&gt; 124 124 20200415          2             성남시분당구을         경기도\n#&gt; 125 125 20200415          2                 의정부시갑         경기도\n#&gt; 126 126 20200415          2                 의정부시을         경기도\n#&gt; 127 127 20200415          2               안양시만안구         경기도\n#&gt; 128 128 20200415          2             안양시동안구갑         경기도\n#&gt; 129 129 20200415          2             안양시동안구을         경기도\n#&gt; 130 130 20200415          2                   부천시갑         경기도\n#&gt; 131 131 20200415          2                   부천시을         경기도\n#&gt; 132 132 20200415          2                   부천시병         경기도\n#&gt; 133 133 20200415          2                   부천시정         경기도\n#&gt; 134 134 20200415          2                   광명시갑         경기도\n#&gt; 135 135 20200415          2                   광명시을         경기도\n#&gt; 136 136 20200415          2                   평택시갑         경기도\n#&gt; 137 137 20200415          2                   평택시을         경기도\n#&gt; 138 138 20200415          2             동두천시연천군         경기도\n#&gt; 139 139 20200415          2             안산시상록구갑         경기도\n#&gt; 140 140 20200415          2             안산시상록구을         경기도\n#&gt; 141 141 20200415          2             안산시단원구갑         경기도\n#&gt; 142 142 20200415          2             안산시단원구을         경기도\n#&gt; 143 143 20200415          2                   고양시갑         경기도\n#&gt; 144 144 20200415          2                   고양시을         경기도\n#&gt; 145 145 20200415          2                   고양시병         경기도\n#&gt; 146 146 20200415          2                   고양시정         경기도\n#&gt; 147 147 20200415          2               의왕시과천시         경기도\n#&gt; 148 148 20200415          2                     구리시         경기도\n#&gt; 149 149 20200415          2                 남양주시갑         경기도\n#&gt; 150 150 20200415          2                 남양주시을         경기도\n#&gt; 151 151 20200415          2                 남양주시병         경기도\n#&gt; 152 152 20200415          2                     오산시         경기도\n#&gt; 153 153 20200415          2                   시흥시갑         경기도\n#&gt; 154 154 20200415          2                   시흥시을         경기도\n#&gt; 155 155 20200415          2                     군포시         경기도\n#&gt; 156 156 20200415          2                     하남시         경기도\n#&gt; 157 157 20200415          2                   용인시갑         경기도\n#&gt; 158 158 20200415          2                   용인시을         경기도\n#&gt; 159 159 20200415          2                   용인시병         경기도\n#&gt; 160 160 20200415          2                   용인시정         경기도\n#&gt; 161 161 20200415          2                   파주시갑         경기도\n#&gt; 162 162 20200415          2                   파주시을         경기도\n#&gt; 163 163 20200415          2                     이천시         경기도\n#&gt; 164 164 20200415          2                     안성시         경기도\n#&gt; 165 165 20200415          2                   김포시갑         경기도\n#&gt; 166 166 20200415          2                   김포시을         경기도\n#&gt; 167 167 20200415          2                   화성시갑         경기도\n#&gt; 168 168 20200415          2                   화성시을         경기도\n#&gt; 169 169 20200415          2                   화성시병         경기도\n#&gt; 170 170 20200415          2                   광주시갑         경기도\n#&gt; 171 171 20200415          2                   광주시을         경기도\n#&gt; 172 172 20200415          2                     양주시         경기도\n#&gt; 173 173 20200415          2               포천시가평군         경기도\n#&gt; 174 174 20200415          2               여주시양평군         경기도\n#&gt; 175 175 20200415          2 춘천시철원군화천군양구군갑         강원도\n#&gt; 176 176 20200415          2 춘천시철원군화천군양구군을         강원도\n#&gt; 177 177 20200415          2                   원주시갑         강원도\n#&gt; 178 178 20200415          2                   원주시을         강원도\n#&gt; 179 179 20200415          2                     강릉시         강원도\n#&gt; 180 180 20200415          2   동해시태백시삼척시정선군         강원도\n#&gt; 181 181 20200415          2   속초시인제군고성군양양군         강원도\n#&gt; 182 182 20200415          2   홍천군횡성군영월군평창군         강원도\n#&gt; 183 183 20200415          2               청주시상당구       충청북도\n#&gt; 184 184 20200415          2               청주시서원구       충청북도\n#&gt; 185 185 20200415          2               청주시흥덕구       충청북도\n#&gt; 186 186 20200415          2               청주시청원구       충청북도\n#&gt; 187 187 20200415          2                     충주시       충청북도\n#&gt; 188 188 20200415          2               제천시단양군       충청북도\n#&gt; 189 189 20200415          2   보은군옥천군영동군괴산군       충청북도\n#&gt; 190 190 20200415          2         증평군진천군음성군       충청북도\n#&gt; 191 191 20200415          2                   천안시갑       충청남도\n#&gt; 192 192 20200415          2                   천안시을       충청남도\n#&gt; 193 193 20200415          2                   천안시병       충청남도\n#&gt; 194 194 20200415          2         공주시부여군청양군       충청남도\n#&gt; 195 195 20200415          2               보령시서천군       충청남도\n#&gt; 196 196 20200415          2                   아산시갑       충청남도\n#&gt; 197 197 20200415          2                   아산시을       충청남도\n#&gt; 198 198 20200415          2               서산시태안군       충청남도\n#&gt; 199 199 20200415          2         논산시계룡시금산군       충청남도\n#&gt; 200 200 20200415          2                     당진시       충청남도\n#&gt; 201 201 20200415          2               홍성군예산군       충청남도\n#&gt; 202 202 20200415          2                   전주시갑       전라북도\n#&gt; 203 203 20200415          2                   전주시을       전라북도\n#&gt; 204 204 20200415          2                   전주시병       전라북도\n#&gt; 205 205 20200415          2                     군산시       전라북도\n#&gt; 206 206 20200415          2                   익산시갑       전라북도\n#&gt; 207 207 20200415          2                   익산시을       전라북도\n#&gt; 208 208 20200415          2               정읍시고창군       전라북도\n#&gt; 209 209 20200415          2         남원시임실군순창군       전라북도\n#&gt; 210 210 20200415          2               김제시부안군       전라북도\n#&gt; 211 211 20200415          2   완주군진안군무주군장수군       전라북도\n#&gt; 212 212 20200415          2                     목포시       전라남도\n#&gt; 213 213 20200415          2                   여수시갑       전라남도\n#&gt; 214 214 20200415          2                   여수시을       전라남도\n#&gt; 215 215 20200415          2 순천시광양시곡성군구례군갑       전라남도\n#&gt; 216 216 20200415          2 순천시광양시곡성군구례군을       전라남도\n#&gt; 217 217 20200415          2               나주시화순군       전라남도\n#&gt; 218 218 20200415          2   담양군함평군영광군장성군       전라남도\n#&gt; 219 219 20200415          2   고흥군보성군장흥군강진군       전라남도\n#&gt; 220 220 20200415          2         해남군완도군진도군       전라남도\n#&gt; 221 221 20200415          2         영암군무안군신안군       전라남도\n#&gt; 222 222 20200415          2                 포항시북구       경상북도\n#&gt; 223 223 20200415          2           포항시남구울릉군       경상북도\n#&gt; 224 224 20200415          2                     경주시       경상북도\n#&gt; 225 225 20200415          2                     김천시       경상북도\n#&gt; 226 226 20200415          2               안동시예천군       경상북도\n#&gt; 227 227 20200415          2                   구미시갑       경상북도\n#&gt; 228 228 20200415          2                   구미시을       경상북도\n#&gt; 229 229 20200415          2   영주시영양군봉화군울진군       경상북도\n#&gt; 230 230 20200415          2               영천시청도군       경상북도\n#&gt; 231 231 20200415          2               상주시문경시       경상북도\n#&gt; 232 232 20200415          2                     경산시       경상북도\n#&gt; 233 233 20200415          2   군위군의성군청송군영덕군       경상북도\n#&gt; 234 234 20200415          2         고령군성주군칠곡군       경상북도\n#&gt; 235 235 20200415          2               창원시의창구       경상남도\n#&gt; 236 236 20200415          2               창원시성산구       경상남도\n#&gt; 237 237 20200415          2           창원시마산합포구       경상남도\n#&gt; 238 238 20200415          2           창원시마산회원구       경상남도\n#&gt; 239 239 20200415          2               창원시진해구       경상남도\n#&gt; 240 240 20200415          2                   진주시갑       경상남도\n#&gt; 241 241 20200415          2                   진주시을       경상남도\n#&gt; 242 242 20200415          2               통영시고성군       경상남도\n#&gt; 243 243 20200415          2         사천시남해군하동군       경상남도\n#&gt; 244 244 20200415          2                   김해시갑       경상남도\n#&gt; 245 245 20200415          2                   김해시을       경상남도\n#&gt; 246 246 20200415          2   밀양시의령군함안군창녕군       경상남도\n#&gt; 247 247 20200415          2                     거제시       경상남도\n#&gt; 248 248 20200415          2                   양산시갑       경상남도\n#&gt; 249 249 20200415          2                   양산시을       경상남도\n#&gt; 250 250 20200415          2   산청군함양군거창군합천군       경상남도\n#&gt; 251 251 20200415          2                   제주시갑 제주특별자치도\n#&gt; 252 252 20200415          2                   제주시을 제주특별자치도\n#&gt; 253 253 20200415          2                   서귀포시 제주특별자치도\n#&gt;              wiwName sggJungsu sOrder\n#&gt; 1             종로구         1      1\n#&gt; 2             성동구         1      2\n#&gt; 3               중구         1      3\n#&gt; 4             용산구         1      4\n#&gt; 5             광진구         1      5\n#&gt; 6             광진구         1      6\n#&gt; 7           동대문구         1      7\n#&gt; 8           동대문구         1      8\n#&gt; 9             중랑구         1      9\n#&gt; 10            중랑구         1     10\n#&gt; 11            성북구         1     11\n#&gt; 12            성북구         1     12\n#&gt; 13            강북구         1     13\n#&gt; 14            강북구         1     14\n#&gt; 15            도봉구         1     15\n#&gt; 16            도봉구         1     16\n#&gt; 17            노원구         1     17\n#&gt; 18            노원구         1     18\n#&gt; 19            노원구         1     19\n#&gt; 20            은평구         1     20\n#&gt; 21            은평구         1     21\n#&gt; 22          서대문구         1     22\n#&gt; 23          서대문구         1     23\n#&gt; 24            마포구         1     24\n#&gt; 25            마포구         1     25\n#&gt; 26            양천구         1     26\n#&gt; 27            양천구         1     27\n#&gt; 28            강서구         1     28\n#&gt; 29            강서구         1     29\n#&gt; 30            강서구         1     30\n#&gt; 31            구로구         1     31\n#&gt; 32            구로구         1     32\n#&gt; 33            금천구         1     33\n#&gt; 34          영등포구         1     34\n#&gt; 35          영등포구         1     35\n#&gt; 36            동작구         1     36\n#&gt; 37            동작구         1     37\n#&gt; 38            관악구         1     38\n#&gt; 39            관악구         1     39\n#&gt; 40            서초구         1     40\n#&gt; 41            서초구         1     41\n#&gt; 42            강남구         1     42\n#&gt; 43            강남구         1     43\n#&gt; 44            강남구         1     44\n#&gt; 45            송파구         1     45\n#&gt; 46            송파구         1     46\n#&gt; 47            송파구         1     47\n#&gt; 48            강동구         1     48\n#&gt; 49            강동구         1     49\n#&gt; 50            영도구         1     50\n#&gt; 51              서구         1     51\n#&gt; 52          부산진구         1     52\n#&gt; 53          부산진구         1     53\n#&gt; 54            동래구         1     54\n#&gt; 55              남구         1     55\n#&gt; 56              남구         1     56\n#&gt; 57              북구         1     57\n#&gt; 58            강서구         1     58\n#&gt; 59          해운대구         1     59\n#&gt; 60          해운대구         1     60\n#&gt; 61            사하구         1     61\n#&gt; 62            사하구         1     62\n#&gt; 63            금정구         1     63\n#&gt; 64            연제구         1     64\n#&gt; 65            수영구         1     65\n#&gt; 66            사상구         1     66\n#&gt; 67            기장군         1     67\n#&gt; 68              남구         1     68\n#&gt; 69              동구         1     69\n#&gt; 70              동구         1     70\n#&gt; 71              서구         1     71\n#&gt; 72              북구         1     72\n#&gt; 73              북구         1     73\n#&gt; 74            수성구         1     74\n#&gt; 75            수성구         1     75\n#&gt; 76            달서구         1     76\n#&gt; 77            달서구         1     77\n#&gt; 78            달서구         1     78\n#&gt; 79            달성군         1     79\n#&gt; 80              중구         1     80\n#&gt; 81          미추홀구         1     81\n#&gt; 82          미추홀구         1     82\n#&gt; 83            연수구         1     83\n#&gt; 84            연수구         1     84\n#&gt; 85            남동구         1     85\n#&gt; 86            남동구         1     86\n#&gt; 87            부평구         1     87\n#&gt; 88            부평구         1     88\n#&gt; 89            계양구         1     89\n#&gt; 90            계양구         1     90\n#&gt; 91              서구         1     91\n#&gt; 92              서구         1     92\n#&gt; 93              남구         1     93\n#&gt; 94              동구         1     94\n#&gt; 95              서구         1     95\n#&gt; 96              서구         1     96\n#&gt; 97              북구         1     97\n#&gt; 98              북구         1     98\n#&gt; 99            광산구         1     99\n#&gt; 100           광산구         1    100\n#&gt; 101             동구         1    101\n#&gt; 102             중구         1    102\n#&gt; 103             서구         1    103\n#&gt; 104             서구         1    104\n#&gt; 105           유성구         1    105\n#&gt; 106           유성구         1    106\n#&gt; 107           대덕구         1    107\n#&gt; 108             중구         1    108\n#&gt; 109             남구         1    109\n#&gt; 110             남구         1    110\n#&gt; 111             동구         1    111\n#&gt; 112             북구         1    112\n#&gt; 113           울주군         1    113\n#&gt; 114   세종특별자치시         1    114\n#&gt; 115   세종특별자치시         1    115\n#&gt; 116     수원시장안구         1    116\n#&gt; 117     수원시권선구         1    117\n#&gt; 118     수원시팔달구         1    118\n#&gt; 119     수원시영통구         1    119\n#&gt; 120     수원시권선구         1    120\n#&gt; 121     성남시수정구         1    121\n#&gt; 122     성남시중원구         1    122\n#&gt; 123     성남시분당구         1    123\n#&gt; 124     성남시분당구         1    124\n#&gt; 125         의정부시         1    125\n#&gt; 126         의정부시         1    126\n#&gt; 127     안양시만안구         1    127\n#&gt; 128     안양시동안구         1    128\n#&gt; 129     안양시동안구         1    129\n#&gt; 130           부천시         1    130\n#&gt; 131           부천시         1    131\n#&gt; 132           부천시         1    132\n#&gt; 133           부천시         1    133\n#&gt; 134           광명시         1    134\n#&gt; 135           광명시         1    135\n#&gt; 136           평택시         1    136\n#&gt; 137           평택시         1    137\n#&gt; 138         동두천시         1    138\n#&gt; 139     안산시상록구         1    139\n#&gt; 140     안산시상록구         1    140\n#&gt; 141     안산시단원구         1    141\n#&gt; 142     안산시단원구         1    142\n#&gt; 143     고양시덕양구         1    143\n#&gt; 144     고양시덕양구         1    144\n#&gt; 145   고양시일산동구         1    145\n#&gt; 146   고양시일산서구         1    146\n#&gt; 147           의왕시         1    147\n#&gt; 148           구리시         1    148\n#&gt; 149         남양주시         1    149\n#&gt; 150         남양주시         1    150\n#&gt; 151         남양주시         1    151\n#&gt; 152           오산시         1    152\n#&gt; 153           시흥시         1    153\n#&gt; 154           시흥시         1    154\n#&gt; 155           군포시         1    155\n#&gt; 156           하남시         1    156\n#&gt; 157     용인시처인구         1    157\n#&gt; 158     용인시기흥구         1    158\n#&gt; 159     용인시수지구         1    159\n#&gt; 160     용인시기흥구         1    160\n#&gt; 161           파주시         1    161\n#&gt; 162           파주시         1    162\n#&gt; 163           이천시         1    163\n#&gt; 164           안성시         1    164\n#&gt; 165           김포시         1    165\n#&gt; 166           김포시         1    166\n#&gt; 167           화성시         1    167\n#&gt; 168           화성시         1    168\n#&gt; 169           화성시         1    169\n#&gt; 170           광주시         1    170\n#&gt; 171           광주시         1    171\n#&gt; 172           양주시         1    172\n#&gt; 173           포천시         1    173\n#&gt; 174           여주시         1    174\n#&gt; 175           춘천시         1    175\n#&gt; 176           춘천시         1    176\n#&gt; 177           원주시         1    177\n#&gt; 178           원주시         1    178\n#&gt; 179           강릉시         1    179\n#&gt; 180           동해시         1    180\n#&gt; 181           속초시         1    181\n#&gt; 182           영월군         1    182\n#&gt; 183     청주시상당구         1    183\n#&gt; 184     청주시서원구         1    184\n#&gt; 185     청주시흥덕구         1    185\n#&gt; 186     청주시청원구         1    186\n#&gt; 187           충주시         1    187\n#&gt; 188           제천시         1    188\n#&gt; 189           영동군         1    189\n#&gt; 190           음성군         1    190\n#&gt; 191     천안시동남구         1    191\n#&gt; 192     천안시서북구         1    192\n#&gt; 193     천안시동남구         1    193\n#&gt; 194           공주시         1    194\n#&gt; 195           보령시         1    195\n#&gt; 196           아산시         1    196\n#&gt; 197           아산시         1    197\n#&gt; 198           서산시         1    198\n#&gt; 199           논산시         1    199\n#&gt; 200           당진시         1    200\n#&gt; 201           홍성군         1    201\n#&gt; 202     전주시완산구         1    202\n#&gt; 203     전주시완산구         1    203\n#&gt; 204     전주시덕진구         1    204\n#&gt; 205           군산시         1    205\n#&gt; 206           익산시         1    206\n#&gt; 207           익산시         1    207\n#&gt; 208           정읍시         1    208\n#&gt; 209           남원시         1    209\n#&gt; 210           김제시         1    210\n#&gt; 211           완주군         1    211\n#&gt; 212           목포시         1    212\n#&gt; 213           여수시         1    213\n#&gt; 214           여수시         1    214\n#&gt; 215           순천시         1    215\n#&gt; 216           광양시         1    216\n#&gt; 217           나주시         1    217\n#&gt; 218           영광군         1    218\n#&gt; 219           장흥군         1    219\n#&gt; 220           해남군         1    220\n#&gt; 221           무안군         1    221\n#&gt; 222       포항시북구         1    222\n#&gt; 223       포항시남구         1    223\n#&gt; 224           경주시         1    224\n#&gt; 225           김천시         1    225\n#&gt; 226           안동시         1    226\n#&gt; 227           구미시         1    227\n#&gt; 228           구미시         1    228\n#&gt; 229           영주시         1    229\n#&gt; 230           영천시         1    230\n#&gt; 231           상주시         1    231\n#&gt; 232           경산시         1    232\n#&gt; 233           의성군         1    233\n#&gt; 234           칠곡군         1    234\n#&gt; 235     창원시의창구         1    235\n#&gt; 236     창원시성산구         1    236\n#&gt; 237 창원시마산합포구         1    237\n#&gt; 238 창원시마산회원구         1    238\n#&gt; 239     창원시진해구         1    239\n#&gt; 240           진주시         1    240\n#&gt; 241           진주시         1    241\n#&gt; 242           통영시         1    242\n#&gt; 243           사천시         1    243\n#&gt; 244           김해시         1    244\n#&gt; 245           김해시         1    245\n#&gt; 246           밀양시         1    246\n#&gt; 247           거제시         1    247\n#&gt; 248           양산시         1    248\n#&gt; 249           양산시         1    249\n#&gt; 250           거창군         1    250\n#&gt; 251           제주시         1    251\n#&gt; 252           제주시         1    252\n#&gt; 253         서귀포시         1    253\n\n\n\n\n코드\nlegislator_raw &lt;- code_election |&gt; \n  dplyr::filter(str_detect(선거명, \"국회의원\"),\n         선거구분 != \"0\") \n\nget_precinct &lt;- function(legislator_cd = \"20200415\", \n                         sgTypecode = \"2\") {\n  # httr의 GET 함수로 데이터를 추출한다\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                  query = list(sgId = legislator_cd,\n                                sgTypecode = sgTypecode,\n                                numOfRows =  \"1000\",\n                                resultType = \"json\",\n                                serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n  \n  # 응답 상태와 내용을 확인한다\n  print(status_code(response))\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getCommonSggCodeList$item\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_precinct(\"20220309\")\n#&gt; [1] 200\n#&gt; # A tibble: 5 × 8\n#&gt;   num   sgId     sgTypecode sggName      sdName     wiwName     sggJungsu sOrder\n#&gt;   &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt; \n#&gt; 1 1     20220309 2          종로구       서울특별시 종로구      1         1     \n#&gt; 2 2     20220309 2          서초구갑     서울특별시 서초구      1         40    \n#&gt; 3 3     20220309 2          중구남구     대구광역시 남구        1         68    \n#&gt; 4 4     20220309 2          안성시       경기도     안성시      1         164   \n#&gt; 5 5     20220309 2          청주시상당구 충청북도   청주시상당… 1         183\n\n\n\n\n코드\n# 재보궐 제외\n# legislator_tbl &lt;- legislator_raw |&gt; \n#   dplyr::filter(선거코드 %in% c(\"20040415\", \"20080409\", \"20120411\", \n#                       \"20160413\", \"20200415\")) \n\nlegislator_tbl &lt;- legislator_raw |&gt; \n  mutate(data = map2(선거코드, 선거구분, get_precinct))\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n\nprecinct_tbl &lt;- legislator_tbl |&gt; \n  unnest(data)\n\nprecinct_tbl\n#&gt; # A tibble: 1,264 × 11\n#&gt;    선거코드 선거명       선거구분 num   sgId   sgTypecode sggName sdName wiwName\n#&gt;    &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  \n#&gt;  1 20040415 국회의원선거 2        1     20040… 2          종로구  서울…  종로구 \n#&gt;  2 20040415 국회의원선거 2        2     20040… 2          중구    서울…  중구(… \n#&gt;  3 20040415 국회의원선거 2        3     20040… 2          용산구  서울…  용산구 \n#&gt;  4 20040415 국회의원선거 2        4     20040… 2          성동구… 서울…  성동구 \n#&gt;  5 20040415 국회의원선거 2        5     20040… 2          성동구… 서울…  성동구 \n#&gt;  6 20040415 국회의원선거 2        6     20040… 2          광진구… 서울…  광진구 \n#&gt;  7 20040415 국회의원선거 2        7     20040… 2          광진구… 서울…  광진구 \n#&gt;  8 20040415 국회의원선거 2        8     20040… 2          동대문… 서울…  동대문…\n#&gt;  9 20040415 국회의원선거 2        9     20040… 2          동대문… 서울…  동대문…\n#&gt; 10 20040415 국회의원선거 2        10    20040… 2          중랑구… 서울…  중랑구 \n#&gt; # ℹ 1,254 more rows\n#&gt; # ℹ 2 more variables: sggJungsu &lt;chr&gt;, sOrder &lt;chr&gt;\n\n\n\n\n\n코드\nget_elected &lt;- function(sgId = \"20200415\", sgTypecode = \"2\",\n                        sdName = \"서울특별시\",sggName = \"종로구\") {\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n              query = list(sgId = sgId,\n                           sgTypecode = sgTypecode,\n                           sdName = sdName,\n                           sggName = sggName,\n                           numOfRows = 100,\n                           resultType = \"json\",\n                           serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n  # 응답 상태와 내용을 확인한다\n  cat(status_code(response), \": \", sgId, sgTypecode, sdName, sggName, \"\\n\")\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getWinnerInfoInqire$item\n  \n  Sys.sleep(runif(1, 0,0.5))\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_elected()\n#&gt; 200 :  20200415 2 서울특별시 종로구\n#&gt; # A tibble: 1 × 24\n#&gt;   num   sgId    sgTypecode huboid sggName sdName wiwName giho  gihoSangse jdName\n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt; \n#&gt; 1 1     202004… 2          10013… 종로구  서울…  종로구  1     \"\"         더불… \n#&gt; # ℹ 14 more variables: name &lt;chr&gt;, hanjaName &lt;chr&gt;, gender &lt;chr&gt;,\n#&gt; #   birthday &lt;chr&gt;, age &lt;chr&gt;, addr &lt;chr&gt;, jobId &lt;chr&gt;, job &lt;chr&gt;, eduId &lt;chr&gt;,\n#&gt; #   edu &lt;chr&gt;, career1 &lt;chr&gt;, career2 &lt;chr&gt;, dugsu &lt;chr&gt;, dugyul &lt;chr&gt;\n\n\n\n\n코드# sido_code &lt;- tribble(\n# ~\"시도코드\", ~\"시도명\",\n# \"1100\", \"서울특별시\",\n# \"2600\", \"부산광역시\",\n# \"2700\", \"대구광역시\",\n# \"2800\", \"인천광역시\",\n# \"2900\", \"광주광역시\",\n# \"3000\", \"대전광역시\",\n# \"3100\", \"울산광역시\",\n# \"5100\", \"세종특별자치시\",\n# \"4100\", \"경기도\",\n# \"4200\", \"강원도\",\n# \"4300\", \"충청북도\",\n# \"4400\", \"충청남도\",\n# \"4500\", \"전라북도\",\n# \"4600\", \"전라남도\",\n# \"4700\", \"경상북도\",\n# \"4800\", \"경상남도\",\n# \"4900\", \"제주특별자치도\")\n\nelected_raw &lt;- legislator_tbl |&gt; \n  dplyr::filter(선거코드 == \"20200415\",\n         선거구분 == \"2\") |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected))\n\nelected_tbl &lt;- elected_raw |&gt; \n  select(data) |&gt; \n  unnest(data)\n\n\n\n\n코드get_elected_safely &lt;- safely(get_elected, otherwise = \"error\")\n\ntotal_elected_raw &lt;- legislator_tbl |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely))\n\ntotal_elected_tbl &lt;- total_elected_raw |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\ntotal_elected_tbl |&gt; \n  write_rds(\"data/total_elected_tbl.rds\")\n\n\n\n\n코드total_elected_tbl &lt;- \n  read_rds(\"data/total_elected_tbl.rds\")\n\ntotal_elected_true &lt;- total_elected_tbl |&gt; \n  mutate(tibble = map_lgl(result, is_tibble)) |&gt; \n  dplyr::filter(tibble) |&gt; \n  select(-tibble)\n\ntotal_elected_false &lt;- total_elected_raw |&gt; \n  dplyr::filter(sgId == \"20120411\",\n         sdName == \"인천광역시\",\n         sggName %in% c(\"남동구을\", \"부평구갑\", \"서구강화군갑\")) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely)) |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\n\ntotal_elected_all &lt;- bind_rows(total_elected_true, total_elected_false)\n\ntotal_elected_all |&gt; \n  write_rds(\"data/total_elected_all.rds\")"
  },
  {
    "objectID": "legislators.html#국회의원-선거-코드",
    "href": "legislators.html#국회의원-선거-코드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\n# iconv(names(krvote::code_election), from = \"EUC-KR\", to = \"UTF-8\")\n\ncode_election &lt;- krvote::code_election\n\nnames(code_election) &lt;- c(\"선거코드\", \"선거명\", \"선거구분\")\n\nlegislator_code &lt;- code_election |&gt; \n  dplyr::filter(str_detect(선거명, \"국회의원\")) |&gt; \n  pull(선거코드) |&gt; \n  unique()\n\nlegislator_code\n#&gt; [1] \"20040415\" \"20080409\" \"20120411\" \"20160413\" \"20180613\" \"20190403\" \"20200415\"\n#&gt; [8] \"20220309\""
  },
  {
    "objectID": "legislators.html#당선인",
    "href": "legislators.html#당선인",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(httr)\nlibrary(jsonlite)\n\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = \"20220309\",\n                              sgTypecode = \"1\",\n                              sdName = \"전국\",\n                              sggName = \"대한민국\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          1 100138362 대한민국   전국            2           \n#&gt;     jdName   name hanjaName gender birthday age                         addr\n#&gt; 1 국민의힘 윤석열    尹錫悅     남 19601218  61 서울특별시 서초구 서초중앙로\n#&gt;   jobId    job eduId                              edu              career1\n#&gt; 1    75 정치인   221 서울대학교 대학원 졸업(법학석사) (전) 제43대 검찰총장\n#&gt;                          career2    dugsu dugyul\n#&gt; 1 (전) 서울중앙지방검찰청 검사장 16394815  48.56"
  },
  {
    "objectID": "legislators.html#국회의원",
    "href": "legislators.html#국회의원",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = legislator_code[8],\n                              sgTypecode = \"2\",\n                              sdName = \"서울특별시\",\n                              sggName = \"종로구\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid sggName     sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          2 100138535  종로구 서울특별시  종로구    2           \n#&gt;     jdName   name hanjaName gender birthday age                            addr\n#&gt; 1 국민의힘 최재형    崔在亨     남 19560902  65 서울특별시 양천구 목동중앙로7길\n#&gt;   jobId    job eduId                    edu      career1          career2 dugsu\n#&gt; 1    75 정당인    68 서울대학교 법학과 졸업 (전)감사원장 (전)사법연수원장 49637\n#&gt;   dugyul\n#&gt; 1  52.09"
  },
  {
    "objectID": "legislators.html#선거구",
    "href": "legislators.html#선거구",
    "title": "지도제작 대회",
    "section": "",
    "text": "선거종류코드(sgTypecode): (0) 대표선거명, (1)대통령,(2)국회의원,(3)시도지사,(4)구시군장,(5)시도의원,(6)구시군의회의원,(7)국회의원비례대표,(8)광역의원비례대표,(9)기초의원비례대표,(10)교육의원,(11)교육감\n\n\n코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                query = list(sgId = legislator_code[7],\n                              sgTypecode = \"2\",\n                              numOfRows =  \"1000\",\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getCommonSggCodeList$item\n\nresponse_tbl\n#&gt;     num     sgId sgTypecode                    sggName         sdName\n#&gt; 1     1 20200415          2                     종로구     서울특별시\n#&gt; 2     2 20200415          2               중구성동구갑     서울특별시\n#&gt; 3     3 20200415          2               중구성동구을     서울특별시\n#&gt; 4     4 20200415          2                     용산구     서울특별시\n#&gt; 5     5 20200415          2                   광진구갑     서울특별시\n#&gt; 6     6 20200415          2                   광진구을     서울특별시\n#&gt; 7     7 20200415          2                 동대문구갑     서울특별시\n#&gt; 8     8 20200415          2                 동대문구을     서울특별시\n#&gt; 9     9 20200415          2                   중랑구갑     서울특별시\n#&gt; 10   10 20200415          2                   중랑구을     서울특별시\n#&gt; 11   11 20200415          2                   성북구갑     서울특별시\n#&gt; 12   12 20200415          2                   성북구을     서울특별시\n#&gt; 13   13 20200415          2                   강북구갑     서울특별시\n#&gt; 14   14 20200415          2                   강북구을     서울특별시\n#&gt; 15   15 20200415          2                   도봉구갑     서울특별시\n#&gt; 16   16 20200415          2                   도봉구을     서울특별시\n#&gt; 17   17 20200415          2                   노원구갑     서울특별시\n#&gt; 18   18 20200415          2                   노원구을     서울특별시\n#&gt; 19   19 20200415          2                   노원구병     서울특별시\n#&gt; 20   20 20200415          2                   은평구갑     서울특별시\n#&gt; 21   21 20200415          2                   은평구을     서울특별시\n#&gt; 22   22 20200415          2                 서대문구갑     서울특별시\n#&gt; 23   23 20200415          2                 서대문구을     서울특별시\n#&gt; 24   24 20200415          2                   마포구갑     서울특별시\n#&gt; 25   25 20200415          2                   마포구을     서울특별시\n#&gt; 26   26 20200415          2                   양천구갑     서울특별시\n#&gt; 27   27 20200415          2                   양천구을     서울특별시\n#&gt; 28   28 20200415          2                   강서구갑     서울특별시\n#&gt; 29   29 20200415          2                   강서구을     서울특별시\n#&gt; 30   30 20200415          2                   강서구병     서울특별시\n#&gt; 31   31 20200415          2                   구로구갑     서울특별시\n#&gt; 32   32 20200415          2                   구로구을     서울특별시\n#&gt; 33   33 20200415          2                     금천구     서울특별시\n#&gt; 34   34 20200415          2                 영등포구갑     서울특별시\n#&gt; 35   35 20200415          2                 영등포구을     서울특별시\n#&gt; 36   36 20200415          2                   동작구갑     서울특별시\n#&gt; 37   37 20200415          2                   동작구을     서울특별시\n#&gt; 38   38 20200415          2                   관악구갑     서울특별시\n#&gt; 39   39 20200415          2                   관악구을     서울특별시\n#&gt; 40   40 20200415          2                   서초구갑     서울특별시\n#&gt; 41   41 20200415          2                   서초구을     서울특별시\n#&gt; 42   42 20200415          2                   강남구갑     서울특별시\n#&gt; 43   43 20200415          2                   강남구을     서울특별시\n#&gt; 44   44 20200415          2                   강남구병     서울특별시\n#&gt; 45   45 20200415          2                   송파구갑     서울특별시\n#&gt; 46   46 20200415          2                   송파구을     서울특별시\n#&gt; 47   47 20200415          2                   송파구병     서울특별시\n#&gt; 48   48 20200415          2                   강동구갑     서울특별시\n#&gt; 49   49 20200415          2                   강동구을     서울특별시\n#&gt; 50   50 20200415          2                 중구영도구     부산광역시\n#&gt; 51   51 20200415          2                   서구동구     부산광역시\n#&gt; 52   52 20200415          2                 부산진구갑     부산광역시\n#&gt; 53   53 20200415          2                 부산진구을     부산광역시\n#&gt; 54   54 20200415          2                     동래구     부산광역시\n#&gt; 55   55 20200415          2                     남구갑     부산광역시\n#&gt; 56   56 20200415          2                     남구을     부산광역시\n#&gt; 57   57 20200415          2               북구강서구갑     부산광역시\n#&gt; 58   58 20200415          2               북구강서구을     부산광역시\n#&gt; 59   59 20200415          2                 해운대구갑     부산광역시\n#&gt; 60   60 20200415          2                 해운대구을     부산광역시\n#&gt; 61   61 20200415          2                   사하구갑     부산광역시\n#&gt; 62   62 20200415          2                   사하구을     부산광역시\n#&gt; 63   63 20200415          2                     금정구     부산광역시\n#&gt; 64   64 20200415          2                     연제구     부산광역시\n#&gt; 65   65 20200415          2                     수영구     부산광역시\n#&gt; 66   66 20200415          2                     사상구     부산광역시\n#&gt; 67   67 20200415          2                     기장군     부산광역시\n#&gt; 68   68 20200415          2                   중구남구     대구광역시\n#&gt; 69   69 20200415          2                     동구갑     대구광역시\n#&gt; 70   70 20200415          2                     동구을     대구광역시\n#&gt; 71   71 20200415          2                       서구     대구광역시\n#&gt; 72   72 20200415          2                     북구갑     대구광역시\n#&gt; 73   73 20200415          2                     북구을     대구광역시\n#&gt; 74   74 20200415          2                   수성구갑     대구광역시\n#&gt; 75   75 20200415          2                   수성구을     대구광역시\n#&gt; 76   76 20200415          2                   달서구갑     대구광역시\n#&gt; 77   77 20200415          2                   달서구을     대구광역시\n#&gt; 78   78 20200415          2                   달서구병     대구광역시\n#&gt; 79   79 20200415          2                     달성군     대구광역시\n#&gt; 80   80 20200415          2           중구강화군옹진군     인천광역시\n#&gt; 81   81 20200415          2             동구미추홀구갑     인천광역시\n#&gt; 82   82 20200415          2             동구미추홀구을     인천광역시\n#&gt; 83   83 20200415          2                   연수구갑     인천광역시\n#&gt; 84   84 20200415          2                   연수구을     인천광역시\n#&gt; 85   85 20200415          2                   남동구갑     인천광역시\n#&gt; 86   86 20200415          2                   남동구을     인천광역시\n#&gt; 87   87 20200415          2                   부평구갑     인천광역시\n#&gt; 88   88 20200415          2                   부평구을     인천광역시\n#&gt; 89   89 20200415          2                   계양구갑     인천광역시\n#&gt; 90   90 20200415          2                   계양구을     인천광역시\n#&gt; 91   91 20200415          2                     서구갑     인천광역시\n#&gt; 92   92 20200415          2                     서구을     인천광역시\n#&gt; 93   93 20200415          2                 동구남구갑     광주광역시\n#&gt; 94   94 20200415          2                 동구남구을     광주광역시\n#&gt; 95   95 20200415          2                     서구갑     광주광역시\n#&gt; 96   96 20200415          2                     서구을     광주광역시\n#&gt; 97   97 20200415          2                     북구갑     광주광역시\n#&gt; 98   98 20200415          2                     북구을     광주광역시\n#&gt; 99   99 20200415          2                   광산구갑     광주광역시\n#&gt; 100 100 20200415          2                   광산구을     광주광역시\n#&gt; 101 101 20200415          2                       동구     대전광역시\n#&gt; 102 102 20200415          2                       중구     대전광역시\n#&gt; 103 103 20200415          2                     서구갑     대전광역시\n#&gt; 104 104 20200415          2                     서구을     대전광역시\n#&gt; 105 105 20200415          2                   유성구갑     대전광역시\n#&gt; 106 106 20200415          2                   유성구을     대전광역시\n#&gt; 107 107 20200415          2                     대덕구     대전광역시\n#&gt; 108 108 20200415          2                       중구     울산광역시\n#&gt; 109 109 20200415          2                     남구갑     울산광역시\n#&gt; 110 110 20200415          2                     남구을     울산광역시\n#&gt; 111 111 20200415          2                       동구     울산광역시\n#&gt; 112 112 20200415          2                       북구     울산광역시\n#&gt; 113 113 20200415          2                     울주군     울산광역시\n#&gt; 114 114 20200415          2           세종특별자치시갑 세종특별자치시\n#&gt; 115 115 20200415          2           세종특별자치시을 세종특별자치시\n#&gt; 116 116 20200415          2                   수원시갑         경기도\n#&gt; 117 117 20200415          2                   수원시을         경기도\n#&gt; 118 118 20200415          2                   수원시병         경기도\n#&gt; 119 119 20200415          2                   수원시정         경기도\n#&gt; 120 120 20200415          2                   수원시무         경기도\n#&gt; 121 121 20200415          2               성남시수정구         경기도\n#&gt; 122 122 20200415          2               성남시중원구         경기도\n#&gt; 123 123 20200415          2             성남시분당구갑         경기도\n#&gt; 124 124 20200415          2             성남시분당구을         경기도\n#&gt; 125 125 20200415          2                 의정부시갑         경기도\n#&gt; 126 126 20200415          2                 의정부시을         경기도\n#&gt; 127 127 20200415          2               안양시만안구         경기도\n#&gt; 128 128 20200415          2             안양시동안구갑         경기도\n#&gt; 129 129 20200415          2             안양시동안구을         경기도\n#&gt; 130 130 20200415          2                   부천시갑         경기도\n#&gt; 131 131 20200415          2                   부천시을         경기도\n#&gt; 132 132 20200415          2                   부천시병         경기도\n#&gt; 133 133 20200415          2                   부천시정         경기도\n#&gt; 134 134 20200415          2                   광명시갑         경기도\n#&gt; 135 135 20200415          2                   광명시을         경기도\n#&gt; 136 136 20200415          2                   평택시갑         경기도\n#&gt; 137 137 20200415          2                   평택시을         경기도\n#&gt; 138 138 20200415          2             동두천시연천군         경기도\n#&gt; 139 139 20200415          2             안산시상록구갑         경기도\n#&gt; 140 140 20200415          2             안산시상록구을         경기도\n#&gt; 141 141 20200415          2             안산시단원구갑         경기도\n#&gt; 142 142 20200415          2             안산시단원구을         경기도\n#&gt; 143 143 20200415          2                   고양시갑         경기도\n#&gt; 144 144 20200415          2                   고양시을         경기도\n#&gt; 145 145 20200415          2                   고양시병         경기도\n#&gt; 146 146 20200415          2                   고양시정         경기도\n#&gt; 147 147 20200415          2               의왕시과천시         경기도\n#&gt; 148 148 20200415          2                     구리시         경기도\n#&gt; 149 149 20200415          2                 남양주시갑         경기도\n#&gt; 150 150 20200415          2                 남양주시을         경기도\n#&gt; 151 151 20200415          2                 남양주시병         경기도\n#&gt; 152 152 20200415          2                     오산시         경기도\n#&gt; 153 153 20200415          2                   시흥시갑         경기도\n#&gt; 154 154 20200415          2                   시흥시을         경기도\n#&gt; 155 155 20200415          2                     군포시         경기도\n#&gt; 156 156 20200415          2                     하남시         경기도\n#&gt; 157 157 20200415          2                   용인시갑         경기도\n#&gt; 158 158 20200415          2                   용인시을         경기도\n#&gt; 159 159 20200415          2                   용인시병         경기도\n#&gt; 160 160 20200415          2                   용인시정         경기도\n#&gt; 161 161 20200415          2                   파주시갑         경기도\n#&gt; 162 162 20200415          2                   파주시을         경기도\n#&gt; 163 163 20200415          2                     이천시         경기도\n#&gt; 164 164 20200415          2                     안성시         경기도\n#&gt; 165 165 20200415          2                   김포시갑         경기도\n#&gt; 166 166 20200415          2                   김포시을         경기도\n#&gt; 167 167 20200415          2                   화성시갑         경기도\n#&gt; 168 168 20200415          2                   화성시을         경기도\n#&gt; 169 169 20200415          2                   화성시병         경기도\n#&gt; 170 170 20200415          2                   광주시갑         경기도\n#&gt; 171 171 20200415          2                   광주시을         경기도\n#&gt; 172 172 20200415          2                     양주시         경기도\n#&gt; 173 173 20200415          2               포천시가평군         경기도\n#&gt; 174 174 20200415          2               여주시양평군         경기도\n#&gt; 175 175 20200415          2 춘천시철원군화천군양구군갑         강원도\n#&gt; 176 176 20200415          2 춘천시철원군화천군양구군을         강원도\n#&gt; 177 177 20200415          2                   원주시갑         강원도\n#&gt; 178 178 20200415          2                   원주시을         강원도\n#&gt; 179 179 20200415          2                     강릉시         강원도\n#&gt; 180 180 20200415          2   동해시태백시삼척시정선군         강원도\n#&gt; 181 181 20200415          2   속초시인제군고성군양양군         강원도\n#&gt; 182 182 20200415          2   홍천군횡성군영월군평창군         강원도\n#&gt; 183 183 20200415          2               청주시상당구       충청북도\n#&gt; 184 184 20200415          2               청주시서원구       충청북도\n#&gt; 185 185 20200415          2               청주시흥덕구       충청북도\n#&gt; 186 186 20200415          2               청주시청원구       충청북도\n#&gt; 187 187 20200415          2                     충주시       충청북도\n#&gt; 188 188 20200415          2               제천시단양군       충청북도\n#&gt; 189 189 20200415          2   보은군옥천군영동군괴산군       충청북도\n#&gt; 190 190 20200415          2         증평군진천군음성군       충청북도\n#&gt; 191 191 20200415          2                   천안시갑       충청남도\n#&gt; 192 192 20200415          2                   천안시을       충청남도\n#&gt; 193 193 20200415          2                   천안시병       충청남도\n#&gt; 194 194 20200415          2         공주시부여군청양군       충청남도\n#&gt; 195 195 20200415          2               보령시서천군       충청남도\n#&gt; 196 196 20200415          2                   아산시갑       충청남도\n#&gt; 197 197 20200415          2                   아산시을       충청남도\n#&gt; 198 198 20200415          2               서산시태안군       충청남도\n#&gt; 199 199 20200415          2         논산시계룡시금산군       충청남도\n#&gt; 200 200 20200415          2                     당진시       충청남도\n#&gt; 201 201 20200415          2               홍성군예산군       충청남도\n#&gt; 202 202 20200415          2                   전주시갑       전라북도\n#&gt; 203 203 20200415          2                   전주시을       전라북도\n#&gt; 204 204 20200415          2                   전주시병       전라북도\n#&gt; 205 205 20200415          2                     군산시       전라북도\n#&gt; 206 206 20200415          2                   익산시갑       전라북도\n#&gt; 207 207 20200415          2                   익산시을       전라북도\n#&gt; 208 208 20200415          2               정읍시고창군       전라북도\n#&gt; 209 209 20200415          2         남원시임실군순창군       전라북도\n#&gt; 210 210 20200415          2               김제시부안군       전라북도\n#&gt; 211 211 20200415          2   완주군진안군무주군장수군       전라북도\n#&gt; 212 212 20200415          2                     목포시       전라남도\n#&gt; 213 213 20200415          2                   여수시갑       전라남도\n#&gt; 214 214 20200415          2                   여수시을       전라남도\n#&gt; 215 215 20200415          2 순천시광양시곡성군구례군갑       전라남도\n#&gt; 216 216 20200415          2 순천시광양시곡성군구례군을       전라남도\n#&gt; 217 217 20200415          2               나주시화순군       전라남도\n#&gt; 218 218 20200415          2   담양군함평군영광군장성군       전라남도\n#&gt; 219 219 20200415          2   고흥군보성군장흥군강진군       전라남도\n#&gt; 220 220 20200415          2         해남군완도군진도군       전라남도\n#&gt; 221 221 20200415          2         영암군무안군신안군       전라남도\n#&gt; 222 222 20200415          2                 포항시북구       경상북도\n#&gt; 223 223 20200415          2           포항시남구울릉군       경상북도\n#&gt; 224 224 20200415          2                     경주시       경상북도\n#&gt; 225 225 20200415          2                     김천시       경상북도\n#&gt; 226 226 20200415          2               안동시예천군       경상북도\n#&gt; 227 227 20200415          2                   구미시갑       경상북도\n#&gt; 228 228 20200415          2                   구미시을       경상북도\n#&gt; 229 229 20200415          2   영주시영양군봉화군울진군       경상북도\n#&gt; 230 230 20200415          2               영천시청도군       경상북도\n#&gt; 231 231 20200415          2               상주시문경시       경상북도\n#&gt; 232 232 20200415          2                     경산시       경상북도\n#&gt; 233 233 20200415          2   군위군의성군청송군영덕군       경상북도\n#&gt; 234 234 20200415          2         고령군성주군칠곡군       경상북도\n#&gt; 235 235 20200415          2               창원시의창구       경상남도\n#&gt; 236 236 20200415          2               창원시성산구       경상남도\n#&gt; 237 237 20200415          2           창원시마산합포구       경상남도\n#&gt; 238 238 20200415          2           창원시마산회원구       경상남도\n#&gt; 239 239 20200415          2               창원시진해구       경상남도\n#&gt; 240 240 20200415          2                   진주시갑       경상남도\n#&gt; 241 241 20200415          2                   진주시을       경상남도\n#&gt; 242 242 20200415          2               통영시고성군       경상남도\n#&gt; 243 243 20200415          2         사천시남해군하동군       경상남도\n#&gt; 244 244 20200415          2                   김해시갑       경상남도\n#&gt; 245 245 20200415          2                   김해시을       경상남도\n#&gt; 246 246 20200415          2   밀양시의령군함안군창녕군       경상남도\n#&gt; 247 247 20200415          2                     거제시       경상남도\n#&gt; 248 248 20200415          2                   양산시갑       경상남도\n#&gt; 249 249 20200415          2                   양산시을       경상남도\n#&gt; 250 250 20200415          2   산청군함양군거창군합천군       경상남도\n#&gt; 251 251 20200415          2                   제주시갑 제주특별자치도\n#&gt; 252 252 20200415          2                   제주시을 제주특별자치도\n#&gt; 253 253 20200415          2                   서귀포시 제주특별자치도\n#&gt;              wiwName sggJungsu sOrder\n#&gt; 1             종로구         1      1\n#&gt; 2             성동구         1      2\n#&gt; 3               중구         1      3\n#&gt; 4             용산구         1      4\n#&gt; 5             광진구         1      5\n#&gt; 6             광진구         1      6\n#&gt; 7           동대문구         1      7\n#&gt; 8           동대문구         1      8\n#&gt; 9             중랑구         1      9\n#&gt; 10            중랑구         1     10\n#&gt; 11            성북구         1     11\n#&gt; 12            성북구         1     12\n#&gt; 13            강북구         1     13\n#&gt; 14            강북구         1     14\n#&gt; 15            도봉구         1     15\n#&gt; 16            도봉구         1     16\n#&gt; 17            노원구         1     17\n#&gt; 18            노원구         1     18\n#&gt; 19            노원구         1     19\n#&gt; 20            은평구         1     20\n#&gt; 21            은평구         1     21\n#&gt; 22          서대문구         1     22\n#&gt; 23          서대문구         1     23\n#&gt; 24            마포구         1     24\n#&gt; 25            마포구         1     25\n#&gt; 26            양천구         1     26\n#&gt; 27            양천구         1     27\n#&gt; 28            강서구         1     28\n#&gt; 29            강서구         1     29\n#&gt; 30            강서구         1     30\n#&gt; 31            구로구         1     31\n#&gt; 32            구로구         1     32\n#&gt; 33            금천구         1     33\n#&gt; 34          영등포구         1     34\n#&gt; 35          영등포구         1     35\n#&gt; 36            동작구         1     36\n#&gt; 37            동작구         1     37\n#&gt; 38            관악구         1     38\n#&gt; 39            관악구         1     39\n#&gt; 40            서초구         1     40\n#&gt; 41            서초구         1     41\n#&gt; 42            강남구         1     42\n#&gt; 43            강남구         1     43\n#&gt; 44            강남구         1     44\n#&gt; 45            송파구         1     45\n#&gt; 46            송파구         1     46\n#&gt; 47            송파구         1     47\n#&gt; 48            강동구         1     48\n#&gt; 49            강동구         1     49\n#&gt; 50            영도구         1     50\n#&gt; 51              서구         1     51\n#&gt; 52          부산진구         1     52\n#&gt; 53          부산진구         1     53\n#&gt; 54            동래구         1     54\n#&gt; 55              남구         1     55\n#&gt; 56              남구         1     56\n#&gt; 57              북구         1     57\n#&gt; 58            강서구         1     58\n#&gt; 59          해운대구         1     59\n#&gt; 60          해운대구         1     60\n#&gt; 61            사하구         1     61\n#&gt; 62            사하구         1     62\n#&gt; 63            금정구         1     63\n#&gt; 64            연제구         1     64\n#&gt; 65            수영구         1     65\n#&gt; 66            사상구         1     66\n#&gt; 67            기장군         1     67\n#&gt; 68              남구         1     68\n#&gt; 69              동구         1     69\n#&gt; 70              동구         1     70\n#&gt; 71              서구         1     71\n#&gt; 72              북구         1     72\n#&gt; 73              북구         1     73\n#&gt; 74            수성구         1     74\n#&gt; 75            수성구         1     75\n#&gt; 76            달서구         1     76\n#&gt; 77            달서구         1     77\n#&gt; 78            달서구         1     78\n#&gt; 79            달성군         1     79\n#&gt; 80              중구         1     80\n#&gt; 81          미추홀구         1     81\n#&gt; 82          미추홀구         1     82\n#&gt; 83            연수구         1     83\n#&gt; 84            연수구         1     84\n#&gt; 85            남동구         1     85\n#&gt; 86            남동구         1     86\n#&gt; 87            부평구         1     87\n#&gt; 88            부평구         1     88\n#&gt; 89            계양구         1     89\n#&gt; 90            계양구         1     90\n#&gt; 91              서구         1     91\n#&gt; 92              서구         1     92\n#&gt; 93              남구         1     93\n#&gt; 94              동구         1     94\n#&gt; 95              서구         1     95\n#&gt; 96              서구         1     96\n#&gt; 97              북구         1     97\n#&gt; 98              북구         1     98\n#&gt; 99            광산구         1     99\n#&gt; 100           광산구         1    100\n#&gt; 101             동구         1    101\n#&gt; 102             중구         1    102\n#&gt; 103             서구         1    103\n#&gt; 104             서구         1    104\n#&gt; 105           유성구         1    105\n#&gt; 106           유성구         1    106\n#&gt; 107           대덕구         1    107\n#&gt; 108             중구         1    108\n#&gt; 109             남구         1    109\n#&gt; 110             남구         1    110\n#&gt; 111             동구         1    111\n#&gt; 112             북구         1    112\n#&gt; 113           울주군         1    113\n#&gt; 114   세종특별자치시         1    114\n#&gt; 115   세종특별자치시         1    115\n#&gt; 116     수원시장안구         1    116\n#&gt; 117     수원시권선구         1    117\n#&gt; 118     수원시팔달구         1    118\n#&gt; 119     수원시영통구         1    119\n#&gt; 120     수원시권선구         1    120\n#&gt; 121     성남시수정구         1    121\n#&gt; 122     성남시중원구         1    122\n#&gt; 123     성남시분당구         1    123\n#&gt; 124     성남시분당구         1    124\n#&gt; 125         의정부시         1    125\n#&gt; 126         의정부시         1    126\n#&gt; 127     안양시만안구         1    127\n#&gt; 128     안양시동안구         1    128\n#&gt; 129     안양시동안구         1    129\n#&gt; 130           부천시         1    130\n#&gt; 131           부천시         1    131\n#&gt; 132           부천시         1    132\n#&gt; 133           부천시         1    133\n#&gt; 134           광명시         1    134\n#&gt; 135           광명시         1    135\n#&gt; 136           평택시         1    136\n#&gt; 137           평택시         1    137\n#&gt; 138         동두천시         1    138\n#&gt; 139     안산시상록구         1    139\n#&gt; 140     안산시상록구         1    140\n#&gt; 141     안산시단원구         1    141\n#&gt; 142     안산시단원구         1    142\n#&gt; 143     고양시덕양구         1    143\n#&gt; 144     고양시덕양구         1    144\n#&gt; 145   고양시일산동구         1    145\n#&gt; 146   고양시일산서구         1    146\n#&gt; 147           의왕시         1    147\n#&gt; 148           구리시         1    148\n#&gt; 149         남양주시         1    149\n#&gt; 150         남양주시         1    150\n#&gt; 151         남양주시         1    151\n#&gt; 152           오산시         1    152\n#&gt; 153           시흥시         1    153\n#&gt; 154           시흥시         1    154\n#&gt; 155           군포시         1    155\n#&gt; 156           하남시         1    156\n#&gt; 157     용인시처인구         1    157\n#&gt; 158     용인시기흥구         1    158\n#&gt; 159     용인시수지구         1    159\n#&gt; 160     용인시기흥구         1    160\n#&gt; 161           파주시         1    161\n#&gt; 162           파주시         1    162\n#&gt; 163           이천시         1    163\n#&gt; 164           안성시         1    164\n#&gt; 165           김포시         1    165\n#&gt; 166           김포시         1    166\n#&gt; 167           화성시         1    167\n#&gt; 168           화성시         1    168\n#&gt; 169           화성시         1    169\n#&gt; 170           광주시         1    170\n#&gt; 171           광주시         1    171\n#&gt; 172           양주시         1    172\n#&gt; 173           포천시         1    173\n#&gt; 174           여주시         1    174\n#&gt; 175           춘천시         1    175\n#&gt; 176           춘천시         1    176\n#&gt; 177           원주시         1    177\n#&gt; 178           원주시         1    178\n#&gt; 179           강릉시         1    179\n#&gt; 180           동해시         1    180\n#&gt; 181           속초시         1    181\n#&gt; 182           영월군         1    182\n#&gt; 183     청주시상당구         1    183\n#&gt; 184     청주시서원구         1    184\n#&gt; 185     청주시흥덕구         1    185\n#&gt; 186     청주시청원구         1    186\n#&gt; 187           충주시         1    187\n#&gt; 188           제천시         1    188\n#&gt; 189           영동군         1    189\n#&gt; 190           음성군         1    190\n#&gt; 191     천안시동남구         1    191\n#&gt; 192     천안시서북구         1    192\n#&gt; 193     천안시동남구         1    193\n#&gt; 194           공주시         1    194\n#&gt; 195           보령시         1    195\n#&gt; 196           아산시         1    196\n#&gt; 197           아산시         1    197\n#&gt; 198           서산시         1    198\n#&gt; 199           논산시         1    199\n#&gt; 200           당진시         1    200\n#&gt; 201           홍성군         1    201\n#&gt; 202     전주시완산구         1    202\n#&gt; 203     전주시완산구         1    203\n#&gt; 204     전주시덕진구         1    204\n#&gt; 205           군산시         1    205\n#&gt; 206           익산시         1    206\n#&gt; 207           익산시         1    207\n#&gt; 208           정읍시         1    208\n#&gt; 209           남원시         1    209\n#&gt; 210           김제시         1    210\n#&gt; 211           완주군         1    211\n#&gt; 212           목포시         1    212\n#&gt; 213           여수시         1    213\n#&gt; 214           여수시         1    214\n#&gt; 215           순천시         1    215\n#&gt; 216           광양시         1    216\n#&gt; 217           나주시         1    217\n#&gt; 218           영광군         1    218\n#&gt; 219           장흥군         1    219\n#&gt; 220           해남군         1    220\n#&gt; 221           무안군         1    221\n#&gt; 222       포항시북구         1    222\n#&gt; 223       포항시남구         1    223\n#&gt; 224           경주시         1    224\n#&gt; 225           김천시         1    225\n#&gt; 226           안동시         1    226\n#&gt; 227           구미시         1    227\n#&gt; 228           구미시         1    228\n#&gt; 229           영주시         1    229\n#&gt; 230           영천시         1    230\n#&gt; 231           상주시         1    231\n#&gt; 232           경산시         1    232\n#&gt; 233           의성군         1    233\n#&gt; 234           칠곡군         1    234\n#&gt; 235     창원시의창구         1    235\n#&gt; 236     창원시성산구         1    236\n#&gt; 237 창원시마산합포구         1    237\n#&gt; 238 창원시마산회원구         1    238\n#&gt; 239     창원시진해구         1    239\n#&gt; 240           진주시         1    240\n#&gt; 241           진주시         1    241\n#&gt; 242           통영시         1    242\n#&gt; 243           사천시         1    243\n#&gt; 244           김해시         1    244\n#&gt; 245           김해시         1    245\n#&gt; 246           밀양시         1    246\n#&gt; 247           거제시         1    247\n#&gt; 248           양산시         1    248\n#&gt; 249           양산시         1    249\n#&gt; 250           거창군         1    250\n#&gt; 251           제주시         1    251\n#&gt; 252           제주시         1    252\n#&gt; 253         서귀포시         1    253\n\n\n\n\n코드\nlegislator_raw &lt;- code_election |&gt; \n  filter(str_detect(선거명, \"국회의원\"),\n         선거구분 != \"0\") \n\nget_precinct &lt;- function(legislator_cd = \"20200415\", \n                         sgTypecode = \"2\") {\n  # httr의 GET 함수로 데이터를 추출한다\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                  query = list(sgId = legislator_cd,\n                                sgTypecode = sgTypecode,\n                                numOfRows =  \"1000\",\n                                resultType = \"json\",\n                                serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n  \n  # 응답 상태와 내용을 확인한다\n  print(status_code(response))\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getCommonSggCodeList$item\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_precinct(\"20220309\")\n#&gt; [1] 200\n#&gt; # A tibble: 5 × 8\n#&gt;   num   sgId     sgTypecode sggName      sdName     wiwName     sggJungsu sOrder\n#&gt;   &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt; \n#&gt; 1 1     20220309 2          종로구       서울특별시 종로구      1         1     \n#&gt; 2 2     20220309 2          서초구갑     서울특별시 서초구      1         40    \n#&gt; 3 3     20220309 2          중구남구     대구광역시 남구        1         68    \n#&gt; 4 4     20220309 2          안성시       경기도     안성시      1         164   \n#&gt; 5 5     20220309 2          청주시상당구 충청북도   청주시상당… 1         183\n\n\n\n\n코드\n# 재보궐 제외\n# legislator_tbl &lt;- legislator_raw |&gt; \n#   filter(선거코드 %in% c(\"20040415\", \"20080409\", \"20120411\", \n#                       \"20160413\", \"20200415\")) \n\nlegislator_tbl &lt;- legislator_raw |&gt; \n  mutate(data = map2(선거코드, 선거구분, get_precinct))\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n\nprecinct_tbl &lt;- legislator_tbl |&gt; \n  unnest(data)\n\nprecinct_tbl\n#&gt; # A tibble: 1,264 × 11\n#&gt;    선거코드 선거명       선거구분 num   sgId   sgTypecode sggName sdName wiwName\n#&gt;    &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  \n#&gt;  1 20040415 국회의원선거 2        1     20040… 2          종로구  서울…  종로구 \n#&gt;  2 20040415 국회의원선거 2        2     20040… 2          중구    서울…  중구(… \n#&gt;  3 20040415 국회의원선거 2        3     20040… 2          용산구  서울…  용산구 \n#&gt;  4 20040415 국회의원선거 2        4     20040… 2          성동구… 서울…  성동구 \n#&gt;  5 20040415 국회의원선거 2        5     20040… 2          성동구… 서울…  성동구 \n#&gt;  6 20040415 국회의원선거 2        6     20040… 2          광진구… 서울…  광진구 \n#&gt;  7 20040415 국회의원선거 2        7     20040… 2          광진구… 서울…  광진구 \n#&gt;  8 20040415 국회의원선거 2        8     20040… 2          동대문… 서울…  동대문…\n#&gt;  9 20040415 국회의원선거 2        9     20040… 2          동대문… 서울…  동대문…\n#&gt; 10 20040415 국회의원선거 2        10    20040… 2          중랑구… 서울…  중랑구 \n#&gt; # ℹ 1,254 more rows\n#&gt; # ℹ 2 more variables: sggJungsu &lt;chr&gt;, sOrder &lt;chr&gt;"
  },
  {
    "objectID": "legislators.html#국회의원-당선인",
    "href": "legislators.html#국회의원-당선인",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nget_elected &lt;- function(sgId = \"20200415\", sgTypecode = \"2\",\n                        sdName = \"서울특별시\",sggName = \"종로구\") {\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n              query = list(sgId = sgId,\n                           sgTypecode = sgTypecode,\n                           sdName = sdName,\n                           sggName = sggName,\n                           numOfRows = 100,\n                           resultType = \"json\",\n                           serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n  # 응답 상태와 내용을 확인한다\n  cat(status_code(response), \": \", sgId, sgTypecode, sdName, sggName, \"\\n\")\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getWinnerInfoInqire$item\n  \n  Sys.sleep(runif(1, 0,0.5))\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_elected()\n#&gt; 200 :  20200415 2 서울특별시 종로구\n#&gt; # A tibble: 1 × 24\n#&gt;   num   sgId    sgTypecode huboid sggName sdName wiwName giho  gihoSangse jdName\n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt; \n#&gt; 1 1     202004… 2          10013… 종로구  서울…  종로구  1     \"\"         더불… \n#&gt; # ℹ 14 more variables: name &lt;chr&gt;, hanjaName &lt;chr&gt;, gender &lt;chr&gt;,\n#&gt; #   birthday &lt;chr&gt;, age &lt;chr&gt;, addr &lt;chr&gt;, jobId &lt;chr&gt;, job &lt;chr&gt;, eduId &lt;chr&gt;,\n#&gt; #   edu &lt;chr&gt;, career1 &lt;chr&gt;, career2 &lt;chr&gt;, dugsu &lt;chr&gt;, dugyul &lt;chr&gt;\n\n\n\n\n코드# sido_code &lt;- tribble(\n# ~\"시도코드\", ~\"시도명\",\n# \"1100\", \"서울특별시\",\n# \"2600\", \"부산광역시\",\n# \"2700\", \"대구광역시\",\n# \"2800\", \"인천광역시\",\n# \"2900\", \"광주광역시\",\n# \"3000\", \"대전광역시\",\n# \"3100\", \"울산광역시\",\n# \"5100\", \"세종특별자치시\",\n# \"4100\", \"경기도\",\n# \"4200\", \"강원도\",\n# \"4300\", \"충청북도\",\n# \"4400\", \"충청남도\",\n# \"4500\", \"전라북도\",\n# \"4600\", \"전라남도\",\n# \"4700\", \"경상북도\",\n# \"4800\", \"경상남도\",\n# \"4900\", \"제주특별자치도\")\n\nelected_raw &lt;- legislator_tbl |&gt; \n  filter(선거코드 == \"20200415\",\n         선거구분 == \"2\") |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected))\n\nelected_tbl &lt;- elected_raw |&gt; \n  select(data) |&gt; \n  unnest(data)\n\n\n\n\n코드get_elected_safely &lt;- safely(get_elected, otherwise = \"error\")\n\ntotal_elected_raw &lt;- legislator_tbl |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely))\n\ntotal_elected_tbl &lt;- total_elected_raw |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\ntotal_elected_tbl |&gt; \n  write_rds(\"data/total_elected_tbl.rds\")\n\n\n\n\n코드total_elected_tbl &lt;- \n  read_rds(\"data/total_elected_tbl.rds\")\n\ntotal_elected_true &lt;- total_elected_tbl |&gt; \n  mutate(tibble = map_lgl(result, is_tibble)) |&gt; \n  filter(tibble) |&gt; \n  select(-tibble)\n\ntotal_elected_false &lt;- total_elected_raw |&gt; \n  filter(sgId == \"20120411\",\n         sdName == \"인천광역시\",\n         sggName %in% c(\"남동구을\", \"부평구갑\", \"서구강화군갑\")) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely)) |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\n\ntotal_elected_all &lt;- bind_rows(total_elected_true, total_elected_false)\n\ntotal_elected_all |&gt; \n  write_rds(\"data/total_elected_all.rds\")"
  },
  {
    "objectID": "legislators.html#국회의원-정수",
    "href": "legislators.html#국회의원-정수",
    "title": "지도제작 대회",
    "section": "\n2.1 국회의원 정수",
    "text": "2.1 국회의원 정수\n\n코드library(tidyverse)\nlibrary(gt)\n\ncode_election |&gt; \n  dplyr::filter(str_detect(선거명, \"국회의원\"),\n         선거구분 == \"0\") |&gt; \n  add_column(의원수 = c(299, 299, 300, 300, 300)) |&gt; \n  gt() |&gt; \n  gtExtras::gt_theme_538() |&gt; \n  cols_align(\"center\")\n\n\n\n\n\n선거코드\n      선거명\n      선거구분\n      의원수\n    \n\n\n20040415\n제17대 국회의원선거\n0\n299\n\n\n20080409\n제18대 국회의원선거\n0\n299\n\n\n20120411\n제19대 국회의원선거\n0\n300\n\n\n20160413\n제20대 국회의원선거\n0\n300\n\n\n20200415\n제21대 국회의원선거\n0\n300"
  },
  {
    "objectID": "legislators.html#제21대-총선",
    "href": "legislators.html#제21대-총선",
    "title": "지도제작 대회",
    "section": "\n2.2 제21대 총선",
    "text": "2.2 제21대 총선\n\n코드total_elected_all &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nelected_tbl &lt;- total_elected_all |&gt; \n  select(result) |&gt; \n  unnest(result)\n\nelected_tbl |&gt; \n  count(name, birthday, sort=TRUE) |&gt; \n  count(n) |&gt; \n  mutate(비율 = nn/sum(nn))\n#&gt; # A tibble: 5 × 3\n#&gt;       n    nn    비율\n#&gt;   &lt;int&gt; &lt;int&gt;   &lt;dbl&gt;\n#&gt; 1     1   602 0.632  \n#&gt; 2     2   196 0.206  \n#&gt; 3     3   105 0.110  \n#&gt; 4     4    42 0.0441 \n#&gt; 5     5     8 0.00839\n\n\n\n코드elected_tbl |&gt; \n  filter(sgId %in% c(\"20040415\", \"20080409\", \"20120411\", \"20160413\", \"20200415\")) |&gt; \n  count(sdName, sgId, sort = TRUE) |&gt; \n  pivot_wider(names_from = sgId, values_from = n) \n#&gt; # A tibble: 19 × 6\n#&gt;    sdName         `20160413` `20200415` `20040415` `20080409` `20120411`\n#&gt;    &lt;chr&gt;               &lt;int&gt;      &lt;int&gt;      &lt;int&gt;      &lt;int&gt;      &lt;int&gt;\n#&gt;  1 경기도                 60         59         49         51         52\n#&gt;  2 전국                   47         47         56         54         54\n#&gt;  3 서울특별시             49         49         48         48         48\n#&gt;  4 부산광역시             18         18         18         18         18\n#&gt;  5 경상남도               16         16         17         17         16\n#&gt;  6 경상북도               13         13         15         15         15\n#&gt;  7 인천광역시             13         13         12         12         12\n#&gt;  8 전라남도               10         10         13         12         11\n#&gt;  9 대구광역시             12         12         12         12         12\n#&gt; 10 전라북도               10         10         11         11         11\n#&gt; 11 충청남도               11         11         10         10         10\n#&gt; 12 강원도                  8          8          8          8          9\n#&gt; 13 광주광역시              8          8          7          8          8\n#&gt; 14 충청북도                8          8          8          8          8\n#&gt; 15 대전광역시              7          7          6          6          6\n#&gt; 16 울산광역시              6          6          6          6          6\n#&gt; 17 제주도                 NA         NA          3         NA         NA\n#&gt; 18 제주특별자치도          3          3         NA          3          3\n#&gt; 19 세종특별자치시          1          2         NA         NA          1"
  },
  {
    "objectID": "legislators.html#당선인-api",
    "href": "legislators.html#당선인-api",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(httr)\nlibrary(jsonlite)\n\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = \"20220309\",\n                              sgTypecode = \"1\",\n                              sdName = \"전국\",\n                              sggName = \"대한민국\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          1 100138362 대한민국   전국            2           \n#&gt;     jdName   name hanjaName gender birthday age                         addr\n#&gt; 1 국민의힘 윤석열    尹錫悅     남 19601218  61 서울특별시 서초구 서초중앙로\n#&gt;   jobId    job eduId                              edu              career1\n#&gt; 1    75 정치인   221 서울대학교 대학원 졸업(법학석사) (전) 제43대 검찰총장\n#&gt;                          career2    dugsu dugyul\n#&gt; 1 (전) 서울중앙지방검찰청 검사장 16394815  48.56\n\n\n\n\n코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n                query = list(sgId = legislator_code[8],\n                              sgTypecode = \"2\",\n                              sdName = \"서울특별시\",\n                              sggName = \"종로구\",\n                              pageNo = 1,\n                              numOfRows = 10,\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getWinnerInfoInqire$item\n\nresponse_tbl\n#&gt;   num     sgId sgTypecode    huboid sggName     sdName wiwName giho gihoSangse\n#&gt; 1   1 20220309          2 100138535  종로구 서울특별시  종로구    2           \n#&gt;     jdName   name hanjaName gender birthday age                            addr\n#&gt; 1 국민의힘 최재형    崔在亨     남 19560902  65 서울특별시 양천구 목동중앙로7길\n#&gt;   jobId    job eduId                    edu      career1          career2 dugsu\n#&gt; 1    75 정당인    68 서울대학교 법학과 졸업 (전)감사원장 (전)사법연수원장 49637\n#&gt;   dugyul\n#&gt; 1  52.09"
  },
  {
    "objectID": "legislators.html#국회의원-선거구",
    "href": "legislators.html#국회의원-선거구",
    "title": "지도제작 대회",
    "section": "",
    "text": "선거종류코드(sgTypecode): (0) 대표선거명, (1)대통령,(2)국회의원,(3)시도지사,(4)구시군장,(5)시도의원,(6)구시군의회의원,(7)국회의원비례대표,(8)광역의원비례대표,(9)기초의원비례대표,(10)교육의원,(11)교육감\n\n\n코드\n# httr의 GET 함수로 데이터를 추출한다\nresponse &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                query = list(sgId = legislator_code[7],\n                              sgTypecode = \"2\",\n                              numOfRows =  \"1000\",\n                              resultType = \"json\",\n                              serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n# 응답 상태와 내용을 확인한다\nprint(status_code(response))\n#&gt; [1] 200\n\nresponse_list &lt;- content(response, \"text\") |&gt; \n  fromJSON()\n\nresponse_tbl &lt;- response_list$getCommonSggCodeList$item\n\nresponse_tbl\n#&gt;     num     sgId sgTypecode                    sggName         sdName\n#&gt; 1     1 20200415          2                     종로구     서울특별시\n#&gt; 2     2 20200415          2               중구성동구갑     서울특별시\n#&gt; 3     3 20200415          2               중구성동구을     서울특별시\n#&gt; 4     4 20200415          2                     용산구     서울특별시\n#&gt; 5     5 20200415          2                   광진구갑     서울특별시\n#&gt; 6     6 20200415          2                   광진구을     서울특별시\n#&gt; 7     7 20200415          2                 동대문구갑     서울특별시\n#&gt; 8     8 20200415          2                 동대문구을     서울특별시\n#&gt; 9     9 20200415          2                   중랑구갑     서울특별시\n#&gt; 10   10 20200415          2                   중랑구을     서울특별시\n#&gt; 11   11 20200415          2                   성북구갑     서울특별시\n#&gt; 12   12 20200415          2                   성북구을     서울특별시\n#&gt; 13   13 20200415          2                   강북구갑     서울특별시\n#&gt; 14   14 20200415          2                   강북구을     서울특별시\n#&gt; 15   15 20200415          2                   도봉구갑     서울특별시\n#&gt; 16   16 20200415          2                   도봉구을     서울특별시\n#&gt; 17   17 20200415          2                   노원구갑     서울특별시\n#&gt; 18   18 20200415          2                   노원구을     서울특별시\n#&gt; 19   19 20200415          2                   노원구병     서울특별시\n#&gt; 20   20 20200415          2                   은평구갑     서울특별시\n#&gt; 21   21 20200415          2                   은평구을     서울특별시\n#&gt; 22   22 20200415          2                 서대문구갑     서울특별시\n#&gt; 23   23 20200415          2                 서대문구을     서울특별시\n#&gt; 24   24 20200415          2                   마포구갑     서울특별시\n#&gt; 25   25 20200415          2                   마포구을     서울특별시\n#&gt; 26   26 20200415          2                   양천구갑     서울특별시\n#&gt; 27   27 20200415          2                   양천구을     서울특별시\n#&gt; 28   28 20200415          2                   강서구갑     서울특별시\n#&gt; 29   29 20200415          2                   강서구을     서울특별시\n#&gt; 30   30 20200415          2                   강서구병     서울특별시\n#&gt; 31   31 20200415          2                   구로구갑     서울특별시\n#&gt; 32   32 20200415          2                   구로구을     서울특별시\n#&gt; 33   33 20200415          2                     금천구     서울특별시\n#&gt; 34   34 20200415          2                 영등포구갑     서울특별시\n#&gt; 35   35 20200415          2                 영등포구을     서울특별시\n#&gt; 36   36 20200415          2                   동작구갑     서울특별시\n#&gt; 37   37 20200415          2                   동작구을     서울특별시\n#&gt; 38   38 20200415          2                   관악구갑     서울특별시\n#&gt; 39   39 20200415          2                   관악구을     서울특별시\n#&gt; 40   40 20200415          2                   서초구갑     서울특별시\n#&gt; 41   41 20200415          2                   서초구을     서울특별시\n#&gt; 42   42 20200415          2                   강남구갑     서울특별시\n#&gt; 43   43 20200415          2                   강남구을     서울특별시\n#&gt; 44   44 20200415          2                   강남구병     서울특별시\n#&gt; 45   45 20200415          2                   송파구갑     서울특별시\n#&gt; 46   46 20200415          2                   송파구을     서울특별시\n#&gt; 47   47 20200415          2                   송파구병     서울특별시\n#&gt; 48   48 20200415          2                   강동구갑     서울특별시\n#&gt; 49   49 20200415          2                   강동구을     서울특별시\n#&gt; 50   50 20200415          2                 중구영도구     부산광역시\n#&gt; 51   51 20200415          2                   서구동구     부산광역시\n#&gt; 52   52 20200415          2                 부산진구갑     부산광역시\n#&gt; 53   53 20200415          2                 부산진구을     부산광역시\n#&gt; 54   54 20200415          2                     동래구     부산광역시\n#&gt; 55   55 20200415          2                     남구갑     부산광역시\n#&gt; 56   56 20200415          2                     남구을     부산광역시\n#&gt; 57   57 20200415          2               북구강서구갑     부산광역시\n#&gt; 58   58 20200415          2               북구강서구을     부산광역시\n#&gt; 59   59 20200415          2                 해운대구갑     부산광역시\n#&gt; 60   60 20200415          2                 해운대구을     부산광역시\n#&gt; 61   61 20200415          2                   사하구갑     부산광역시\n#&gt; 62   62 20200415          2                   사하구을     부산광역시\n#&gt; 63   63 20200415          2                     금정구     부산광역시\n#&gt; 64   64 20200415          2                     연제구     부산광역시\n#&gt; 65   65 20200415          2                     수영구     부산광역시\n#&gt; 66   66 20200415          2                     사상구     부산광역시\n#&gt; 67   67 20200415          2                     기장군     부산광역시\n#&gt; 68   68 20200415          2                   중구남구     대구광역시\n#&gt; 69   69 20200415          2                     동구갑     대구광역시\n#&gt; 70   70 20200415          2                     동구을     대구광역시\n#&gt; 71   71 20200415          2                       서구     대구광역시\n#&gt; 72   72 20200415          2                     북구갑     대구광역시\n#&gt; 73   73 20200415          2                     북구을     대구광역시\n#&gt; 74   74 20200415          2                   수성구갑     대구광역시\n#&gt; 75   75 20200415          2                   수성구을     대구광역시\n#&gt; 76   76 20200415          2                   달서구갑     대구광역시\n#&gt; 77   77 20200415          2                   달서구을     대구광역시\n#&gt; 78   78 20200415          2                   달서구병     대구광역시\n#&gt; 79   79 20200415          2                     달성군     대구광역시\n#&gt; 80   80 20200415          2           중구강화군옹진군     인천광역시\n#&gt; 81   81 20200415          2             동구미추홀구갑     인천광역시\n#&gt; 82   82 20200415          2             동구미추홀구을     인천광역시\n#&gt; 83   83 20200415          2                   연수구갑     인천광역시\n#&gt; 84   84 20200415          2                   연수구을     인천광역시\n#&gt; 85   85 20200415          2                   남동구갑     인천광역시\n#&gt; 86   86 20200415          2                   남동구을     인천광역시\n#&gt; 87   87 20200415          2                   부평구갑     인천광역시\n#&gt; 88   88 20200415          2                   부평구을     인천광역시\n#&gt; 89   89 20200415          2                   계양구갑     인천광역시\n#&gt; 90   90 20200415          2                   계양구을     인천광역시\n#&gt; 91   91 20200415          2                     서구갑     인천광역시\n#&gt; 92   92 20200415          2                     서구을     인천광역시\n#&gt; 93   93 20200415          2                 동구남구갑     광주광역시\n#&gt; 94   94 20200415          2                 동구남구을     광주광역시\n#&gt; 95   95 20200415          2                     서구갑     광주광역시\n#&gt; 96   96 20200415          2                     서구을     광주광역시\n#&gt; 97   97 20200415          2                     북구갑     광주광역시\n#&gt; 98   98 20200415          2                     북구을     광주광역시\n#&gt; 99   99 20200415          2                   광산구갑     광주광역시\n#&gt; 100 100 20200415          2                   광산구을     광주광역시\n#&gt; 101 101 20200415          2                       동구     대전광역시\n#&gt; 102 102 20200415          2                       중구     대전광역시\n#&gt; 103 103 20200415          2                     서구갑     대전광역시\n#&gt; 104 104 20200415          2                     서구을     대전광역시\n#&gt; 105 105 20200415          2                   유성구갑     대전광역시\n#&gt; 106 106 20200415          2                   유성구을     대전광역시\n#&gt; 107 107 20200415          2                     대덕구     대전광역시\n#&gt; 108 108 20200415          2                       중구     울산광역시\n#&gt; 109 109 20200415          2                     남구갑     울산광역시\n#&gt; 110 110 20200415          2                     남구을     울산광역시\n#&gt; 111 111 20200415          2                       동구     울산광역시\n#&gt; 112 112 20200415          2                       북구     울산광역시\n#&gt; 113 113 20200415          2                     울주군     울산광역시\n#&gt; 114 114 20200415          2           세종특별자치시갑 세종특별자치시\n#&gt; 115 115 20200415          2           세종특별자치시을 세종특별자치시\n#&gt; 116 116 20200415          2                   수원시갑         경기도\n#&gt; 117 117 20200415          2                   수원시을         경기도\n#&gt; 118 118 20200415          2                   수원시병         경기도\n#&gt; 119 119 20200415          2                   수원시정         경기도\n#&gt; 120 120 20200415          2                   수원시무         경기도\n#&gt; 121 121 20200415          2               성남시수정구         경기도\n#&gt; 122 122 20200415          2               성남시중원구         경기도\n#&gt; 123 123 20200415          2             성남시분당구갑         경기도\n#&gt; 124 124 20200415          2             성남시분당구을         경기도\n#&gt; 125 125 20200415          2                 의정부시갑         경기도\n#&gt; 126 126 20200415          2                 의정부시을         경기도\n#&gt; 127 127 20200415          2               안양시만안구         경기도\n#&gt; 128 128 20200415          2             안양시동안구갑         경기도\n#&gt; 129 129 20200415          2             안양시동안구을         경기도\n#&gt; 130 130 20200415          2                   부천시갑         경기도\n#&gt; 131 131 20200415          2                   부천시을         경기도\n#&gt; 132 132 20200415          2                   부천시병         경기도\n#&gt; 133 133 20200415          2                   부천시정         경기도\n#&gt; 134 134 20200415          2                   광명시갑         경기도\n#&gt; 135 135 20200415          2                   광명시을         경기도\n#&gt; 136 136 20200415          2                   평택시갑         경기도\n#&gt; 137 137 20200415          2                   평택시을         경기도\n#&gt; 138 138 20200415          2             동두천시연천군         경기도\n#&gt; 139 139 20200415          2             안산시상록구갑         경기도\n#&gt; 140 140 20200415          2             안산시상록구을         경기도\n#&gt; 141 141 20200415          2             안산시단원구갑         경기도\n#&gt; 142 142 20200415          2             안산시단원구을         경기도\n#&gt; 143 143 20200415          2                   고양시갑         경기도\n#&gt; 144 144 20200415          2                   고양시을         경기도\n#&gt; 145 145 20200415          2                   고양시병         경기도\n#&gt; 146 146 20200415          2                   고양시정         경기도\n#&gt; 147 147 20200415          2               의왕시과천시         경기도\n#&gt; 148 148 20200415          2                     구리시         경기도\n#&gt; 149 149 20200415          2                 남양주시갑         경기도\n#&gt; 150 150 20200415          2                 남양주시을         경기도\n#&gt; 151 151 20200415          2                 남양주시병         경기도\n#&gt; 152 152 20200415          2                     오산시         경기도\n#&gt; 153 153 20200415          2                   시흥시갑         경기도\n#&gt; 154 154 20200415          2                   시흥시을         경기도\n#&gt; 155 155 20200415          2                     군포시         경기도\n#&gt; 156 156 20200415          2                     하남시         경기도\n#&gt; 157 157 20200415          2                   용인시갑         경기도\n#&gt; 158 158 20200415          2                   용인시을         경기도\n#&gt; 159 159 20200415          2                   용인시병         경기도\n#&gt; 160 160 20200415          2                   용인시정         경기도\n#&gt; 161 161 20200415          2                   파주시갑         경기도\n#&gt; 162 162 20200415          2                   파주시을         경기도\n#&gt; 163 163 20200415          2                     이천시         경기도\n#&gt; 164 164 20200415          2                     안성시         경기도\n#&gt; 165 165 20200415          2                   김포시갑         경기도\n#&gt; 166 166 20200415          2                   김포시을         경기도\n#&gt; 167 167 20200415          2                   화성시갑         경기도\n#&gt; 168 168 20200415          2                   화성시을         경기도\n#&gt; 169 169 20200415          2                   화성시병         경기도\n#&gt; 170 170 20200415          2                   광주시갑         경기도\n#&gt; 171 171 20200415          2                   광주시을         경기도\n#&gt; 172 172 20200415          2                     양주시         경기도\n#&gt; 173 173 20200415          2               포천시가평군         경기도\n#&gt; 174 174 20200415          2               여주시양평군         경기도\n#&gt; 175 175 20200415          2 춘천시철원군화천군양구군갑         강원도\n#&gt; 176 176 20200415          2 춘천시철원군화천군양구군을         강원도\n#&gt; 177 177 20200415          2                   원주시갑         강원도\n#&gt; 178 178 20200415          2                   원주시을         강원도\n#&gt; 179 179 20200415          2                     강릉시         강원도\n#&gt; 180 180 20200415          2   동해시태백시삼척시정선군         강원도\n#&gt; 181 181 20200415          2   속초시인제군고성군양양군         강원도\n#&gt; 182 182 20200415          2   홍천군횡성군영월군평창군         강원도\n#&gt; 183 183 20200415          2               청주시상당구       충청북도\n#&gt; 184 184 20200415          2               청주시서원구       충청북도\n#&gt; 185 185 20200415          2               청주시흥덕구       충청북도\n#&gt; 186 186 20200415          2               청주시청원구       충청북도\n#&gt; 187 187 20200415          2                     충주시       충청북도\n#&gt; 188 188 20200415          2               제천시단양군       충청북도\n#&gt; 189 189 20200415          2   보은군옥천군영동군괴산군       충청북도\n#&gt; 190 190 20200415          2         증평군진천군음성군       충청북도\n#&gt; 191 191 20200415          2                   천안시갑       충청남도\n#&gt; 192 192 20200415          2                   천안시을       충청남도\n#&gt; 193 193 20200415          2                   천안시병       충청남도\n#&gt; 194 194 20200415          2         공주시부여군청양군       충청남도\n#&gt; 195 195 20200415          2               보령시서천군       충청남도\n#&gt; 196 196 20200415          2                   아산시갑       충청남도\n#&gt; 197 197 20200415          2                   아산시을       충청남도\n#&gt; 198 198 20200415          2               서산시태안군       충청남도\n#&gt; 199 199 20200415          2         논산시계룡시금산군       충청남도\n#&gt; 200 200 20200415          2                     당진시       충청남도\n#&gt; 201 201 20200415          2               홍성군예산군       충청남도\n#&gt; 202 202 20200415          2                   전주시갑       전라북도\n#&gt; 203 203 20200415          2                   전주시을       전라북도\n#&gt; 204 204 20200415          2                   전주시병       전라북도\n#&gt; 205 205 20200415          2                     군산시       전라북도\n#&gt; 206 206 20200415          2                   익산시갑       전라북도\n#&gt; 207 207 20200415          2                   익산시을       전라북도\n#&gt; 208 208 20200415          2               정읍시고창군       전라북도\n#&gt; 209 209 20200415          2         남원시임실군순창군       전라북도\n#&gt; 210 210 20200415          2               김제시부안군       전라북도\n#&gt; 211 211 20200415          2   완주군진안군무주군장수군       전라북도\n#&gt; 212 212 20200415          2                     목포시       전라남도\n#&gt; 213 213 20200415          2                   여수시갑       전라남도\n#&gt; 214 214 20200415          2                   여수시을       전라남도\n#&gt; 215 215 20200415          2 순천시광양시곡성군구례군갑       전라남도\n#&gt; 216 216 20200415          2 순천시광양시곡성군구례군을       전라남도\n#&gt; 217 217 20200415          2               나주시화순군       전라남도\n#&gt; 218 218 20200415          2   담양군함평군영광군장성군       전라남도\n#&gt; 219 219 20200415          2   고흥군보성군장흥군강진군       전라남도\n#&gt; 220 220 20200415          2         해남군완도군진도군       전라남도\n#&gt; 221 221 20200415          2         영암군무안군신안군       전라남도\n#&gt; 222 222 20200415          2                 포항시북구       경상북도\n#&gt; 223 223 20200415          2           포항시남구울릉군       경상북도\n#&gt; 224 224 20200415          2                     경주시       경상북도\n#&gt; 225 225 20200415          2                     김천시       경상북도\n#&gt; 226 226 20200415          2               안동시예천군       경상북도\n#&gt; 227 227 20200415          2                   구미시갑       경상북도\n#&gt; 228 228 20200415          2                   구미시을       경상북도\n#&gt; 229 229 20200415          2   영주시영양군봉화군울진군       경상북도\n#&gt; 230 230 20200415          2               영천시청도군       경상북도\n#&gt; 231 231 20200415          2               상주시문경시       경상북도\n#&gt; 232 232 20200415          2                     경산시       경상북도\n#&gt; 233 233 20200415          2   군위군의성군청송군영덕군       경상북도\n#&gt; 234 234 20200415          2         고령군성주군칠곡군       경상북도\n#&gt; 235 235 20200415          2               창원시의창구       경상남도\n#&gt; 236 236 20200415          2               창원시성산구       경상남도\n#&gt; 237 237 20200415          2           창원시마산합포구       경상남도\n#&gt; 238 238 20200415          2           창원시마산회원구       경상남도\n#&gt; 239 239 20200415          2               창원시진해구       경상남도\n#&gt; 240 240 20200415          2                   진주시갑       경상남도\n#&gt; 241 241 20200415          2                   진주시을       경상남도\n#&gt; 242 242 20200415          2               통영시고성군       경상남도\n#&gt; 243 243 20200415          2         사천시남해군하동군       경상남도\n#&gt; 244 244 20200415          2                   김해시갑       경상남도\n#&gt; 245 245 20200415          2                   김해시을       경상남도\n#&gt; 246 246 20200415          2   밀양시의령군함안군창녕군       경상남도\n#&gt; 247 247 20200415          2                     거제시       경상남도\n#&gt; 248 248 20200415          2                   양산시갑       경상남도\n#&gt; 249 249 20200415          2                   양산시을       경상남도\n#&gt; 250 250 20200415          2   산청군함양군거창군합천군       경상남도\n#&gt; 251 251 20200415          2                   제주시갑 제주특별자치도\n#&gt; 252 252 20200415          2                   제주시을 제주특별자치도\n#&gt; 253 253 20200415          2                   서귀포시 제주특별자치도\n#&gt;              wiwName sggJungsu sOrder\n#&gt; 1             종로구         1      1\n#&gt; 2             성동구         1      2\n#&gt; 3               중구         1      3\n#&gt; 4             용산구         1      4\n#&gt; 5             광진구         1      5\n#&gt; 6             광진구         1      6\n#&gt; 7           동대문구         1      7\n#&gt; 8           동대문구         1      8\n#&gt; 9             중랑구         1      9\n#&gt; 10            중랑구         1     10\n#&gt; 11            성북구         1     11\n#&gt; 12            성북구         1     12\n#&gt; 13            강북구         1     13\n#&gt; 14            강북구         1     14\n#&gt; 15            도봉구         1     15\n#&gt; 16            도봉구         1     16\n#&gt; 17            노원구         1     17\n#&gt; 18            노원구         1     18\n#&gt; 19            노원구         1     19\n#&gt; 20            은평구         1     20\n#&gt; 21            은평구         1     21\n#&gt; 22          서대문구         1     22\n#&gt; 23          서대문구         1     23\n#&gt; 24            마포구         1     24\n#&gt; 25            마포구         1     25\n#&gt; 26            양천구         1     26\n#&gt; 27            양천구         1     27\n#&gt; 28            강서구         1     28\n#&gt; 29            강서구         1     29\n#&gt; 30            강서구         1     30\n#&gt; 31            구로구         1     31\n#&gt; 32            구로구         1     32\n#&gt; 33            금천구         1     33\n#&gt; 34          영등포구         1     34\n#&gt; 35          영등포구         1     35\n#&gt; 36            동작구         1     36\n#&gt; 37            동작구         1     37\n#&gt; 38            관악구         1     38\n#&gt; 39            관악구         1     39\n#&gt; 40            서초구         1     40\n#&gt; 41            서초구         1     41\n#&gt; 42            강남구         1     42\n#&gt; 43            강남구         1     43\n#&gt; 44            강남구         1     44\n#&gt; 45            송파구         1     45\n#&gt; 46            송파구         1     46\n#&gt; 47            송파구         1     47\n#&gt; 48            강동구         1     48\n#&gt; 49            강동구         1     49\n#&gt; 50            영도구         1     50\n#&gt; 51              서구         1     51\n#&gt; 52          부산진구         1     52\n#&gt; 53          부산진구         1     53\n#&gt; 54            동래구         1     54\n#&gt; 55              남구         1     55\n#&gt; 56              남구         1     56\n#&gt; 57              북구         1     57\n#&gt; 58            강서구         1     58\n#&gt; 59          해운대구         1     59\n#&gt; 60          해운대구         1     60\n#&gt; 61            사하구         1     61\n#&gt; 62            사하구         1     62\n#&gt; 63            금정구         1     63\n#&gt; 64            연제구         1     64\n#&gt; 65            수영구         1     65\n#&gt; 66            사상구         1     66\n#&gt; 67            기장군         1     67\n#&gt; 68              남구         1     68\n#&gt; 69              동구         1     69\n#&gt; 70              동구         1     70\n#&gt; 71              서구         1     71\n#&gt; 72              북구         1     72\n#&gt; 73              북구         1     73\n#&gt; 74            수성구         1     74\n#&gt; 75            수성구         1     75\n#&gt; 76            달서구         1     76\n#&gt; 77            달서구         1     77\n#&gt; 78            달서구         1     78\n#&gt; 79            달성군         1     79\n#&gt; 80              중구         1     80\n#&gt; 81          미추홀구         1     81\n#&gt; 82          미추홀구         1     82\n#&gt; 83            연수구         1     83\n#&gt; 84            연수구         1     84\n#&gt; 85            남동구         1     85\n#&gt; 86            남동구         1     86\n#&gt; 87            부평구         1     87\n#&gt; 88            부평구         1     88\n#&gt; 89            계양구         1     89\n#&gt; 90            계양구         1     90\n#&gt; 91              서구         1     91\n#&gt; 92              서구         1     92\n#&gt; 93              남구         1     93\n#&gt; 94              동구         1     94\n#&gt; 95              서구         1     95\n#&gt; 96              서구         1     96\n#&gt; 97              북구         1     97\n#&gt; 98              북구         1     98\n#&gt; 99            광산구         1     99\n#&gt; 100           광산구         1    100\n#&gt; 101             동구         1    101\n#&gt; 102             중구         1    102\n#&gt; 103             서구         1    103\n#&gt; 104             서구         1    104\n#&gt; 105           유성구         1    105\n#&gt; 106           유성구         1    106\n#&gt; 107           대덕구         1    107\n#&gt; 108             중구         1    108\n#&gt; 109             남구         1    109\n#&gt; 110             남구         1    110\n#&gt; 111             동구         1    111\n#&gt; 112             북구         1    112\n#&gt; 113           울주군         1    113\n#&gt; 114   세종특별자치시         1    114\n#&gt; 115   세종특별자치시         1    115\n#&gt; 116     수원시장안구         1    116\n#&gt; 117     수원시권선구         1    117\n#&gt; 118     수원시팔달구         1    118\n#&gt; 119     수원시영통구         1    119\n#&gt; 120     수원시권선구         1    120\n#&gt; 121     성남시수정구         1    121\n#&gt; 122     성남시중원구         1    122\n#&gt; 123     성남시분당구         1    123\n#&gt; 124     성남시분당구         1    124\n#&gt; 125         의정부시         1    125\n#&gt; 126         의정부시         1    126\n#&gt; 127     안양시만안구         1    127\n#&gt; 128     안양시동안구         1    128\n#&gt; 129     안양시동안구         1    129\n#&gt; 130           부천시         1    130\n#&gt; 131           부천시         1    131\n#&gt; 132           부천시         1    132\n#&gt; 133           부천시         1    133\n#&gt; 134           광명시         1    134\n#&gt; 135           광명시         1    135\n#&gt; 136           평택시         1    136\n#&gt; 137           평택시         1    137\n#&gt; 138         동두천시         1    138\n#&gt; 139     안산시상록구         1    139\n#&gt; 140     안산시상록구         1    140\n#&gt; 141     안산시단원구         1    141\n#&gt; 142     안산시단원구         1    142\n#&gt; 143     고양시덕양구         1    143\n#&gt; 144     고양시덕양구         1    144\n#&gt; 145   고양시일산동구         1    145\n#&gt; 146   고양시일산서구         1    146\n#&gt; 147           의왕시         1    147\n#&gt; 148           구리시         1    148\n#&gt; 149         남양주시         1    149\n#&gt; 150         남양주시         1    150\n#&gt; 151         남양주시         1    151\n#&gt; 152           오산시         1    152\n#&gt; 153           시흥시         1    153\n#&gt; 154           시흥시         1    154\n#&gt; 155           군포시         1    155\n#&gt; 156           하남시         1    156\n#&gt; 157     용인시처인구         1    157\n#&gt; 158     용인시기흥구         1    158\n#&gt; 159     용인시수지구         1    159\n#&gt; 160     용인시기흥구         1    160\n#&gt; 161           파주시         1    161\n#&gt; 162           파주시         1    162\n#&gt; 163           이천시         1    163\n#&gt; 164           안성시         1    164\n#&gt; 165           김포시         1    165\n#&gt; 166           김포시         1    166\n#&gt; 167           화성시         1    167\n#&gt; 168           화성시         1    168\n#&gt; 169           화성시         1    169\n#&gt; 170           광주시         1    170\n#&gt; 171           광주시         1    171\n#&gt; 172           양주시         1    172\n#&gt; 173           포천시         1    173\n#&gt; 174           여주시         1    174\n#&gt; 175           춘천시         1    175\n#&gt; 176           춘천시         1    176\n#&gt; 177           원주시         1    177\n#&gt; 178           원주시         1    178\n#&gt; 179           강릉시         1    179\n#&gt; 180           동해시         1    180\n#&gt; 181           속초시         1    181\n#&gt; 182           영월군         1    182\n#&gt; 183     청주시상당구         1    183\n#&gt; 184     청주시서원구         1    184\n#&gt; 185     청주시흥덕구         1    185\n#&gt; 186     청주시청원구         1    186\n#&gt; 187           충주시         1    187\n#&gt; 188           제천시         1    188\n#&gt; 189           영동군         1    189\n#&gt; 190           음성군         1    190\n#&gt; 191     천안시동남구         1    191\n#&gt; 192     천안시서북구         1    192\n#&gt; 193     천안시동남구         1    193\n#&gt; 194           공주시         1    194\n#&gt; 195           보령시         1    195\n#&gt; 196           아산시         1    196\n#&gt; 197           아산시         1    197\n#&gt; 198           서산시         1    198\n#&gt; 199           논산시         1    199\n#&gt; 200           당진시         1    200\n#&gt; 201           홍성군         1    201\n#&gt; 202     전주시완산구         1    202\n#&gt; 203     전주시완산구         1    203\n#&gt; 204     전주시덕진구         1    204\n#&gt; 205           군산시         1    205\n#&gt; 206           익산시         1    206\n#&gt; 207           익산시         1    207\n#&gt; 208           정읍시         1    208\n#&gt; 209           남원시         1    209\n#&gt; 210           김제시         1    210\n#&gt; 211           완주군         1    211\n#&gt; 212           목포시         1    212\n#&gt; 213           여수시         1    213\n#&gt; 214           여수시         1    214\n#&gt; 215           순천시         1    215\n#&gt; 216           광양시         1    216\n#&gt; 217           나주시         1    217\n#&gt; 218           영광군         1    218\n#&gt; 219           장흥군         1    219\n#&gt; 220           해남군         1    220\n#&gt; 221           무안군         1    221\n#&gt; 222       포항시북구         1    222\n#&gt; 223       포항시남구         1    223\n#&gt; 224           경주시         1    224\n#&gt; 225           김천시         1    225\n#&gt; 226           안동시         1    226\n#&gt; 227           구미시         1    227\n#&gt; 228           구미시         1    228\n#&gt; 229           영주시         1    229\n#&gt; 230           영천시         1    230\n#&gt; 231           상주시         1    231\n#&gt; 232           경산시         1    232\n#&gt; 233           의성군         1    233\n#&gt; 234           칠곡군         1    234\n#&gt; 235     창원시의창구         1    235\n#&gt; 236     창원시성산구         1    236\n#&gt; 237 창원시마산합포구         1    237\n#&gt; 238 창원시마산회원구         1    238\n#&gt; 239     창원시진해구         1    239\n#&gt; 240           진주시         1    240\n#&gt; 241           진주시         1    241\n#&gt; 242           통영시         1    242\n#&gt; 243           사천시         1    243\n#&gt; 244           김해시         1    244\n#&gt; 245           김해시         1    245\n#&gt; 246           밀양시         1    246\n#&gt; 247           거제시         1    247\n#&gt; 248           양산시         1    248\n#&gt; 249           양산시         1    249\n#&gt; 250           거창군         1    250\n#&gt; 251           제주시         1    251\n#&gt; 252           제주시         1    252\n#&gt; 253         서귀포시         1    253\n\n\n\n\n코드\nlegislator_raw &lt;- code_election |&gt; \n  dplyr::filter(str_detect(선거명, \"국회의원\"),\n         선거구분 != \"0\") \n\nget_precinct &lt;- function(legislator_cd = \"20200415\", \n                         sgTypecode = \"2\") {\n  # httr의 GET 함수로 데이터를 추출한다\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/CommonCodeService/getCommonSggCodeList\",\n                  query = list(sgId = legislator_cd,\n                                sgTypecode = sgTypecode,\n                                numOfRows =  \"1000\",\n                                resultType = \"json\",\n                                serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n  \n  # 응답 상태와 내용을 확인한다\n  print(status_code(response))\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getCommonSggCodeList$item\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_precinct(\"20220309\")\n#&gt; [1] 200\n#&gt; # A tibble: 5 × 8\n#&gt;   num   sgId     sgTypecode sggName      sdName     wiwName     sggJungsu sOrder\n#&gt;   &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt; \n#&gt; 1 1     20220309 2          종로구       서울특별시 종로구      1         1     \n#&gt; 2 2     20220309 2          서초구갑     서울특별시 서초구      1         40    \n#&gt; 3 3     20220309 2          중구남구     대구광역시 남구        1         68    \n#&gt; 4 4     20220309 2          안성시       경기도     안성시      1         164   \n#&gt; 5 5     20220309 2          청주시상당구 충청북도   청주시상당… 1         183\n\n\n\n\n코드\n# 재보궐 제외\n# legislator_tbl &lt;- legislator_raw |&gt; \n#   dplyr::filter(선거코드 %in% c(\"20040415\", \"20080409\", \"20120411\", \n#                       \"20160413\", \"20200415\")) \n\nlegislator_tbl &lt;- legislator_raw |&gt; \n  mutate(data = map2(선거코드, 선거구분, get_precinct))\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n#&gt; [1] 200\n\nprecinct_tbl &lt;- legislator_tbl |&gt; \n  unnest(data)\n\nprecinct_tbl\n#&gt; # A tibble: 1,264 × 11\n#&gt;    선거코드 선거명       선거구분 num   sgId   sgTypecode sggName sdName wiwName\n#&gt;    &lt;chr&gt;    &lt;chr&gt;        &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;  \n#&gt;  1 20040415 국회의원선거 2        1     20040… 2          종로구  서울…  종로구 \n#&gt;  2 20040415 국회의원선거 2        2     20040… 2          중구    서울…  중구(… \n#&gt;  3 20040415 국회의원선거 2        3     20040… 2          용산구  서울…  용산구 \n#&gt;  4 20040415 국회의원선거 2        4     20040… 2          성동구… 서울…  성동구 \n#&gt;  5 20040415 국회의원선거 2        5     20040… 2          성동구… 서울…  성동구 \n#&gt;  6 20040415 국회의원선거 2        6     20040… 2          광진구… 서울…  광진구 \n#&gt;  7 20040415 국회의원선거 2        7     20040… 2          광진구… 서울…  광진구 \n#&gt;  8 20040415 국회의원선거 2        8     20040… 2          동대문… 서울…  동대문…\n#&gt;  9 20040415 국회의원선거 2        9     20040… 2          동대문… 서울…  동대문…\n#&gt; 10 20040415 국회의원선거 2        10    20040… 2          중랑구… 서울…  중랑구 \n#&gt; # ℹ 1,254 more rows\n#&gt; # ℹ 2 more variables: sggJungsu &lt;chr&gt;, sOrder &lt;chr&gt;"
  },
  {
    "objectID": "legislators.html#국회의원-당선인-1",
    "href": "legislators.html#국회의원-당선인-1",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nget_elected &lt;- function(sgId = \"20200415\", sgTypecode = \"2\",\n                        sdName = \"서울특별시\",sggName = \"종로구\") {\n  response &lt;- GET(\"http://apis.data.go.kr/9760000/WinnerInfoInqireService2/getWinnerInfoInqire\",\n              query = list(sgId = sgId,\n                           sgTypecode = sgTypecode,\n                           sdName = sdName,\n                           sggName = sggName,\n                           numOfRows = 100,\n                           resultType = \"json\",\n                           serviceKey = Sys.getenv('DATA_GO_DECODE_KEY')))\n\n  # 응답 상태와 내용을 확인한다\n  cat(status_code(response), \": \", sgId, sgTypecode, sdName, sggName, \"\\n\")\n  \n  response_list &lt;- content(response, \"text\") |&gt; \n    fromJSON()\n  \n  response_tbl &lt;- response_list$getWinnerInfoInqire$item\n  \n  Sys.sleep(runif(1, 0,0.5))\n  \n  return(response_tbl |&gt; as_tibble())\n}\n\nget_elected()\n#&gt; 200 :  20200415 2 서울특별시 종로구\n#&gt; # A tibble: 1 × 24\n#&gt;   num   sgId    sgTypecode huboid sggName sdName wiwName giho  gihoSangse jdName\n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt; \n#&gt; 1 1     202004… 2          10013… 종로구  서울…  종로구  1     \"\"         더불… \n#&gt; # ℹ 14 more variables: name &lt;chr&gt;, hanjaName &lt;chr&gt;, gender &lt;chr&gt;,\n#&gt; #   birthday &lt;chr&gt;, age &lt;chr&gt;, addr &lt;chr&gt;, jobId &lt;chr&gt;, job &lt;chr&gt;, eduId &lt;chr&gt;,\n#&gt; #   edu &lt;chr&gt;, career1 &lt;chr&gt;, career2 &lt;chr&gt;, dugsu &lt;chr&gt;, dugyul &lt;chr&gt;\n\n\n\n\n코드# sido_code &lt;- tribble(\n# ~\"시도코드\", ~\"시도명\",\n# \"1100\", \"서울특별시\",\n# \"2600\", \"부산광역시\",\n# \"2700\", \"대구광역시\",\n# \"2800\", \"인천광역시\",\n# \"2900\", \"광주광역시\",\n# \"3000\", \"대전광역시\",\n# \"3100\", \"울산광역시\",\n# \"5100\", \"세종특별자치시\",\n# \"4100\", \"경기도\",\n# \"4200\", \"강원도\",\n# \"4300\", \"충청북도\",\n# \"4400\", \"충청남도\",\n# \"4500\", \"전라북도\",\n# \"4600\", \"전라남도\",\n# \"4700\", \"경상북도\",\n# \"4800\", \"경상남도\",\n# \"4900\", \"제주특별자치도\")\n\nelected_raw &lt;- legislator_tbl |&gt; \n  dplyr::filter(선거코드 == \"20200415\",\n         선거구분 == \"2\") |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected))\n\nelected_tbl &lt;- elected_raw |&gt; \n  select(data) |&gt; \n  unnest(data)\n\n\n\n\n코드get_elected_safely &lt;- safely(get_elected, otherwise = \"error\")\n\ntotal_elected_raw &lt;- legislator_tbl |&gt; \n  unnest(data)  |&gt; \n  select(sgId, sgTypecode, sdName, sggName, wiwName) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely))\n\ntotal_elected_tbl &lt;- total_elected_raw |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\ntotal_elected_tbl |&gt; \n  write_rds(\"data/total_elected_tbl.rds\")\n\n\n\n\n코드total_elected_tbl &lt;- \n  read_rds(\"data/total_elected_tbl.rds\")\n\ntotal_elected_true &lt;- total_elected_tbl |&gt; \n  mutate(tibble = map_lgl(result, is_tibble)) |&gt; \n  dplyr::filter(tibble) |&gt; \n  select(-tibble)\n\ntotal_elected_false &lt;- total_elected_raw |&gt; \n  dplyr::filter(sgId == \"20120411\",\n         sdName == \"인천광역시\",\n         sggName %in% c(\"남동구을\", \"부평구갑\", \"서구강화군갑\")) |&gt; \n  mutate(data = pmap(list(sgId, sgTypecode, sdName, sggName), get_elected_safely)) |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt;\n  select(sgId, sgTypecode, sdName, sggName, wiwName, result)\n\n\ntotal_elected_all &lt;- bind_rows(total_elected_true, total_elected_false)\n\ntotal_elected_all |&gt; \n  write_rds(\"data/total_elected_all.rds\")"
  },
  {
    "objectID": "legislators.html#역대-정당별-의석수",
    "href": "legislators.html#역대-정당별-의석수",
    "title": "지도제작 대회",
    "section": "\n2.2 역대 정당별 의석수",
    "text": "2.2 역대 정당별 의석수\n\n코드total_elected_all &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nelected_tbl &lt;- total_elected_all |&gt; \n  select(result) |&gt; \n  unnest(result)\n\nelected_tbl |&gt; \n  count(name, birthday, sort=TRUE) |&gt; \n  count(n) |&gt; \n  mutate(비율 = nn/sum(nn))\n#&gt; # A tibble: 5 × 3\n#&gt;       n    nn    비율\n#&gt;   &lt;int&gt; &lt;int&gt;   &lt;dbl&gt;\n#&gt; 1     1   602 0.632  \n#&gt; 2     2   196 0.206  \n#&gt; 3     3   105 0.110  \n#&gt; 4     4    42 0.0441 \n#&gt; 5     5     8 0.00839\n\n\n\n코드elected_tbl |&gt; \n  dplyr::filter(sgId %in% c(\"20040415\", \"20080409\", \"20120411\", \"20160413\", \"20200415\")) |&gt; \n  count(sdName, sgId, sort = TRUE) |&gt; \n  pivot_wider(names_from = sgId, values_from = n) \n#&gt; # A tibble: 19 × 6\n#&gt;    sdName         `20160413` `20200415` `20040415` `20080409` `20120411`\n#&gt;    &lt;chr&gt;               &lt;int&gt;      &lt;int&gt;      &lt;int&gt;      &lt;int&gt;      &lt;int&gt;\n#&gt;  1 경기도                 60         59         49         51         52\n#&gt;  2 전국                   47         47         56         54         54\n#&gt;  3 서울특별시             49         49         48         48         48\n#&gt;  4 부산광역시             18         18         18         18         18\n#&gt;  5 경상남도               16         16         17         17         16\n#&gt;  6 경상북도               13         13         15         15         15\n#&gt;  7 인천광역시             13         13         12         12         12\n#&gt;  8 전라남도               10         10         13         12         11\n#&gt;  9 대구광역시             12         12         12         12         12\n#&gt; 10 전라북도               10         10         11         11         11\n#&gt; 11 충청남도               11         11         10         10         10\n#&gt; 12 강원도                  8          8          8          8          9\n#&gt; 13 광주광역시              8          8          7          8          8\n#&gt; 14 충청북도                8          8          8          8          8\n#&gt; 15 대전광역시              7          7          6          6          6\n#&gt; 16 울산광역시              6          6          6          6          6\n#&gt; 17 제주도                 NA         NA          3         NA         NA\n#&gt; 18 제주특별자치도          3          3         NA          3          3\n#&gt; 19 세종특별자치시          1          2         NA         NA          1\n\n\n\n코드# 재선 이상 -------------\nelected_key &lt;- elected_tbl |&gt; \n  dplyr::filter(sgId %in% c(\"20040415\", \"20080409\", \"20120411\", \"20160413\", \"20200415\")) |&gt; \n  count(name, birthday, sort=TRUE) |&gt;\n  dplyr::filter(n &gt; 2) |&gt; \n  mutate(name_birth = glue::glue(\"{name}_{birthday}\")) \n\n\nelected_tbl |&gt; \n    dplyr::filter(sgId %in% c(\"20040415\", \"20080409\", \"20120411\", \"20160413\", \"20200415\")) |&gt; \n  mutate(name_birth = glue::glue(\"{name}_{birthday}\")) |&gt; \n  inner_join(elected_key) |&gt; \n  ggplot(aes(x = sgId, y = name_birth, group = name_birth)) +\n    geom_point() +\n    geom_line()\n\n\n\n\n\n\n\n\n코드elected_basetable &lt;- elected_tbl |&gt; \n  left_join(code_election |&gt; dplyr::filter(선거구분 == 0), by = c(\"sgId\" = \"선거코드\")) |&gt; \n  mutate(현정당 = case_when(jdName %in% c(\"민주정의당\", \"민주자유당\", \"신한국당\",\n                                        \"한나라당\", \"새누리당\", \"자유한국당\",\"새로운보수당\",\n                                        \"미래를향한전진4.0\", \"미래통합당\", \"국민의힘\") ~ \"국민의힘\",\n                            jdName %in% c(\"평화민주당\", \"통일민주당\", \"민주당\", \"새정치국민회의\",\n                                        \"열린우리당\", \"대통합민주신당\", \"통합민주당\",\n                                        \"민주통합당\", \"새정치민주연합\", \"더불어민주당\") ~ \"더불어민주당\",\n                            TRUE ~ \"그외정당\")) |&gt; \n  dplyr::filter(sgId %in% c(\"20040415\", \"20080409\", \"20120411\", \"20160413\", \"20200415\")) |&gt;\n  mutate(선거명 = str_remove(선거명, \"\\\\s+국회의원선거\")) |&gt; \n  mutate(sgId_name = str_glue(\"{선거명}  \\n{sgId}\"))\n\n\nelection_total_gg &lt;- elected_basetable |&gt; \n  count(sgId_name, 선거명, 현정당, sort=TRUE) |&gt; \n  ggplot(aes(x = sgId_name, y = n, fill = 현정당)) +\n    geom_col(width = 0.5) +\n    scale_fill_manual(values = c(\"더불어민주당\" = \"#0054A6\", \"국민의힘\" = \"#E2231A\", \n                                 \"그외정당\" = \"#A6A6A6\")) +\n    labs(fill = NULL,\n         x =\"\",\n         y = \"\",\n         title = \"역대 총선 민주당과 국민의힘 선거결과\") +\n    theme_korean() +\n    theme(legend.position = \"top\",\n          legend.key.size = unit(0.3, \"cm\"),\n          axis.text.x = element_text(angle = 0)) +\n    coord_flip() +\n    geom_hline(yintercept = 150, linetype = 2, color = \"gray30\") +\n    geom_text(aes(label = n), size = 3, position = position_stack(vjust = 0.5)) \n\n# election_total_gg\n# \n# ragg::agg_jpeg(\"images/election_total_gg.jpeg\",\n#                width = 10, height = 7, units = \"in\", res = 600)\n# election_total_gg\n# dev.off()"
  },
  {
    "objectID": "legislators.html#의석당-득표수",
    "href": "legislators.html#의석당-득표수",
    "title": "지도제작 대회",
    "section": "\n2.3 의석당 득표수",
    "text": "2.3 의석당 득표수\n\n코드elected_region_gg &lt;- elected_basetable |&gt; \n  mutate(권역 = case_when(\n    sdName %in% c(\"경기도\", \"서울특별시\", \"인천광역시\") ~ \"수도권\",\n    sdName %in% c(\"전라남도\", \"전라북도\", \"광주광역시\") ~ \"전라권\",\n    sdName %in% c(\"경상남도\", \"경상북도\", \"대구광역시\", \"부산광역시\", \"울산광역시\") ~ \"경상권\",\n    sdName %in% \"전국\" ~ \"전국\",\n    sdName %in% c(\"강원도\", \"세종특별자치시\", \"제주도\", \"제주특별자치도\", \"대전광역시\", \"충청남도\", \"충청북도\") ~ \"충청제주강원\")) |&gt; \n  mutate(득표수 = parse_number(dugsu),\n         득표율 = parse_number(dugyul)) |&gt; \n  group_by(sgId, 권역, 현정당) |&gt;\n  summarise(득표수 = sum(득표수),\n            득표율 = sum(득표율),\n            의석수 = n(), .groups = 'drop') |&gt; \n  pivot_wider(names_from = 현정당, values_from = c(\"득표수\", \"득표율\", \"의석수\"), values_fill = 0) |&gt; \n  mutate(의석수차 = 의석수_더불어민주당 - 의석수_국민의힘) |&gt; \n  left_join(code_election |&gt; dplyr::filter(선거구분 == 0), by = c(\"sgId\" = \"선거코드\")) |&gt;   \n  mutate(선거명 = str_remove(선거명, \"\\\\s+국회의원선거\")) |&gt;   \n  mutate(sgId_name = str_glue(\"{선거명}  \\n{sgId}\")) |&gt; \n  select(sgId_name, sgId, 권역, 의석수차) |&gt; \n  mutate(의석수차 = ifelse(권역 == \"전국\" & sgId == \"20200415\", -2, 의석수차)) |&gt;\n  # 더불어 민주당/시민당 17, 미래통합당/한국당 19, 국민의당 3, 열린민주당 3\n  # https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\n  mutate(권역 = factor(권역, levels = c(\"경상권\", \"전국\", \"충청제주강원\", \"전라권\", \"수도권\"))) |&gt; \n  ggplot(aes(x = sgId_name, y = 의석수차, color = 권역, group = 권역)) +\n    geom_point(size = 2, show.legend = TRUE) +\n    geom_line(aes(size = 권역)) +\n    coord_flip() +\n    theme_korean() +\n    labs(y = \"의석수차(민주당 - 국민의힘)\",\n         x = \"\",\n         caption = \"자료: 중앙선거관리위원회 당선인정보 API\",\n         title = \"역대 권역별 국회의원 의석수 변화\",\n         subtitle = \"권역별 민주당계열 정당 의석수에서 국민의힘 계열정당 의석수 차이\") +\n    geom_text_repel(aes(label = 의석수차), size = 5, show.legend = FALSE) +\n    scale_color_manual(values = c(\"전라권\" = \"#b8cafc\", \"경상권\" = \"#fcb8b8\", \n                                 \"전국\" = \"#A6A6A6\", \"충청제주강원\" = \"black\", \n                                 \"수도권\" = \"#021ffa\")) +\n    theme(legend.position = \"top\") +\n    scale_size_manual(values = c(0.5, 0.5, 0.5, 0.5, 1))  \n\n# elected_region_gg\n# \n# ragg::agg_jpeg(\"images/elected_region_gg.jpeg\",\n#                width = 10, height = 7, units = \"in\", res = 600)\n# elected_region_gg\n# dev.off()"
  },
  {
    "objectID": "legislators.html#연령",
    "href": "legislators.html#연령",
    "title": "지도제작 대회",
    "section": "\n2.4 연령",
    "text": "2.4 연령\n\n코드elected_basetable |&gt; \n  mutate(age = parse_number(age)) |&gt; \n  group_by(sgId, 선거명, 현정당) |&gt;\n  summarise(평균나이 = mean(age, na.rm = TRUE),\n            최고연령 = max(age, na.rm = TRUE),\n            최저연령 = min(age, na.rm = TRUE)) |&gt; \n  select(-최고연령, -최저연령) |&gt; \n  pivot_wider(names_from = 현정당, values_from = 평균나이)\n#&gt; # A tibble: 5 × 5\n#&gt; # Groups:   sgId, 선거명 [5]\n#&gt;   sgId     선거명 국민의힘 그외정당 더불어민주당\n#&gt;   &lt;chr&gt;    &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n#&gt; 1 20040415 제17대     52.1     53.8         49.6\n#&gt; 2 20080409 제18대     51.9     57.7         53.1\n#&gt; 3 20120411 제19대     55.0     52.0         52.8\n#&gt; 4 20160413 제20대     56.6     56.2         54.2\n#&gt; 5 20200415 제21대     56.5     52.3         55.0\n\nelected_basetable |&gt; \n  mutate(age = parse_number(age)) |&gt; \n  dplyr::filter(현정당 != \"그외정당\") |&gt;\n  ggplot(aes(x = sgId, y = age, fill = gender)) +\n    geom_boxplot(width=0.3) +\n    coord_flip() +\n    facet_wrap(~현정당) +\n    theme(legend.position = \"top\")"
  },
  {
    "objectID": "legislators.html#국회의원-추적",
    "href": "legislators.html#국회의원-추적",
    "title": "지도제작 대회",
    "section": "\n2.5 국회의원 추적",
    "text": "2.5 국회의원 추적\n\n코드library(ggrepel)\n\nelected_basetable |&gt; \n  mutate(득표수 = parse_number(dugsu),\n         득표율 = parse_number(dugyul)) |&gt;\n  dplyr::filter(득표수 != 0) |&gt;\n  dplyr::filter(현정당 == \"더불어민주당\",\n         sdName %in% c(\"서울특별시\", \"경기도\", \"인천광역시\")) |&gt;\n  ggplot(aes(x = 득표수, y = 득표율, color = sgId)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_text_repel(aes(label = name), size = 2, position = position_jitter(width = 0.1, height = 0.1)) +\n    theme(legend.position = \"top\") +\n    facet_wrap(vars(현정당, sgId), nrow = 1, scales = \"free\")"
  },
  {
    "objectID": "district_chair.html",
    "href": "district_chair.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "나무위키 지역/당협위원장을 통해 금일 기준(2023-09-29) 각 당별 현황을 파악해보자.\n\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\nwiki_html &lt;- read_html('https://namu.wiki/w/당협위원장/목록')\n\n## 시도명 ------\nsido_h3 &lt;- wiki_html |&gt; \n  html_elements(\"h3\") |&gt; \n  html_text()\n\nsido_names &lt;- sido_h3[str_detect(sido_h3, \"^2\")] |&gt; \n  str_extract(\"[가-힣]+\")\n\n## 표 ------\n######## 5: 서울특별시, 21: 제주도\n\nget_result &lt;- function(index){\n  \n    if(index == 18) { # 경상북도\n      result &lt;- wiki_html |&gt;\n        html_node(xpath = str_glue(\"/html/body/div/div/div[2]/div/div[1]/div[5]/div/div/div/div[3]/div/div/div/div/div/div/div/div/div/div[10]/div/div/div/div/div[1]/div/div[{index}]/div[4]/table\")) |&gt;\n    html_table()\n    } else {\n      result  &lt;- wiki_html |&gt;\n        html_node(xpath = str_glue(\"/html/body/div/div/div[2]/div/div[1]/div[5]/div/div/div/div[3]/div/div/div/div/div/div/div/div/div/div[10]/div/div/div/div/div[1]/div/div[{index}]/div[3]/table\")) |&gt;\n        html_table()\n    }\n    return(result)\n}\n\nget_result(19)\n\ndistrict_raw &lt;- tibble(시도코드 = 5:21) |&gt; \n  mutate(data = map(시도코드, safely(get_result, otherwise=\"error\")))\n\ndistrict_tbl &lt;- district_raw |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt; \n  mutate(tibble = map_lgl(result, is_tibble)) |&gt; \n  dplyr::filter(tibble) |&gt; \n  mutate(시도명 = sido_names) |&gt; \n  select(시도명, result)\n\n# district_tbl |&gt;\n#   write_rds(\"data/시도별_당협위원장.rds\")"
  },
  {
    "objectID": "district_chair.html#지역당협위원장",
    "href": "district_chair.html#지역당협위원장",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\nwiki_html &lt;- read_html('https://namu.wiki/w/당협위원장/목록')\n\n## 시도명 ------\nsido_h3 &lt;- wiki_html |&gt; \n  html_elements(\"h3\") |&gt; \n  html_text()\n\nsido_names &lt;- sido_h3[str_detect(sido_h3, \"^2\")] |&gt; \n  str_extract(\"[가-힣]+\")\n\n## 표 ------\n######## 5: 서울특별시, 21: 제주도\n\nget_result &lt;- function(index){\n  \n    if(index == 18) { # 경상북도\n      result &lt;- wiki_html |&gt;\n        html_node(xpath = str_glue(\"/html/body/div/div/div[2]/div/div[1]/div[5]/div/div/div/div[3]/div/div/div/div/div/div/div/div/div/div[10]/div/div/div/div/div[1]/div/div[{index}]/div[4]/table\")) |&gt;\n    html_table()\n    } else {\n      result  &lt;- wiki_html |&gt;\n        html_node(xpath = str_glue(\"/html/body/div/div/div[2]/div/div[1]/div[5]/div/div/div/div[3]/div/div/div/div/div/div/div/div/div/div[10]/div/div/div/div/div[1]/div/div[{index}]/div[3]/table\")) |&gt;\n        html_table()\n    }\n    return(result)\n}\n\nget_result(19)\n\ndistrict_raw &lt;- tibble(시도코드 = 5:21) |&gt; \n  mutate(data = map(시도코드, safely(get_result, otherwise=\"error\")))\n\ndistrict_tbl &lt;- district_raw |&gt; \n  mutate(result = map(data, pluck, \"result\")) |&gt; \n  mutate(tibble = map_lgl(result, is_tibble)) |&gt; \n  dplyr::filter(tibble) |&gt; \n  mutate(시도명 = sido_names) |&gt; \n  select(시도명, result)\n\n# district_tbl |&gt;\n#   write_rds(\"data/시도별_당협위원장.rds\")"
  },
  {
    "objectID": "candidate.html",
    "href": "candidate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "공공데이터포털 중앙선거관리위원회 후보자 정보 API 를 통해 당선인 정보를 조회한다. (후보자 정보를 조회 할 수 있는 서비스 이다.(예비후보자 및 후보자 의 성명, 생년월일, 성별 , 선거구, 시도, 학력, 경력, 등록상태 등을 확인 할 수 있는 서비스)\n\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\ntotal_elected_all &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nprecinct_tbl &lt;- total_elected_all |&gt; \n  filter(sgId == \"20200415\") |&gt; \n  select(result) |&gt; \n  unnest(result) |&gt; \n  select(시도명 = sdName, 선거구명 = sggName)\n\n\n\n\n코드election_html &lt;- read_html(\"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\")\n\nurls &lt;- election_html %&gt;% \n  html_nodes(\"#mw-content-text &gt; div.mw-parser-output &gt; table:nth-child(112)\") %&gt;% \n  html_nodes(\"a\") %&gt;% \n  html_attr('href')\n\nurl_names &lt;- election_html %&gt;% \n  html_nodes(\"#mw-content-text &gt; div.mw-parser-output &gt; table:nth-child(112)\") %&gt;% \n  html_nodes(\"a\") %&gt;% \n  html_text()\n\nurl_raw &lt;- tibble(names = url_names,\n       url  = urls)\n\n# url_names |&gt; \n#   clipr::write_clip()\n\nurl_tbl &lt;- url_raw |&gt; \n  mutate(시도명 = if_else(names %in% \n                         c(\"서울특별시\", \"부산광역시\", \"대구광역시\", \"인천광역시\",\n                           \"광주광역시\", \"대전광역시\", \"울산광역시\", \"세종특별자치시\",\n                           \"경기도\", \"강원도\", \"충청북도\", \"충청남도\", \"전라북도\", \n                           \"전라남도\", \"경상북도\", \"경상남도\", \"제주특별자치도\"), names, NA_character_)) |&gt; \n  fill(시도명, .direction = \"down\") |&gt; \n  select(시도명, 선거구명 = names, url) |&gt; \n  filter(시도명 != 선거구명) |&gt; \n  mutate(url = URLdecode(url))\n\n\nurl_tbl\n#&gt; # A tibble: 506 × 3\n#&gt;    시도명     선거구명       url                         \n#&gt;    &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;                       \n#&gt;  1 서울특별시 종로구         /wiki/종로구_(1988년_선거구)\n#&gt;  2 서울특별시 중구·성동구 갑 /wiki/중구·성동구_갑        \n#&gt;  3 서울특별시 중구·성동구 을 /wiki/중구·성동구_을        \n#&gt;  4 서울특별시 용산구         /wiki/용산구_(1988년_선거구)\n#&gt;  5 서울특별시 광진구 갑      /wiki/광진구_갑             \n#&gt;  6 서울특별시 이낙연         /wiki/이낙연                \n#&gt;  7 서울특별시 홍익표         /wiki/홍익표_(1967년)       \n#&gt;  8 서울특별시 박성준         /wiki/박성준_(정치인)       \n#&gt;  9 서울특별시 권영세         /wiki/권영세_(1959년)       \n#&gt; 10 서울특별시 전혜숙         /wiki/전혜숙                \n#&gt; # ℹ 496 more rows\n\n\n\n\n코드mp_url_tbl &lt;- url_tbl |&gt; \n  mutate(선거구명 = str_remove_all(선거구명, \"[\\\\s+|·]\")) |&gt; \n  anti_join(precinct_tbl, by = c(\"시도명\", \"선거구명\")) |&gt; \n  mutate(url = str_glue(\"https://ko.wikipedia.org{url}\")) |&gt; \n  rename(당선인 = 선거구명)\n    \n\nmp_url_tbl |&gt; \n  mutate(\n      link = glue::glue(\"[website]({url})\"),\n      link = map(link, gt::md)) |&gt; \n  select(시도명, 당선인, link) |&gt;\n  gt(groupname_col = \"시도명\") |&gt; \n  gt_theme_hangul()\n\n\n\n\n\n당선인\n      link\n    \n\n\n서울특별시\n    \n\n이낙연\nwebsite\n\n\n홍익표\nwebsite\n\n\n박성준\nwebsite\n\n\n권영세\nwebsite\n\n\n전혜숙\nwebsite\n\n\n고민정\nwebsite\n\n\n안규백\nwebsite\n\n\n장경태\nwebsite\n\n\n서영교\nwebsite\n\n\n박홍근\nwebsite\n\n\n김영배\nwebsite\n\n\n기동민\nwebsite\n\n\n천준호\nwebsite\n\n\n박용진\nwebsite\n\n\n인재근\nwebsite\n\n\n오기형\nwebsite\n\n\n고용진\nwebsite\n\n\n우원식\nwebsite\n\n\n김성환\nwebsite\n\n\n박주민\nwebsite\n\n\n강병원\nwebsite\n\n\n우상호\nwebsite\n\n\n김영호\nwebsite\n\n\n노웅래\nwebsite\n\n\n정청래\nwebsite\n\n\n황희\nwebsite\n\n\n이용선\nwebsite\n\n\n강선우\nwebsite\n\n\n진성준\nwebsite\n\n\n한정애\nwebsite\n\n\n이인영\nwebsite\n\n\n윤건영\nwebsite\n\n\n최기상\nwebsite\n\n\n김영주\nwebsite\n\n\n김민석\nwebsite\n\n\n김병기\nwebsite\n\n\n이수진\nwebsite\n\n\n유기홍\nwebsite\n\n\n정태호\nwebsite\n\n\n윤희숙\nwebsite\n\n\n박성중\nwebsite\n\n\n태구민\nwebsite\n\n\n박진\nwebsite\n\n\n유경준\nwebsite\n\n\n김웅\nwebsite\n\n\n배현진\nwebsite\n\n\n남인순\nwebsite\n\n\n진선미\nwebsite\n\n\n이해식\nwebsite\n\n\n부산광역시\n    \n\n황보승희\nwebsite\n\n\n안병길\nwebsite\n\n\n서병수\nwebsite\n\n\n이헌승\nwebsite\n\n\n김희곤\nwebsite\n\n\n박수영\nwebsite\n\n\n박재호\nwebsite\n\n\n전재수\nwebsite\n\n\n김도읍\nwebsite\n\n\n하태경\nwebsite\n\n\n김미애\nwebsite\n\n\n최인호\nwebsite\n\n\n조경태\nwebsite\n\n\n백종헌\nwebsite\n\n\n이주환\nwebsite\n\n\n전봉민\nwebsite\n\n\n장제원\nwebsite\n\n\n정동만\nwebsite\n\n\n대구광역시\n    \n\n곽상도\nwebsite\n\n\n류성걸\nwebsite\n\n\n강대식\nwebsite\n\n\n김상훈\nwebsite\n\n\n양금희\nwebsite\n\n\n김승수\nwebsite\n\n\n주호영\nwebsite\n\n\n홍준표\nwebsite\n\n\n홍석준\nwebsite\n\n\n윤재옥\nwebsite\n\n\n김용판\nwebsite\n\n\n추경호\nwebsite\n\n\n인천광역시\n    \n\n배준영\nwebsite\n\n\n허종식\nwebsite\n\n\n윤상현\nwebsite\n\n\n박찬대\nwebsite\n\n\n정일영\nwebsite\n\n\n맹성규\nwebsite\n\n\n윤관석\nwebsite\n\n\n이성만\nwebsite\n\n\n홍영표\nwebsite\n\n\n유동수\nwebsite\n\n\n송영길\nwebsite\n\n\n김교흥\nwebsite\n\n\n신동근\nwebsite\n\n\n광주광역시\n    \n\n윤영덕\nwebsite\n\n\n이병훈\nwebsite\n\n\n송갑석\nwebsite\n\n\n양향자\nwebsite\n\n\n조오섭\nwebsite\n\n\n이형석\nwebsite\n\n\n이용빈\nwebsite\n\n\n민형배\nwebsite\n\n\n대전광역시\n    \n\n장철민\nwebsite\n\n\n황운하\nwebsite\n\n\n박병석\nwebsite\n\n\n박범계\nwebsite\n\n\n조승래\nwebsite\n\n\n이상민\nwebsite\n\n\n박영순\nwebsite\n\n\n울산광역시\n    \n\n박성민\nwebsite\n\n\n이채익\nwebsite\n\n\n김기현\nwebsite\n\n\n권명호\nwebsite\n\n\n이상헌\nwebsite\n\n\n서범수\nwebsite\n\n\n세종특별자치시\n    \n\n홍성국\nwebsite\n\n\n강준현\nwebsite\n\n\n경기도\n    \n\n김승원\nwebsite\n\n\n백혜련\nwebsite\n\n\n김영진\nwebsite\n\n\n박광온\nwebsite\n\n\n김진표\nwebsite\n\n\n김태년\nwebsite\n\n\n윤영찬\nwebsite\n\n\n김은혜\nwebsite\n\n\n김병욱\nwebsite\n\n\n오영환\nwebsite\n\n\n김민철\nwebsite\n\n\n강득구\nwebsite\n\n\n민병덕\nwebsite\n\n\n이재정\nwebsite\n\n\n김경협\nwebsite\n\n\n설훈\nwebsite\n\n\n김상희\nwebsite\n\n\n서영석\nwebsite\n\n\n임오경\nwebsite\n\n\n양기대\nwebsite\n\n\n홍기원\nwebsite\n\n\n유의동\nwebsite\n\n\n김성원\nwebsite\n\n\n전해철\nwebsite\n\n\n김철민\nwebsite\n\n\n고영인\nwebsite\n\n\n김남국\nwebsite\n\n\n심상정\nwebsite\n\n\n한준호\nwebsite\n\n\n홍정민\nwebsite\n\n\n이용우\nwebsite\n\n\n이소영\nwebsite\n\n\n윤호중\nwebsite\n\n\n조응천\nwebsite\n\n\n김한정\nwebsite\n\n\n김용민\nwebsite\n\n\n안민석\nwebsite\n\n\n문정복\nwebsite\n\n\n조정식\nwebsite\n\n\n이학영\nwebsite\n\n\n최종윤\nwebsite\n\n\n정찬민\nwebsite\n\n\n김민기\nwebsite\n\n\n정춘숙\nwebsite\n\n\n이탄희\nwebsite\n\n\n윤후덕\nwebsite\n\n\n박정\nwebsite\n\n\n송석준\nwebsite\n\n\n이규민\nwebsite\n\n\n김주영\nwebsite\n\n\n박상혁\nwebsite\n\n\n송옥주\nwebsite\n\n\n이원욱\nwebsite\n\n\n권칠승\nwebsite\n\n\n소병훈\nwebsite\n\n\n임종성\nwebsite\n\n\n정성호\nwebsite\n\n\n최춘식\nwebsite\n\n\n김선교\nwebsite\n\n\n강원도\n    \n\n허영\nwebsite\n\n\n한기호\nwebsite\n\n\n이광재\nwebsite\n\n\n송기헌\nwebsite\n\n\n권성동\nwebsite\n\n\n이철규\nwebsite\n\n\n이양수\nwebsite\n\n\n유상범\nwebsite\n\n\n충청북도\n    \n\n정정순\nwebsite\n\n\n이장섭\nwebsite\n\n\n도종환\nwebsite\n\n\n변재일\nwebsite\n\n\n이종배\nwebsite\n\n\n엄태영\nwebsite\n\n\n박덕흠\nwebsite\n\n\n임호선\nwebsite\n\n\n충청남도\n    \n\n문진석\nwebsite\n\n\n박완주\nwebsite\n\n\n이정문\nwebsite\n\n\n정진석\nwebsite\n\n\n김태흠\nwebsite\n\n\n이명수\nwebsite\n\n\n강훈식\nwebsite\n\n\n성일종\nwebsite\n\n\n김종민\nwebsite\n\n\n어기구\nwebsite\n\n\n홍문표\nwebsite\n\n\n전라북도\n    \n\n김윤덕\nwebsite\n\n\n이상직\nwebsite\n\n\n김성주\nwebsite\n\n\n신영대\nwebsite\n\n\n김수흥\nwebsite\n\n\n한병도\nwebsite\n\n\n윤준병\nwebsite\n\n\n이용호\nwebsite\n\n\n이원택\nwebsite\n\n\n안호영\nwebsite\n\n\n전라남도\n    \n\n김원이\nwebsite\n\n\n주철현\nwebsite\n\n\n김회재\nwebsite\n\n\n소병철\nwebsite\n\n\n서동용\nwebsite\n\n\n신정훈\nwebsite\n\n\n이개호\nwebsite\n\n\n김승남\nwebsite\n\n\n윤재갑\nwebsite\n\n\n서삼석\nwebsite\n\n\n경상북도\n    \n\n김정재\nwebsite\n\n\n김병욱\nwebsite\n\n\n김석기\nwebsite\n\n\n송언석\nwebsite\n\n\n김형동\nwebsite\n\n\n구자근\nwebsite\n\n\n김영식\nwebsite\n\n\n박형수\nwebsite\n\n\n이만희\nwebsite\n\n\n임이자\nwebsite\n\n\n윤두현\nwebsite\n\n\n김희국\nwebsite\n\n\n정희용\nwebsite\n\n\n경상남도\n    \n\n박완수\nwebsite\n\n\n강기윤\nwebsite\n\n\n최형두\nwebsite\n\n\n윤한홍\nwebsite\n\n\n이달곤\nwebsite\n\n\n박대출\nwebsite\n\n\n강민국\nwebsite\n\n\n정점식\nwebsite\n\n\n하영제\nwebsite\n\n\n민홍철\nwebsite\n\n\n김정호\nwebsite\n\n\n조해진\nwebsite\n\n\n서일준\nwebsite\n\n\n윤영석\nwebsite\n\n\n김두관\nwebsite\n\n\n김태호\nwebsite\n\n\n제주특별자치도\n    \n\n송재호\nwebsite\n\n\n오영훈\nwebsite\n\n\n위성곤\nwebsite\n\n\n\n\n\n\n\n\n코드## 제21대 국회의원 당선인 url\nmp_url_tbl |&gt; \n  write_rds(\"data/mp21_url_tbl.rds\")"
  },
  {
    "objectID": "candidate.html#국회의원-선거-코드",
    "href": "candidate.html#국회의원-선거-코드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)"
  },
  {
    "objectID": "district_chair.html#공석-현황",
    "href": "district_chair.html#공석-현황",
    "title": "지도제작 대회",
    "section": "\n3.1 공석 현황",
    "text": "3.1 공석 현황\n\n코드district_empty_gt &lt;- district_tbl |&gt; \n  group_by(당명) |&gt; \n  summarise(공석 = sum(is.na(위원장))) |&gt; \n  mutate(선거구수 = 253) |&gt; \n  mutate(공석비율 = 공석 / 선거구수) |&gt; \n  relocate(선거구수, .after = 당명) |&gt;\n  mutate(위원장수 = 선거구수 - 공석) |&gt; \n  relocate(공석, .after = 위원장수) |&gt;\n  mutate(logo = c(\"images/party_power.jpg\", \"images/party_minju.png\") ) |&gt; \n  relocate(logo, .before = 당명) |&gt;  \n  arrange(공석비율) |&gt; \n  gt() |&gt; \n  gt_theme_hangul() |&gt; \n  tab_header(title = \"지역/당협위원장 현황\") |&gt;\n  cols_label(당명 = \"정당명\",\n             선거구수 = \"선거구수\",\n             위원장수 = \"위원장수\",\n             공석비율 = \"공석비율\",\n             logo = \" \") |&gt; \n  fmt_percent(columns = \"공석비율\", decimals = 1) |&gt; \n  tab_footnote(\n    footnote = \"나무위키: 당협위원장/목록\",\n    locations = cells_title(groups = \"title\")\n  ) |&gt; \n  tab_spanner(\n    label = \"인원\",\n    columns = c(\n      선거구수, 위원장수, 공석\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(공석비율), \n      rows = 당명 == \"국민의힘\"\n    )) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(공석비율), \n      rows = 당명 == \"민주당\"\n    )) |&gt; \n    gt_img_rows(columns = logo, img_source = \"local\", height = 30) \n\ndistrict_empty_gt\n\n\n\n\n\n\n지역/당협위원장 현황1\n\n    \n\n \n      정당명\n      \n        인원\n      \n      공석비율\n    \n\n선거구수\n      위원장수\n      공석\n    \n\n\n\n\n민주당\n253\n250\n3\n1.2%\n\n\n\n국민의힘\n253\n225\n28\n11.1%\n\n\n\n\n1 나무위키: 당협위원장/목록\n    \n\n\n\n코드\n# district_empty_gt |&gt;\n#   gtsave(\"images/지역_당협위원장_공석현황.png\")"
  },
  {
    "objectID": "district_chair.html#권역별-공석현황",
    "href": "district_chair.html#권역별-공석현황",
    "title": "지도제작 대회",
    "section": "\n3.2 권역별 공석현황",
    "text": "3.2 권역별 공석현황\n\n코드## 선거구 권역별 정수\nregion_legislator &lt;- nec_precinct_total |&gt; \n  dplyr::filter(sggName != \"비례대표\",\n                sgId == \"20200415\") |&gt; \n  mutate(권역 = case_when(\n    sdName %in% c(\"경기도\", \"서울특별시\", \"인천광역시\") ~ \"수도권\",\n    sdName %in% c(\"전라남도\", \"전라북도\", \"광주광역시\") ~ \"전라권\",\n    sdName %in% c(\"경상남도\", \"경상북도\", \"대구광역시\", \"부산광역시\", \"울산광역시\") ~ \"경상권\",\n    sdName %in% c(\"강원도\", \"세종특별자치시\", \"제주도\", \"제주특별자치도\", \"대전광역시\", \"충청남도\", \"충청북도\") ~ \"충청제주강원\")) |&gt; \n  count(권역, name = \"정수\")\n\n## 지역/당협의원장 권역별 정수\nregion_district_tbl &lt;- district_tbl |&gt; \n  mutate(권역 = case_when(\n    시도명 %in% c(\"경기도\", \"서울특별시\", \"인천광역시\") ~ \"수도권\",\n    시도명 %in% c(\"전라남도\", \"전라북도\", \"광주광역시\") ~ \"전라권\",\n    시도명 %in% c(\"경상남도\", \"경상북도\", \"대구광역시\", \"부산광역시\", \"울산광역시\") ~ \"경상권\",\n    시도명 %in% c(\"강원특별자치도\", \"세종특별자치시\", \"제주도\", \"제주특별자치도\", \"대전광역시\", \"충청남도\", \"충청북도\") ~ \"충청제주강원\")) |&gt; \n  group_by(당명, 권역) |&gt; \n  summarise(공석 = sum(is.na(위원장))) |&gt; \n  ungroup() |&gt; \n  left_join(region_legislator) |&gt; \n  pivot_wider(names_from = 당명, values_from = 공석)  |&gt;\n  mutate(국힘_위원장수 = 정수 - 국민의힘,\n         민주_위원장수 = 정수 - 민주당) |&gt;\n  mutate(국힘_공석율 = 국민의힘 / 정수,\n         민주_공석율 = 민주당 / 정수) |&gt; \n  dplyr::select(권역, 정수, 민주_위원장수, 민주당, 민주_공석율,\n                     국힘_위원장수, 국민의힘, 국힘_공석율)  |&gt; \n  arrange(desc(정수))\n\nregion_district_tbl |&gt; \n  janitor::adorn_totals()\n#&gt;          권역 정수 민주_위원장수 민주당 민주_공석율 국힘_위원장수 국민의힘\n#&gt;        수도권  121           118      3  0.02479339           102       19\n#&gt;        경상권   65            65      0  0.00000000            60        5\n#&gt;  충청제주강원   39            39      0  0.00000000            36        3\n#&gt;        전라권   28            28      0  0.00000000            27        1\n#&gt;         Total  253           250      3  0.02479339           225       28\n#&gt;  국힘_공석율\n#&gt;   0.15702479\n#&gt;   0.07692308\n#&gt;   0.07692308\n#&gt;   0.03571429\n#&gt;   0.34658523\n\n## 공석 비율 표시하는 함수\ngrand_pcnt_func &lt;- function(data) {\n  empty_list &lt;- data |&gt; \n    summarise(민주_공석수 = sum(민주당),\n              국힘_공석수 = sum(국민의힘)) |&gt; \n    mutate(민주_공석율 = 민주_공석수 / 253,\n           국힘_공석율 = 국힘_공석수 / 253) |&gt; \n    select(민주_공석율, 국힘_공석율) |&gt; \n    unlist()\n\n  return (empty_list)\n}  \n\nregion_district_gt &lt;- region_district_tbl |&gt; \n  gt() |&gt; \n  gt_theme_hangul() |&gt; \n  tab_header(title = \"권역별 지역/당협위원장 현황\") |&gt;\n  cols_align(columns = 권역, \"center\") |&gt; \n  cols_label(권역 = \"권역\",\n             정수 = \"선거구수\",\n             국힘_위원장수 = \"당협위원장수\",\n             민주_위원장수 = \"지역위원장수\",\n             국민의힘 = \"공석수\",\n             민주당 = \"공석수\",\n             국힘_공석율 = \"공석비율\",\n             민주_공석율 = \"공석비율\") |&gt; \n  fmt_percent(columns = c(국힘_공석율, 민주_공석율), decimals = 1)  |&gt; \n  tab_footnote(\n    footnote = \"나무위키: 당협위원장/목록\",\n    locations = cells_title(groups = \"title\")\n  ) |&gt; \n  tab_footnote(\n    footnote = \"인천 남동을(윤관석)/부평갑(이성만)/분당갑(김병관)\",\n    locations = cells_body(columns = 민주당, rows = 1)\n  ) |&gt; \n  tab_spanner(\n    label = \"국민의힘 \",\n    columns = c(\n      국힘_위원장수, 국민의힘, 국힘_공석율\n    )\n  ) |&gt; \n  tab_spanner(\n    label = \"더불어민주당\",\n    columns = c(\n      민주_위원장수, 민주당, 민주_공석율\n    )\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"#fc0303\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(국민의힘, 국힘_공석율), \n      rows = 권역 == \"수도권\"\n    )) |&gt; \n  tab_style(\n    style = cell_text(color = \"#fc6203\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(국민의힘, 국힘_공석율), \n      rows = 권역 == \"경상권\"\n    )) |&gt; \n  tab_style(\n    style = cell_text(color = \"blue\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(민주당, 민주_공석율), \n      rows = 권역 == \"수도권\"\n    ))  |&gt; \n  ## 표 전체 합계 -------------------------------------\n    grand_summary_rows(\n      columns = c(정수, 민주_위원장수, 국힘_위원장수, 민주당, 국민의힘),\n      fns =  list(label = \"합계\", fn = \"sum\"),\n      fmt = ~ fmt_integer(.),\n      side = \"bottom\"\n    )  |&gt; \n    grand_summary_rows (\n      columns = 국힘_공석율,\n      fns =  list(\"합계\" = ~grand_pcnt_func(region_district_tbl)[2]),\n      fmt = ~ fmt_percent(., decimals = 1)\n    ) |&gt; \n    grand_summary_rows (\n      columns = 민주_공석율,\n      fns =  list(\"합계\" = ~grand_pcnt_func(region_district_tbl)[1]),\n      fmt = ~ fmt_percent(., decimals = 1)\n    )  \n\nregion_district_gt\n\n\n\n\n\n\n권역별 지역/당협위원장 현황1\n\n    \n\n\n      권역\n      선거구수\n      \n        더불어민주당\n      \n      \n        국민의힘 \n      \n    \n\n지역위원장수\n      공석수\n      공석비율\n      당협위원장수\n      공석수\n      공석비율\n    \n\n\n\n\n수도권\n121\n118\n32\n\n2.5%\n102\n19\n15.7%\n\n\n\n경상권\n65\n65\n0\n0.0%\n60\n5\n7.7%\n\n\n\n충청제주강원\n39\n39\n0\n0.0%\n36\n3\n7.7%\n\n\n\n전라권\n28\n28\n0\n0.0%\n27\n1\n3.6%\n\n\n합계\n—\n253\n250\n3\n1.2%\n225\n28\n11.1%\n\n\n\n\n\n1 나무위키: 당협위원장/목록\n    \n\n\n2 인천 남동을(윤관석)/부평갑(이성만)/분당갑(김병관)\n    \n\n\n\n\n코드\n# region_district_gt |&gt;\n#   gtsave(\"images/지역_당협위원장_권역별_공석현황.png\")"
  },
  {
    "objectID": "candidate.html#위키-국회의원-당선인",
    "href": "candidate.html#위키-국회의원-당선인",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rvest)\n\ntotal_elected_all &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nprecinct_tbl &lt;- total_elected_all |&gt; \n  filter(sgId == \"20200415\") |&gt; \n  select(result) |&gt; \n  unnest(result) |&gt; \n  select(시도명 = sdName, 선거구명 = sggName)"
  },
  {
    "objectID": "candidate.html#당선인-url-추출",
    "href": "candidate.html#당선인-url-추출",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드election_html &lt;- read_html(\"https://ko.wikipedia.org/wiki/대한민국_제21대_국회의원_선거\")\n\nurls &lt;- election_html %&gt;% \n  html_nodes(\"#mw-content-text &gt; div.mw-parser-output &gt; table:nth-child(112)\") %&gt;% \n  html_nodes(\"a\") %&gt;% \n  html_attr('href')\n\nurl_names &lt;- election_html %&gt;% \n  html_nodes(\"#mw-content-text &gt; div.mw-parser-output &gt; table:nth-child(112)\") %&gt;% \n  html_nodes(\"a\") %&gt;% \n  html_text()\n\nurl_raw &lt;- tibble(names = url_names,\n       url  = urls)\n\n# url_names |&gt; \n#   clipr::write_clip()\n\nurl_tbl &lt;- url_raw |&gt; \n  mutate(시도명 = if_else(names %in% \n                         c(\"서울특별시\", \"부산광역시\", \"대구광역시\", \"인천광역시\",\n                           \"광주광역시\", \"대전광역시\", \"울산광역시\", \"세종특별자치시\",\n                           \"경기도\", \"강원도\", \"충청북도\", \"충청남도\", \"전라북도\", \n                           \"전라남도\", \"경상북도\", \"경상남도\", \"제주특별자치도\"), names, NA_character_)) |&gt; \n  fill(시도명, .direction = \"down\") |&gt; \n  select(시도명, 선거구명 = names, url) |&gt; \n  filter(시도명 != 선거구명) |&gt; \n  mutate(url = URLdecode(url))\n\n\nurl_tbl\n#&gt; # A tibble: 506 × 3\n#&gt;    시도명     선거구명       url                         \n#&gt;    &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;                       \n#&gt;  1 서울특별시 종로구         /wiki/종로구_(1988년_선거구)\n#&gt;  2 서울특별시 중구·성동구 갑 /wiki/중구·성동구_갑        \n#&gt;  3 서울특별시 중구·성동구 을 /wiki/중구·성동구_을        \n#&gt;  4 서울특별시 용산구         /wiki/용산구_(1988년_선거구)\n#&gt;  5 서울특별시 광진구 갑      /wiki/광진구_갑             \n#&gt;  6 서울특별시 이낙연         /wiki/이낙연                \n#&gt;  7 서울특별시 홍익표         /wiki/홍익표_(1967년)       \n#&gt;  8 서울특별시 박성준         /wiki/박성준_(정치인)       \n#&gt;  9 서울특별시 권영세         /wiki/권영세_(1959년)       \n#&gt; 10 서울특별시 전혜숙         /wiki/전혜숙                \n#&gt; # ℹ 496 more rows"
  },
  {
    "objectID": "candidate.html#당선인-선거구",
    "href": "candidate.html#당선인-선거구",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드mp_url_tbl &lt;- url_tbl |&gt; \n  mutate(선거구명 = str_remove_all(선거구명, \"[\\\\s+|·]\")) |&gt; \n  anti_join(precinct_tbl, by = c(\"시도명\", \"선거구명\")) |&gt; \n  mutate(url = str_glue(\"https://ko.wikipedia.org{url}\")) |&gt; \n  rename(당선인 = 선거구명)\n    \n\nmp_url_tbl |&gt; \n  mutate(\n      link = glue::glue(\"[website]({url})\"),\n      link = map(link, gt::md)) |&gt; \n  select(시도명, 당선인, link) |&gt;\n  gt(groupname_col = \"시도명\") |&gt; \n  gt_theme_hangul()\n\n\n\n\n\n당선인\n      link\n    \n\n\n서울특별시\n    \n\n이낙연\nwebsite\n\n\n홍익표\nwebsite\n\n\n박성준\nwebsite\n\n\n권영세\nwebsite\n\n\n전혜숙\nwebsite\n\n\n고민정\nwebsite\n\n\n안규백\nwebsite\n\n\n장경태\nwebsite\n\n\n서영교\nwebsite\n\n\n박홍근\nwebsite\n\n\n김영배\nwebsite\n\n\n기동민\nwebsite\n\n\n천준호\nwebsite\n\n\n박용진\nwebsite\n\n\n인재근\nwebsite\n\n\n오기형\nwebsite\n\n\n고용진\nwebsite\n\n\n우원식\nwebsite\n\n\n김성환\nwebsite\n\n\n박주민\nwebsite\n\n\n강병원\nwebsite\n\n\n우상호\nwebsite\n\n\n김영호\nwebsite\n\n\n노웅래\nwebsite\n\n\n정청래\nwebsite\n\n\n황희\nwebsite\n\n\n이용선\nwebsite\n\n\n강선우\nwebsite\n\n\n진성준\nwebsite\n\n\n한정애\nwebsite\n\n\n이인영\nwebsite\n\n\n윤건영\nwebsite\n\n\n최기상\nwebsite\n\n\n김영주\nwebsite\n\n\n김민석\nwebsite\n\n\n김병기\nwebsite\n\n\n이수진\nwebsite\n\n\n유기홍\nwebsite\n\n\n정태호\nwebsite\n\n\n윤희숙\nwebsite\n\n\n박성중\nwebsite\n\n\n태구민\nwebsite\n\n\n박진\nwebsite\n\n\n유경준\nwebsite\n\n\n김웅\nwebsite\n\n\n배현진\nwebsite\n\n\n남인순\nwebsite\n\n\n진선미\nwebsite\n\n\n이해식\nwebsite\n\n\n부산광역시\n    \n\n황보승희\nwebsite\n\n\n안병길\nwebsite\n\n\n서병수\nwebsite\n\n\n이헌승\nwebsite\n\n\n김희곤\nwebsite\n\n\n박수영\nwebsite\n\n\n박재호\nwebsite\n\n\n전재수\nwebsite\n\n\n김도읍\nwebsite\n\n\n하태경\nwebsite\n\n\n김미애\nwebsite\n\n\n최인호\nwebsite\n\n\n조경태\nwebsite\n\n\n백종헌\nwebsite\n\n\n이주환\nwebsite\n\n\n전봉민\nwebsite\n\n\n장제원\nwebsite\n\n\n정동만\nwebsite\n\n\n대구광역시\n    \n\n곽상도\nwebsite\n\n\n류성걸\nwebsite\n\n\n강대식\nwebsite\n\n\n김상훈\nwebsite\n\n\n양금희\nwebsite\n\n\n김승수\nwebsite\n\n\n주호영\nwebsite\n\n\n홍준표\nwebsite\n\n\n홍석준\nwebsite\n\n\n윤재옥\nwebsite\n\n\n김용판\nwebsite\n\n\n추경호\nwebsite\n\n\n인천광역시\n    \n\n배준영\nwebsite\n\n\n허종식\nwebsite\n\n\n윤상현\nwebsite\n\n\n박찬대\nwebsite\n\n\n정일영\nwebsite\n\n\n맹성규\nwebsite\n\n\n윤관석\nwebsite\n\n\n이성만\nwebsite\n\n\n홍영표\nwebsite\n\n\n유동수\nwebsite\n\n\n송영길\nwebsite\n\n\n김교흥\nwebsite\n\n\n신동근\nwebsite\n\n\n광주광역시\n    \n\n윤영덕\nwebsite\n\n\n이병훈\nwebsite\n\n\n송갑석\nwebsite\n\n\n양향자\nwebsite\n\n\n조오섭\nwebsite\n\n\n이형석\nwebsite\n\n\n이용빈\nwebsite\n\n\n민형배\nwebsite\n\n\n대전광역시\n    \n\n장철민\nwebsite\n\n\n황운하\nwebsite\n\n\n박병석\nwebsite\n\n\n박범계\nwebsite\n\n\n조승래\nwebsite\n\n\n이상민\nwebsite\n\n\n박영순\nwebsite\n\n\n울산광역시\n    \n\n박성민\nwebsite\n\n\n이채익\nwebsite\n\n\n김기현\nwebsite\n\n\n권명호\nwebsite\n\n\n이상헌\nwebsite\n\n\n서범수\nwebsite\n\n\n세종특별자치시\n    \n\n홍성국\nwebsite\n\n\n강준현\nwebsite\n\n\n경기도\n    \n\n김승원\nwebsite\n\n\n백혜련\nwebsite\n\n\n김영진\nwebsite\n\n\n박광온\nwebsite\n\n\n김진표\nwebsite\n\n\n김태년\nwebsite\n\n\n윤영찬\nwebsite\n\n\n김은혜\nwebsite\n\n\n김병욱\nwebsite\n\n\n오영환\nwebsite\n\n\n김민철\nwebsite\n\n\n강득구\nwebsite\n\n\n민병덕\nwebsite\n\n\n이재정\nwebsite\n\n\n김경협\nwebsite\n\n\n설훈\nwebsite\n\n\n김상희\nwebsite\n\n\n서영석\nwebsite\n\n\n임오경\nwebsite\n\n\n양기대\nwebsite\n\n\n홍기원\nwebsite\n\n\n유의동\nwebsite\n\n\n김성원\nwebsite\n\n\n전해철\nwebsite\n\n\n김철민\nwebsite\n\n\n고영인\nwebsite\n\n\n김남국\nwebsite\n\n\n심상정\nwebsite\n\n\n한준호\nwebsite\n\n\n홍정민\nwebsite\n\n\n이용우\nwebsite\n\n\n이소영\nwebsite\n\n\n윤호중\nwebsite\n\n\n조응천\nwebsite\n\n\n김한정\nwebsite\n\n\n김용민\nwebsite\n\n\n안민석\nwebsite\n\n\n문정복\nwebsite\n\n\n조정식\nwebsite\n\n\n이학영\nwebsite\n\n\n최종윤\nwebsite\n\n\n정찬민\nwebsite\n\n\n김민기\nwebsite\n\n\n정춘숙\nwebsite\n\n\n이탄희\nwebsite\n\n\n윤후덕\nwebsite\n\n\n박정\nwebsite\n\n\n송석준\nwebsite\n\n\n이규민\nwebsite\n\n\n김주영\nwebsite\n\n\n박상혁\nwebsite\n\n\n송옥주\nwebsite\n\n\n이원욱\nwebsite\n\n\n권칠승\nwebsite\n\n\n소병훈\nwebsite\n\n\n임종성\nwebsite\n\n\n정성호\nwebsite\n\n\n최춘식\nwebsite\n\n\n김선교\nwebsite\n\n\n강원도\n    \n\n허영\nwebsite\n\n\n한기호\nwebsite\n\n\n이광재\nwebsite\n\n\n송기헌\nwebsite\n\n\n권성동\nwebsite\n\n\n이철규\nwebsite\n\n\n이양수\nwebsite\n\n\n유상범\nwebsite\n\n\n충청북도\n    \n\n정정순\nwebsite\n\n\n이장섭\nwebsite\n\n\n도종환\nwebsite\n\n\n변재일\nwebsite\n\n\n이종배\nwebsite\n\n\n엄태영\nwebsite\n\n\n박덕흠\nwebsite\n\n\n임호선\nwebsite\n\n\n충청남도\n    \n\n문진석\nwebsite\n\n\n박완주\nwebsite\n\n\n이정문\nwebsite\n\n\n정진석\nwebsite\n\n\n김태흠\nwebsite\n\n\n이명수\nwebsite\n\n\n강훈식\nwebsite\n\n\n성일종\nwebsite\n\n\n김종민\nwebsite\n\n\n어기구\nwebsite\n\n\n홍문표\nwebsite\n\n\n전라북도\n    \n\n김윤덕\nwebsite\n\n\n이상직\nwebsite\n\n\n김성주\nwebsite\n\n\n신영대\nwebsite\n\n\n김수흥\nwebsite\n\n\n한병도\nwebsite\n\n\n윤준병\nwebsite\n\n\n이용호\nwebsite\n\n\n이원택\nwebsite\n\n\n안호영\nwebsite\n\n\n전라남도\n    \n\n김원이\nwebsite\n\n\n주철현\nwebsite\n\n\n김회재\nwebsite\n\n\n소병철\nwebsite\n\n\n서동용\nwebsite\n\n\n신정훈\nwebsite\n\n\n이개호\nwebsite\n\n\n김승남\nwebsite\n\n\n윤재갑\nwebsite\n\n\n서삼석\nwebsite\n\n\n경상북도\n    \n\n김정재\nwebsite\n\n\n김병욱\nwebsite\n\n\n김석기\nwebsite\n\n\n송언석\nwebsite\n\n\n김형동\nwebsite\n\n\n구자근\nwebsite\n\n\n김영식\nwebsite\n\n\n박형수\nwebsite\n\n\n이만희\nwebsite\n\n\n임이자\nwebsite\n\n\n윤두현\nwebsite\n\n\n김희국\nwebsite\n\n\n정희용\nwebsite\n\n\n경상남도\n    \n\n박완수\nwebsite\n\n\n강기윤\nwebsite\n\n\n최형두\nwebsite\n\n\n윤한홍\nwebsite\n\n\n이달곤\nwebsite\n\n\n박대출\nwebsite\n\n\n강민국\nwebsite\n\n\n정점식\nwebsite\n\n\n하영제\nwebsite\n\n\n민홍철\nwebsite\n\n\n김정호\nwebsite\n\n\n조해진\nwebsite\n\n\n서일준\nwebsite\n\n\n윤영석\nwebsite\n\n\n김두관\nwebsite\n\n\n김태호\nwebsite\n\n\n제주특별자치도\n    \n\n송재호\nwebsite\n\n\n오영훈\nwebsite\n\n\n위성곤\nwebsite"
  },
  {
    "objectID": "candidate.html#저장하기",
    "href": "candidate.html#저장하기",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드## 제21대 국회의원 당선인 url\nmp_url_tbl |&gt; \n  write_rds(\"data/mp21_url_tbl.rds\")"
  },
  {
    "objectID": "candidate.html#검사-판사-현황",
    "href": "candidate.html#검사-판사-현황",
    "title": "지도제작 대회",
    "section": "\n3.1 검사, 판사 현황",
    "text": "3.1 검사, 판사 현황\n\n코드mp_url_career &lt;- \n  read_rds(\"data/mp21_url_career.rds\")\n\nmp21_career_tbl &lt;- mp_url_career |&gt; \n  mutate(경력 = map_chr(career, str_c, collapse = \";\")) |&gt; \n  mutate(검사 = str_extract_all(경력, \"사법시험|사법연수원|검사|지청장|검사장|판사\")) |&gt; \n  unnest(검사) |&gt;\n  filter(!is.na(검사)) |&gt; \n  count(당선인, 검사) |&gt; \n  pivot_wider(names_from = 검사, values_from = n, values_fill = 0) |&gt; \n  select(당선인, 사법시험, 사법연수원, 검사, 지청장, everything()) |&gt; \n  mutate(판검사 = case_when(검사 &gt; 0 ~ \"검사\",\n                            판사 &gt; 0 ~ \"판사\",\n                            TRUE ~ \"변호사\")) |&gt; \n  relocate(판검사, .after = 당선인) |&gt;\n  arrange(판검사)\n\nmp21_career_tbl |&gt; \n  gt() |&gt; \n  gt_theme_hangul() |&gt; \n  cols_align(\"center\") |&gt;\n  tab_spanner(label = \"검찰청\", columns = c(\"사법시험\", \"사법연수원\", \"검사\", \"지청장\"))\n\n\n\n\n\n\n당선인\n      판검사\n      \n        검찰청\n      \n      판사\n    \n\n사법시험\n      사법연수원\n      검사\n      지청장\n    \n\n\n\n곽상도\n검사\n1\n0\n5\n2\n0\n\n\n권성동\n검사\n1\n1\n3\n1\n0\n\n\n권영세\n검사\n1\n1\n6\n0\n0\n\n\n김도읍\n검사\n1\n1\n3\n0\n0\n\n\n김웅\n검사\n1\n1\n10\n1\n0\n\n\n김회재\n검사\n1\n1\n15\n3\n0\n\n\n박형수\n검사\n1\n1\n14\n0\n0\n\n\n백혜련\n검사\n0\n0\n5\n0\n0\n\n\n소병철\n검사\n1\n1\n11\n1\n0\n\n\n송기헌\n검사\n1\n1\n3\n0\n0\n\n\n유상범\n검사\n1\n1\n13\n3\n0\n\n\n정점식\n검사\n1\n1\n10\n3\n0\n\n\n조응천\n검사\n1\n1\n9\n1\n0\n\n\n주철현\n검사\n0\n1\n12\n2\n0\n\n\n홍준표\n검사\n0\n0\n2\n0\n0\n\n\n김미애\n변호사\n1\n1\n0\n0\n0\n\n\n김형동\n변호사\n1\n1\n0\n0\n0\n\n\n박주민\n변호사\n1\n1\n0\n0\n0\n\n\n서동용\n변호사\n1\n0\n0\n0\n0\n\n\n송영길\n변호사\n1\n0\n0\n0\n0\n\n\n오기형\n변호사\n1\n0\n0\n0\n0\n\n\n이상민\n변호사\n1\n1\n0\n0\n0\n\n\n이소영\n변호사\n1\n1\n0\n0\n0\n\n\n이재정\n변호사\n1\n0\n0\n0\n0\n\n\n이정문\n변호사\n1\n1\n0\n0\n0\n\n\n정성호\n변호사\n1\n1\n0\n0\n0\n\n\n진선미\n변호사\n1\n1\n0\n0\n0\n\n\n홍정민\n변호사\n1\n1\n0\n0\n0\n\n\n김기현\n판사\n1\n1\n0\n0\n2\n\n\n김승원\n판사\n1\n1\n0\n0\n2\n\n\n민홍철\n판사\n0\n0\n0\n0\n1\n\n\n박범계\n판사\n0\n0\n0\n0\n3\n\n\n이수진\n판사\n1\n1\n0\n0\n4\n\n\n이탄희\n판사\n1\n1\n0\n0\n5\n\n\n주호영\n판사\n1\n0\n0\n0\n6\n\n\n최기상\n판사\n1\n1\n0\n0\n7"
  },
  {
    "objectID": "candidate.html#제21대-당선인-법조인",
    "href": "candidate.html#제21대-당선인-법조인",
    "title": "지도제작 대회",
    "section": "\n3.2 제21대 당선인 + 법조인",
    "text": "3.2 제21대 당선인 + 법조인\n\n코드precinct_tbl &lt;- total_elected_all |&gt; \n  filter(sgId == \"20200415\") |&gt; \n  select(result) |&gt; \n  unnest(result) |&gt; \n  select(시도명 = sdName, 선거구명 = sggName, 정당명=jdName, 당선인 = name)\n\n\nmp21_precinct_career &lt;- precinct_tbl |&gt; \n  filter(선거구명 != \"비례대표\") |&gt; \n  left_join(mp21_career_tbl, by = \"당선인\") |&gt; \n  mutate(법조인 = ifelse(is.na(판검사), \"비법조인\", 판검사)) \n\n  \ngrand_pcnt_func &lt;- function(dataframe) {\n  prosecutor_rate &lt;- dataframe  |&gt; \n    count(판검사) |&gt; \n    mutate(검사비율 = n / sum(n)) |&gt; \n    filter(판검사 == \"검사\") |&gt; \n    pull(검사비율)\n\n  return (prosecutor_rate)\n}  \n\nmp21_precinct_career_gt &lt;- mp21_precinct_career |&gt; \n  group_by(정당명, 법조인) |&gt; \n  summarise(법조인수 = n()) |&gt; \n  pivot_wider(names_from = 법조인, values_from = 법조인수, values_fill = 0) |&gt; \n  ungroup() |&gt; \n  arrange(desc(비법조인)) |&gt; \n  select(정당명, 비법조인, 변호사, 판사, 검사) |&gt;\n  janitor::adorn_totals(c(\"col\"), name = \"합계\")  |&gt; \n  mutate(검사비율 = 검사 / 합계) |&gt;\n  gt(rowname_col = \"정당명\") |&gt; \n  gt_theme_hangul() |&gt; \n  cols_align(\"center\") |&gt;\n  tab_spanner(label = \"법조인\", columns = c(\"검사\", \"판사\", \"변호사\")) |&gt; \n  grand_summary_rows(\n    fns =  list(label = \"합계\", id = \"totals\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"bottom\"\n  ) |&gt; \n  fmt_percent(columns = 검사비율, decimals = 1)  |&gt; \n  grand_summary_rows (\n    columns = 검사비율,\n    fns =   list(\"합계\" = ~grand_pcnt_func(mp21_precinct_career)),\n    fmt = ~ fmt_percent(., decimals = 1)\n  ) |&gt;\n  tab_header(title = \"제21대 총선 법조인 당선인 통계\") |&gt;\n  tab_footnote(\n    footnote = \"위키백과: 대한민국_제21대_국회의원_선거\",\n    locations = cells_title(groups = \"title\")\n  ) |&gt; \n  tab_style(\n    style = cell_text(color = \"red\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(검사비율, 검사), \n      rows = 정당명 == \"미래통합당\"\n    )) |&gt; \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", size = \"large\"),\n    locations = cells_body(\n      columns = c(검사), \n      rows = 정당명 == \"무소속\"\n    )) |&gt;   \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", size = \"large\"),\n        locations = cells_grand_summary(\n      columns = c(\"검사비율\")\n    )) |&gt;   \n  tab_footnote(\n    footnote = \"대구 수성구을(홍준표), 강원 강릉시(권성동)\",\n    locations = cells_body(columns = 검사, rows = 정당명 == \"무소속\")\n  )\n\nmp21_precinct_career_gt\n\n\n\n\n\n\n제21대 총선 법조인 당선인 통계1\n\n    \n\n\n      비법조인\n      \n        법조인\n      \n      합계\n      검사비율\n    \n\n검사\n      판사\n      변호사\n    \n\n\n\n더불어민주당\n140\n6\n6\n11\n163\n3.7%\n\n\n미래통합당\n73\n7\n2\n2\n84\n8.3%\n\n\n무소속\n3\n22\n\n0\n0\n5\n40.0%\n\n\n정의당\n1\n0\n0\n0\n1\n0.0%\n\n\n합계\n217\n15\n8\n13\n253\n5.9%\n\n\n\n\n\n1 위키백과: 대한민국_제21대_국회의원_선거\n    \n\n\n2 대구 수성구을(홍준표), 강원 강릉시(권성동)\n    \n\n\n\n\n코드\n# mp21_precinct_career_gt |&gt; \n#   gtsave(\"images/mp21_precinct_career_gt.png\")\n\n\n\n코드mp21_precinct_career |&gt; \n  filter(판검사 == \"검사\") |&gt; \n  count(정당명, 당선인, 시도명, 선거구명) |&gt; \n  arrange(정당명, 시도명) |&gt;\n  select(-n) |&gt; \n  group_by(정당명) |&gt;\n  gt() |&gt; \n  gt_theme_hangul() |&gt; \n  cols_align(\"center\")\n\n\n\n\n\n당선인\n      시도명\n      선거구명\n    \n\n\n더불어민주당\n    \n\n송기헌\n강원도\n원주시을\n\n\n백혜련\n경기도\n수원시을\n\n\n조응천\n경기도\n남양주시갑\n\n\n김회재\n전라남도\n여수시을\n\n\n소병철\n전라남도\n순천시광양시곡성군구례군갑\n\n\n주철현\n전라남도\n여수시갑\n\n\n무소속\n    \n\n권성동\n강원도\n강릉시\n\n\n홍준표\n대구광역시\n수성구을\n\n\n미래통합당\n    \n\n유상범\n강원도\n홍천군횡성군영월군평창군\n\n\n정점식\n경상남도\n통영시고성군\n\n\n박형수\n경상북도\n영주시영양군봉화군울진군\n\n\n곽상도\n대구광역시\n중구남구\n\n\n김도읍\n부산광역시\n북구강서구을\n\n\n권영세\n서울특별시\n용산구\n\n\n김웅\n서울특별시\n송파구갑"
  },
  {
    "objectID": "watermellon.html",
    "href": "watermellon.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "민주당 수박 감별기: 수박감별 구글 스프레드시트에 공개되어 있다.\n\n코드library(tidyverse)\nlibrary(rvest)\nlibrary(gt)\nlibrary(gtExtras)\n\nwm_url &lt;- \"https://docs.google.com/spreadsheets/d/e/2PACX-1vTDEYwVAwrKp7HaW0U_HEfuTVd5yHNuM5mT1T28X-b6ChKlJdgvCweDY1nKJ7bT_14XQABRmL4_LdGS/pubhtml?gid=487059203\"\n\nwm_raw &lt;- read_html(wm_url) |&gt; \n  html_element(\"table\") |&gt;\n  html_table(header = TRUE)\n\nwm_tbl &lt;- wm_raw |&gt; \n  janitor::row_to_names(row_number = 1)  |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  rename(\"성명\" = x) |&gt; \n  slice(2:n()) |&gt; \n  select(-na, -x1)\n\nwm_tbl |&gt; \n  reactable::reactable()"
  },
  {
    "objectID": "watermellon.html#검사탄핵",
    "href": "watermellon.html#검사탄핵",
    "title": "지도제작 대회",
    "section": "\n2.1 검사탄핵",
    "text": "2.1 검사탄핵\n\n코드wm_tbl |&gt; \n  mutate(검사탄핵 = ifelse(검사_탄핵 == \"검사탄핵\", \"탄핵\", \"탄핵반대\")) |&gt;    \n  count(검사탄핵, name = \"의원수\") |&gt; \n  mutate(비율 = 의원수 / sum(의원수)) |&gt; \n  gt::gt(rowname_col = \"검사탄핵\") |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt;\n  fmt_percent(columns = 비율, decimals = 1) |&gt;\n  gt::grand_summary_rows(\n    columns = c(의원수),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_number, \n    decimals = 0\n  ) |&gt; \n  gt::grand_summary_rows(\n    columns = c(비율),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_percent, \n    decimals = 0\n  ) |&gt; \n  gt_theme_hangul() |&gt; \n  tab_header(\n    title = \"민주당 의원 검사탄핵 의원수 및 비율\",\n    subtitle = \"자료출처: 민주당 수박 감별기\"\n  ) |&gt; \n  gt::tab_footnote(\n    footnote = \"https://bit.ly/48Ftfjb\",\n    locations = cells_title(\"subtitle\")\n  ) |&gt; \n  opt_align_table_header(align = \"left\") |&gt; \n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_stub_grand_summary()\n  )\n\n\n\n\n\n\n민주당 의원 검사탄핵 의원수 및 비율\n    \n\n자료출처: 민주당 수박 감별기1\n\n    \n\n\n      의원수\n      비율\n    \n\n\n\n탄핵\n100\n59.5%\n\n\n탄핵반대\n68\n40.5%\n\n\n합계\n168\n100%\n\n\n\n\n1 https://bit.ly/48Ftfjb"
  },
  {
    "objectID": "watermellon.html#불체포-포기",
    "href": "watermellon.html#불체포-포기",
    "title": "지도제작 대회",
    "section": "\n2.2 불체포 포기",
    "text": "2.2 불체포 포기\n\n코드wm_tbl |&gt; \n  mutate(의원체포 = ifelse(불체포_포기 == \"불체포포기\", \"체포\", \"불체포\")) |&gt;\n  count(의원체포, name = \"의원수\") |&gt; \n  mutate(비율 = 의원수 / sum(의원수)) |&gt; \n  # janitor::adorn_totals(\"row\", name = \"합계\")\n  gt::gt(rowname_col = \"의원체포\") |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt;\n  fmt_percent(columns = 비율, decimals = 1) |&gt;\n  gt::grand_summary_rows(\n    columns = c(의원수),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_number, \n    decimals = 0\n  ) |&gt; \n  gt::grand_summary_rows(\n    columns = c(비율),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_percent, \n    decimals = 0\n  ) |&gt; \n  gt_theme_hangul() |&gt; \n  tab_header(\n    title = \"민주당 의원 의원불체포 의원수 및 비율\",\n    subtitle = \"자료출처: 민주당 수박 감별기\"\n  ) |&gt; \n  gt::tab_footnote(\n    footnote = \"https://bit.ly/48Ftfjb\",\n    locations = cells_title(\"subtitle\")\n  ) |&gt; \n  opt_align_table_header(align = \"left\") |&gt; \n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_stub_grand_summary()\n  )\n\n\n\n\n\n\n민주당 의원 의원불체포 의원수 및 비율\n    \n\n자료출처: 민주당 수박 감별기1\n\n    \n\n\n      의원수\n      비율\n    \n\n\n\n불체포\n137\n81.5%\n\n\n체포\n31\n18.5%\n\n\n합계\n168\n100%\n\n\n\n\n1 https://bit.ly/48Ftfjb"
  },
  {
    "objectID": "watermellon.html#대의원1인1표제",
    "href": "watermellon.html#대의원1인1표제",
    "title": "지도제작 대회",
    "section": "\n2.3 대의원1인1표제",
    "text": "2.3 대의원1인1표제\n\n코드wm_tbl |&gt; \n  mutate(대의원1인1표제 = ifelse(대의원1인1표제_반대 == \"대의원1인1표제 반대\", \"반대\", \"찬성\")) |&gt;\n  count(대의원1인1표제, name = \"의원수\") |&gt; \n  mutate(비율 = 의원수 / sum(의원수)) |&gt; \n  # janitor::adorn_totals(\"row\", name = \"합계\")\n  arrange(desc(의원수)) |&gt; \n  gt::gt(rowname_col = \"대의원1인1표제\") |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt;\n  fmt_percent(columns = 비율, decimals = 1) |&gt;\n  gt::grand_summary_rows(\n    columns = c(의원수),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_number, \n    decimals = 0\n  ) |&gt; \n  gt::grand_summary_rows(\n    columns = c(비율),\n    fns = list(\"합계\" = ~sum(., na.rm = TRUE)),\n    formatter = fmt_percent, \n    decimals = 0\n  ) |&gt; \n  gt_theme_hangul() |&gt; \n  tab_header(\n    title = \"민주당 의원 의원불체포 의원수 및 비율\",\n    subtitle = \"자료출처: 민주당 수박 감별기\"\n  ) |&gt; \n  gt::tab_footnote(\n    footnote = \"https://bit.ly/48Ftfjb\",\n    locations = cells_title(\"subtitle\")\n  ) |&gt; \n  opt_align_table_header(align = \"left\") |&gt; \n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_stub_grand_summary()\n  )  \n\n\n\n\n\n\n민주당 의원 의원불체포 의원수 및 비율\n    \n\n자료출처: 민주당 수박 감별기1\n\n    \n\n\n      의원수\n      비율\n    \n\n\n\n찬성\n154\n91.7%\n\n\n반대\n14\n8.3%\n\n\n합계\n168\n100%\n\n\n\n\n1 https://bit.ly/48Ftfjb"
  },
  {
    "objectID": "gs_position.html",
    "href": "gs_position.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "서울시 자치구별 지역내총생산(2015년 기준) 통계\n\n코드library(tidyverse)\nlibrary(readxl)\n\ngrdp_raw &lt;- read_excel(\"data/자치구별+지역내총생산(2015년+기준)_20231011134915.xlsx\", skip = 0)\n\ngrdp_tbl &lt;- grdp_raw |&gt;\n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(자치구 = 자치구별_2, contains(\"x2020\")) |&gt; \n  janitor::row_to_names(row_number = 1) |&gt; \n  set_names(c(\"자치구\", \"GRDP\", \"GRDP_pcnt\", \"GRDP_2\", \"GRDP_pcnt2\")) |&gt; \n  select(자치구, GRDP) |&gt; \n  mutate( GRDP = parse_number(GRDP)) |&gt; \n  filter(자치구 != \"소계\") |&gt; mutate(GRDP = GRDP / 1000000 )\n\ngrdp_tbl\n#&gt; # A tibble: 25 × 2\n#&gt;    자치구    GRDP\n#&gt;    &lt;chr&gt;    &lt;dbl&gt;\n#&gt;  1 종로구   33.9 \n#&gt;  2 중구     56.1 \n#&gt;  3 용산구   12.8 \n#&gt;  4 성동구   12.4 \n#&gt;  5 광진구    6.45\n#&gt;  6 동대문구  7.40\n#&gt;  7 중랑구    4.75\n#&gt;  8 성북구    6.19\n#&gt;  9 강북구    3.36\n#&gt; 10 도봉구    3.50\n#&gt; # ℹ 15 more rows\n\n\n\n\n코드pop_raw &lt;- read_csv(\"data/202308_202308_주민등록인구및세대현황_월간.csv\",\n                   locale = locale('ko',encoding='euc-kr'))\n\nseoul_pop &lt;- pop_raw |&gt; \n  select(구명 = 행정구역, 인구수 = `2023년08월_총인구수`) |&gt; \n  mutate(구명 = str_extract(구명, \"\\\\w+구\")) |&gt; \n  drop_na() |&gt; \n  mutate(강북강남 = ifelse(구명 %in% c(\"은평구\", \"서대문구\", \"마포구\", \"종로구\", \"중구\", \"용산구\", \"동대문구\", \"성동구\", \"성북구\", \"중랑구\", \"광진구\", \"강북구\", \"도봉구\", \"노원구\"), \"강북\", \"강남\")) |&gt; \n  mutate(인구수 = 인구수 / 10000)\n\nseoul_pop\n#&gt; # A tibble: 25 × 3\n#&gt;    구명     인구수 강북강남\n#&gt;    &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;   \n#&gt;  1 종로구     14.0 강북    \n#&gt;  2 중구       12.1 강북    \n#&gt;  3 용산구     21.7 강북    \n#&gt;  4 성동구     27.9 강북    \n#&gt;  5 광진구     33.6 강북    \n#&gt;  6 동대문구   34.0 강북    \n#&gt;  7 중랑구     38.3 강북    \n#&gt;  8 성북구     42.8 강북    \n#&gt;  9 강북구     29.1 강북    \n#&gt; 10 도봉구     30.8 강북    \n#&gt; # ℹ 15 more rows\n\n\n\n\n코드pop_grdp &lt;- seoul_pop |&gt; \n  left_join(grdp_tbl, by = c(\"구명\" = \"자치구\"))\n\npop_grdp\n#&gt; # A tibble: 25 × 4\n#&gt;    구명     인구수 강북강남  GRDP\n#&gt;    &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n#&gt;  1 종로구     14.0 강북     33.9 \n#&gt;  2 중구       12.1 강북     56.1 \n#&gt;  3 용산구     21.7 강북     12.8 \n#&gt;  4 성동구     27.9 강북     12.4 \n#&gt;  5 광진구     33.6 강북      6.45\n#&gt;  6 동대문구   34.0 강북      7.40\n#&gt;  7 중랑구     38.3 강북      4.75\n#&gt;  8 성북구     42.8 강북      6.19\n#&gt;  9 강북구     29.1 강북      3.36\n#&gt; 10 도봉구     30.8 강북      3.50\n#&gt; # ℹ 15 more rows"
  },
  {
    "objectID": "gs_position.html#대통령-선거",
    "href": "gs_position.html#대통령-선거",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nlibrary(tidyverse)"
  },
  {
    "objectID": "gs_position.html#grdp",
    "href": "gs_position.html#grdp",
    "title": "지도제작 대회",
    "section": "",
    "text": "서울시 자치구별 지역내총생산(2015년 기준) 통계\n\n코드library(tidyverse)\nlibrary(readxl)\n\ngrdp_raw &lt;- read_excel(\"data/자치구별+지역내총생산(2015년+기준)_20231011134915.xlsx\", skip = 0)\n\ngrdp_tbl &lt;- grdp_raw |&gt;\n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(자치구 = 자치구별_2, contains(\"x2020\")) |&gt; \n  janitor::row_to_names(row_number = 1) |&gt; \n  set_names(c(\"자치구\", \"GRDP\", \"GRDP_pcnt\", \"GRDP_2\", \"GRDP_pcnt2\")) |&gt; \n  select(자치구, GRDP) |&gt; \n  mutate( GRDP = parse_number(GRDP)) |&gt; \n  filter(자치구 != \"소계\") |&gt; mutate(GRDP = GRDP / 1000000 )\n\ngrdp_tbl\n#&gt; # A tibble: 25 × 2\n#&gt;    자치구    GRDP\n#&gt;    &lt;chr&gt;    &lt;dbl&gt;\n#&gt;  1 종로구   33.9 \n#&gt;  2 중구     56.1 \n#&gt;  3 용산구   12.8 \n#&gt;  4 성동구   12.4 \n#&gt;  5 광진구    6.45\n#&gt;  6 동대문구  7.40\n#&gt;  7 중랑구    4.75\n#&gt;  8 성북구    6.19\n#&gt;  9 강북구    3.36\n#&gt; 10 도봉구    3.50\n#&gt; # ℹ 15 more rows"
  },
  {
    "objectID": "gs_position.html#인구수",
    "href": "gs_position.html#인구수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드pop_raw &lt;- read_csv(\"data/202308_202308_주민등록인구및세대현황_월간.csv\",\n                   locale = locale('ko',encoding='euc-kr'))\n\nseoul_pop &lt;- pop_raw |&gt; \n  select(구명 = 행정구역, 인구수 = `2023년08월_총인구수`) |&gt; \n  mutate(구명 = str_extract(구명, \"\\\\w+구\")) |&gt; \n  drop_na() |&gt; \n  mutate(강북강남 = ifelse(구명 %in% c(\"은평구\", \"서대문구\", \"마포구\", \"종로구\", \"중구\", \"용산구\", \"동대문구\", \"성동구\", \"성북구\", \"중랑구\", \"광진구\", \"강북구\", \"도봉구\", \"노원구\"), \"강북\", \"강남\")) |&gt; \n  mutate(인구수 = 인구수 / 10000)\n\nseoul_pop\n#&gt; # A tibble: 25 × 3\n#&gt;    구명     인구수 강북강남\n#&gt;    &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;   \n#&gt;  1 종로구     14.0 강북    \n#&gt;  2 중구       12.1 강북    \n#&gt;  3 용산구     21.7 강북    \n#&gt;  4 성동구     27.9 강북    \n#&gt;  5 광진구     33.6 강북    \n#&gt;  6 동대문구   34.0 강북    \n#&gt;  7 중랑구     38.3 강북    \n#&gt;  8 성북구     42.8 강북    \n#&gt;  9 강북구     29.1 강북    \n#&gt; 10 도봉구     30.8 강북    \n#&gt; # ℹ 15 more rows"
  },
  {
    "objectID": "gs_position.html#인구-grdp",
    "href": "gs_position.html#인구-grdp",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드pop_grdp &lt;- seoul_pop |&gt; \n  left_join(grdp_tbl, by = c(\"구명\" = \"자치구\"))\n\npop_grdp\n#&gt; # A tibble: 25 × 4\n#&gt;    구명     인구수 강북강남  GRDP\n#&gt;    &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n#&gt;  1 종로구     14.0 강북     33.9 \n#&gt;  2 중구       12.1 강북     56.1 \n#&gt;  3 용산구     21.7 강북     12.8 \n#&gt;  4 성동구     27.9 강북     12.4 \n#&gt;  5 광진구     33.6 강북      6.45\n#&gt;  6 동대문구   34.0 강북      7.40\n#&gt;  7 중랑구     38.3 강북      4.75\n#&gt;  8 성북구     42.8 강북      6.19\n#&gt;  9 강북구     29.1 강북      3.36\n#&gt; 10 도봉구     30.8 강북      3.50\n#&gt; # ℹ 15 more rows"
  },
  {
    "objectID": "gs_position.html#인구수와-grdp",
    "href": "gs_position.html#인구수와-grdp",
    "title": "지도제작 대회",
    "section": "\n2.1 인구수와 GRDP",
    "text": "2.1 인구수와 GRDP\n\n코드library(ggrepel)\n\npop_grdp |&gt; \n  ggplot(aes(x = 인구수, y = GRDP)) +\n    geom_point() +\n    theme_minimal(base_family=\"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    labs(title = \"서울시 자치구 인구수와 지역내총생산\",\n         x = \"인구수(만명)\",\n         y = \"지역내총생산(조원)\") +\n    scale_x_continuous(labels = scales::unit_format(unit = \" 만명\", sep = \"\")) +\n    scale_y_continuous(labels = scales::unit_format(unit = \" 조원\", sep = \"\")) +\n    geom_text_repel(aes(label = 구명),\n                    size = 4.5, min.segment.length = 0, force = 0.5, max.overlaps=Inf,\n                    color = \"black\")"
  },
  {
    "objectID": "gs_position.html#인구수와-1인당-grdp",
    "href": "gs_position.html#인구수와-1인당-grdp",
    "title": "지도제작 대회",
    "section": "\n2.2 인구수와 1인당 GRDP",
    "text": "2.2 인구수와 1인당 GRDP\n\n코드pop_grdp |&gt; \n  mutate(인당GRDP = GRDP / 인구수) |&gt; \n  ggplot(aes(x = 인구수, y = 인당GRDP)) +\n    geom_point() +\n    theme_minimal(base_family=\"MaruBrui\") +\n    theme(legend.position = \"none\") +\n    labs(title = \"서울시 자치구 인구수와 1인당 지역내총생산\",\n         x = \"인구수(만명)\",\n         y = \"인당 지역내총생산(조원)\") +\n    scale_x_continuous(labels = scales::unit_format(unit = \" 만명\", sep = \"\")) +\n    scale_y_continuous(labels = scales::unit_format(unit = \" 조원\", sep = \"\")) +\n    geom_text_repel(aes(label = 구명),\n                    size = 4.5, min.segment.length = 0, \n                    force = 0.5, max.overlaps=Inf, color = \"black\")"
  },
  {
    "objectID": "gs_position.html#재보궐-선거",
    "href": "gs_position.html#재보궐-선거",
    "title": "지도제작 대회",
    "section": "\n3.1 2021 재보궐 선거",
    "text": "3.1 2021 재보궐 선거\n\n코드by_election_2021_vote &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\")  |&gt; \n  filter(후보 != \"후보_계\",\n         읍면동명 != \"합계\",\n         구분 != \"계\") |&gt; \n  select(읍면동명, 구분, 후보,  득표수) |&gt; \n  mutate(정당 = case_when(\n    str_detect(후보, \"국민의힘\") ~ \"국민의힘\",\n    str_detect(후보, \"더불어민주당\") ~ \"민주당\",\n    TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표수 = sum(득표수)) |&gt; \n  pivot_wider(names_from = 정당, values_from = 득표수) |&gt; \n  mutate(선거 = \"2021 서울시장\") \n\nby_election_2021_cast &lt;- krvote::by_election_2021 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군 == \"강서구\")  |&gt; \n  select(구시군, 읍면동명, 선거인수, 투표수) |&gt; \n  filter(읍면동명 == \"합계\") |&gt; \n  distinct_all() |&gt; \n  mutate(투표율 = 투표수 / 선거인수) |&gt; \n  select(선거인수, 투표수)\n\nby_election_2021 &lt;- bind_cols(by_election_2021_cast, by_election_2021_vote) |&gt; \n  select(선거, everything())\n\nby_election_2021\n#&gt; # A tibble: 1 × 6\n#&gt;   선거          선거인수 투표수 국민의힘  기타 민주당\n#&gt;   &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 2021 서울시장   505314 284823   152517  9824 120310"
  },
  {
    "objectID": "gs_position.html#대통령선거",
    "href": "gs_position.html#대통령선거",
    "title": "지도제작 대회",
    "section": "\n3.2 2022 대통령선거",
    "text": "3.2 2022 대통령선거\n\n코드# 투표율\npresident_2022_cast &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\")  |&gt;\n  summarise(선거인수 = sum(선거인수),\n            투표수 = sum(투표수))\n\npresident_2022_vote &lt;- krvote::election_20220309$득표율 |&gt; \n  filter(시도명 == \"서울특별시\",\n         구시군명 == \"강서구\") |&gt;\n  pivot_longer(이재명:김민찬, names_to = \"후보\", values_to = \"득표수\") |&gt;\n  mutate(정당 = case_when(\n    str_detect(후보, \"윤석열\") ~ \"국민의힘\",\n    str_detect(후보, \"이재명\") ~ \"민주당\",\n    TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt; \n  summarise(득표수 = sum(득표수)) |&gt; \n  pivot_wider(names_from = 정당, values_from = 득표수) |&gt; \n  mutate(선거 = \"2022 대통령선거\")   \n   \n\npresident_2022 &lt;- bind_cols(president_2022_cast, president_2022_vote) |&gt; \n  select(선거, everything())\n\npresident_2022\n#&gt; # A tibble: 1 × 6\n#&gt;   선거            선거인수 투표수 국민의힘  기타 민주당\n#&gt;   &lt;chr&gt;              &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 2022 대통령선거   504185 390247   181510 14866 190000"
  },
  {
    "objectID": "gs_position.html#국회의원선거",
    "href": "gs_position.html#국회의원선거",
    "title": "지도제작 대회",
    "section": "\n3.3 2020 국회의원선거",
    "text": "3.3 2020 국회의원선거\n\n코드chongsun_2020 &lt;- krvote::general_2020 |&gt; \n  filter(시도 == \"서울\",\n         str_detect(선거구, \"^강서\")) |&gt; \n  unnest(data) |&gt; \n  mutate(구분 = ifelse(stringi::stri_enc_isutf8(구분), 구분, \n                     iconv(구분, from = \"euc-kr\", to =\"utf-8\") )) |&gt; \n  filter(!구분 %in% c(\"계\", \"기권수\", \"무표투표수\")) |&gt;\n  mutate(후보 = case_when(\n    str_detect(구분, \"더불어민주당\") ~ \"민주당\",\n    str_detect(구분, \"미래통합당\") ~ \"국민의힘\",\n    str_detect(구분, \"선거인수\") ~ \"선거인수\",\n    str_detect(구분, \"투표수\") ~ \"투표수\",\n    TRUE ~ \"기타\")) |&gt; \n  group_by(후보) |&gt; \n  summarise(사람수 = sum(사람수)) |&gt; \n  pivot_wider(names_from = 후보, values_from = 사람수) |&gt; \n  mutate(선거 = \"2020 국회의원\") |&gt; \n  select(선거, 선거인수, 투표수, 국민의힘, 기타, 민주당)\n\nchongsun_2020\n#&gt; # A tibble: 1 × 6\n#&gt;   선거          선거인수 투표수 국민의힘  기타 민주당\n#&gt;   &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 2020 국회의원   511124 343759   133155 12084 194596"
  },
  {
    "objectID": "gs_position.html#년-보궐선거",
    "href": "gs_position.html#년-보궐선거",
    "title": "지도제작 대회",
    "section": "\n3.4 2023년 보궐선거",
    "text": "3.4 2023년 보궐선거\n\n코드library(readxl)\n\nby_election_2023_raw &lt;- read_excel(\"data/[2023년_하반기_재·보궐선거]_개표진행상황.xlsx\",\n                                   skip = 5)\n\nby_election_2023 &lt;- by_election_2023_raw |&gt;\n  set_names(c(\"선거구명\", \"구시군명\", \"선거인수\", \"투표수\", \"더불어민주당\\n진교훈\", \n\"국민의힘\\n김태우\", \"정의당\\n권수정\", \"x8\", \"진보당\\n권혜인\", \n\"녹색당\\n김유리\", \"자유통일당\\n고영일\", \"계\", \n\"무효투표수\", \"기권수\", \"개표율\")) |&gt; \n  filter(!is.na(구시군명)) |&gt; \n  pivot_longer(cols = contains(\"\\n\"), names_to = \"후보\",\n              values_to = \"사람수\") |&gt; \n  select(구시군명, 선거인수, 투표수, 후보, 사람수) |&gt; \n  mutate(사람수 = parse_number(사람수)) |&gt; \n  mutate(후보 = case_when(\n    str_detect(후보, \"더불어민주당\") ~ \"민주당\",\n    str_detect(후보, \"국민의힘\") ~ \"국민의힘\",\n    TRUE ~ \"기타\")) |&gt; \n  group_by(선거인수, 투표수, 후보) |&gt; \n  summarise(사람수 = sum(사람수)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(names_from = 후보, values_from = 사람수) |&gt; \n  mutate(선거 = \"2023 재보궐\") |&gt; \n  select(선거, 선거인수, 투표수, 국민의힘, 기타, 민주당) |&gt; \n  mutate(선거인수 = parse_number(선거인수),\n         투표수 = parse_number(투표수))"
  },
  {
    "objectID": "gs_position.html#년-지방선거",
    "href": "gs_position.html#년-지방선거",
    "title": "지도제작 대회",
    "section": "\n3.5 2022년 지방선거",
    "text": "3.5 2022년 지방선거\n\n코드local_2022_vote &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(구시군명 == \"강서구\") |&gt; \n  pivot_longer(더불어민주당_송영길:무소속_김광종) |&gt; \n  mutate(정당 = case_when(\n    str_detect(name, \"더불어민주당\") ~ \"민주당\",\n    str_detect(name, \"국민의힘\") ~ \"국민의힘\",\n    TRUE ~ \"기타\")) |&gt; \n  group_by(정당) |&gt;\n  summarise(사람수 = sum(value)) |&gt; \n  pivot_wider(names_from = 정당, values_from = 사람수) |&gt; \n  mutate(선거 = \"2022 서울시장\")     \n\nlocal_2022_cast &lt;- krvote::local_sido_20220601 |&gt; \n  filter(선거구명 == \"서울특별시\") |&gt; \n  unnest(data) |&gt; \n  filter(구시군명 == \"강서구\") |&gt; \n  summarise(선거인수 = sum(선거인수), 투표수 = sum(투표수))\n\nlocal_2023 &lt;- bind_cols(local_2022_cast, local_2022_vote) |&gt; \n  select(선거, everything())\n\nlocal_2023\n#&gt; # A tibble: 1 × 6\n#&gt;   선거          선거인수 투표수 국민의힘  기타 민주당\n#&gt;   &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 2022 서울시장   504606 260947   145128  4664 108938"
  },
  {
    "objectID": "gs_position.html#데이터-결합",
    "href": "gs_position.html#데이터-결합",
    "title": "지도제작 대회",
    "section": "\n3.6 데이터 결합",
    "text": "3.6 데이터 결합\n\n코드gs_tbl &lt;- bind_rows(by_election_2021, president_2022, chongsun_2020, by_election_2023, local_2023) |&gt; \n  mutate(선거 = factor(선거, levels = c(\"2020 국회의원\", \"2021 서울시장\",\n                                        \"2022 대통령선거\", \"2022 서울시장\", \"2023 재보궐\"))) |&gt; \n  arrange(선거)\n\ngs_tbl\n#&gt; # A tibble: 5 × 6\n#&gt;   선거            선거인수 투표수 국민의힘  기타 민주당\n#&gt;   &lt;fct&gt;              &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 2020 국회의원     511124 343759   133155 12084 194596\n#&gt; 2 2021 서울시장     505314 284823   152517  9824 120310\n#&gt; 3 2022 대통령선거   504185 390247   181510 14866 190000\n#&gt; 4 2022 서울시장     504606 260947   145128  4664 108938\n#&gt; 5 2023 재보궐       500603 243664    95492  9950 137066"
  },
  {
    "objectID": "gs_position.html#투표율",
    "href": "gs_position.html#투표율",
    "title": "지도제작 대회",
    "section": "\n4.1 투표율",
    "text": "4.1 투표율\n\n코드gs_tbl |&gt;\n  select(선거, 선거인수, 투표수) |&gt; \n  pivot_longer(-선거) |&gt; \n  mutate(name = factor(name, levels = c(\"투표수\", \"선거인수\"))) |&gt;\n  ggplot(aes(x = 선거, y = value, fill = name, \n             width = ifelse(name == \"투표수\", 0.2, 0.4))) +\n    geom_col(stat = \"identity\") +\n    theme_bw(base_family = \"NanumGothic\") +\n    theme(legend.position = \"top\",\n          axis.text.y = element_text(size = rel(1.5), colour = \"gray35\", family = \"NanumBarunpen\", face=\"bold\"),\n          axis.text.x = element_text(size = rel(1.0), colour = \"black\", family = \"NanumBarunpen\", face=\"bold\",\n                                     angle = 0, vjust = 0.5, hjust=0.5),\n          strip.background=element_rect(fill=\"gray95\"),\n          plot.title=element_text(size=18, face=\"bold\", family = \"NanumBarunpen\"),\n          plot.subtitle=element_text(face=\"bold\", size=13, colour=\"grey10\", family = \"NanumBarunpen\")) +\n    labs(x        = \"\",\n         y        = \"\",\n         title    = \"강서구 선거인수와 투표수\",\n         caption  = \"자료 출처: 중앙선거관리위원회 선거통계 시스템\",\n         fill     = \"\") +\n    scale_y_continuous(labels = scales::comma, limits = c(0, 530000)) +\n    scale_fill_manual(values = c(\"darkblue\", \"gray77\")) +\n    coord_flip() +\n    geom_text(aes(label = scales::comma(value)), \n              hjust = -0.1, size = 2.5, \n              family = \"NanumBarunpen\")"
  },
  {
    "objectID": "gs_position.html#득표수",
    "href": "gs_position.html#득표수",
    "title": "지도제작 대회",
    "section": "\n4.2 득표수",
    "text": "4.2 득표수\n\n코드gs_tbl |&gt;\n  select(-선거인수, -투표수) |&gt;   \n  pivot_longer(-선거) |&gt;\n  filter(name != \"기타\") |&gt;\n  mutate(value = ifelse(name == \"민주당\", value, -value)) |&gt; \n  ggplot(aes(x = 선거, y = value, fill = name)) +\n    geom_bar(stat = \"identity\", width = 0.5) +\n    geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray10\") + # 0을 기준으로 빨간색 점선 추가\n    labs(\n      title = \"강서구 주요선거 득표수\",\n      x = \"\",\n      y = \"득표수\",\n      fill = \"정당\"\n    ) +\n    scale_y_continuous(labels = function(x) scales::comma(abs(x))) +\n    coord_flip() +\n    scale_fill_manual(values = c(\"red\", \"darkblue\"))  +\n    theme_bw(base_family = \"NanumGothic\") +\n    theme(legend.position = \"top\",\n          axis.text.y = element_text(size = rel(1.5), colour = \"gray35\", family = \"NanumBarunpen\", face=\"bold\"),\n          axis.text.x = element_text(size = rel(1.0), colour = \"black\", family = \"NanumBarunpen\", face=\"bold\",\n                                     angle = 0, vjust = 0.5, hjust=0.5),\n          strip.background=element_rect(fill=\"gray95\"),\n          plot.title=element_text(size=18, face=\"bold\", family = \"NanumBarunpen\"),\n          plot.subtitle=element_text(face=\"bold\", size=13, colour=\"grey10\", family = \"NanumBarunpen\"))"
  },
  {
    "objectID": "gs_position.html#득표차",
    "href": "gs_position.html#득표차",
    "title": "지도제작 대회",
    "section": "\n4.3 득표차",
    "text": "4.3 득표차\n\n코드gs_tbl |&gt;\n  mutate(표차이 = 민주당 - 국민의힘) |&gt; \n  select(-선거인수, -투표수, - 기타, -국민의힘, -민주당) |&gt; \n  ggplot(aes(x = 선거, y = 표차이, fill = ifelse(표차이&gt;0, \"민주당\", \"국민의힘\"))) +\n    geom_bar(stat = \"identity\", width = 0.5) +\n    geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray10\") + # 0을 기준으로 빨간색 점선 추가\n    labs(\n      title = \"강서구 주요선거 득표차\",\n      x = \"\",\n      y = \"양당 득표차이\",\n      fill = \"정당\"\n    ) +\n    scale_y_continuous(labels = function(x) scales::comma(abs(x)),\n                       limits = c(-70000, 70000)) +\n    coord_flip() +\n    scale_fill_manual(values = c(\"red\", \"darkblue\"))  +\n    theme_bw(base_family = \"NanumGothic\") +\n    theme(legend.position = \"top\",\n          axis.text.y = element_text(size = rel(1.5), colour = \"gray35\", family = \"NanumBarunpen\", face=\"bold\"),\n          axis.text.x = element_text(size = rel(1.0), colour = \"black\", family = \"NanumBarunpen\", face=\"bold\",\n                                     angle = 0, vjust = 0.5, hjust=0.5),\n          strip.background=element_rect(fill=\"gray95\"),\n          plot.title=element_text(size=18, face=\"bold\", family = \"NanumBarunpen\"),\n          plot.subtitle=element_text(face=\"bold\", size=13, colour=\"grey10\", family = \"NanumBarunpen\"))"
  },
  {
    "objectID": "metro_people_power.html",
    "href": "metro_people_power.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\nelected_tbl &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nseoul_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20160413\", \"20200415\", \"20120411\", \"20080409\", \"20040415\")) |&gt; \n  filter(str_detect(sdName, \"서울\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  count(sgId, 정당명) |&gt; \n  pivot_wider(names_from = 정당명, values_from = n, values_fill = 0) |&gt; \n  mutate(합계 = 국민의힘 + 민주당 + 기타)\n\n\n\n\n코드gg_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20160413\", \"20200415\", \"20120411\", \"20080409\", \"20040415\")) |&gt; \n  filter(str_detect(sdName, \"경기\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  count(sgId, 정당명) |&gt; \n  pivot_wider(names_from = 정당명, values_from = n, values_fill = 0) |&gt; \n  mutate(합계 = 국민의힘 + 민주당 + 기타)"
  },
  {
    "objectID": "metro_people_power.html#서울특별시",
    "href": "metro_people_power.html#서울특별시",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\nelected_tbl &lt;- \n  read_rds(\"data/total_elected_all.rds\")\n\nseoul_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20160413\", \"20200415\", \"20120411\", \"20080409\", \"20040415\")) |&gt; \n  filter(str_detect(sdName, \"서울\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  count(sgId, 정당명) |&gt; \n  pivot_wider(names_from = 정당명, values_from = n, values_fill = 0) |&gt; \n  mutate(합계 = 국민의힘 + 민주당 + 기타)"
  },
  {
    "objectID": "metro_people_power.html#경기도",
    "href": "metro_people_power.html#경기도",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드gg_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20160413\", \"20200415\", \"20120411\", \"20080409\", \"20040415\")) |&gt; \n  filter(str_detect(sdName, \"경기\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  count(sgId, 정당명) |&gt; \n  pivot_wider(names_from = 정당명, values_from = n, values_fill = 0) |&gt; \n  mutate(합계 = 국민의힘 + 민주당 + 기타)"
  },
  {
    "objectID": "metro_people_power.html#서울특별시-1",
    "href": "metro_people_power.html#서울특별시-1",
    "title": "지도제작 대회",
    "section": "\n2.1 서울특별시",
    "text": "2.1 서울특별시\n\n코드library(gt)\nlibrary(gtExtras)\n\nseoul_tbl |&gt; \n  gt(rowname_col = \"sgId\") |&gt; \n  gt_theme_538() |&gt; \n  cols_align(\"center\") |&gt; \n  cols_label(\n    sgId = \"선거명\"\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(국민의힘, 민주당, 기타, 합계),\n    fns =  list(label = \"총계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  tab_header(\n    title = md(\"서울특별시 국회의원 역대 당선자 현황\"),\n    subtitle = md(\"중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  tab_spanner(\n    label = \"정당명\",\n    columns = c(\n      국민의힘, 민주당, 기타\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_stub_grand_summary()\n  )  \n\n\n\n\n\n\n서울특별시 국회의원 역대 당선자 현황\n    \n\n중앙선거관리위원회 선거통계\n    \n\n\n      \n        정당명\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n총계\n92\n145\n5\n242\n\n\n20040415\n16\n32\n0\n48\n\n\n20080409\n40\n7\n1\n48\n\n\n20120411\n16\n30\n2\n48\n\n\n20160413\n12\n35\n2\n49\n\n\n20200415\n8\n41\n0\n49"
  },
  {
    "objectID": "metro_people_power.html#경기도-1",
    "href": "metro_people_power.html#경기도-1",
    "title": "지도제작 대회",
    "section": "\n2.2 경기도",
    "text": "2.2 경기도\n\n코드gg_tbl |&gt; \n  gt(rowname_col = \"sgId\") |&gt; \n  gt_theme_538() |&gt; \n  cols_align(\"center\") |&gt; \n  cols_label(\n    sgId = \"선거명\"\n  ) |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = c(국민의힘, 민주당, 기타, 합계),\n    fns =  list(label = \"총계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  tab_header(\n    title = md(\"경기도 국회의원 역대 당선자 현황\"),\n    subtitle = md(\"중앙선거관리위원회 선거통계\")\n  ) |&gt; \n  tab_spanner(\n    label = \"정당명\",\n    columns = c(\n      국민의힘, 민주당, 기타\n    )\n  )  |&gt; \n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_stub_grand_summary()\n  )  \n\n\n\n\n\n\n경기도 국회의원 역대 당선자 현황\n    \n\n중앙선거관리위원회 선거통계\n    \n\n\n      \n        정당명\n      \n      합계\n    \n\n국민의힘\n      민주당\n      기타\n    \n\n\n\n총계\n93\n172\n6\n271\n\n\n20040415\n14\n35\n0\n49\n\n\n20080409\n32\n17\n2\n51\n\n\n20120411\n21\n29\n2\n52\n\n\n20160413\n19\n40\n1\n60\n\n\n20200415\n7\n51\n1\n59"
  },
  {
    "objectID": "metro_people_power.html#경기도-2",
    "href": "metro_people_power.html#경기도-2",
    "title": "지도제작 대회",
    "section": "\n3.2 경기도",
    "text": "3.2 경기도\n\n코드gg_precinct &lt;- precinct |&gt; \n  filter(SGG_1 == \"경기\") \n\nst_geometry(gg_precinct) |&gt; plot()\n\n\n\n\n\n\n\n\n코드gg_party_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20200415\")) |&gt; \n  filter(str_detect(sdName, \"경기\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  select(sggName, wiwName, giho, jdName, name, dugsu, dugyul, 정당명)\n\ngg_precinct_party &lt;- gg_precinct |&gt; \n  mutate(sggName = str_remove(SGG_2, \"경기도 \")) |&gt; \n  left_join(gg_party_tbl)\n\n\n\n코드sf_use_s2(FALSE)\ngg_precinct_party |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",\n    jdName %in% c(\"정의당\") ~ \"정의당\",\n    TRUE ~ \"기타\")) |&gt;   \n  ggplot() +\n    geom_sf(aes(geometry = geometry, fill = 정당명), alpha =0.2) +\n    scale_fill_manual(values = c(\"민주당\" = \"blue\",\n                                  \"국민의힘\" = \"red\",\n                                  \"정의당\" = \"yellow\")) +\n    theme_void() +\n    theme(legend.position = \"top\") +\n    labs(fill = \"정당명\") +\n    ggrepel::geom_text_repel(\n        aes(label = sggName, geometry = geometry,\n            color = 정당명), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 3, max.overlaps = Inf,\n        show.legend = FALSE, fontface=\"bold\"\n    ) +\n    scale_color_manual(values = c(\"민주당\" = \"blue\",\n                                  \"국민의힘\" = \"red\",\n                                  \"정의당\" = \"black\"))"
  },
  {
    "objectID": "metro_people_power.html#서울특별시-2",
    "href": "metro_people_power.html#서울특별시-2",
    "title": "지도제작 대회",
    "section": "\n3.1 서울특별시",
    "text": "3.1 서울특별시\n\n코드library(sf)\n\nprecinct &lt;- st_read(\"data/2020_21_elec_253.json\") |&gt; \n  st_set_crs(4326)\n#&gt; Reading layer `2020_21_elec_253' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\2020_21_elec_253.json' using driver `GeoJSON'\n#&gt; Simple feature collection with 253 features and 4 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\nseoul_precinct &lt;- precinct |&gt; \n  filter(SGG_1 == \"서울\") \n\nst_geometry(seoul_precinct) |&gt; plot()\n\n\n\n\n\n\n\n\n코드seoul_party_tbl &lt;- elected_tbl |&gt; \n  filter(sgId %in% c(\"20200415\")) |&gt; \n  filter(str_detect(sdName, \"서울\")) |&gt;\n  select(result) |&gt; \n  unnest(result) |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",                 TRUE ~ \"기타\")) |&gt; \n  select(sggName, wiwName, giho, jdName, name, dugsu, dugyul, 정당명)\n\nseoul_precinct_party &lt;- seoul_precinct |&gt; \n  mutate(sggName = str_remove(SGG_2, \"서울특별시 \")) |&gt; \n  left_join(seoul_party_tbl)\n\n\n\n코드seoul_precinct_party |&gt; \n  mutate(정당명 = case_when(\n    jdName %in% c(\"한나라당\", \"새누리당\", \"미래통합당\") ~ \"국민의힘\",\n    jdName %in% c(\"더불어민주당\", \"열린우리당\", \"통합민주당\", \"민주통합당\") ~ \"민주당\",\n    jdName %in% c(\"정의당\") ~ \"정의당\",\n    TRUE ~ \"기타\")) |&gt;   \n  ggplot() +\n    geom_sf(aes(geometry = geometry, fill = 정당명), alpha =0.2) +\n    scale_fill_manual(values = c(\"민주당\" = \"blue\",\n                                  \"국민의힘\" = \"red\",\n                                  \"정의당\" = \"yellow\")) +\n    theme_void() +\n    theme(legend.position = \"top\") +\n    labs(fill = \"정당명\") +\n    ggrepel::geom_text_repel(\n        aes(label = sggName, geometry = geometry,\n            color = 정당명), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf,\n        show.legend = FALSE, fontface=\"bold\"\n    ) +\n    scale_color_manual(values = c(\"민주당\" = \"blue\",\n                                  \"국민의힘\" = \"red\",\n                                  \"정의당\" = \"black\"))"
  },
  {
    "objectID": "metro_people_power.html#선거구",
    "href": "metro_people_power.html#선거구",
    "title": "지도제작 대회",
    "section": "\n5.1 선거구",
    "text": "5.1 선거구\n\n코드library(rvest)\n\ngs_precinct_raw &lt;- read_html(\"https://ko.wikipedia.org/wiki/서울특별시의_선거구\") |&gt; \n  html_elements(\"table\") |&gt; \n  html_table() %&gt;% \n  .[[1]] |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  filter(str_detect(선거구명, \"강서구\"))\n\ngs_precinct &lt;- gs_precinct_raw |&gt; \n  mutate(동명 = str_split(관할_구역, \",\")) |&gt; \n  select(-관할_구역) |&gt; \n  unnest(동명) |&gt; \n  mutate(동명 = str_remove(동명, \"강서구\") |&gt; str_squish()) |&gt; \n  mutate(선거구명 = str_remove(선거구명, \"\\\\s+\")) |&gt; \n  select(-번호)\n\ngs_precinct\n#&gt; # A tibble: 20 × 2\n#&gt;    선거구명 동명    \n#&gt;    &lt;chr&gt;    &lt;chr&gt;   \n#&gt;  1 강서구갑 발산1동 \n#&gt;  2 강서구갑 우장산동\n#&gt;  3 강서구갑 화곡1동 \n#&gt;  4 강서구갑 화곡2동 \n#&gt;  5 강서구갑 화곡3동 \n#&gt;  6 강서구갑 화곡8동 \n#&gt;  7 강서구을 등촌3동 \n#&gt;  8 강서구을 가양1동 \n#&gt;  9 강서구을 가양2동 \n#&gt; 10 강서구을 방화1동 \n#&gt; 11 강서구을 방화2동 \n#&gt; 12 강서구을 방화3동 \n#&gt; 13 강서구을 공항동  \n#&gt; 14 강서구병 염창동  \n#&gt; 15 강서구병 등촌1동 \n#&gt; 16 강서구병 등촌2동 \n#&gt; 17 강서구병 가양3동 \n#&gt; 18 강서구병 화곡본동\n#&gt; 19 강서구병 화곡4동 \n#&gt; 20 강서구병 화곡6동\n\n\n\n코드seoul_diff_sf |&gt; \n  filter( str_detect(sggName, \"^강서\")) |&gt; \n  ggplot() +\n    geom_sf(aes(geometry = geometry, fill = 득표차, color = 정당명), lwd  = 1) +\n    scale_fill_gradient2(high = \"blue\", mid = \"gray100\", low = \"red\") +\n    theme_void() +\n    theme(legend.position = \"top\") +\n    labs(fill = \"득표차\") +\n    geom_text(\n        aes(label = str_glue(\"{sggName}\\n{scales::percent(득표차, accuracy=0.1)}\"), geometry = geometry), \n        stat = \"sf_coordinates\", \n        show.legend = FALSE, fontface=\"bold\", color = \"black\"\n    ) +\n    scale_color_manual(values = c(\"민주당\" = \"blue\",\n                                  \"국민의힘\" = \"red\"))"
  },
  {
    "objectID": "metro_people_power.html#행정동-지도",
    "href": "metro_people_power.html#행정동-지도",
    "title": "지도제작 대회",
    "section": "\n5.2 행정동 지도",
    "text": "5.2 행정동 지도\n\n코드library(sf)\n\nkorea_sf &lt;- st_read(\"data/HangJeongDong_ver20230701.geojson\")\n#&gt; Reading layer `123' from data source \n#&gt;   `D:\\tcs\\map_challenge\\data\\HangJeongDong_ver20230701.geojson' \n#&gt;   using driver `GeoJSON'\n#&gt; Simple feature collection with 3523 features and 9 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: 124.6097 ymin: 33.11187 xmax: 131.8713 ymax: 38.61695\n#&gt; Geodetic CRS:  WGS 84\n\ngs_sf &lt;- korea_sf |&gt; \n  filter(sidonm == \"서울특별시\",\n         sggnm  == \"강서구\") |&gt; \n  mutate(dongnm = str_remove(adm_nm, \"서울특별시 강서구 \")) |&gt; \n  select(sidonm, sggnm, dongnm, geometry) |&gt; \n  left_join(gs_precinct, by = c(\"dongnm\" = \"동명\"))\n\ngs_precinct_sf &lt;- gs_sf |&gt; \n  group_by(선거구명) |&gt; \n  summarise(geometry = st_union(geometry))\n\ngs_precinct_centroid &lt;- st_centroid(gs_precinct_sf)\n\nggplot() +\n  geom_sf(data = gs_sf, aes(fill = dongnm), alpha = 0.3, show.legend = FALSE) +\n  geom_sf(data = gs_precinct_sf, color = \"gray30\",\n          alpha = 0.0, lwd = 1, show.legend = FALSE) +\n  theme_void() +\n  geom_sf(data = gs_precinct_centroid, color = \"black\") +\n  ggrepel::geom_text_repel(data = gs_precinct_centroid, \n                           aes(label = 선거구명, geometry = geometry), stat = \"sf_coordinates\", \n        min.segment.length = 1, size = 4, max.overlaps = Inf)"
  },
  {
    "objectID": "metro_people_power.html#재보궐-선거",
    "href": "metro_people_power.html#재보궐-선거",
    "title": "지도제작 대회",
    "section": "\n5.3 재보궐 선거",
    "text": "5.3 재보궐 선거\n\n코드library(ggrepel)\n\ngs_raw &lt;- readxl::read_excel(\"data/[2023년_하반기_재·보궐선거]_개표단위별_개표결과.xlsx\",\n                   sheet = \"Sheet1\", skip =4)\n\ngs_tbl &lt;- gs_raw |&gt; \n  set_names(c(\"읍면동명\", \"투표구명\", \"선거인수\", \"투표수\", \"민주당\", \n\"국민의힘\", \"정의당\", \"x11\", \"진보당\", \n\"녹색당\", \"자유통일당\", \"계\", \n\"무표투표수\", \"기권수\")) |&gt;\n  select(-x11) |&gt; \n  mutate(읍면동명 = str_replace(읍면동명, \"제(\\\\d+)\", \"\\\\1\")) |&gt; \n  filter(투표구명 == \"소계\") |&gt; \n  mutate(across(선거인수:기권수, parse_number)) |&gt; \n  mutate(투표율 = 투표수 / 선거인수)  |&gt; \n  left_join(gs_precinct, by = c(\"읍면동명\"=\"동명\"))\n\ngs_tbl |&gt;\n  group_by(선거구명, 읍면동명) |&gt; \n  summarise(선거인수 = sum(선거인수),\n            투표수 = sum(투표수)) |&gt; \n  mutate(투표율 = 투표수 / 선거인수) |&gt; \n  ggplot(aes(x = fct_reorder(읍면동명, 투표율), y = 투표율, fill = 선거구명)) +\n    geom_col( width = 0.5 ) +\n    facet_wrap(vars(선거구명), scales = \"free\") +\n    labs(x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    theme(legend.position = \"none\")\n\n\n\n\n\n\n코드    \ngs_tbl |&gt;   \n  mutate(민주_득표율 = 민주당 / 계,\n         국힘_득표율 = 국민의힘 / 계) |&gt; \n  mutate(득표차 = 민주_득표율 - 국힘_득표율) |&gt; \n  ggplot(aes(x = fct_reorder(읍면동명, 득표차), y = 득표차, fill = 선거구명)) +\n    geom_col( width = 0.5 ) +\n    facet_wrap(vars(선거구명), scales = \"free\") +\n    labs(x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    theme(legend.position = \"none\")"
  },
  {
    "objectID": "metro_people_power.html#투표율과-득표차",
    "href": "metro_people_power.html#투표율과-득표차",
    "title": "지도제작 대회",
    "section": "\n5.4 투표율과 득표차",
    "text": "5.4 투표율과 득표차\n\n코드gs_tbl |&gt;   \n  mutate(민주_득표율 = 민주당 / 계,\n         국힘_득표율 = 국민의힘 / 계) |&gt; \n  mutate(득표차 = 민주_득표율 - 국힘_득표율) |&gt; \n  mutate(투표율 = 투표수 / 선거인수) |&gt; \n  select(선거구명, 선거인수, 읍면동명, 득표차, 투표율) |&gt; \n  ggplot(aes(x = 투표율, y = 득표차, color = 선거구명)) +\n    geom_point(aes(size = 선거인수)) +\n    facet_wrap(vars(선거구명)) +\n    geom_text_repel(aes(label = 읍면동명)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    scale_x_continuous(labels = scales::percent) +\n    scale_y_continuous(labels = scales::percent) +\n    labs(x = \"투표율\", y = \"득표차\",\n         title = \"강서구 재보궐선거 투표율과 득표차\",\n         subtitle = \"득표차 = 민주당 후보 득표율 - 국힘 후보 득표율 \") +\n    guides(color = FALSE) +\n    scale_size_continuous(labels = scales::comma)"
  },
  {
    "objectID": "metro_people_power.html#시각화",
    "href": "metro_people_power.html#시각화",
    "title": "지도제작 대회",
    "section": "\n6.1 시각화",
    "text": "6.1 시각화\n\n코드gs_old |&gt;\n  group_by(선거구명, 읍면동명) |&gt; \n  summarise(선거인수 = sum(선거인수),\n            투표수 = sum(투표수)) |&gt; \n  mutate(투표율 = 투표수 / 선거인수) |&gt; \n  ggplot(aes(x = fct_reorder(읍면동명, 투표율), y = 투표율, fill = 선거구명)) +\n    geom_col( width = 0.5 ) +\n    facet_wrap(vars(선거구명), scales = \"free\") +\n    labs(x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    theme(legend.position = \"none\")\n\n\n\n\n\n\n코드    \ngs_old |&gt;   \n  mutate(민주_득표율 = 민주당 / 계,\n         국힘_득표율 = 국민의힘 / 계) |&gt; \n  mutate(득표차 = 민주_득표율 - 국힘_득표율) |&gt; \n  ggplot(aes(x = fct_reorder(읍면동명, 득표차), y = 득표차, fill = 선거구명)) +\n    geom_col( width = 0.5 ) +\n    facet_wrap(vars(선거구명), scales = \"free\") +\n    labs(x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    theme(legend.position = \"none\")"
  },
  {
    "objectID": "metro_people_power.html#투표율과-득표차-1",
    "href": "metro_people_power.html#투표율과-득표차-1",
    "title": "지도제작 대회",
    "section": "\n6.2 투표율과 득표차",
    "text": "6.2 투표율과 득표차\n\n코드gs_old |&gt;   \n  mutate(민주_득표율 = 민주당 / 계,\n         국힘_득표율 = 국민의힘 / 계) |&gt; \n  mutate(득표차 = 민주_득표율 - 국힘_득표율) |&gt; \n  mutate(투표율 = 투표수 / 선거인수) |&gt; \n  select(선거구명, 선거인수, 읍면동명, 득표차, 투표율) |&gt; \n  ggplot(aes(x = 투표율, y = 득표차, color = 선거구명)) +\n    geom_point(aes(size = 선거인수)) +\n    facet_wrap(vars(선거구명)) +\n    geom_text_repel(aes(label = 읍면동명)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    scale_x_continuous(labels = scales::percent) +\n    scale_y_continuous(labels = scales::percent) +\n    labs(x = \"투표율\", y = \"득표차\",\n         title = \"강서구 제21대 총선 투표율과 득표차\",\n         subtitle = \"득표차 = 민주당 후보 득표율 - 국힘 후보 득표율 \") +\n    guides(color = FALSE, size = guide_legend(nrow = 1)) +\n    scale_size_continuous(labels = scales::comma)"
  },
  {
    "objectID": "metro_people_power.html#투표율",
    "href": "metro_people_power.html#투표율",
    "title": "지도제작 대회",
    "section": "\n7.1 투표율",
    "text": "7.1 투표율\n\n코드gs_total |&gt; \n  select(읍면동명, 선거, 투표율) |&gt; \n  pivot_wider(names_from = 선거, values_from = 투표율) |&gt; \n  ggplot(aes(x=`21대총선`, y = 보궐선거)) +\n    geom_point() +\n    geom_smooth(method = lm, se = FALSE) +\n    geom_text_repel(aes(label = 읍면동명))"
  },
  {
    "objectID": "metro_people_power.html#득표차-1",
    "href": "metro_people_power.html#득표차-1",
    "title": "지도제작 대회",
    "section": "\n7.2 득표차",
    "text": "7.2 득표차\n\n코드gs_total |&gt; \n  select(읍면동명, 선거, 득표차) |&gt; \n  pivot_wider(names_from = 선거, values_from = 득표차) |&gt; \n  ggplot(aes(x=`21대총선`, y = 보궐선거)) +\n    geom_point() +\n    geom_smooth(method = lm, se = FALSE) +\n    geom_text_repel(aes(label = 읍면동명))"
  },
  {
    "objectID": "metro_people_power.html#정당지지율",
    "href": "metro_people_power.html#정당지지율",
    "title": "지도제작 대회",
    "section": "\n7.3 정당지지율",
    "text": "7.3 정당지지율\n\n7.3.1 민주당\n\n코드gs_total |&gt; \n  select(선거구명, 읍면동명, 선거, 민주_득표율) |&gt; \n  pivot_wider(names_from = 선거, values_from = 민주_득표율) |&gt; \n  ggplot(aes(x=`21대총선`, y = 보궐선거)) +\n    geom_point() +\n    geom_smooth(method = lm, se = FALSE) +\n    geom_text_repel(aes(label = 읍면동명)) +\n    facet_wrap(~선거구명, scales = \"free\")\n\n\n\n\n\n\n\n\n7.3.2 국민의힘\n\n코드gs_total |&gt; \n  select(선거구명, 읍면동명, 선거, 국힘_득표율) |&gt; \n  pivot_wider(names_from = 선거, values_from = 국힘_득표율) |&gt; \n  ggplot(aes(x=`21대총선`, y = 보궐선거)) +\n    geom_point() +\n    geom_smooth(method = lm, se = FALSE) +\n    geom_text_repel(aes(label = 읍면동명)) +\n    facet_wrap(~선거구명, scales = \"free\")\n\n\n\n\n\n\n\n\n7.3.3 모두\n\n코드gs_total |&gt; \n  select(선거구명, 읍면동명, 선거, 민주_득표율, 국힘_득표율) |&gt;\n  pivot_longer(민주_득표율:국힘_득표율, names_to = \"정당\", values_to = \"득표율\") |&gt; \n  pivot_wider(names_from = 선거, values_from = 득표율) |&gt; \n  ggplot(aes(x=`21대총선`, y = 보궐선거, color = 정당)) +\n    geom_point() +\n    geom_smooth(method = lm, se = FALSE) +\n    geom_text_repel(aes(label = 읍면동명)) +\n    facet_wrap(~선거구명, scales = \"free\")"
  },
  {
    "objectID": "metro_people_power.html#강서구갑",
    "href": "metro_people_power.html#강서구갑",
    "title": "지도제작 대회",
    "section": "\n8.1 강서구갑",
    "text": "8.1 강서구갑\n\n코드gs_total |&gt; \n  filter(선거구명 == \"강서구갑\") |&gt; \n  select(선거구명, 읍면동명, 선거, 민주_득표율, 국힘_득표율) |&gt;\n  pivot_longer(민주_득표율:국힘_득표율, names_to = \"정당\", values_to = \"득표율\") |&gt; \n  ggplot(aes(x = 선거, y = 득표율, group = 정당, color = 정당)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(읍면동명), scales = \"fixed\")"
  },
  {
    "objectID": "metro_people_power.html#강서구을",
    "href": "metro_people_power.html#강서구을",
    "title": "지도제작 대회",
    "section": "\n8.2 강서구을",
    "text": "8.2 강서구을\n\n코드gs_total |&gt; \n  filter(선거구명 == \"강서구을\") |&gt; \n  select(선거구명, 읍면동명, 선거, 민주_득표율, 국힘_득표율) |&gt;\n  pivot_longer(민주_득표율:국힘_득표율, names_to = \"정당\", values_to = \"득표율\") |&gt; \n  ggplot(aes(x = 선거, y = 득표율, group = 정당, color = 정당)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(읍면동명), scales = \"fixed\")"
  },
  {
    "objectID": "metro_people_power.html#강서구병",
    "href": "metro_people_power.html#강서구병",
    "title": "지도제작 대회",
    "section": "\n8.3 강서구병",
    "text": "8.3 강서구병\n\n코드gs_total |&gt; \n  filter(선거구명 == \"강서구병\") |&gt; \n  select(선거구명, 읍면동명, 선거, 민주_득표율, 국힘_득표율) |&gt;\n  pivot_longer(민주_득표율:국힘_득표율, names_to = \"정당\", values_to = \"득표율\") |&gt; \n  ggplot(aes(x = 선거, y = 득표율, group = 정당, color = 정당)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(읍면동명), scales = \"fixed\")"
  },
  {
    "objectID": "tour.html",
    "href": "tour.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nmoon_html &lt;- read_html(\"https://ko.wikipedia.org/wiki/문재인의_대통령_순방_목록\")\n\nmoon_raw &lt;- moon_html |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nmoon_h3 &lt;- moon_html |&gt; \n  html_elements(\"h3\") |&gt; \n  html_text()\n\nnames(moon_raw) &lt;- moon_h3[1:6]\n\nmap_df(moon_raw[c(1:5)], rbind)\n#&gt; # A tibble: 58 × 5\n#&gt;    나라           장소             일자                `세부 내용`         사진 \n#&gt;    &lt;chr&gt;          &lt;chr&gt;            &lt;chr&gt;               &lt;chr&gt;               &lt;lgl&gt;\n#&gt;  1 미국           워싱턴 D.C.      6월 28일~7월 3일    공식 실무 방문.[1]  NA   \n#&gt;  2 독일           베를린, 함부르크 7월 5일~7월 8일     2017년 함부르크 G2… NA   \n#&gt;  3 러시아         블라디보스토크   9월 6일~9월 7일     공식 방문. 동방경…  NA   \n#&gt;  4 미국           뉴욕             9월 19일~9월 21일   실무 방문. 유엔 총… NA   \n#&gt;  5 인도네시아     자카르타         11월 8일~11월 10일  국빈 방문.[11]      NA   \n#&gt;  6 베트남         다낭             11월 10일~11월 12일 2017년 다낭 APEC …  NA   \n#&gt;  7 필리핀         마닐라           11월 12일~11월 14일 동아시아 정상회의 … NA   \n#&gt;  8 중화인민공화국 베이징시, 충칭시 12월 13일~12월 16일 국빈 방문.[16]      NA   \n#&gt;  9 베트남         하노이           3월 22일~3월 24일   국빈 방문.[17]      NA   \n#&gt; 10 아랍에미리트   아부다비, 두바이 3월 24일~3월 27일   공식 방문.[18]      NA   \n#&gt; # ℹ 48 more rows\n\nmoon_tbl &lt;- moon_h3 |&gt; \n  enframe() |&gt; \n  mutate(연도 = str_remove(value, \"년\\\\[편집\\\\]\")) |&gt; \n  filter(str_detect(연도, \"\\\\d{4}\")) |&gt; \n  mutate(data = moon_raw[c(1:5)]) |&gt; \n  unnest(data) |&gt; \n  select(연도, 나라, 장소, 일자, 세부내용=`세부 내용`) |&gt;\n  separate(일자, into = c(\"출국\", \"도착\"), sep = \"~\") |&gt; \n  mutate(도착 = ifelse(is.na(도착), 출국, 도착)) |&gt; \n  mutate(출국일 = str_glue(\"{연도}-{출국}\"),\n         도착일 = str_glue(\"{연도}-{도착}\")) |&gt; \n  mutate(출국일 = parse_date(출국일, \"%Y-%m월 %d일\"),\n         도착일 = parse_date(도착일, \"%Y-%m월 %d일\")) |&gt; \n  select(출국일, 도착일, 국가 = 나라, 장소) |&gt; \n  mutate(기간 = (출국일 %--% 도착일) / ddays(1) +1)\n\n\n\n\n코드tour_yoon_html &lt;- rvest::read_html(URLencode(\"https://namu.wiki/w/윤석열 정부/외교\"))\n\ntour_yoon_raw &lt;- tour_yoon_html |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\ntour_yoon_dat &lt;- bind_rows(\n  tour_yoon_raw[[10]] |&gt; \n    janitor::row_to_names(row_number = 1) |&gt; \n    mutate(연도 = 2022),\n  tour_yoon_raw[[11]] |&gt; \n    janitor::row_to_names(row_number = 1) |&gt; \n    mutate(연도 = 2023))\n\n\ntour_yoon_tbl &lt;- tour_yoon_dat |&gt;\n  separate(일자, into = c(\"출국일\", \"귀국일\"), sep = \"~\") |&gt;\n  mutate(귀국일 = ifelse(is.na(귀국일), \"15일\", 귀국일)) |&gt; # 우크라이나\n  separate(출국일, into = c(\"출국월\", \"출국일\"), sep = \"월 ?\") |&gt; \n  mutate(귀국월 = 출국월,\n         귀국일 = parse_number(귀국일)) |&gt; \n  mutate(출국날짜 = ymd(paste(연도, 출국월, 출국일, sep = \"-\")),\n         귀국날짜 = ymd(paste(연도, 귀국월, 귀국일, sep = \"-\"))) |&gt; \n  mutate(상대국 = str_remove(상대국, \"\\\\s?행정구\")) |&gt;\n  select(출국날짜, 귀국날짜, 상대국, 상대방, 비고)\n\ntour_yoon_tbl\n#&gt; # A tibble: 21 × 5\n#&gt;    출국날짜   귀국날짜   상대국       상대방                           비고     \n#&gt;    &lt;date&gt;     &lt;date&gt;     &lt;chr&gt;        &lt;chr&gt;                            &lt;chr&gt;    \n#&gt;  1 2022-06-27 2022-06-30 스페인       북대서양 조약 기구               \"첫 국외…\n#&gt;  2 2022-09-18 2022-09-19 영국         -                                \"엘리자… \n#&gt;  3 2022-09-20 2022-09-22 미국         국제연합                         \"첫 UN … \n#&gt;  4 2022-09-22 2022-09-23 캐나다       쥐스탱 트뤼도 총리               \"첫 정상…\n#&gt;  5 2022-11-11 2022-11-14 캄보디아     아세안                           \"\"       \n#&gt;  6 2022-11-14 2022-11-15 인도네시아   G20                              \"\"       \n#&gt;  7 2023-01-14 2023-01-17 아랍에미리트 무함마드 빈 자이드 알나얀 대통령 \"국빈방… \n#&gt;  8 2023-01-17 2023-01-20 스위스       -                                \"세계경… \n#&gt;  9 2023-03-16 2023-03-17 일본         기시다 후미오 총리               \"2023년 …\n#&gt; 10 2023-04-24 2023-04-30 미국         조 바이든 대통령                 \"2023년 …\n#&gt; # ℹ 11 more rows"
  },
  {
    "objectID": "tour.html#문재인",
    "href": "tour.html#문재인",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nmoon_html &lt;- read_html(\"https://ko.wikipedia.org/wiki/문재인의_대통령_순방_목록\")\n\nmoon_raw &lt;- moon_html |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\nmoon_h3 &lt;- moon_html |&gt; \n  html_elements(\"h3\") |&gt; \n  html_text()\n\nnames(moon_raw) &lt;- moon_h3[1:6]\n\nmap_df(moon_raw[c(1:5)], rbind)\n#&gt; # A tibble: 58 × 5\n#&gt;    나라           장소             일자                `세부 내용`         사진 \n#&gt;    &lt;chr&gt;          &lt;chr&gt;            &lt;chr&gt;               &lt;chr&gt;               &lt;lgl&gt;\n#&gt;  1 미국           워싱턴 D.C.      6월 28일~7월 3일    공식 실무 방문.[1]  NA   \n#&gt;  2 독일           베를린, 함부르크 7월 5일~7월 8일     2017년 함부르크 G2… NA   \n#&gt;  3 러시아         블라디보스토크   9월 6일~9월 7일     공식 방문. 동방경…  NA   \n#&gt;  4 미국           뉴욕             9월 19일~9월 21일   실무 방문. 유엔 총… NA   \n#&gt;  5 인도네시아     자카르타         11월 8일~11월 10일  국빈 방문.[11]      NA   \n#&gt;  6 베트남         다낭             11월 10일~11월 12일 2017년 다낭 APEC …  NA   \n#&gt;  7 필리핀         마닐라           11월 12일~11월 14일 동아시아 정상회의 … NA   \n#&gt;  8 중화인민공화국 베이징시, 충칭시 12월 13일~12월 16일 국빈 방문.[16]      NA   \n#&gt;  9 베트남         하노이           3월 22일~3월 24일   국빈 방문.[17]      NA   \n#&gt; 10 아랍에미리트   아부다비, 두바이 3월 24일~3월 27일   공식 방문.[18]      NA   \n#&gt; # ℹ 48 more rows\n\nmoon_tbl &lt;- moon_h3 |&gt; \n  enframe() |&gt; \n  mutate(연도 = str_remove(value, \"년\\\\[편집\\\\]\")) |&gt; \n  filter(str_detect(연도, \"\\\\d{4}\")) |&gt; \n  mutate(data = moon_raw[c(1:5)]) |&gt; \n  unnest(data) |&gt; \n  select(연도, 나라, 장소, 일자, 세부내용=`세부 내용`) |&gt;\n  separate(일자, into = c(\"출국\", \"도착\"), sep = \"~\") |&gt; \n  mutate(도착 = ifelse(is.na(도착), 출국, 도착)) |&gt; \n  mutate(출국일 = str_glue(\"{연도}-{출국}\"),\n         도착일 = str_glue(\"{연도}-{도착}\")) |&gt; \n  mutate(출국일 = parse_date(출국일, \"%Y-%m월 %d일\"),\n         도착일 = parse_date(도착일, \"%Y-%m월 %d일\")) |&gt; \n  select(출국일, 도착일, 국가 = 나라, 장소) |&gt; \n  mutate(기간 = (출국일 %--% 도착일) / ddays(1) +1)"
  },
  {
    "objectID": "tour.html#문재인-해외순방",
    "href": "tour.html#문재인-해외순방",
    "title": "지도제작 대회",
    "section": "\n2.1 문재인 해외순방",
    "text": "2.1 문재인 해외순방\n\n코드library(countrycode)\n\ncountry_codes &lt;- data.frame(\n  \"국가\" = c(\"노르웨이\", \"뉴질랜드\", \"덴마크\", \"독일\", \"라오스\", \"러시아\", \"말레이시아\", \"미국\", \"미얀마\", \"바티칸 시국\", \"베트남\", \"벨기에\", \"브루나이\", \"사우디아라비아\", \"스웨덴\", \"스페인\", \"싱가포르\", \"아랍에미리트\", \"아르헨티나\", \"영국\", \"오스트레일리아\", \"오스트리아\", \"우즈베키스탄\", \"이집트\", \"이탈리아\", \"인도\", \"인도네시아\", \"일본\", \"조선민주주의인민공화국\", \"중화인민공화국\", \"체코\", \"카자흐스탄\", \"캄보디아\", \"태국\", \"투르크메니스탄\", \"파푸아뉴기니\", \"프랑스\", \"핀란드\", \"필리핀\", \"헝가리\"),\n  \"영문_국가명\" = c(\"Norway\", \"New Zealand\", \"Denmark\", \"Germany\", \"Laos\", \"Russia\", \"Malaysia\", \"United States\", \"Myanmar\", \"Vatican City\", \"Vietnam\", \"Belgium\", \"Brunei\", \"Saudi Arabia\", \"Sweden\", \"Spain\", \"Singapore\", \"United Arab Emirates\", \"Argentina\", \"United Kingdom\", \"Australia\", \"Austria\", \"Uzbekistan\", \"Egypt\", \"Italy\", \"India\", \"Indonesia\", \"Japan\", \"North Korea\", \"China\", \"Czech Republic\", \"Kazakhstan\", \"Cambodia\", \"Thailand\", \"Turkmenistan\", \"Papua New Guinea\", \"France\", \"Finland\", \"Philippines\", \"Hungary\"),\n  \"iso2c\" = c(\"NO\", \"NZ\", \"DK\", \"DE\", \"LA\", \"RU\", \"MY\", \"US\", \"MM\", \"VA\", \"VN\", \"BE\", \"BN\", \"SA\", \"SE\", \"ES\", \"SG\", \"AE\", \"AR\", \"GB\", \"AU\", \"AT\", \"UZ\", \"EG\", \"IT\", \"IN\", \"ID\", \"JP\", \"KP\", \"CN\", \"CZ\", \"KZ\", \"KH\", \"TH\", \"TM\", \"PG\", \"FR\", \"FI\", \"PH\", \"HU\")\n)\n\nmoon_tbl |&gt; \n  group_by(국가) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국일)}\"), collapse = \",\")) |&gt; \n  left_join(country_codes, by = \"국가\") |&gt; \n  mutate(대륙 = countrycode(iso2c, \"iso2c\", \"continent\")) |&gt;\n  arrange(desc(방문수)) |&gt;\n  select(-영문_국가명) |&gt; \n  select(iso2c, everything()) |&gt; \n  gt(groupname_col = \"대륙\") |&gt; \n  fmt_flag(columns = iso2c) |&gt; \n  cols_label(\n    iso2c = \"\"\n  ) |&gt; \n  cols_align(\"center\") |&gt; \n  tab_header(\n    title = md(\"문재인 대통령 해외 순방\"),\n    subtitle = md(\"2017년 5월 10일 ~ 2021년 5월 9일\")\n  ) |&gt;\ntab_footnote(\n  footnote = md(\"데이터 출처: [위키백과](https://ko.wikipedia.org/wiki/문재인의_대통령_순방_목록)\")\n) |&gt;   \n  gt_theme_538()\n\n\n\n\n\n\n문재인 대통령 해외 순방\n    \n\n2017년 5월 10일 ~ 2021년 5월 9일\n    \n\n\n      국가\n      방문수\n      연도\n    \n\n\n\nAmericas\n    \n\nUnited States\n\n미국\n8\n2017,2017,2018,2018,2019,2019,2021,2021\n\n\nArgentina\n\n아르헨티나\n1\n2018\n\n\nEurope\n    \n\nRussian Federation\n\n러시아\n2\n2017,2018\n\n\n\n바티칸 시국\n2\n2018,2021\n\n\nUnited Kingdom\n\n영국\n2\n2021,2021\n\n\nItaly\n\n이탈리아\n2\n2018,2021\n\n\nNorway\n\n노르웨이\n1\n2019\n\n\nDenmark\n\n덴마크\n1\n2018\n\n\nGermany\n\n독일\n1\n2017\n\n\nBelgium\n\n벨기에\n1\n2018\n\n\nSweden\n\n스웨덴\n1\n2019\n\n\nSpain\n\n스페인\n1\n2021\n\n\nAustria\n\n오스트리아\n1\n2021\n\n\nCzechia\n\n체코\n1\n2018\n\n\nFrance\n\n프랑스\n1\n2018\n\n\nFinland\n\n핀란드\n1\n2019\n\n\nHungary\n\n헝가리\n1\n2021\n\n\nAsia\n    \n\nVietnam\n\n베트남\n2\n2017,2018\n\n\nSingapore\n\n싱가포르\n2\n2018,2018\n\n\nUnited Arab Emirates\n\n아랍에미리트\n2\n2018,2022\n\n\nJapan\n\n일본\n2\n2018,2019\n\n\nKorea, Dem. People's Rep.\n\n조선민주주의인민공화국\n2\n2018,2018\n\n\nChina\n\n중화인민공화국\n2\n2017,2019\n\n\nThailand\n\n태국\n2\n2019,2019\n\n\nLao PDR\n\n라오스\n1\n2019\n\n\nMalaysia\n\n말레이시아\n1\n2019\n\n\nMyanmar\n\n미얀마\n1\n2019\n\n\nBrunei Darussalam\n\n브루나이\n1\n2019\n\n\nSaudi Arabia\n\n사우디아라비아\n1\n2022\n\n\nUzbekistan\n\n우즈베키스탄\n1\n2019\n\n\nIndia\n\n인도\n1\n2018\n\n\nIndonesia\n\n인도네시아\n1\n2017\n\n\nKazakhstan\n\n카자흐스탄\n1\n2019\n\n\nCambodia\n\n캄보디아\n1\n2019\n\n\nTurkmenistan\n\n투르크메니스탄\n1\n2019\n\n\nPhilippines\n\n필리핀\n1\n2017\n\n\nOceania\n    \n\nNew Zealand\n\n뉴질랜드\n1\n2018\n\n\nAustralia\n\n오스트레일리아\n1\n2021\n\n\nPapua New Guinea\n\n파푸아뉴기니\n1\n2018\n\n\nAfrica\n    \n\nEgypt\n\n이집트\n1\n2022\n\n\n\n 데이터 출처: 위키백과"
  },
  {
    "objectID": "tour.html#지도",
    "href": "tour.html#지도",
    "title": "지도제작 대회",
    "section": "\n2.2 지도",
    "text": "2.2 지도\n\n코드library(viridis)\nlibrary(sf)\nextrafont::loadfonts()\nsf_use_s2(FALSE)\n\nmoon_tour &lt;- moon_tbl |&gt; \n  group_by(국가) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국일)}\"), collapse = \",\")) |&gt; \n  left_join(country_codes, by = \"국가\")\n\nworld_map &lt;- rnaturalearth::ne_countries(scale = 50, returnclass = \"sf\")\n  \ncountry_centroid &lt;- inner_join(st_centroid(world_map), moon_tour, \n                              by = c(\"iso_a2\" = \"iso2c\"))\n\ncountry_centroid &lt;- bind_cols(country_centroid,\n          st_coordinates(country_centroid) |&gt; \n            as_tibble() |&gt; \n            set_names(c(\"lon\", \"lat\")))\n\nmoon_map &lt;- left_join(world_map, moon_tour, by = c(\"iso_a2\" = \"iso2c\"))\n\nmoon_map |&gt; \n  filter(continent != \"Antarctica\") |&gt; \n  mutate(방문수 = factor(방문수, levels = c(1, 2, 8),\n                      labels = c(\"1회\", \"2회\", \"8회\"))) |&gt;\n  ggplot() +\n    geom_sf(aes(fill = 방문수)) +\n    scale_fill_manual(values = c(\"gray50\", \"skyblue\", \"blue\"), \n                      na.value = \"transparent\",\n                      breaks = c(\"1회\", \"2회\", \"8회\", NA),\n                      labels = c(\"1회\", \"2회\", \"8회\", \"방문 없음\")) +\n    labs(\n      title = \"문재인 대통령 해외순방\") +\n    theme_void(base_family = \"NanumGothic\") +\n    theme(legend.position = \"bottom\") +\n    ggrepel::geom_text_repel(\n      data = country_centroid |&gt; select(국가, lon, lat) |&gt; st_drop_geometry(),\n          aes(label = 국가, x = lon, y = lat),\n          size = 3, segment.size = 0.2\n      )"
  },
  {
    "objectID": "tour.html#태평양-중심지도",
    "href": "tour.html#태평양-중심지도",
    "title": "지도제작 대회",
    "section": "\n2.3 태평양 중심지도",
    "text": "2.3 태평양 중심지도\nst_crop on pacific centred naturalearth world map\n\n코드world_map &lt;- rnaturalearth::ne_countries(scale = 50, returnclass = \"sf\") %&gt;%\n  st_make_valid() |&gt; \n  filter(continent != \"Antarctica\")\n\n# define a long & slim polygon that overlaps the meridian line & set its CRS to match\n# that of world Centered in lon 133\n\noffset &lt;- 180 - 150\n\npolygon &lt;- st_polygon(x = list(rbind(\n  c(-0.0001 - offset, 90),\n  c(0 - offset, 90),\n  c(0 - offset, -90),\n  c(-0.0001 - offset, -90),\n  c(-0.0001 - offset, 90)\n))) %&gt;%\n  st_sfc() %&gt;%\n  st_set_crs(4326)\n\nworld_pacific &lt;- world_map |&gt; \n  st_difference(polygon) |&gt; \n  st_transform(crs = \"+proj=eqc +x_0=0 +y_0=0 +lat_0=0 +lon_0=150\")\n\nggplot(data = world_pacific, aes(group = admin)) +\n  geom_sf(fill = \"grey\") +\n  theme_void()\n\n\n\n\n\n\n\n\n코드moon_pacific_map &lt;- left_join(world_pacific, moon_tour, by = c(\"iso_a2\" = \"iso2c\"))\n\npacific_centroid &lt;- inner_join(st_centroid(moon_pacific_map), moon_tour, \n                              by = c(\"iso_a2\" = \"iso2c\"))\n\npacific_country_centroid &lt;- bind_cols(pacific_centroid,\n          st_coordinates(pacific_centroid) |&gt; \n            as_tibble() |&gt; \n            set_names(c(\"lon\", \"lat\")))\n\n\nmoon_pacific_map |&gt; \n  mutate(방문수 = factor(방문수, levels = c(1, 2, 8),\n                      labels = c(\"1회\", \"2회\", \"8회\"))) |&gt;\n  ggplot() +\n    geom_sf(aes(fill = 방문수)) +\n    scale_fill_manual(values = c(\"gray50\", \"skyblue\", \"blue\"), \n                      na.value = \"transparent\",\n                      breaks = c(\"1회\", \"2회\", \"8회\", NA),\n                      labels = c(\"1회\", \"2회\", \"8회\", \"방문 없음\")) +\n    # labs(title = \"문재인 대통령 해외순방\") +\n    theme_void(base_family = \"NanumGothic\") +\n    theme(legend.position = \"bottom\") +\n    ggrepel::geom_text_repel(\n      data = pacific_country_centroid |&gt; select(국가.x, lon, lat) |&gt; st_drop_geometry(),\n          aes(label = 국가.x, x = lon, y = lat),\n          size = 3, segment.size = 0.2\n      )"
  },
  {
    "objectID": "tour.html#윤석열",
    "href": "tour.html#윤석열",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드tour_yoon_html &lt;- rvest::read_html(URLencode(\"https://namu.wiki/w/윤석열 정부/외교\"))\n\ntour_yoon_raw &lt;- tour_yoon_html |&gt; \n  html_elements(\"table\") |&gt; \n  html_table()\n\ntour_yoon_dat &lt;- bind_rows(\n  tour_yoon_raw[[10]] |&gt; \n    janitor::row_to_names(row_number = 1) |&gt; \n    mutate(연도 = 2022),\n  tour_yoon_raw[[11]] |&gt; \n    janitor::row_to_names(row_number = 1) |&gt; \n    mutate(연도 = 2023))\n\n\ntour_yoon_tbl &lt;- tour_yoon_dat |&gt;\n  separate(일자, into = c(\"출국일\", \"귀국일\"), sep = \"~\") |&gt;\n  mutate(귀국일 = ifelse(is.na(귀국일), \"15일\", 귀국일)) |&gt; # 우크라이나\n  separate(출국일, into = c(\"출국월\", \"출국일\"), sep = \"월 ?\") |&gt; \n  mutate(귀국월 = 출국월,\n         귀국일 = parse_number(귀국일)) |&gt; \n  mutate(출국날짜 = ymd(paste(연도, 출국월, 출국일, sep = \"-\")),\n         귀국날짜 = ymd(paste(연도, 귀국월, 귀국일, sep = \"-\"))) |&gt; \n  mutate(상대국 = str_remove(상대국, \"\\\\s?행정구\")) |&gt;\n  select(출국날짜, 귀국날짜, 상대국, 상대방, 비고)\n\ntour_yoon_tbl\n#&gt; # A tibble: 21 × 5\n#&gt;    출국날짜   귀국날짜   상대국       상대방                           비고     \n#&gt;    &lt;date&gt;     &lt;date&gt;     &lt;chr&gt;        &lt;chr&gt;                            &lt;chr&gt;    \n#&gt;  1 2022-06-27 2022-06-30 스페인       북대서양 조약 기구               \"첫 국외…\n#&gt;  2 2022-09-18 2022-09-19 영국         -                                \"엘리자… \n#&gt;  3 2022-09-20 2022-09-22 미국         국제연합                         \"첫 UN … \n#&gt;  4 2022-09-22 2022-09-23 캐나다       쥐스탱 트뤼도 총리               \"첫 정상…\n#&gt;  5 2022-11-11 2022-11-14 캄보디아     아세안                           \"\"       \n#&gt;  6 2022-11-14 2022-11-15 인도네시아   G20                              \"\"       \n#&gt;  7 2023-01-14 2023-01-17 아랍에미리트 무함마드 빈 자이드 알나얀 대통령 \"국빈방… \n#&gt;  8 2023-01-17 2023-01-20 스위스       -                                \"세계경… \n#&gt;  9 2023-03-16 2023-03-17 일본         기시다 후미오 총리               \"2023년 …\n#&gt; 10 2023-04-24 2023-04-30 미국         조 바이든 대통령                 \"2023년 …\n#&gt; # ℹ 11 more rows"
  },
  {
    "objectID": "tour.html#표",
    "href": "tour.html#표",
    "title": "지도제작 대회",
    "section": "\n2.1 표",
    "text": "2.1 표\n\n코드library(countrycode)\n\ncountry_codes &lt;- data.frame(\n  \"국가\" = c(\"노르웨이\", \"뉴질랜드\", \"덴마크\", \"독일\", \"라오스\", \"러시아\", \"말레이시아\", \"미국\", \"미얀마\", \"바티칸 시국\", \"베트남\", \"벨기에\", \"브루나이\", \"사우디아라비아\", \"스웨덴\", \"스페인\", \"싱가포르\", \"아랍에미리트\", \"아르헨티나\", \"영국\", \"오스트레일리아\", \"오스트리아\", \"우즈베키스탄\", \"이집트\", \"이탈리아\", \"인도\", \"인도네시아\", \"일본\", \"조선민주주의인민공화국\", \"중화인민공화국\", \"체코\", \"카자흐스탄\", \"캄보디아\", \"태국\", \"투르크메니스탄\", \"파푸아뉴기니\", \"프랑스\", \"핀란드\", \"필리핀\", \"헝가리\"),\n  \"영문_국가명\" = c(\"Norway\", \"New Zealand\", \"Denmark\", \"Germany\", \"Laos\", \"Russia\", \"Malaysia\", \"United States\", \"Myanmar\", \"Vatican City\", \"Vietnam\", \"Belgium\", \"Brunei\", \"Saudi Arabia\", \"Sweden\", \"Spain\", \"Singapore\", \"United Arab Emirates\", \"Argentina\", \"United Kingdom\", \"Australia\", \"Austria\", \"Uzbekistan\", \"Egypt\", \"Italy\", \"India\", \"Indonesia\", \"Japan\", \"North Korea\", \"China\", \"Czech Republic\", \"Kazakhstan\", \"Cambodia\", \"Thailand\", \"Turkmenistan\", \"Papua New Guinea\", \"France\", \"Finland\", \"Philippines\", \"Hungary\"),\n  \"iso2c\" = c(\"NO\", \"NZ\", \"DK\", \"DE\", \"LA\", \"RU\", \"MY\", \"US\", \"MM\", \"VA\", \"VN\", \"BE\", \"BN\", \"SA\", \"SE\", \"ES\", \"SG\", \"AE\", \"AR\", \"GB\", \"AU\", \"AT\", \"UZ\", \"EG\", \"IT\", \"IN\", \"ID\", \"JP\", \"KP\", \"CN\", \"CZ\", \"KZ\", \"KH\", \"TH\", \"TM\", \"PG\", \"FR\", \"FI\", \"PH\", \"HU\")\n)\n\nmoon_tbl |&gt; \n  group_by(국가) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국일)}\"), collapse = \",\")) |&gt; \n  left_join(country_codes, by = \"국가\") |&gt; \n  mutate(대륙 = countrycode(iso2c, \"iso2c\", \"continent\")) |&gt;\n  arrange(desc(방문수)) |&gt;\n  select(-영문_국가명) |&gt; \n  select(iso2c, everything()) |&gt; \n  gt(groupname_col = \"대륙\") |&gt; \n  fmt_flag(columns = iso2c) |&gt; \n  cols_label(\n    iso2c = \"\"\n  ) |&gt; \n  cols_align(\"center\") |&gt; \n  tab_header(\n    title = md(\"문재인 대통령 해외 순방\"),\n    subtitle = md(\"2017년 5월 10일 ~ 2021년 5월 9일\")\n  ) |&gt;\ntab_footnote(\n  footnote = md(\"데이터 출처: [위키백과](https://ko.wikipedia.org/wiki/문재인의_대통령_순방_목록)\")\n) |&gt;   \n  gt_theme_538() |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = 방문수,\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"bottom\"\n  )\n\n\n\n\n\n\n문재인 대통령 해외 순방\n    \n\n2017년 5월 10일 ~ 2021년 5월 9일\n    \n\n\n      \n      국가\n      방문수\n      연도\n    \n\n\n\nAmericas\n    \n\n\nUnited States\n\n미국\n8\n2017,2017,2018,2018,2019,2019,2021,2021\n\n\n\nArgentina\n\n아르헨티나\n1\n2018\n\n\nEurope\n    \n\n\nRussian Federation\n\n러시아\n2\n2017,2018\n\n\n\n\n바티칸 시국\n2\n2018,2021\n\n\n\nUnited Kingdom\n\n영국\n2\n2021,2021\n\n\n\nItaly\n\n이탈리아\n2\n2018,2021\n\n\n\nNorway\n\n노르웨이\n1\n2019\n\n\n\nDenmark\n\n덴마크\n1\n2018\n\n\n\nGermany\n\n독일\n1\n2017\n\n\n\nBelgium\n\n벨기에\n1\n2018\n\n\n\nSweden\n\n스웨덴\n1\n2019\n\n\n\nSpain\n\n스페인\n1\n2021\n\n\n\nAustria\n\n오스트리아\n1\n2021\n\n\n\nCzechia\n\n체코\n1\n2018\n\n\n\nFrance\n\n프랑스\n1\n2018\n\n\n\nFinland\n\n핀란드\n1\n2019\n\n\n\nHungary\n\n헝가리\n1\n2021\n\n\nAsia\n    \n\n\nVietnam\n\n베트남\n2\n2017,2018\n\n\n\nSingapore\n\n싱가포르\n2\n2018,2018\n\n\n\nUnited Arab Emirates\n\n아랍에미리트\n2\n2018,2022\n\n\n\nJapan\n\n일본\n2\n2018,2019\n\n\n\nKorea, Dem. People's Rep.\n\n조선민주주의인민공화국\n2\n2018,2018\n\n\n\nChina\n\n중화인민공화국\n2\n2017,2019\n\n\n\nThailand\n\n태국\n2\n2019,2019\n\n\n\nLao PDR\n\n라오스\n1\n2019\n\n\n\nMalaysia\n\n말레이시아\n1\n2019\n\n\n\nMyanmar\n\n미얀마\n1\n2019\n\n\n\nBrunei Darussalam\n\n브루나이\n1\n2019\n\n\n\nSaudi Arabia\n\n사우디아라비아\n1\n2022\n\n\n\nUzbekistan\n\n우즈베키스탄\n1\n2019\n\n\n\nIndia\n\n인도\n1\n2018\n\n\n\nIndonesia\n\n인도네시아\n1\n2017\n\n\n\nKazakhstan\n\n카자흐스탄\n1\n2019\n\n\n\nCambodia\n\n캄보디아\n1\n2019\n\n\n\nTurkmenistan\n\n투르크메니스탄\n1\n2019\n\n\n\nPhilippines\n\n필리핀\n1\n2017\n\n\nOceania\n    \n\n\nNew Zealand\n\n뉴질랜드\n1\n2018\n\n\n\nAustralia\n\n오스트레일리아\n1\n2021\n\n\n\nPapua New Guinea\n\n파푸아뉴기니\n1\n2018\n\n\nAfrica\n    \n\n\nEgypt\n\n이집트\n1\n2022\n\n\n\n—\n—\n58\n—\n\n\n\n 데이터 출처: 위키백과"
  },
  {
    "objectID": "tour.html#표-1",
    "href": "tour.html#표-1",
    "title": "지도제작 대회",
    "section": "\n3.1 표",
    "text": "3.1 표\n\n코드\n\nyoon_country_data &lt;- data.frame(\n  상대국 = c(\"스페인\", \"영국\", \"미국\", \"캐나다\", \"캄보디아\", \"인도네시아\", \"아랍에미리트\", \"스위스\", \"일본\", \"미국\", \"일본\", \"프랑스\", \"베트남\", \"리투아니아\", \"폴란드\", \"우크라이나\", \"미국\", \"인도네시아\", \"인도\", \"사우디아라비아\", \"카타르\"),\n  영문명 = c(\"Spain\", \"United Kingdom\", \"United States\", \"Canada\", \"Cambodia\", \"Indonesia\", \"United Arab Emirates\", \"Switzerland\", \"Japan\", \"United States\", \"Japan\", \"France\", \"Vietnam\", \"Lithuania\", \"Poland\", \"Ukraine\", \"United States\", \"Indonesia\", \"India\", \"Saudi Arabia\", \"Qatar\"),\n  ISO2 = c(\"ES\", \"GB\", \"US\", \"CA\", \"KH\", \"ID\", \"AE\", \"CH\", \"JP\", \"US\", \"JP\", \"FR\", \"VN\", \"LT\", \"PL\", \"UA\", \"US\", \"ID\", \"IN\", \"SA\", \"QA\")\n) \n\ntour_yoon_tbl |&gt; \n  group_by(상대국) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국날짜)}\"), collapse = \",\")) |&gt; \n  ungroup() |&gt; \n  left_join(distinct(yoon_country_data)) |&gt; \n  mutate(대륙 = countrycode(ISO2, \"iso2c\", \"continent\")) |&gt; \n  arrange(desc(방문수)) |&gt;\n  select(-영문명) |&gt; \n  select(ISO2, everything()) |&gt; \n  gt(groupname_col = \"대륙\") |&gt; \n  fmt_flag(columns = ISO2) |&gt; \n  cols_label(\n    ISO2 = \"\"\n  ) |&gt; \n  cols_align(\"center\") |&gt; \n  tab_header(\n    title = md(\"윤석열 대통령 해외 순방\"),\n    subtitle = md(\"2022년 6월 27일 ~ 2023년 10월 26일\")\n  ) |&gt;\ntab_footnote(\n  footnote = md(\"데이터 출처: [위키백과](https://namu.wiki/w/%EC%9C%A4%EC%84%9D%EC%97%B4%20%EC%A0%95%EB%B6%80/%EC%99%B8%EA%B5%90#s-4)\")) |&gt;   \n  gt_theme_538() |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = 방문수,\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"bottom\"\n  )\n\n\n\n\n\n\n윤석열 대통령 해외 순방\n    \n\n2022년 6월 27일 ~ 2023년 10월 26일\n    \n\n\n      \n      상대국\n      방문수\n      연도\n    \n\n\n\nAmericas\n    \n\n\nUnited States\n\n미국\n3\n2022,2023,2023\n\n\n\nCanada\n\n캐나다\n1\n2022\n\n\nAsia\n    \n\n\nIndonesia\n\n인도네시아\n2\n2022,2023\n\n\n\nJapan\n\n일본\n2\n2023,2023\n\n\n\nVietnam\n\n베트남\n1\n2023\n\n\n\nSaudi Arabia\n\n사우디아라비아\n1\n2023\n\n\n\nUnited Arab Emirates\n\n아랍에미리트\n1\n2023\n\n\n\nIndia\n\n인도\n1\n2023\n\n\n\nQatar\n\n카타르\n1\n2023\n\n\n\nCambodia\n\n캄보디아\n1\n2022\n\n\nEurope\n    \n\n\nLithuania\n\n리투아니아\n1\n2023\n\n\n\nSwitzerland\n\n스위스\n1\n2023\n\n\n\nSpain\n\n스페인\n1\n2022\n\n\n\nUnited Kingdom\n\n영국\n1\n2022\n\n\n\nUkraine\n\n우크라이나\n1\n2023\n\n\n\nPoland\n\n폴란드\n1\n2023\n\n\n\nFrance\n\n프랑스\n1\n2023\n\n\n\n—\n—\n21\n—\n\n\n\n 데이터 출처: 위키백과"
  },
  {
    "objectID": "tour.html#지도-1",
    "href": "tour.html#지도-1",
    "title": "지도제작 대회",
    "section": "\n3.2 지도",
    "text": "3.2 지도\n\n코드\nyoon_tour &lt;- tour_yoon_tbl |&gt; \n  group_by(상대국 ) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국날짜)}\"), collapse = \",\")) |&gt; \n  left_join(distinct(yoon_country_data))\n\nworld_map &lt;- rnaturalearth::ne_countries(scale = 50, returnclass = \"sf\")\n  \ncountry_centroid &lt;- inner_join(st_centroid(world_map), yoon_tour, \n                              by = c(\"iso_a2\" = \"ISO2\"))\n\ncountry_centroid &lt;- bind_cols(country_centroid,\n          st_coordinates(country_centroid) |&gt; \n            as_tibble() |&gt; \n            set_names(c(\"lon\", \"lat\")))\n\nyoon_map &lt;- left_join(world_map, yoon_tour, by = c(\"iso_a2\" = \"ISO2\"))\n\nyoon_map |&gt; \n  filter(continent != \"Antarctica\") |&gt; \n  mutate(방문수 = factor(방문수, levels = c(1, 2, 3),\n                      labels = c(\"1회\", \"2회\", \"3회\"))) |&gt;\n  ggplot() +\n    geom_sf(aes(fill = 방문수)) +\n    scale_fill_manual(values = c(\"gray50\", \"pink\", \"red\"), \n                      na.value = \"transparent\",\n                      breaks = c(\"1회\", \"2회\", \"3회\", NA),\n                      labels = c(\"1회\", \"2회\", \"3회\", \"방문 없음\")) +\n    labs(\n      title = \"윤석열 대통령 해외순방\") +\n    theme_void(base_family = \"NanumGothic\") +\n    theme(legend.position = \"bottom\") +\n    ggrepel::geom_text_repel(\n      data = country_centroid |&gt; select(상대국, lon, lat) |&gt; st_drop_geometry(),\n          aes(label = 상대국, x = lon, y = lat),\n          size = 3, segment.size = 0.2\n      )"
  },
  {
    "objectID": "tour.html#태평양-중심지도-1",
    "href": "tour.html#태평양-중심지도-1",
    "title": "지도제작 대회",
    "section": "\n3.3 태평양 중심지도",
    "text": "3.3 태평양 중심지도\n\n코드yoon_pacific_map &lt;- left_join(world_pacific, yoon_tour, by = c(\"iso_a2\" = \"ISO2\"))\n\nyoon_pacific_centroid &lt;- inner_join(st_centroid(yoon_pacific_map), yoon_tour, \n                              by = c(\"iso_a2\" = \"ISO2\"))\n\nyoon_pacific_country_centroid &lt;- bind_cols(yoon_pacific_centroid,\n          st_coordinates(yoon_pacific_centroid) |&gt; \n            as_tibble() |&gt; \n            set_names(c(\"lon\", \"lat\")))\n\n\nyoon_pacific_map |&gt; \n  mutate(방문수 = factor(방문수, levels = c(1, 2, 3),\n                      labels = c(\"1회\", \"2회\", \"3회\"))) |&gt;\n  ggplot() +\n    geom_sf(aes(fill = 방문수)) +\n    scale_fill_manual(values = c(\"gray50\", \"pink\", \"red\"), \n                      na.value = \"transparent\",\n                      breaks = c(\"1회\", \"2회\", \"3회\", NA),\n                      labels = c(\"1회\", \"2회\", \"3회\", \"방문 없음\")) +\n    # labs(title = \"윤석열 대통령 해외순방\") +\n    theme_void(base_family = \"NanumGothic\") +\n    theme(legend.position = \"bottom\") +\n    ggrepel::geom_text_repel(\n      data = yoon_pacific_country_centroid |&gt; select(상대국.x, lon, lat) |&gt; st_drop_geometry(),\n          aes(label = 상대국.x, x = lon, y = lat),\n          size = 3, segment.size = 0.2\n      )"
  },
  {
    "objectID": "tour.html#표-2",
    "href": "tour.html#표-2",
    "title": "지도제작 대회",
    "section": "\n4.1 표",
    "text": "4.1 표\n\n코드moon_early_tbl &lt;- moon_tbl |&gt; \n  filter(출국일 &lt;= as.Date(\"2018-11-10\")) # 2017년 5월 10일 이후로 1년 6개월\n\nmoon_early_tbl |&gt; \n  group_by(국가) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국일)}\"), collapse = \",\")) |&gt; \n  left_join(country_codes, by = \"국가\") |&gt; \n  mutate(대륙 = countrycode(iso2c, \"iso2c\", \"continent\")) |&gt;\n  arrange(desc(방문수)) |&gt;\n  select(-영문_국가명) |&gt; \n  select(iso2c, everything()) |&gt; \n  gt(groupname_col = \"대륙\") |&gt; \n  fmt_flag(columns = iso2c) |&gt; \n  cols_label(\n    iso2c = \"\"\n  ) |&gt; \n  cols_align(\"center\") |&gt; \n  tab_header(\n    title = md(\"문재인 대통령 임기초반 해외 순방\"),\n    subtitle = md(\"2017년 5월 10일 ~ 2018년 11월 10일\")\n  ) |&gt;\ntab_footnote(\n  footnote = md(\"데이터 출처: [위키백과](https://ko.wikipedia.org/wiki/문재인의_대통령_순방_목록)\")\n) |&gt;   \n  gt_theme_538() |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = 방문수,\n    fns =  list(label = \"\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"bottom\"\n  )\n\n\n\n\n\n\n문재인 대통령 임기초반 해외 순방\n    \n\n2017년 5월 10일 ~ 2018년 11월 10일\n    \n\n\n      \n      국가\n      방문수\n      연도\n    \n\n\n\nAmericas\n    \n\n\nUnited States\n\n미국\n4\n2017,2017,2018,2018\n\n\nEurope\n    \n\n\nRussian Federation\n\n러시아\n2\n2017,2018\n\n\n\nDenmark\n\n덴마크\n1\n2018\n\n\n\nGermany\n\n독일\n1\n2017\n\n\n\n\n바티칸 시국\n1\n2018\n\n\n\nBelgium\n\n벨기에\n1\n2018\n\n\n\nItaly\n\n이탈리아\n1\n2018\n\n\n\nFrance\n\n프랑스\n1\n2018\n\n\nAsia\n    \n\n\nVietnam\n\n베트남\n2\n2017,2018\n\n\n\nKorea, Dem. People's Rep.\n\n조선민주주의인민공화국\n2\n2018,2018\n\n\n\nSingapore\n\n싱가포르\n1\n2018\n\n\n\nUnited Arab Emirates\n\n아랍에미리트\n1\n2018\n\n\n\nIndia\n\n인도\n1\n2018\n\n\n\nIndonesia\n\n인도네시아\n1\n2017\n\n\n\nJapan\n\n일본\n1\n2018\n\n\n\nChina\n\n중화인민공화국\n1\n2017\n\n\n\nPhilippines\n\n필리핀\n1\n2017\n\n\n\n—\n—\n23\n—\n\n\n\n 데이터 출처: 위키백과"
  },
  {
    "objectID": "tour.html#태평양-중심지도-2",
    "href": "tour.html#태평양-중심지도-2",
    "title": "지도제작 대회",
    "section": "\n4.2 태평양 중심지도",
    "text": "4.2 태평양 중심지도\n\n코드\nmoon_early_tour &lt;- moon_early_tbl |&gt; \n  group_by(국가) |&gt; \n  summarise(방문수 = n(),\n            연도 = str_c(str_glue(\"{lubridate::year(출국일)}\"), collapse = \",\")) |&gt; \n  left_join(country_codes, by = \"국가\")\n\nmoon_early_pacific_map &lt;- left_join(world_pacific, moon_early_tour, by = c(\"iso_a2\" = \"iso2c\"))\n\nearly_pacific_centroid &lt;- inner_join(st_centroid(moon_early_pacific_map), moon_tour, \n                              by = c(\"iso_a2\" = \"iso2c\"))\n\nearly_pacific_country_centroid &lt;- bind_cols(early_pacific_centroid,\n          st_coordinates(early_pacific_centroid) |&gt; \n            as_tibble() |&gt; \n            set_names(c(\"lon\", \"lat\")))\n\n\nmoon_early_pacific_map |&gt; \n  mutate(방문수 = factor(방문수, levels = c(1, 2, 4),\n                      labels = c(\"1회\", \"2회\", \"4회\"))) |&gt;\n  ggplot() +\n    geom_sf(aes(fill = 방문수)) +\n    scale_fill_manual(values = c(\"gray50\", \"skyblue\", \"blue\"), \n                      na.value = \"transparent\",\n                      breaks = c(\"1회\", \"2회\", \"4회\", NA),\n                      labels = c(\"1회\", \"2회\", \"4회\", \"방문 없음\")) +\n    # labs(title = \"문재인 대통령 해외순방\") +\n    theme_void(base_family = \"NanumGothic\") +\n    theme(legend.position = \"bottom\") +\n    ggrepel::geom_text_repel(\n      data = early_pacific_country_centroid |&gt; select(국가.x, lon, lat) |&gt; st_drop_geometry(),\n          aes(label = 국가.x, x = lon, y = lat),\n          size = 3, segment.size = 0.2\n      )"
  },
  {
    "objectID": "party_numbers.html",
    "href": "party_numbers.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\nparty_2021 &lt;- tribble(\n  ~구분, ~당원수, ~분포비, ~등록된_시도당수, ~시도당_평균당원수,\n  \"합계\", 10429577, 100, 355, 29379,\n  \"더불어민주당\", 4853266, 46.5, 17, 285486,\n  \"국민의힘\", 4070005, 39.0, 17, 239412,\n  \"정의당\", 50618, 0.5, 17, 2978,\n  \"국민의당\", 20185, 0.2, 7, 2884,\n  \"열린민주당\", 42944, 0.4, 5, 8589,\n  \"기본소득당\", 19814, 0.2, 5, 3963,\n  \"시대전환\", 8458, 0.1, 5, 1692,\n  \"가가례도인연합\", 6538, 0.1, 6, 1090,\n  \"가나코리아\", 5365, 0.1, 5, 1073,\n  \"가자평화인권당\", 6481, 0.1, 6, 1080,\n  \"가자환경당\", 7480, 0.1, 6, 1247,\n  \"거지당\", 10782, 0.1, 8, 1348,\n  \"국가혁명당\", 32153, 0.3, 16, 2010,\n  \"국민대통합당\", 6248, 0.1, 5, 1250,\n  \"국민참여신당\", 5773, 0.1, 5, 1155,\n  \"국민혁명당\", 148164, 1.4, 13, 11397,\n  \"기독당\", 5272, 0.1, 5, 1054,\n  \"깨어있는시민연대당\", 6490, 0.1, 5, 1298,\n  \"남북통일당\", 5324, 0.1, 5, 1065,\n  \"노동당\", 11039, 0.1, 7, 1577,\n  \"녹색당\", 8452, 0.1, 5, 1690,\n  \"대한국민당\", 5585, 0.1, 5, 1117,\n  \"대한당\", 5565, 0.1, 5, 1113,\n  \"대한민국당\", 6721, 0.1, 5, 1344,\n  \"독도한국당\", 6631, 0.1, 6, 1105,\n  \"미래당\", 12935, 0.1, 6, 2156,\n  \"민생당\", 378309, 3.6, 11, 34392,\n  \"민중민주당\", 9872, 0.1, 7, 1410,\n  \"새누리당\", 36170, 0.3, 7, 5167,\n  \"신자유민주연합\", 5362, 0.1, 5, 1072,\n  \"신한반도당\", 8872, 0.1, 8, 1109,\n  \"여성의당\", 9571, 0.1, 5, 1914,\n  \"우리공화당\", 411337, 3.9, 13, 31641,\n  \"자유당\", 5368, 0.1, 5, 1074,\n  \"자유민주당\", 7092, 0.1, 5, 1418,\n  \"자유의새벽당\", 11707, 0.1, 5, 2341,\n  \"중소자영업당\", 5823, 0.1, 5, 1165,\n  \"직능자영업당\", 5184, 0.0, 5, 1037,\n  \"진보당\", 85718, 0.8, 16, 5357,\n  \"친박신당\", 8310, 0.1, 6, 1385,\n  \"친박연대\", 5257, 0.1, 5, 1051,\n  \"통일한국당\", 11971, 0.1, 6, 1995,\n  \"한국국민당\", 6879, 0.1, 6, 1147,\n  \"한국복지당\", 7071, 0.1, 7, 1010,\n  \"한나라당\", 5790, 0.1, 5, 1158,\n  \"한류연합당\", 9305, 0.1, 7, 1329,\n  \"한반도미래연합\", 8498, 0.1, 8, 1062,\n  \"혁명21\", 11179, 0.1, 6, 1863,\n  \"홍익당\", 6644, 0.1, 5, 1329\n) |&gt; \n  slice(2:n()) \n\n\nparty_2021 |&gt; \n  summarise(당원수 = sum(당원수)) # 10,429,577\n#&gt; # A tibble: 1 × 1\n#&gt;     당원수\n#&gt;      &lt;dbl&gt;\n#&gt; 1 10429577\n\n\n\n\n코드library(tibble)\n\nsido_party_2021 &lt;- tribble(\n  ~구분, ~합계, ~더불어민주당, ~국민의힘, ~정의당, ~국민의당, ~열린민주당, ~기본소득당, ~시대전환, ~가가례도인연합, ~가나코리아, ~가자평화인권당, ~가자환경당,\n  \"합계\", 10429577, 4853266, 4070005, 50618, 20185, 42944, 19814, 8458, 6538, 5365, 6481, 7480,\n  \"서울\", 1830842, 858016, 633807, 9882, 6847, 24768, 3254, 1290, 1041, 1123, 1042, 1472,\n  \"부산\", 530951, 158779, 245492, 2257, NA, 3996, 4436, NA, NA, NA, 1103, 1414,\n  \"대구\", 340866, 41126, 221321, 1228, 1138, NA, NA, NA, NA, NA, NA, NA,\n  \"인천\", 462086, 180174, 226077, 4661, 1686, NA, 3063, NA, 1103, 1017, NA, NA,\n  \"광주\", 544234, 398357, 56614, 2372, 1814, 5680, 3363, 1051, NA, NA, NA, 1080,\n  \"대전\", 372618, 151895, 191034, 1345, 3099, NA, NA, NA, NA, NA, 1016, NA,\n  \"울산\", 250177, 59315, 159387, 1390, NA, 4009, NA, NA, NA, NA, NA, NA,\n  \"세종\", 39355, 18972, 13300, 1070, NA, NA, NA, NA, NA, NA, NA, NA,\n  \"경기\", 1992315, 915531, 795874, 10394, 3703, NA, 5698, 1400, 1142, 1035, 1106, 1178,\n  \"강원\", 353634, 121301, 211046, 1143, NA, NA, NA, NA, 1081, 1095, NA, NA,\n  \"충북\", 380942, 158913, 188375, 1149, 1898, NA, NA, NA, NA, NA, NA, NA,\n  \"충남\", 514251, 223238, 240892, 1519, NA, NA, NA, NA, 1086, 1095, NA, NA,\n  \"전북\", 832477, 676755, 70693, 3449, NA, NA, NA, 2308, 1085, NA, 1101, NA,\n  \"전남\", 772029, 591321, 54630, 3981, NA, 4491, NA, 2409, NA, NA, NA, 1023,\n  \"경북\", 492060, 44788, 363621, 1361, NA, NA, NA, NA, NA, NA, NA, NA,\n  \"경남\", 531808, 148649, 323319, 2226, NA, NA, NA, NA, NA, NA, 1113, 1313,\n  \"제주\", 188932, 106136, 74523, 1191, NA, NA, NA, NA, NA, NA, NA, NA\n) |&gt; \n  slice(2:n())\n  \nsido_party_2021 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;       합계\n#&gt;      &lt;dbl&gt;\n#&gt; 1 10429577\n\n\n\n\n코드library(tibble)\n\npayer_2021 &lt;- tribble(\n  ~정당, ~당원수, ~납부자수, ~당비납부비율, ~등록된_시도당수,\n  \"합계\", 10429577, 2133765, 20.5, 355,\n  \"더불어민주당\", 4853266, 1295909, 26.7, 17,\n  \"국민의힘\", 4070005, 609090, 15.0, 17,\n  \"정의당\", 50618, 26470, 52.3, 17,\n  \"국민의당\", 20185, 4683, 23.2, 7,\n  \"열린민주당\", 42944, 10383, 24.2, 5,\n  \"기본소득당\", 19814, 809, 4.1, 5,\n  \"시대전환\", 8458, 61, 0.7, 5,\n  \"가가례도인연합\", 6538, NA, NA, 6,\n  \"가나코리아\", 5365, 5, 0.1, 5,\n  \"가자평화인권당\", 6481, NA, NA, 6,\n  \"가자환경당\", 7480, NA, NA, 6,\n  \"거지당\", 10782, 301, 2.8, 8,\n  \"국가혁명당\", 32153, 8549, 26.6, 16,\n  \"국민대통합당\", 6248, NA, NA, 5,\n  \"국민참여신당\", 5773, NA, NA, 5,\n  \"국민혁명당\", 148164, 53720, 36.3, 13,\n  \"기독당\", 5272, NA, NA, 5,\n  \"깨어있는시민연대당\", 6490, 35, 0.5, 5,\n  \"남북통일당\", 5324, 216, 4.1, 5,\n  \"노동당\", 11039, 2781, 25.2, 7,\n  \"녹색당\", 8452, 3469, 41.0, 5,\n  \"대한국민당\", 5585, NA, NA, 5,\n  \"대한당\", 5565, NA, NA, 5,\n  \"대한민국당\", 6721, 167, 2.5, 5,\n  \"독도한국당\", 6631, NA, NA, 6,\n  \"미래당\", 12935, 1311, 10.1, 6,\n  \"민생당\", 378309, 9881, 2.6, 11,\n  \"민중민주당\", 9872, 57, 0.6, 7,\n  \"새누리당\", 36170, 844, 2.3, 7,\n  \"신자유민주연합\", 5362, 322, 6.0, 5,\n  \"신한반도당\", 8872, 20, 0.2, 8,\n  \"여성의당\", 9571, 2487, 26.0, 5,\n  \"우리공화당\", 411337, 50287, 12.2, 13,\n  \"자유당\", 5368, 40, 0.7, 5,\n  \"자유민주당\", 7092, 733, 10.3, 5,\n  \"자유의새벽당\", 11707, 2615, 22.3, 5,\n  \"중소자영업당\", 5823, NA, NA, 5,\n  \"직능자영업당\", 5184, NA, NA, 5,\n  \"진보당\", 85718, 46158, 53.8, 16,\n  \"친박신당\", 8310, 241, 2.9, 6,\n  \"친박연대\", 5257, NA, NA, 5,\n  \"통일한국당\", 11971, 94, 0.8, 6,\n  \"한국국민당\", 6879, 106, 1.5, 6,\n  \"한국복지당\", 7071, NA, NA, 7,\n  \"한나라당\", 5790, NA, NA, 5,\n  \"한류연합당\", 9305, 119, 1.3, 7,\n  \"한반도미래연합\", 8498, NA, NA, 8,\n  \"혁명21\", 11179, 1659, 14.8, 6,\n  \"홍익당\", 6644, 143, 2.2, 5\n)\n\npayer_2021 |&gt; \n  summarise( 당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;     당원수\n#&gt;      &lt;dbl&gt;\n#&gt; 1 20859154\n\n\n\n단위: 백만원\n\n코드# R에서 데이터프레임 생성\nincome_2021 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"전년도이월\", ~\"당비\", ~\"기탁금\", ~\"후원회기부금\", ~\"보조금\", ~\"차입금\", ~\"기타\",\n  \"합계\", 196317, 63629, 61507, 774, 4375, 46278, 3970, 15784,\n  \"더불어민주당\", 89396, 36400, 28402, 348, 350, 21060, 0, 2836,\n  \"국민의힘\", 57990, 15222, 12030, 305, 1352, 18500, 0, 10581,\n  \"정의당\", 12293, 2629, 3807, 51, 896, 3075, 1322, 513,\n  \"국민의당\", 2774, 547, 443, 22, 67, 1364, 0, 331,\n  \"열린민주당\", 3090, 731, 835, 21, 100, 1294, 0, 109,\n  \"기본소득당\", 1099, 25, 925, 0.5, 15, 32, 0, 101,\n  \"시대전환\", 263, 29, 84, 0.5, 32, 28, 0, 90,\n  \"기타정당\", 29412, 8046, 14981, 26, 1563, 925, 2648, 1223\n)\n\n# 데이터프레임 확인\nincome_2021 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;     당비\n#&gt;    &lt;dbl&gt;\n#&gt; 1 123014\n\n\n\n단위: 백만원\n\n코드# R에서 데이터프레임 생성\nexpense_2021 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"선거비용\", ~\"기본경비\", ~\"정책개발비\", ~\"조직활동비\", ~\"여성정치발전비\", ~\"그밖의경비\",\n  \"합계\", 137932, 549, 65988, 17203, 44927, 4930, 4333,\n  \"더불어민주당\", 55624, 0, 24578, 5354, 23348, 2136, 208,\n  \"국민의힘\", 44224, 0, 20789, 9175, 9817, 1952, 2491,\n  \"정의당\", 10511, 260, 6478, 1175, 1602, 367, 629,\n  \"국민의당\", 2222, 0, 848, 485, 577, 195, 117,\n  \"열린민주당\", 1518, 0, 912, 94, 351, 150, 11,\n  \"기본소득당\", 873, 229, 427, 76, 136, 4, 1,\n  \"시대전환\", 243, 0, 223, 4, 8, 4, 4,\n  \"기타정당\", 22717, 60, 11733, 841, 9088, 122, 873\n)\n\n# 데이터프레임 확인\nexpense_2021 |&gt; \n  summarise(선거비용 = sum(선거비용))\n#&gt; # A tibble: 1 × 1\n#&gt;   선거비용\n#&gt;      &lt;dbl&gt;\n#&gt; 1     1098\n\n\n\n\n\n코드# R에서 데이터프레임 생성\nsido_party_2020 &lt;- data.frame(\n  구분 = c(\"합계\", \"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\", \"세종\", \"경기\", \"강원\", \"충북\", \"충남\", \"전북\", \"전남\", \"경북\", \"경남\", \"제주\"),\n  더불어민주당 = c(4053466, 732483, 148679, 38874, 148971, 334034, 122231, 49331, 15889, 764856, 91291, 135103, 168409, 578593, 478573, 41698, 131459, 72992),\n  국민의힘 = c(3489924, 552794, 218624, 196849, 197176, 51999, 170297, 147025, 10539, 670052, 168159, 155963, 183772, 65861, 50544, 304372, 280395, 65503),\n  정의당 = c(53080, 11190, 2311, 1265, 4968, 2369, 1434, 1498, 1094, 10370, 1186, 1234, 1529, 3563, 4030, 1479, 2362, 1198),\n  국민의당 = c(16023, 4721, NA, 1030, 1606, 1746, 2805, NA, NA, 2393, NA, 1722, NA, NA, NA, NA, NA, NA),\n  열린민주당 = c(40456, 23431, 3731, NA, NA, 5202, NA, 3834, NA, NA, NA, NA, NA, NA, 4258, NA, NA, NA),\n  기본소득당 = c(19879, 3281, 4457, NA, 3616, 3050, NA, NA, NA, 5475, NA, NA, NA, NA, NA, NA, NA, NA),\n  시대전환 = c(6945, 1771, NA, NA, NA, 1051, NA, NA, NA, 1210, NA, NA, NA, 1121, 1792, NA, NA, NA),\n  가나코리아 = c(5365, 1123, NA, NA, 1017, NA, NA, NA, NA, 1035, 1095, NA, 1095, NA, NA, NA, NA, NA),\n  가자평화 = c(6707, 1026, 1026, NA, NA, NA, 1016, NA, NA, 1106, NA, NA, NA, 1101, NA, NA, 1432, NA),\n  인권당 = c(7487, 1471, 1415, NA, NA, 1080, NA, NA, NA, 1178, NA, NA, NA, NA, 1030, NA, 1313, NA)\n) |&gt; \n  slice(2:n()) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\nsido_party_2020 |&gt; \n  as_tibble() |&gt; \n  summarise(민주당 = sum(더불어민주당))\n#&gt; # A tibble: 1 × 1\n#&gt;    민주당\n#&gt;     &lt;dbl&gt;\n#&gt; 1 4053466\n\n\n\n\n코드# R에서 데이터프레임 생성\npayer_2020 &lt;- data.frame(\n  정당 = c(\"합계\", \"더불어민주당\", \"국민의힘\", \"정의당\", \"국민의당\", \"열린민주당\", \"기본소득당\", \"시대전환\", \"가나코리아\", \"가자!평화인권당\", \"가자환경당\", \"거지당\", \"국가혁명당\", \"국민새정당\", \"국민참여신당\"),\n  당원수 = c(8771263, 4053466, 3489924, 53080, 16023, 40456, 19879, 6945, 5365, 6707, 7487, 9505, 29757, 9032, 5773),\n  납부자수 = c(1433446, 896296, 347322, 39872, 3369, 12098, 1435, 77, 10, NA, 2, NA, 5889, NA, NA),\n  당비납부비율 = c(16.3, 22.1, 10.0, 75.1, 21.0, 29.9, 7.2, 1.1, 0.2, NA, NA, NA, 19.8, NA, NA),\n  등록된시도당수 = c(332, 17, 17, 17, 7, 5, 5, 5, 5, 6, 6, 8, 17, 8, 5)\n) |&gt; \n  slice(2:n()) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\npayer_2020 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7753399\n\n\n\n\n코드# R에서 데이터프레임 생성\nincome_2020 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"전년도이월\", ~\"당비\", ~\"기탁금\", ~\"후원회기부금\", ~\"보조금\", ~\"차입금\", ~\"기타\",\n  \"합계\", 311220, 45278, 67895, 962, 6095, 90718, 60154, 40118,\n  \"더불어민주당\", 95045, 20643, 31211, 305, 403, 32706, 1840, 7937,\n  \"국민의힘\", 120989, 11301, 13383, 350, 541, 36115, 43897, 15402,\n  \"정의당\", 22597, 2084, 5156, 60, 1723, 5679, 2070, 5825,\n  \"국민의당\", 9045, 0, 242, 0, 60, 1017, 3482, 4244,\n  \"열린민주당\", 10245, 0, 881, 0, 505, 968, 4234, 3657,\n  \"기본소득당\", 633, 18, 392, 0, 55, 16, 48, 104,\n  \"시대전환\", 220, 6, 65, 0, 25, 15, 50, 59,\n  \"기타정당\", 52446, 11226, 16565, 247, 2783, 14202, 4533, 2890\n) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\nincome_2020 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;     당비\n#&gt;    &lt;dbl&gt;\n#&gt; 1 135790\n\n\n\n\n코드# 추가로 만들어야 하는 데이터프레임\nexpense_2020 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"선거비용\", ~\"기본경비\", ~\"정책개발비\", ~\"조직활동비\", ~\"여성정치발전비\", ~\"그밖의경비\",\n  \"합계\", 248036, 31066, 115856, 14449, 58610, 5235, 22820,\n  \"더불어민주당\", 58549, 4058, 21682, 4274, 22438, 1891, 4206,\n  \"국민의힘\", 104155, 4844, 69579, 6410, 14364, 1877, 7081,\n  \"정의당\", 21042, 4709, 7384, 1180, 6345, 340, 1084,\n  \"국민의당\", 8512, 3911, 1022, 130, 415, 115, 2919,\n  \"열린민주당\", 9517, 3544, 685, 53, 603, 96, 4536,\n  \"기본소득당\", 633, 53, 341, 53, 165, 1, 20,\n  \"시대전환\", 197, 0, 121, 71, 2, 0, 3,\n  \"기타정당\", 45431, 9947, 15042, 2278, 14278, 915, 2971\n)\n\n# 데이터프레임 확인\nexpense_2020 |&gt; \n  summarise(선거비용 = sum(선거비용))\n#&gt; # A tibble: 1 × 1\n#&gt;   선거비용\n#&gt;      &lt;dbl&gt;\n#&gt; 1    62132\n\n\n\n\n\n코드library(readxl)\n\nsido_party_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page01\")\n\nsido_party_2019 &lt;- sido_party_2019 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2019 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 8657559\n\n\n\n\n코드payer_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page02\")\n\npayer_2019 &lt;- payer_2019 |&gt; \n  filter(정당 != \"합계\") |&gt; \n  mutate(납부자수 = parse_number(납부자수))\n\npayer_2019 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 8657559\n\n\n\n\n코드income_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page03\")\n\nincome_2019 &lt;- income_2019 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2019 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 44581\n\n\n\n\n코드expense_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page04\")\n\nexpense_2019 &lt;- expense_2019 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2019 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 113009\n\n\n\n\n\n코드library(readxl)\n\nsido_party_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page01\")\n\nsido_party_2018 &lt;- sido_party_2018 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2018 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7825929\n\n\n\n\n코드payer_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page02\")\n\npayer_2018 &lt;- payer_2018 |&gt; \n  filter(정당 != \"합계\") |&gt; \n  mutate(납부자수 = parse_number(납부자수))\n\npayer_2018 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7825929\n\n\n\n\n코드income_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page03\")\n\nincome_2018 &lt;- income_2018 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2018 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 71631\n\n\n\n\n코드expense_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page04\")\n\nexpense_2018 &lt;- expense_2018 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2018 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 194196\n\n\n\n\n\n코드\n# tribble 함수를 이용해 DataFrame 생성\nsido_party_2017 &lt;- tribble(\n  ~구분, ~합계, ~더불어민주당, ~자유한국당, ~국민의당, ~바른정당, ~정의당, ~민중당, ~대한애국당, ~가자코리아, ~경제애국당, ~공화당,\n  \"합계\", 7507952, 3568111, 3227708, 285023, 67053, 40362, 46539, 41685, 5288, 6779, 6568,\n  \"서울\", 1283838, 640138, 511970, 39119, 10777, 8224, 4684, 10272, 1114, 1185, 1034,\n  \"부산\", 360443, 135736, 190581, 8890, 2673, 1895, 2955, 2597, 1030, NA, NA,\n  \"대구\", 245098, 32984, 179375, 4147, 4557, 1796, 1120, 6200, 1059, NA, NA,\n  \"인천\", 361923, 135400, 188407, 6430, 3310, 2937, 1595, 2262, 1011, NA, NA,\n  \"광주\", 407488, 300064, 51398, 38655, 1419, 1443, 7131, 1090, NA, NA, NA,\n  \"대전\", 297531, 106025, 167572, 6366, 1451, 1928, 2206, 1920, 1072, NA, NA,\n  \"울산\", 183212, 34606, 135216, 2181, 2389, 1385, 3289, 1082, NA, NA, NA,\n  \"세종\", 24495, 13104, 9306, 1008, NA, NA, NA, NA, NA, NA, NA,\n  \"경기\", 1353048, 628929, 620356, 31616, 15947, 7171, 7839, 8970, 1031, 1159, 1069,\n  \"강원\", 264107, 80527, 162328, 7696, 1679, 1248, 1172, 1924, 1039, NA, NA,\n  \"충북\", 283900, 121696, 145490, 6021, 1358, 1003, 1106, 1293, NA, NA, NA,\n  \"충남\", 351195, 148353, 177742, 8025, 1922, 1115, 1554, 1412, 1093, NA, NA,\n  \"전북\", 674426, 545688, 63866, 48931, 1773, 2585, 2155, 1070, NA, NA, NA,\n  \"전남\", 561645, 427648, 50169, 66262, 1208, 3364, 6111, NA, NA, NA, NA,\n  \"경북\", 323115, 33684, 257338, 4417, 9145, 1920, 1575, 2248, 1180, NA, NA,\n  \"경남\", 391553, 115964, 251957, 4199, 5208, 1527, 1795, 1795, NA, NA, NA,\n  \"제주\", 140935, 67565, 64637, 2068, 2587, 1824, NA, NA, NA, NA, NA\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nsido_party_2017 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;      합계\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7507952\n\n\n\n\n코드# tribble 함수를 사용하여 데이터 프레임을 생성한다\npayer_2017 &lt;- tribble(\n  ~\"정당\", ~\"당원수\", ~\"납부자수\", ~\"당비납부\", ~\"비율(%)\", ~\"등록된시·도당수\",\n  \"합계\", 7507952, 1320976, NA, 17.6, 285,\n  \"더불어민주당\", 3568111, 834573, NA, 23.4, 17,\n  \"자유한국당\", 3227708, 335000, NA, 10.4, 17,\n  \"국민의당\", 285023, 44371, NA, 15.6, 16,\n  \"바른정당\", 67053, 29712, NA, 44.3, 16,\n  \"정의당\", 40362, 25687, NA, 63.6, 15,\n  \"민중당\", 46539, 25960, NA, 55.8, 15,\n  \"대한애국당\", 41685, 9579, NA, 23.0, 12,\n  \"가자코리아\", 5288, NA, NA, NA, 5,\n  \"경제애국당\", 6779, 6, NA, 0.1, 6,\n  \"공화당\", 6568, NA, NA, NA, 6,\n  \"국민대통합당\", 7161, NA, NA, NA, 6,\n  \"국민새정당\", 8983, NA, NA, NA, 8,\n  \"국민행복당\", 5253, 125, NA, 2.4, 5,\n  \"국제녹색당\", 12019, NA, NA, NA, 11,\n  \"그린불교연합당\", 5411, NA, NA, NA, 5,\n  \"기독당\", 6442, NA, NA, NA, 5,\n  \"기독자유당\", 9206, 2, NA, NA, 8,\n  \"노동당\", 11823, 4784, NA, 40.5, 7,\n  \"녹색당\", 9308, 5725, NA, 61.5, 5,\n  \"늘푸른한국당\", 20863, 262, NA, 1.3, 17,\n  \"대한민국당\", 6360, 134, NA, 2.1, 5,\n  \"민중민주당\", 6461, 19, NA, 0.3, 5,\n  \"사회민주당\", 4653, 38, NA, 0.8, 5,\n  \"새누리당\", 30603, 3784, NA, 12.4, 7,\n  \"우리미래\", 6269, 993, NA, 15.8, 5,\n  \"인권정당\", 6537, NA, NA, NA, 6,\n  \"진리대한당\", 5458, NA, NA, NA, 5,\n  \"친박연대\", 5257, NA, NA, NA, 5,\n  \"통일한국당\", 5787, 20, NA, 0.3, 5,\n  \"통합민주당\", 5262, NA, NA, NA, 5,\n  \"한국국민당\", 6832, 106, NA, 1.6, 6,\n  \"한나라당\", 5789, NA, NA, NA, 5,\n  \"한누리평화통일당\", 7064, NA, NA, NA, 7,\n  \"한반도미래연합\", 7392, NA, NA, NA, 7,\n  \"홍익당\", 6643, 96, NA, 1.4, 5\n) |&gt; \n  filter(정당 != \"합계\")\n\npayer_2017 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7507952\n\n\n\n\n코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수를 이용해 DataFrame 생성\nincome_2017 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`전년도이월`, ~`당비`, ~`기탁금`, ~`후원회기부금`, ~`보조금`, ~`차입금`, ~`기타`,\n  \"합 계\", 399421, 39181, 46017, 4479, 4859, 84276, 88290, 132319,\n  \"더 불 어 민 주 당\", 139442, 8239, 14040, 1444, 330, 24965, 40887, 49537,\n  \"자 유 한 국 당\", 124191, 25005, 12191, 1413, 294, 24583, 25143, 35562, \n  \"국 민 의 당\", 90282, 4620, 2097, 1342, 4, 17678, 19570, 44971,\n  \"바 른 정 당\", 16108, 32, 3273, 5, 903, 11483, 12, 400,\n  \"정 의 당\", 13652, 669, 4059, 275, 1446, 5492, 656, 1055,\n  \"민 중 당\", 5158, 125, 3160, 0, 790, 28, 595, 460,\n  \"대 한 애 국 당\", 945, 0, 521, 0, 400, 7, 2, 15,\n  \"기 타 정 당\", 9643, 491, 6676, 0, 692, 40, 1425, 319\n) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s\")) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nincome_2017\n#&gt; # A tibble: 8 × 9\n#&gt;   구분           합계 전년도이월  당비 기탁금 후원회기부금 보조금 차입금  기타\n#&gt;   &lt;chr&gt;         &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1 더불어민주당 139442       8239 14040   1444          330  24965  40887 49537\n#&gt; 2 자유한국당   124191      25005 12191   1413          294  24583  25143 35562\n#&gt; 3 국민의당      90282       4620  2097   1342            4  17678  19570 44971\n#&gt; 4 바른정당      16108         32  3273      5          903  11483     12   400\n#&gt; 5 정의당        13652        669  4059    275         1446   5492    656  1055\n#&gt; 6 민중당         5158        125  3160      0          790     28    595   460\n#&gt; 7 대한애국당      945          0   521      0          400      7      2    15\n#&gt; 8 기타정당       9643        491  6676      0          692     40   1425   319\n\n\n\n\n코드# tribble 함수를 이용해 DataFrame 생성\nexpense_2017 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`선거비용`, ~`기본경비`, ~`정책개발비`, ~`조직활동비`, ~`여성정치발전비`, ~`그밖의경비`,\n  \"합 계\", 366341, 133900, 76293, 16992, 42509, 4727, 91920,\n  \"더 불 어 민 주 당\", 132145, 46114, 24973, 4254, 15288, 1287, 40229,\n  \"자 유 한 국 당\", 109761, 32835, 27333, 8371, 11042, 1706, 28474,\n  \"국 민 의 당\", 83101, 41915, 9343, 2907, 7869, 918, 20149,\n  \"바 른 정 당\", 13437, 4774, 5121, 336, 2543, 536, 127,\n  \"정 의 당\", 12866, 3532, 5318, 1046, 1620, 274, 1076,\n  \"민 중 당\", 5016, 909, 1694, 18, 1624, 4, 767,\n  \"대 한 애 국 당\", 873, 0, 276, 0, 595, 0, 2,\n  \"기 타 정 당\", 9142, 3821, 2235, 60, 1928, 2, 1096\n) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s\")) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nexpense_2017\n#&gt; # A tibble: 8 × 8\n#&gt;   구분    합계 선거비용 기본경비 정책개발비 조직활동비 여성정치발전비 그밖의경비\n#&gt;   &lt;chr&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 더불… 132145    46114    24973       4254      15288           1287      40229\n#&gt; 2 자유… 109761    32835    27333       8371      11042           1706      28474\n#&gt; 3 국민…  83101    41915     9343       2907       7869            918      20149\n#&gt; 4 바른…  13437     4774     5121        336       2543            536        127\n#&gt; 5 정의…  12866     3532     5318       1046       1620            274       1076\n#&gt; 6 민중…   5016      909     1694         18       1624              4        767\n#&gt; 7 대한…    873        0      276          0        595              0          2\n#&gt; 8 기타…   9142     3821     2235         60       1928              2       1096\n\n\n\n\n\n코드library(readxl)\n\nsido_party_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page01\")\n\nsido_party_2016 &lt;- sido_party_2016 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2016 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 6101987\n\n\n\n\n코드payer_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page02\")\n\npayer_2016 &lt;- payer_2016 |&gt; \n  filter(정당 != \"합계\")\n\npayer_2016 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 6101987\n\n\n\n\n코드income_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page03\")\n\nincome_2016 &lt;- income_2016 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2016 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 42068\n\n\n\n\n코드expense_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page04\")\n\nexpense_2016 &lt;- expense_2016 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2016 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 175825\n\n\n\n\n\n코드library(readxl)\n\nsido_party_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page01\")\n\nsido_party_2015 &lt;- sido_party_2015 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2015 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5837061\n\n\n\n\n코드payer_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page02\")\n\npayer_2015 &lt;- payer_2015 |&gt; \n  filter(정당 != \"합계\")\n\npayer_2015 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5743354\n\n\n\n\n코드income_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page03\")\n\nincome_2015 &lt;- income_2015 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2015 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 22154\n\n\n\n\n코드expense_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page04\")\n\nexpense_2015 &lt;- expense_2015 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2015 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    합계\n#&gt;   &lt;dbl&gt;\n#&gt; 1 82361\n\n\n\n\n\n코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수로 DataFrame 생성\nsido_party_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`새누리당`, ~`새정치 민주연합`, ~`정의당`, ~`겨레자유`, ~`평화통일당 경제민주당`, ~`공화당`, ~`국제녹색당`,\n  \"합계\", 5245611, 2708085, 2430111, 18184, 5340, 6121, 6661, 11993,\n  \"서울\", 854469, 440230, 392397, 2870, 1073, 1119, 1031, 1080,\n  \"부산\", 261053, 155380, 100032, 1152, 0, 0, 1130, 1084,\n  \"대구\", 142209, 116729, 22132, 1274, 0, 0, 0, 0,\n  \"인천\", 264772, 164672, 88937, 1483, 1050, 1039, 0, 1198,\n  \"광주\", 290523, 50746, 236369, 0, 0, 0, 0, 1079,\n  \"대전\", 235967, 152724, 75706, 1105, 0, 1014, 1072, 0,\n  \"울산\", 128820, 112527, 14198, 1073, 0, 0, 0, 0,\n  \"세종\", 15216, 8942, 6274, 0, 0, 0, 0, 0,\n  \"경기\", 945114, 543051, 383963, 2756, 1031, 1489, 1068, 1062,\n  \"강원\", 189618, 136025, 47140, 1078, 1093, 0, 0, 1050,\n  \"충북\", 203365, 118325, 81530, 0, 0, 0, 1290, 1030,\n  \"충남\", 224028, 150430, 68173, 0, 1093, 0, 0, 1030,\n  \"전북\", 506132, 59028, 442007, 1554, 0, 0, 1070, 1190,\n  \"전남\", 405205, 45805, 354887, 1224, 0, 0, 0, 1092,\n  \"경북\", 214150, 184736, 23390, 1365, 0, 1460, 0, 1098,\n  \"경남\", 259914, 200703, 57202, 0, 0, 0, 0, 0,\n  \"제주\", 105056, 68032, 35774, 1250, 0, 0, 0, 0\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nsido_party_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;      합계\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5245611\n\n\n\n\n코드# tribble 함수를 사용하여 데이터 프레임을 생성한다\npayer_2014 &lt;- tribble(\n  ~\"정당\", ~\"당원수\", ~\"납부자수\", ~\"비율(%)\", ~\"시·도당수\",\n  \"합계\", 5245611, 591045, 11.2, 120,\n  \"새누리당\", 2708085, 253552, 9.4, 17,\n  \"새정치민주연합\", 2430111, 316836, 13.0, 17,\n  \"정의당\", 18184, 9921, 54.6, 12,\n  \"겨레자유평화통일당\", 5340, 0, NA, 5,\n  \"경제민주당\", 6121, 0, NA, 5,\n  \"공화당\", 6661, 35, 0.5, 6,\n  \"국제녹색당\", 11993, 0, NA, 11,\n  \"그린불교연합당\", 5155, 0, NA, 5,\n  \"기독민주당\", 5300, 6, 0.1, 5,\n  \"노동당\", 13015, 6552, 50.3, 7,\n  \"녹색당\", 6870, 4122, 60.0, 5,\n  \"대한민국당\", 6029, 0, NA, 5,\n  \"민주당\", 6225, 16, 0.3, 5,\n  \"새마을당\", 5549, 0, NA, 5,\n  \"새정치국민의당\", 5207, 5, 0.1, 5,\n  \"한나라당\", 5766, 0, NA, 5\n) |&gt; \n  filter(정당 != \"합계\")\n\npayer_2014 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5245611\n\n\n\n\n코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수로 DataFrame 생성\nincome_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`전년도이월`, ~`당비`, ~`기탁금`, ~`보조금`, ~`차입금`, ~`기타`,\n  \"합계\", 201388, 20935, 52086, 9907, 74343, 1186, 42931,\n  \"새누리당\", 97608, 8449, 26404, 4871, 36355, 220, 21309,\n  \"새정치민주연합\", 91737, 11392, 21284, 4466, 33831, 256, 20508,\n  \"정의당\", 8259, 560, 1647, 570, 4157, 514, 811,\n  \"기타정당\", 3784, 534, 2751, NA, NA, 196, 303\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nincome_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 201388\n\n\n\n\n코드\nexpense_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`선거비용`, ~`기본경비`, ~`정책개발비`, ~`조직활동비`, ~`여성정치발전비`, ~`그밖의경비`,\n  \"합계\", 159263, 16152, 44310, 14208, 69070, 3693, 11830,\n  \"새누리당\", 77691, 7373, 21257, 9292, 30536, 1832, 7401,\n  \"새정치민주연합\", 70591, 7963, 18955, 4101, 34372, 1646, 3554,\n  \"정의당\", 7592, 422, 2689, 793, 2778, 215, 695,\n  \"기타정당\", 3389, 394, 1409, 22, 1384, NA, 180\n) |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 159263\n\n\n\n\n\n코드object_list &lt;- ls()\n\nparty_members &lt;- object_list[str_detect(object_list, pattern = \"^sido_party_\\\\d{4}\")]\n\nparty_members_list &lt;- mget(party_members)\n\nparty_members_sido_tbl &lt;- party_members_list |&gt; \n  enframe() |&gt; \n  mutate(year = parse_number(name)) |&gt; \n  mutate(data = map(value, select, 1:4)) |&gt; \n  unnest(data) |&gt; \n  pivot_longer(새누리당:국민의힘, names_to = \"정당\", values_to = \"당원수\") |&gt; \n  select(year, 구분, 합계, 정당, 당원수) |&gt;\n  mutate(정당명 = case_when(\n    str_detect(정당, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(정당, \"더불어민주당|민주당|(새정치 민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt; \n  filter(!is.na(당원수)) |&gt; \n  select(year, 구분, 합계, 정당명, 당원수)\n\n\n\n\n코드\npayers &lt;- object_list[str_detect(object_list, pattern = \"^payer_\\\\d{4}\")]\n\npayers_list &lt;- mget(payers)\n\npayers_members_tbl &lt;- payers_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, 1:3)) |&gt; \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(정당, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(정당, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\",\n         납부자수 &gt; 10000) |&gt; \n  select(연도, 당원수, 정당명, 납부자수)\n\npayers_members_tbl\n#&gt; # A tibble: 16 × 4\n#&gt;     연도  당원수 정당명   납부자수\n#&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;\n#&gt;  1  2014 2708085 국민의힘   253552\n#&gt;  2  2014 2430111 민주당     316836\n#&gt;  3  2015 3020776 국민의힘   378463\n#&gt;  4  2015 2671954 민주당     256197\n#&gt;  5  2016 2705938 민주당     287114\n#&gt;  6  2016 2991365 국민의힘   329952\n#&gt;  7  2017 3568111 민주당     834573\n#&gt;  8  2017 3227708 국민의힘   335000\n#&gt;  9  2018 3579111 민주당     878114\n#&gt; 10  2018 3340979 국민의힘   430736\n#&gt; 11  2019 4065408 민주당    1026804\n#&gt; 12  2019 3475372 국민의힘   373342\n#&gt; 13  2020 4053466 민주당     896296\n#&gt; 14  2020 3489924 국민의힘   347322\n#&gt; 15  2021 4853266 민주당    1295909\n#&gt; 16  2021 4070005 국민의힘   609090\n\n\n\n\n코드\nincome &lt;- object_list[str_detect(object_list, pattern = \"^income_\\\\d{4}\")]\n\nincome_list &lt;- mget(income)\n\nincome_party_tbl &lt;- income_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, c(구분, 합계, 당비, 기탁금, 보조금, 차입금))) |&gt;  \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(구분, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(구분, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\",\n         당비 &gt; 5000) |&gt; \n  select(연도, 정당명, 합계, 당비, 기탁금, 보조금, 차입금)\n\nincome_party_tbl\n#&gt; # A tibble: 16 × 7\n#&gt;     연도 정당명     합계  당비 기탁금 보조금 차입금\n#&gt;    &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n#&gt;  1  2014 국민의힘  97608 26404   4871  36355    220\n#&gt;  2  2014 민주당    91737 21284   4466  33831    256\n#&gt;  3  2015 국민의힘  56108 11494   2198  19570      0\n#&gt;  4  2015 민주당    47523  6125   1999  17747      0\n#&gt;  5  2016 민주당    76835 11793   2482  29225  15000\n#&gt;  6  2016 국민의힘  86286 17553   2805  33118      0\n#&gt;  7  2017 민주당   139442 14040   1444  24965  40887\n#&gt;  8  2017 국민의힘 124191 12191   1413  24583  25143\n#&gt;  9  2018 민주당    93243 37614   1269  29669   2028\n#&gt; 10  2018 국민의힘  82894 14969   1293  27415   4854\n#&gt; 11  2019 민주당    58981 19933    647  13822      0\n#&gt; 12  2019 국민의힘  47916  9869    642  13593    500\n#&gt; 13  2020 민주당    95045 31211    305  32706   1840\n#&gt; 14  2020 국민의힘 120989 13383    350  36115  43897\n#&gt; 15  2021 민주당    89396 28402    348  21060      0\n#&gt; 16  2021 국민의힘  57990 12030    305  18500      0\n\n\n\n\n코드\nexpense &lt;- object_list[str_detect(object_list, pattern = \"^expense_\\\\d{4}\")]\n\nexpense_list &lt;- mget(expense)\n\nexpense_party_tbl &lt;- expense_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, c(구분, 합계, 선거비용, 기본경비, 정책개발비, 조직활동비))) |&gt;  \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(구분, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(구분, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\") |&gt;\n  select(연도, 정당명, 합계, 선거비용, 기본경비, 정책개발비, 조직활동비) \n\nexpense_party_tbl\n#&gt; # A tibble: 16 × 7\n#&gt;     연도 정당명     합계 선거비용 기본경비 정책개발비 조직활동비\n#&gt;    &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n#&gt;  1  2014 국민의힘  77691     7373    21257       9292      30536\n#&gt;  2  2014 민주당    70591     7963    18955       4101      34372\n#&gt;  3  2015 국민의힘  39564        0    18903       8332       6662\n#&gt;  4  2015 민주당    33818      110    17273       4179      10102\n#&gt;  5  2016 민주당    68294     4588    37645       3223      20197\n#&gt;  6  2016 국민의힘  61772     4705    19855       8631      22875\n#&gt;  7  2017 민주당   132145    46114    24973       4254      15288\n#&gt;  8  2017 국민의힘 109761    32835    27333       8371      11042\n#&gt;  9  2018 민주당    70685     8840    22146       3768      29149\n#&gt; 10  2018 국민의힘  59805     7060    20458       6514      13521\n#&gt; 11  2019 민주당    38308        0    20317       3420      12599\n#&gt; 12  2019 국민의힘  36202        0    15981       6744       8673\n#&gt; 13  2020 민주당    58549     4058    21682       4274      22438\n#&gt; 14  2020 국민의힘 104155     4844    69579       6410      14364\n#&gt; 15  2021 민주당    55624        0    24578       5354      23348\n#&gt; 16  2021 국민의힘  44224        0    20789       9175       9817"
  },
  {
    "objectID": "party_numbers.html#년",
    "href": "party_numbers.html#년",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\nparty_2021 &lt;- tribble(\n  ~구분, ~당원수, ~분포비, ~등록된_시도당수, ~시도당_평균당원수,\n  \"합계\", 10429577, 100, 355, 29379,\n  \"더불어민주당\", 4853266, 46.5, 17, 285486,\n  \"국민의힘\", 4070005, 39.0, 17, 239412,\n  \"정의당\", 50618, 0.5, 17, 2978,\n  \"국민의당\", 20185, 0.2, 7, 2884,\n  \"열린민주당\", 42944, 0.4, 5, 8589,\n  \"기본소득당\", 19814, 0.2, 5, 3963,\n  \"시대전환\", 8458, 0.1, 5, 1692,\n  \"가가례도인연합\", 6538, 0.1, 6, 1090,\n  \"가나코리아\", 5365, 0.1, 5, 1073,\n  \"가자평화인권당\", 6481, 0.1, 6, 1080,\n  \"가자환경당\", 7480, 0.1, 6, 1247,\n  \"거지당\", 10782, 0.1, 8, 1348,\n  \"국가혁명당\", 32153, 0.3, 16, 2010,\n  \"국민대통합당\", 6248, 0.1, 5, 1250,\n  \"국민참여신당\", 5773, 0.1, 5, 1155,\n  \"국민혁명당\", 148164, 1.4, 13, 11397,\n  \"기독당\", 5272, 0.1, 5, 1054,\n  \"깨어있는시민연대당\", 6490, 0.1, 5, 1298,\n  \"남북통일당\", 5324, 0.1, 5, 1065,\n  \"노동당\", 11039, 0.1, 7, 1577,\n  \"녹색당\", 8452, 0.1, 5, 1690,\n  \"대한국민당\", 5585, 0.1, 5, 1117,\n  \"대한당\", 5565, 0.1, 5, 1113,\n  \"대한민국당\", 6721, 0.1, 5, 1344,\n  \"독도한국당\", 6631, 0.1, 6, 1105,\n  \"미래당\", 12935, 0.1, 6, 2156,\n  \"민생당\", 378309, 3.6, 11, 34392,\n  \"민중민주당\", 9872, 0.1, 7, 1410,\n  \"새누리당\", 36170, 0.3, 7, 5167,\n  \"신자유민주연합\", 5362, 0.1, 5, 1072,\n  \"신한반도당\", 8872, 0.1, 8, 1109,\n  \"여성의당\", 9571, 0.1, 5, 1914,\n  \"우리공화당\", 411337, 3.9, 13, 31641,\n  \"자유당\", 5368, 0.1, 5, 1074,\n  \"자유민주당\", 7092, 0.1, 5, 1418,\n  \"자유의새벽당\", 11707, 0.1, 5, 2341,\n  \"중소자영업당\", 5823, 0.1, 5, 1165,\n  \"직능자영업당\", 5184, 0.0, 5, 1037,\n  \"진보당\", 85718, 0.8, 16, 5357,\n  \"친박신당\", 8310, 0.1, 6, 1385,\n  \"친박연대\", 5257, 0.1, 5, 1051,\n  \"통일한국당\", 11971, 0.1, 6, 1995,\n  \"한국국민당\", 6879, 0.1, 6, 1147,\n  \"한국복지당\", 7071, 0.1, 7, 1010,\n  \"한나라당\", 5790, 0.1, 5, 1158,\n  \"한류연합당\", 9305, 0.1, 7, 1329,\n  \"한반도미래연합\", 8498, 0.1, 8, 1062,\n  \"혁명21\", 11179, 0.1, 6, 1863,\n  \"홍익당\", 6644, 0.1, 5, 1329\n) |&gt; \n  slice(2:n()) \n\n\nparty_2021 |&gt; \n  summarise(당원수 = sum(당원수)) # 10,429,577\n#&gt; # A tibble: 1 × 1\n#&gt;     당원수\n#&gt;      &lt;dbl&gt;\n#&gt; 1 10429577\n\n\n\n\n코드library(tibble)\n\nsido_party_2021 &lt;- tribble(\n  ~구분, ~합계, ~더불어민주당, ~국민의힘, ~정의당, ~국민의당, ~열린민주당, ~기본소득당, ~시대전환, ~가가례도인연합, ~가나코리아, ~가자평화인권당, ~가자환경당,\n  \"합계\", 10429577, 4853266, 4070005, 50618, 20185, 42944, 19814, 8458, 6538, 5365, 6481, 7480,\n  \"서울\", 1830842, 858016, 633807, 9882, 6847, 24768, 3254, 1290, 1041, 1123, 1042, 1472,\n  \"부산\", 530951, 158779, 245492, 2257, NA, 3996, 4436, NA, NA, NA, 1103, 1414,\n  \"대구\", 340866, 41126, 221321, 1228, 1138, NA, NA, NA, NA, NA, NA, NA,\n  \"인천\", 462086, 180174, 226077, 4661, 1686, NA, 3063, NA, 1103, 1017, NA, NA,\n  \"광주\", 544234, 398357, 56614, 2372, 1814, 5680, 3363, 1051, NA, NA, NA, 1080,\n  \"대전\", 372618, 151895, 191034, 1345, 3099, NA, NA, NA, NA, NA, 1016, NA,\n  \"울산\", 250177, 59315, 159387, 1390, NA, 4009, NA, NA, NA, NA, NA, NA,\n  \"세종\", 39355, 18972, 13300, 1070, NA, NA, NA, NA, NA, NA, NA, NA,\n  \"경기\", 1992315, 915531, 795874, 10394, 3703, NA, 5698, 1400, 1142, 1035, 1106, 1178,\n  \"강원\", 353634, 121301, 211046, 1143, NA, NA, NA, NA, 1081, 1095, NA, NA,\n  \"충북\", 380942, 158913, 188375, 1149, 1898, NA, NA, NA, NA, NA, NA, NA,\n  \"충남\", 514251, 223238, 240892, 1519, NA, NA, NA, NA, 1086, 1095, NA, NA,\n  \"전북\", 832477, 676755, 70693, 3449, NA, NA, NA, 2308, 1085, NA, 1101, NA,\n  \"전남\", 772029, 591321, 54630, 3981, NA, 4491, NA, 2409, NA, NA, NA, 1023,\n  \"경북\", 492060, 44788, 363621, 1361, NA, NA, NA, NA, NA, NA, NA, NA,\n  \"경남\", 531808, 148649, 323319, 2226, NA, NA, NA, NA, NA, NA, 1113, 1313,\n  \"제주\", 188932, 106136, 74523, 1191, NA, NA, NA, NA, NA, NA, NA, NA\n) |&gt; \n  slice(2:n())\n  \nsido_party_2021 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;       합계\n#&gt;      &lt;dbl&gt;\n#&gt; 1 10429577\n\n\n\n\n코드library(tibble)\n\npayer_2021 &lt;- tribble(\n  ~정당, ~당원수, ~납부자수, ~당비납부비율, ~등록된_시도당수,\n  \"합계\", 10429577, 2133765, 20.5, 355,\n  \"더불어민주당\", 4853266, 1295909, 26.7, 17,\n  \"국민의힘\", 4070005, 609090, 15.0, 17,\n  \"정의당\", 50618, 26470, 52.3, 17,\n  \"국민의당\", 20185, 4683, 23.2, 7,\n  \"열린민주당\", 42944, 10383, 24.2, 5,\n  \"기본소득당\", 19814, 809, 4.1, 5,\n  \"시대전환\", 8458, 61, 0.7, 5,\n  \"가가례도인연합\", 6538, NA, NA, 6,\n  \"가나코리아\", 5365, 5, 0.1, 5,\n  \"가자평화인권당\", 6481, NA, NA, 6,\n  \"가자환경당\", 7480, NA, NA, 6,\n  \"거지당\", 10782, 301, 2.8, 8,\n  \"국가혁명당\", 32153, 8549, 26.6, 16,\n  \"국민대통합당\", 6248, NA, NA, 5,\n  \"국민참여신당\", 5773, NA, NA, 5,\n  \"국민혁명당\", 148164, 53720, 36.3, 13,\n  \"기독당\", 5272, NA, NA, 5,\n  \"깨어있는시민연대당\", 6490, 35, 0.5, 5,\n  \"남북통일당\", 5324, 216, 4.1, 5,\n  \"노동당\", 11039, 2781, 25.2, 7,\n  \"녹색당\", 8452, 3469, 41.0, 5,\n  \"대한국민당\", 5585, NA, NA, 5,\n  \"대한당\", 5565, NA, NA, 5,\n  \"대한민국당\", 6721, 167, 2.5, 5,\n  \"독도한국당\", 6631, NA, NA, 6,\n  \"미래당\", 12935, 1311, 10.1, 6,\n  \"민생당\", 378309, 9881, 2.6, 11,\n  \"민중민주당\", 9872, 57, 0.6, 7,\n  \"새누리당\", 36170, 844, 2.3, 7,\n  \"신자유민주연합\", 5362, 322, 6.0, 5,\n  \"신한반도당\", 8872, 20, 0.2, 8,\n  \"여성의당\", 9571, 2487, 26.0, 5,\n  \"우리공화당\", 411337, 50287, 12.2, 13,\n  \"자유당\", 5368, 40, 0.7, 5,\n  \"자유민주당\", 7092, 733, 10.3, 5,\n  \"자유의새벽당\", 11707, 2615, 22.3, 5,\n  \"중소자영업당\", 5823, NA, NA, 5,\n  \"직능자영업당\", 5184, NA, NA, 5,\n  \"진보당\", 85718, 46158, 53.8, 16,\n  \"친박신당\", 8310, 241, 2.9, 6,\n  \"친박연대\", 5257, NA, NA, 5,\n  \"통일한국당\", 11971, 94, 0.8, 6,\n  \"한국국민당\", 6879, 106, 1.5, 6,\n  \"한국복지당\", 7071, NA, NA, 7,\n  \"한나라당\", 5790, NA, NA, 5,\n  \"한류연합당\", 9305, 119, 1.3, 7,\n  \"한반도미래연합\", 8498, NA, NA, 8,\n  \"혁명21\", 11179, 1659, 14.8, 6,\n  \"홍익당\", 6644, 143, 2.2, 5\n)\n\npayer_2021 |&gt; \n  summarise( 당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;     당원수\n#&gt;      &lt;dbl&gt;\n#&gt; 1 20859154\n\n\n\n단위: 백만원\n\n코드# R에서 데이터프레임 생성\nincome_2021 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"전년도이월\", ~\"당비\", ~\"기탁금\", ~\"후원회기부금\", ~\"보조금\", ~\"차입금\", ~\"기타\",\n  \"합계\", 196317, 63629, 61507, 774, 4375, 46278, 3970, 15784,\n  \"더불어민주당\", 89396, 36400, 28402, 348, 350, 21060, 0, 2836,\n  \"국민의힘\", 57990, 15222, 12030, 305, 1352, 18500, 0, 10581,\n  \"정의당\", 12293, 2629, 3807, 51, 896, 3075, 1322, 513,\n  \"국민의당\", 2774, 547, 443, 22, 67, 1364, 0, 331,\n  \"열린민주당\", 3090, 731, 835, 21, 100, 1294, 0, 109,\n  \"기본소득당\", 1099, 25, 925, 0.5, 15, 32, 0, 101,\n  \"시대전환\", 263, 29, 84, 0.5, 32, 28, 0, 90,\n  \"기타정당\", 29412, 8046, 14981, 26, 1563, 925, 2648, 1223\n)\n\n# 데이터프레임 확인\nincome_2021 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;     당비\n#&gt;    &lt;dbl&gt;\n#&gt; 1 123014\n\n\n\n단위: 백만원\n\n코드# R에서 데이터프레임 생성\nexpense_2021 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"선거비용\", ~\"기본경비\", ~\"정책개발비\", ~\"조직활동비\", ~\"여성정치발전비\", ~\"그밖의경비\",\n  \"합계\", 137932, 549, 65988, 17203, 44927, 4930, 4333,\n  \"더불어민주당\", 55624, 0, 24578, 5354, 23348, 2136, 208,\n  \"국민의힘\", 44224, 0, 20789, 9175, 9817, 1952, 2491,\n  \"정의당\", 10511, 260, 6478, 1175, 1602, 367, 629,\n  \"국민의당\", 2222, 0, 848, 485, 577, 195, 117,\n  \"열린민주당\", 1518, 0, 912, 94, 351, 150, 11,\n  \"기본소득당\", 873, 229, 427, 76, 136, 4, 1,\n  \"시대전환\", 243, 0, 223, 4, 8, 4, 4,\n  \"기타정당\", 22717, 60, 11733, 841, 9088, 122, 873\n)\n\n# 데이터프레임 확인\nexpense_2021 |&gt; \n  summarise(선거비용 = sum(선거비용))\n#&gt; # A tibble: 1 × 1\n#&gt;   선거비용\n#&gt;      &lt;dbl&gt;\n#&gt; 1     1098"
  },
  {
    "objectID": "party_numbers.html#년-1",
    "href": "party_numbers.html#년-1",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# R에서 데이터프레임 생성\nsido_party_2020 &lt;- data.frame(\n  구분 = c(\"합계\", \"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\", \"세종\", \"경기\", \"강원\", \"충북\", \"충남\", \"전북\", \"전남\", \"경북\", \"경남\", \"제주\"),\n  더불어민주당 = c(4053466, 732483, 148679, 38874, 148971, 334034, 122231, 49331, 15889, 764856, 91291, 135103, 168409, 578593, 478573, 41698, 131459, 72992),\n  국민의힘 = c(3489924, 552794, 218624, 196849, 197176, 51999, 170297, 147025, 10539, 670052, 168159, 155963, 183772, 65861, 50544, 304372, 280395, 65503),\n  정의당 = c(53080, 11190, 2311, 1265, 4968, 2369, 1434, 1498, 1094, 10370, 1186, 1234, 1529, 3563, 4030, 1479, 2362, 1198),\n  국민의당 = c(16023, 4721, NA, 1030, 1606, 1746, 2805, NA, NA, 2393, NA, 1722, NA, NA, NA, NA, NA, NA),\n  열린민주당 = c(40456, 23431, 3731, NA, NA, 5202, NA, 3834, NA, NA, NA, NA, NA, NA, 4258, NA, NA, NA),\n  기본소득당 = c(19879, 3281, 4457, NA, 3616, 3050, NA, NA, NA, 5475, NA, NA, NA, NA, NA, NA, NA, NA),\n  시대전환 = c(6945, 1771, NA, NA, NA, 1051, NA, NA, NA, 1210, NA, NA, NA, 1121, 1792, NA, NA, NA),\n  가나코리아 = c(5365, 1123, NA, NA, 1017, NA, NA, NA, NA, 1035, 1095, NA, 1095, NA, NA, NA, NA, NA),\n  가자평화 = c(6707, 1026, 1026, NA, NA, NA, 1016, NA, NA, 1106, NA, NA, NA, 1101, NA, NA, 1432, NA),\n  인권당 = c(7487, 1471, 1415, NA, NA, 1080, NA, NA, NA, 1178, NA, NA, NA, NA, 1030, NA, 1313, NA)\n) |&gt; \n  slice(2:n()) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\nsido_party_2020 |&gt; \n  as_tibble() |&gt; \n  summarise(민주당 = sum(더불어민주당))\n#&gt; # A tibble: 1 × 1\n#&gt;    민주당\n#&gt;     &lt;dbl&gt;\n#&gt; 1 4053466\n\n\n\n\n코드# R에서 데이터프레임 생성\npayer_2020 &lt;- data.frame(\n  정당 = c(\"합계\", \"더불어민주당\", \"국민의힘\", \"정의당\", \"국민의당\", \"열린민주당\", \"기본소득당\", \"시대전환\", \"가나코리아\", \"가자!평화인권당\", \"가자환경당\", \"거지당\", \"국가혁명당\", \"국민새정당\", \"국민참여신당\"),\n  당원수 = c(8771263, 4053466, 3489924, 53080, 16023, 40456, 19879, 6945, 5365, 6707, 7487, 9505, 29757, 9032, 5773),\n  납부자수 = c(1433446, 896296, 347322, 39872, 3369, 12098, 1435, 77, 10, NA, 2, NA, 5889, NA, NA),\n  당비납부비율 = c(16.3, 22.1, 10.0, 75.1, 21.0, 29.9, 7.2, 1.1, 0.2, NA, NA, NA, 19.8, NA, NA),\n  등록된시도당수 = c(332, 17, 17, 17, 7, 5, 5, 5, 5, 6, 6, 8, 17, 8, 5)\n) |&gt; \n  slice(2:n()) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\npayer_2020 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7753399\n\n\n\n\n코드# R에서 데이터프레임 생성\nincome_2020 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"전년도이월\", ~\"당비\", ~\"기탁금\", ~\"후원회기부금\", ~\"보조금\", ~\"차입금\", ~\"기타\",\n  \"합계\", 311220, 45278, 67895, 962, 6095, 90718, 60154, 40118,\n  \"더불어민주당\", 95045, 20643, 31211, 305, 403, 32706, 1840, 7937,\n  \"국민의힘\", 120989, 11301, 13383, 350, 541, 36115, 43897, 15402,\n  \"정의당\", 22597, 2084, 5156, 60, 1723, 5679, 2070, 5825,\n  \"국민의당\", 9045, 0, 242, 0, 60, 1017, 3482, 4244,\n  \"열린민주당\", 10245, 0, 881, 0, 505, 968, 4234, 3657,\n  \"기본소득당\", 633, 18, 392, 0, 55, 16, 48, 104,\n  \"시대전환\", 220, 6, 65, 0, 25, 15, 50, 59,\n  \"기타정당\", 52446, 11226, 16565, 247, 2783, 14202, 4533, 2890\n) |&gt; \n  as_tibble()\n\n# 데이터프레임 확인\nincome_2020 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;     당비\n#&gt;    &lt;dbl&gt;\n#&gt; 1 135790\n\n\n\n\n코드# 추가로 만들어야 하는 데이터프레임\nexpense_2020 &lt;- tribble(\n  ~\"구분\", ~\"합계\", ~\"선거비용\", ~\"기본경비\", ~\"정책개발비\", ~\"조직활동비\", ~\"여성정치발전비\", ~\"그밖의경비\",\n  \"합계\", 248036, 31066, 115856, 14449, 58610, 5235, 22820,\n  \"더불어민주당\", 58549, 4058, 21682, 4274, 22438, 1891, 4206,\n  \"국민의힘\", 104155, 4844, 69579, 6410, 14364, 1877, 7081,\n  \"정의당\", 21042, 4709, 7384, 1180, 6345, 340, 1084,\n  \"국민의당\", 8512, 3911, 1022, 130, 415, 115, 2919,\n  \"열린민주당\", 9517, 3544, 685, 53, 603, 96, 4536,\n  \"기본소득당\", 633, 53, 341, 53, 165, 1, 20,\n  \"시대전환\", 197, 0, 121, 71, 2, 0, 3,\n  \"기타정당\", 45431, 9947, 15042, 2278, 14278, 915, 2971\n)\n\n# 데이터프레임 확인\nexpense_2020 |&gt; \n  summarise(선거비용 = sum(선거비용))\n#&gt; # A tibble: 1 × 1\n#&gt;   선거비용\n#&gt;      &lt;dbl&gt;\n#&gt; 1    62132"
  },
  {
    "objectID": "party_numbers.html#년-2",
    "href": "party_numbers.html#년-2",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(readxl)\n\nsido_party_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page01\")\n\nsido_party_2019 &lt;- sido_party_2019 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2019 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 8657559\n\n\n\n\n코드payer_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page02\")\n\npayer_2019 &lt;- payer_2019 |&gt; \n  filter(정당 != \"합계\") |&gt; \n  mutate(납부자수 = parse_number(납부자수))\n\npayer_2019 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 8657559\n\n\n\n\n코드income_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page03\")\n\nincome_2019 &lt;- income_2019 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2019 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 44581\n\n\n\n\n코드expense_2019 &lt;- read_excel(\"data/2019.xlsx\", sheet=\"page04\")\n\nexpense_2019 &lt;- expense_2019 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2019 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 113009"
  },
  {
    "objectID": "party_numbers.html#년-4",
    "href": "party_numbers.html#년-4",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\n# tribble 함수를 이용해 DataFrame 생성\nsido_party_2017 &lt;- tribble(\n  ~구분, ~합계, ~더불어민주당, ~자유한국당, ~국민의당, ~바른정당, ~정의당, ~민중당, ~대한애국당, ~가자코리아, ~경제애국당, ~공화당,\n  \"합계\", 7507952, 3568111, 3227708, 285023, 67053, 40362, 46539, 41685, 5288, 6779, 6568,\n  \"서울\", 1283838, 640138, 511970, 39119, 10777, 8224, 4684, 10272, 1114, 1185, 1034,\n  \"부산\", 360443, 135736, 190581, 8890, 2673, 1895, 2955, 2597, 1030, NA, NA,\n  \"대구\", 245098, 32984, 179375, 4147, 4557, 1796, 1120, 6200, 1059, NA, NA,\n  \"인천\", 361923, 135400, 188407, 6430, 3310, 2937, 1595, 2262, 1011, NA, NA,\n  \"광주\", 407488, 300064, 51398, 38655, 1419, 1443, 7131, 1090, NA, NA, NA,\n  \"대전\", 297531, 106025, 167572, 6366, 1451, 1928, 2206, 1920, 1072, NA, NA,\n  \"울산\", 183212, 34606, 135216, 2181, 2389, 1385, 3289, 1082, NA, NA, NA,\n  \"세종\", 24495, 13104, 9306, 1008, NA, NA, NA, NA, NA, NA, NA,\n  \"경기\", 1353048, 628929, 620356, 31616, 15947, 7171, 7839, 8970, 1031, 1159, 1069,\n  \"강원\", 264107, 80527, 162328, 7696, 1679, 1248, 1172, 1924, 1039, NA, NA,\n  \"충북\", 283900, 121696, 145490, 6021, 1358, 1003, 1106, 1293, NA, NA, NA,\n  \"충남\", 351195, 148353, 177742, 8025, 1922, 1115, 1554, 1412, 1093, NA, NA,\n  \"전북\", 674426, 545688, 63866, 48931, 1773, 2585, 2155, 1070, NA, NA, NA,\n  \"전남\", 561645, 427648, 50169, 66262, 1208, 3364, 6111, NA, NA, NA, NA,\n  \"경북\", 323115, 33684, 257338, 4417, 9145, 1920, 1575, 2248, 1180, NA, NA,\n  \"경남\", 391553, 115964, 251957, 4199, 5208, 1527, 1795, 1795, NA, NA, NA,\n  \"제주\", 140935, 67565, 64637, 2068, 2587, 1824, NA, NA, NA, NA, NA\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nsido_party_2017 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;      합계\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7507952\n\n\n\n\n코드# tribble 함수를 사용하여 데이터 프레임을 생성한다\npayer_2017 &lt;- tribble(\n  ~\"정당\", ~\"당원수\", ~\"납부자수\", ~\"당비납부\", ~\"비율(%)\", ~\"등록된시·도당수\",\n  \"합계\", 7507952, 1320976, NA, 17.6, 285,\n  \"더불어민주당\", 3568111, 834573, NA, 23.4, 17,\n  \"자유한국당\", 3227708, 335000, NA, 10.4, 17,\n  \"국민의당\", 285023, 44371, NA, 15.6, 16,\n  \"바른정당\", 67053, 29712, NA, 44.3, 16,\n  \"정의당\", 40362, 25687, NA, 63.6, 15,\n  \"민중당\", 46539, 25960, NA, 55.8, 15,\n  \"대한애국당\", 41685, 9579, NA, 23.0, 12,\n  \"가자코리아\", 5288, NA, NA, NA, 5,\n  \"경제애국당\", 6779, 6, NA, 0.1, 6,\n  \"공화당\", 6568, NA, NA, NA, 6,\n  \"국민대통합당\", 7161, NA, NA, NA, 6,\n  \"국민새정당\", 8983, NA, NA, NA, 8,\n  \"국민행복당\", 5253, 125, NA, 2.4, 5,\n  \"국제녹색당\", 12019, NA, NA, NA, 11,\n  \"그린불교연합당\", 5411, NA, NA, NA, 5,\n  \"기독당\", 6442, NA, NA, NA, 5,\n  \"기독자유당\", 9206, 2, NA, NA, 8,\n  \"노동당\", 11823, 4784, NA, 40.5, 7,\n  \"녹색당\", 9308, 5725, NA, 61.5, 5,\n  \"늘푸른한국당\", 20863, 262, NA, 1.3, 17,\n  \"대한민국당\", 6360, 134, NA, 2.1, 5,\n  \"민중민주당\", 6461, 19, NA, 0.3, 5,\n  \"사회민주당\", 4653, 38, NA, 0.8, 5,\n  \"새누리당\", 30603, 3784, NA, 12.4, 7,\n  \"우리미래\", 6269, 993, NA, 15.8, 5,\n  \"인권정당\", 6537, NA, NA, NA, 6,\n  \"진리대한당\", 5458, NA, NA, NA, 5,\n  \"친박연대\", 5257, NA, NA, NA, 5,\n  \"통일한국당\", 5787, 20, NA, 0.3, 5,\n  \"통합민주당\", 5262, NA, NA, NA, 5,\n  \"한국국민당\", 6832, 106, NA, 1.6, 6,\n  \"한나라당\", 5789, NA, NA, NA, 5,\n  \"한누리평화통일당\", 7064, NA, NA, NA, 7,\n  \"한반도미래연합\", 7392, NA, NA, NA, 7,\n  \"홍익당\", 6643, 96, NA, 1.4, 5\n) |&gt; \n  filter(정당 != \"합계\")\n\npayer_2017 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7507952\n\n\n\n\n코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수를 이용해 DataFrame 생성\nincome_2017 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`전년도이월`, ~`당비`, ~`기탁금`, ~`후원회기부금`, ~`보조금`, ~`차입금`, ~`기타`,\n  \"합 계\", 399421, 39181, 46017, 4479, 4859, 84276, 88290, 132319,\n  \"더 불 어 민 주 당\", 139442, 8239, 14040, 1444, 330, 24965, 40887, 49537,\n  \"자 유 한 국 당\", 124191, 25005, 12191, 1413, 294, 24583, 25143, 35562, \n  \"국 민 의 당\", 90282, 4620, 2097, 1342, 4, 17678, 19570, 44971,\n  \"바 른 정 당\", 16108, 32, 3273, 5, 903, 11483, 12, 400,\n  \"정 의 당\", 13652, 669, 4059, 275, 1446, 5492, 656, 1055,\n  \"민 중 당\", 5158, 125, 3160, 0, 790, 28, 595, 460,\n  \"대 한 애 국 당\", 945, 0, 521, 0, 400, 7, 2, 15,\n  \"기 타 정 당\", 9643, 491, 6676, 0, 692, 40, 1425, 319\n) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s\")) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nincome_2017\n#&gt; # A tibble: 8 × 9\n#&gt;   구분           합계 전년도이월  당비 기탁금 후원회기부금 보조금 차입금  기타\n#&gt;   &lt;chr&gt;         &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;        &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1 더불어민주당 139442       8239 14040   1444          330  24965  40887 49537\n#&gt; 2 자유한국당   124191      25005 12191   1413          294  24583  25143 35562\n#&gt; 3 국민의당      90282       4620  2097   1342            4  17678  19570 44971\n#&gt; 4 바른정당      16108         32  3273      5          903  11483     12   400\n#&gt; 5 정의당        13652        669  4059    275         1446   5492    656  1055\n#&gt; 6 민중당         5158        125  3160      0          790     28    595   460\n#&gt; 7 대한애국당      945          0   521      0          400      7      2    15\n#&gt; 8 기타정당       9643        491  6676      0          692     40   1425   319\n\n\n\n\n코드# tribble 함수를 이용해 DataFrame 생성\nexpense_2017 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`선거비용`, ~`기본경비`, ~`정책개발비`, ~`조직활동비`, ~`여성정치발전비`, ~`그밖의경비`,\n  \"합 계\", 366341, 133900, 76293, 16992, 42509, 4727, 91920,\n  \"더 불 어 민 주 당\", 132145, 46114, 24973, 4254, 15288, 1287, 40229,\n  \"자 유 한 국 당\", 109761, 32835, 27333, 8371, 11042, 1706, 28474,\n  \"국 민 의 당\", 83101, 41915, 9343, 2907, 7869, 918, 20149,\n  \"바 른 정 당\", 13437, 4774, 5121, 336, 2543, 536, 127,\n  \"정 의 당\", 12866, 3532, 5318, 1046, 1620, 274, 1076,\n  \"민 중 당\", 5016, 909, 1694, 18, 1624, 4, 767,\n  \"대 한 애 국 당\", 873, 0, 276, 0, 595, 0, 2,\n  \"기 타 정 당\", 9142, 3821, 2235, 60, 1928, 2, 1096\n) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s\")) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nexpense_2017\n#&gt; # A tibble: 8 × 8\n#&gt;   구분    합계 선거비용 기본경비 정책개발비 조직활동비 여성정치발전비 그밖의경비\n#&gt;   &lt;chr&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt;      &lt;dbl&gt;\n#&gt; 1 더불… 132145    46114    24973       4254      15288           1287      40229\n#&gt; 2 자유… 109761    32835    27333       8371      11042           1706      28474\n#&gt; 3 국민…  83101    41915     9343       2907       7869            918      20149\n#&gt; 4 바른…  13437     4774     5121        336       2543            536        127\n#&gt; 5 정의…  12866     3532     5318       1046       1620            274       1076\n#&gt; 6 민중…   5016      909     1694         18       1624              4        767\n#&gt; 7 대한…    873        0      276          0        595              0          2\n#&gt; 8 기타…   9142     3821     2235         60       1928              2       1096"
  },
  {
    "objectID": "party_numbers.html#년-5",
    "href": "party_numbers.html#년-5",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(readxl)\n\nsido_party_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page01\")\n\nsido_party_2016 &lt;- sido_party_2016 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2016 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 6101987\n\n\n\n\n코드payer_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page02\")\n\npayer_2016 &lt;- payer_2016 |&gt; \n  filter(정당 != \"합계\")\n\npayer_2016 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 6101987\n\n\n\n\n코드income_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page03\")\n\nincome_2016 &lt;- income_2016 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2016 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 42068\n\n\n\n\n코드expense_2016 &lt;- read_excel(\"data/2016.xlsx\", sheet=\"page04\")\n\nexpense_2016 &lt;- expense_2016 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2016 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 175825"
  },
  {
    "objectID": "party_numbers.html#년-7",
    "href": "party_numbers.html#년-7",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수로 DataFrame 생성\nsido_party_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`새누리당`, ~`새정치 민주연합`, ~`정의당`, ~`겨레자유`, ~`평화통일당 경제민주당`, ~`공화당`, ~`국제녹색당`,\n  \"합계\", 5245611, 2708085, 2430111, 18184, 5340, 6121, 6661, 11993,\n  \"서울\", 854469, 440230, 392397, 2870, 1073, 1119, 1031, 1080,\n  \"부산\", 261053, 155380, 100032, 1152, 0, 0, 1130, 1084,\n  \"대구\", 142209, 116729, 22132, 1274, 0, 0, 0, 0,\n  \"인천\", 264772, 164672, 88937, 1483, 1050, 1039, 0, 1198,\n  \"광주\", 290523, 50746, 236369, 0, 0, 0, 0, 1079,\n  \"대전\", 235967, 152724, 75706, 1105, 0, 1014, 1072, 0,\n  \"울산\", 128820, 112527, 14198, 1073, 0, 0, 0, 0,\n  \"세종\", 15216, 8942, 6274, 0, 0, 0, 0, 0,\n  \"경기\", 945114, 543051, 383963, 2756, 1031, 1489, 1068, 1062,\n  \"강원\", 189618, 136025, 47140, 1078, 1093, 0, 0, 1050,\n  \"충북\", 203365, 118325, 81530, 0, 0, 0, 1290, 1030,\n  \"충남\", 224028, 150430, 68173, 0, 1093, 0, 0, 1030,\n  \"전북\", 506132, 59028, 442007, 1554, 0, 0, 1070, 1190,\n  \"전남\", 405205, 45805, 354887, 1224, 0, 0, 0, 1092,\n  \"경북\", 214150, 184736, 23390, 1365, 0, 1460, 0, 1098,\n  \"경남\", 259914, 200703, 57202, 0, 0, 0, 0, 0,\n  \"제주\", 105056, 68032, 35774, 1250, 0, 0, 0, 0\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nsido_party_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;      합계\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5245611\n\n\n\n\n코드# tribble 함수를 사용하여 데이터 프레임을 생성한다\npayer_2014 &lt;- tribble(\n  ~\"정당\", ~\"당원수\", ~\"납부자수\", ~\"비율(%)\", ~\"시·도당수\",\n  \"합계\", 5245611, 591045, 11.2, 120,\n  \"새누리당\", 2708085, 253552, 9.4, 17,\n  \"새정치민주연합\", 2430111, 316836, 13.0, 17,\n  \"정의당\", 18184, 9921, 54.6, 12,\n  \"겨레자유평화통일당\", 5340, 0, NA, 5,\n  \"경제민주당\", 6121, 0, NA, 5,\n  \"공화당\", 6661, 35, 0.5, 6,\n  \"국제녹색당\", 11993, 0, NA, 11,\n  \"그린불교연합당\", 5155, 0, NA, 5,\n  \"기독민주당\", 5300, 6, 0.1, 5,\n  \"노동당\", 13015, 6552, 50.3, 7,\n  \"녹색당\", 6870, 4122, 60.0, 5,\n  \"대한민국당\", 6029, 0, NA, 5,\n  \"민주당\", 6225, 16, 0.3, 5,\n  \"새마을당\", 5549, 0, NA, 5,\n  \"새정치국민의당\", 5207, 5, 0.1, 5,\n  \"한나라당\", 5766, 0, NA, 5\n) |&gt; \n  filter(정당 != \"합계\")\n\npayer_2014 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5245611\n\n\n\n\n코드# tibble 패키지 로드\nlibrary(tibble)\n\n# tribble 함수로 DataFrame 생성\nincome_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`전년도이월`, ~`당비`, ~`기탁금`, ~`보조금`, ~`차입금`, ~`기타`,\n  \"합계\", 201388, 20935, 52086, 9907, 74343, 1186, 42931,\n  \"새누리당\", 97608, 8449, 26404, 4871, 36355, 220, 21309,\n  \"새정치민주연합\", 91737, 11392, 21284, 4466, 33831, 256, 20508,\n  \"정의당\", 8259, 560, 1647, 570, 4157, 514, 811,\n  \"기타정당\", 3784, 534, 2751, NA, NA, 196, 303\n) |&gt; \n  filter(구분 != \"합계\")\n\n# DataFrame 확인\nincome_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 201388\n\n\n\n\n코드\nexpense_2014 &lt;- tribble(\n  ~`구분`, ~`합계`, ~`선거비용`, ~`기본경비`, ~`정책개발비`, ~`조직활동비`, ~`여성정치발전비`, ~`그밖의경비`,\n  \"합계\", 159263, 16152, 44310, 14208, 69070, 3693, 11830,\n  \"새누리당\", 77691, 7373, 21257, 9292, 30536, 1832, 7401,\n  \"새정치민주연합\", 70591, 7963, 18955, 4101, 34372, 1646, 3554,\n  \"정의당\", 7592, 422, 2689, 793, 2778, 215, 695,\n  \"기타정당\", 3389, 394, 1409, 22, 1384, NA, 180\n) |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2014 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 159263"
  },
  {
    "objectID": "party_numbers.html#년-3",
    "href": "party_numbers.html#년-3",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(readxl)\n\nsido_party_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page01\")\n\nsido_party_2018 &lt;- sido_party_2018 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2018 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7825929\n\n\n\n\n코드payer_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page02\")\n\npayer_2018 &lt;- payer_2018 |&gt; \n  filter(정당 != \"합계\") |&gt; \n  mutate(납부자수 = parse_number(납부자수))\n\npayer_2018 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 7825929\n\n\n\n\n코드income_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page03\")\n\nincome_2018 &lt;- income_2018 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2018 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 71631\n\n\n\n\n코드expense_2018 &lt;- read_excel(\"data/2018.xlsx\", sheet=\"page04\")\n\nexpense_2018 &lt;- expense_2018 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2018 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;     합계\n#&gt;    &lt;dbl&gt;\n#&gt; 1 194196"
  },
  {
    "objectID": "party_numbers.html#년-6",
    "href": "party_numbers.html#년-6",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(readxl)\n\nsido_party_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page01\")\n\nsido_party_2015 &lt;- sido_party_2015 |&gt; \n  filter(구분 != \"합계\")\n\nsido_party_2015 |&gt; \n  summarise(당원수 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5837061\n\n\n\n\n코드payer_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page02\")\n\npayer_2015 &lt;- payer_2015 |&gt; \n  filter(정당 != \"합계\")\n\npayer_2015 |&gt; \n  summarise(당원수 = sum(당원수))\n#&gt; # A tibble: 1 × 1\n#&gt;    당원수\n#&gt;     &lt;dbl&gt;\n#&gt; 1 5743354\n\n\n\n\n코드income_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page03\")\n\nincome_2015 &lt;- income_2015 |&gt; \n  filter(구분 != \"합계\")\n\nincome_2015 |&gt; \n  summarise(당비 = sum(당비))\n#&gt; # A tibble: 1 × 1\n#&gt;    당비\n#&gt;   &lt;dbl&gt;\n#&gt; 1 22154\n\n\n\n\n코드expense_2015 &lt;- read_excel(\"data/2015.xlsx\", sheet=\"page04\")\n\nexpense_2015 &lt;- expense_2015 |&gt; \n  filter(구분 != \"합계\")\n\nexpense_2015 |&gt; \n  summarise(합계 = sum(합계))\n#&gt; # A tibble: 1 × 1\n#&gt;    합계\n#&gt;   &lt;dbl&gt;\n#&gt; 1 82361"
  },
  {
    "objectID": "party_numbers.html#데이터-정제",
    "href": "party_numbers.html#데이터-정제",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드object_list &lt;- ls()\n\nparty_members &lt;- object_list[str_detect(object_list, pattern = \"^sido_party_\\\\d{4}\")]\n\nparty_members_list &lt;- mget(party_members)\n\nparty_members_sido_tbl &lt;- party_members_list |&gt; \n  enframe() |&gt; \n  mutate(year = parse_number(name)) |&gt; \n  mutate(data = map(value, select, 1:4)) |&gt; \n  unnest(data) |&gt; \n  pivot_longer(새누리당:국민의힘, names_to = \"정당\", values_to = \"당원수\") |&gt; \n  select(year, 구분, 합계, 정당, 당원수) |&gt;\n  mutate(정당명 = case_when(\n    str_detect(정당, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(정당, \"더불어민주당|민주당|(새정치 민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt; \n  filter(!is.na(당원수)) |&gt; \n  select(year, 구분, 합계, 정당명, 당원수)\n\n\n\n\n코드\npayers &lt;- object_list[str_detect(object_list, pattern = \"^payer_\\\\d{4}\")]\n\npayers_list &lt;- mget(payers)\n\npayers_members_tbl &lt;- payers_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, 1:3)) |&gt; \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(정당, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(정당, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\",\n         납부자수 &gt; 10000) |&gt; \n  select(연도, 당원수, 정당명, 납부자수)\n\npayers_members_tbl\n#&gt; # A tibble: 16 × 4\n#&gt;     연도  당원수 정당명   납부자수\n#&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;\n#&gt;  1  2014 2708085 국민의힘   253552\n#&gt;  2  2014 2430111 민주당     316836\n#&gt;  3  2015 3020776 국민의힘   378463\n#&gt;  4  2015 2671954 민주당     256197\n#&gt;  5  2016 2705938 민주당     287114\n#&gt;  6  2016 2991365 국민의힘   329952\n#&gt;  7  2017 3568111 민주당     834573\n#&gt;  8  2017 3227708 국민의힘   335000\n#&gt;  9  2018 3579111 민주당     878114\n#&gt; 10  2018 3340979 국민의힘   430736\n#&gt; 11  2019 4065408 민주당    1026804\n#&gt; 12  2019 3475372 국민의힘   373342\n#&gt; 13  2020 4053466 민주당     896296\n#&gt; 14  2020 3489924 국민의힘   347322\n#&gt; 15  2021 4853266 민주당    1295909\n#&gt; 16  2021 4070005 국민의힘   609090\n\n\n\n\n코드\nincome &lt;- object_list[str_detect(object_list, pattern = \"^income_\\\\d{4}\")]\n\nincome_list &lt;- mget(income)\n\nincome_party_tbl &lt;- income_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, c(구분, 합계, 당비, 기탁금, 보조금, 차입금))) |&gt;  \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(구분, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(구분, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\",\n         당비 &gt; 5000) |&gt; \n  select(연도, 정당명, 합계, 당비, 기탁금, 보조금, 차입금)\n\nincome_party_tbl\n#&gt; # A tibble: 16 × 7\n#&gt;     연도 정당명     합계  당비 기탁금 보조금 차입금\n#&gt;    &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n#&gt;  1  2014 국민의힘  97608 26404   4871  36355    220\n#&gt;  2  2014 민주당    91737 21284   4466  33831    256\n#&gt;  3  2015 국민의힘  56108 11494   2198  19570      0\n#&gt;  4  2015 민주당    47523  6125   1999  17747      0\n#&gt;  5  2016 민주당    76835 11793   2482  29225  15000\n#&gt;  6  2016 국민의힘  86286 17553   2805  33118      0\n#&gt;  7  2017 민주당   139442 14040   1444  24965  40887\n#&gt;  8  2017 국민의힘 124191 12191   1413  24583  25143\n#&gt;  9  2018 민주당    93243 37614   1269  29669   2028\n#&gt; 10  2018 국민의힘  82894 14969   1293  27415   4854\n#&gt; 11  2019 민주당    58981 19933    647  13822      0\n#&gt; 12  2019 국민의힘  47916  9869    642  13593    500\n#&gt; 13  2020 민주당    95045 31211    305  32706   1840\n#&gt; 14  2020 국민의힘 120989 13383    350  36115  43897\n#&gt; 15  2021 민주당    89396 28402    348  21060      0\n#&gt; 16  2021 국민의힘  57990 12030    305  18500      0\n\n\n\n\n코드\nexpense &lt;- object_list[str_detect(object_list, pattern = \"^expense_\\\\d{4}\")]\n\nexpense_list &lt;- mget(expense)\n\nexpense_party_tbl &lt;- expense_list |&gt; \n  enframe() |&gt; \n  mutate(data = map(value, select, c(구분, 합계, 선거비용, 기본경비, 정책개발비, 조직활동비))) |&gt;  \n  unnest(data) |&gt; \n  mutate(연도 = parse_number(name)) |&gt; \n  mutate(정당명 = case_when(\n    str_detect(구분, \"국민의힘|새누리당|자유한국당\") ~ \"국민의힘\",\n    str_detect(구분, \"더불어민주당|(새정치민주연합)\") ~ \"민주당\",\n    TRUE ~ \"기타정당\"\n  )) |&gt;\n  filter(정당명 != \"기타정당\") |&gt;\n  select(연도, 정당명, 합계, 선거비용, 기본경비, 정책개발비, 조직활동비) \n\nexpense_party_tbl\n#&gt; # A tibble: 16 × 7\n#&gt;     연도 정당명     합계 선거비용 기본경비 정책개발비 조직활동비\n#&gt;    &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n#&gt;  1  2014 국민의힘  77691     7373    21257       9292      30536\n#&gt;  2  2014 민주당    70591     7963    18955       4101      34372\n#&gt;  3  2015 국민의힘  39564        0    18903       8332       6662\n#&gt;  4  2015 민주당    33818      110    17273       4179      10102\n#&gt;  5  2016 민주당    68294     4588    37645       3223      20197\n#&gt;  6  2016 국민의힘  61772     4705    19855       8631      22875\n#&gt;  7  2017 민주당   132145    46114    24973       4254      15288\n#&gt;  8  2017 국민의힘 109761    32835    27333       8371      11042\n#&gt;  9  2018 민주당    70685     8840    22146       3768      29149\n#&gt; 10  2018 국민의힘  59805     7060    20458       6514      13521\n#&gt; 11  2019 민주당    38308        0    20317       3420      12599\n#&gt; 12  2019 국민의힘  36202        0    15981       6744       8673\n#&gt; 13  2020 민주당    58549     4058    21682       4274      22438\n#&gt; 14  2020 국민의힘 104155     4844    69579       6410      14364\n#&gt; 15  2021 민주당    55624        0    24578       5354      23348\n#&gt; 16  2021 국민의힘  44224        0    20789       9175       9817"
  },
  {
    "objectID": "party_numbers.html#당원",
    "href": "party_numbers.html#당원",
    "title": "지도제작 대회",
    "section": "\n2.1 당원",
    "text": "2.1 당원\n\n코드\nparty_members_sido_tbl |&gt; \n  ggplot(aes(x = year, y = 당원수, color = 정당명, group = 정당명)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(구분)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    labs(x = \"\",\n         y = \"당원수\",\n         title = \"양당 시도별 당원수 추세\",\n         caption = \"출처: 중앙선관위 '정당의 활동개황 및 회계보고'\") +\n    scale_y_continuous(labels = scales::comma) +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\" = \"blue\"))"
  },
  {
    "objectID": "party_numbers.html#납부당원",
    "href": "party_numbers.html#납부당원",
    "title": "지도제작 대회",
    "section": "\n2.2 납부당원",
    "text": "2.2 납부당원\n\n코드\npayers_members_tbl |&gt; \n  pivot_longer(c(당원수, 납부자수), names_to = \"구분\", values_to = \"당원수\") |&gt;\n  mutate(구분 = factor(구분, levels = c(\"당원수\", \"납부자수\"))) |&gt; \n  ggplot(aes(x = 연도, y = 당원수, color = 정당명, group = 정당명)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(구분)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    labs(x = \"\",\n         y = \"당원수\",\n         title = \"양당 당비 납부자 추세\",\n         caption = \"출처: 중앙선관위 '정당의 활동개황 및 회계보고'\") +\n    scale_y_continuous(labels = scales::comma) +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\" = \"blue\"))"
  },
  {
    "objectID": "party_numbers.html#수입내역-9",
    "href": "party_numbers.html#수입내역-9",
    "title": "지도제작 대회",
    "section": "\n2.3 수입내역",
    "text": "2.3 수입내역\n\n코드\nincome_party_tbl |&gt; \n  pivot_longer(합계:차입금, names_to = \"구분\", values_to = \"금액\") |&gt;\n  # mutate(구분 = factor(구분, levels = c(\"합계\", \"당비\"))) |&gt; \n  ggplot(aes(x = 연도, y = 금액, color = 정당명, group = 정당명)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(구분)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    labs(x = \"\",\n         y = \"당원수\",\n         title = \"양당 수입내역 추세\",\n         caption = \"출처: 중앙선관위 '정당의 활동개황 및 회계보고'\") +\n    scale_y_continuous(labels = scales::comma) +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\" = \"blue\"))"
  },
  {
    "objectID": "party_numbers.html#지출내역-9",
    "href": "party_numbers.html#지출내역-9",
    "title": "지도제작 대회",
    "section": "\n2.4 지출내역",
    "text": "2.4 지출내역\n\n코드\nexpense_party_tbl |&gt; \n  pivot_longer(합계:조직활동비, names_to = \"구분\", values_to = \"금액\") |&gt;\n  ggplot(aes(x = 연도, y = 금액, color = 정당명, group = 정당명)) +\n    geom_point() +\n    geom_line() +\n    facet_wrap(vars(구분)) +\n    theme_minimal() +\n    theme(legend.position = \"top\") +\n    labs(x = \"\",\n         y = \"금액(백만원)\",\n         title = \"양당 지출내역 추세\",\n         caption = \"출처: 중앙선관위 '정당의 활동개황 및 회계보고'\") +\n    scale_y_continuous(labels = scales::comma) +\n    scale_color_manual(values = c(\"국민의힘\" = \"red\",\n                                  \"민주당\" = \"blue\"))"
  }
]