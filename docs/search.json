[
  {
    "objectID": "approval_rate.html",
    "href": "approval_rate.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "윤석열 대통령\n문재인 대통령\n박근혜 대통령\n이명박 대통령\n노무현 대통령\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\nextrafont::loadfonts()\n\nyoon_url &lt;- 'https://namu.wiki/w/%EC%9C%A4%EC%84%9D%EC%97%B4/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nyoon_html &lt;- read_html(yoon_url)\n\nyoon_list &lt;- yoon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nyoon_raw &lt;- yoon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 54) |&gt; \n  mutate(조사회사 = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nyoon_tbl &lt;- yoon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nyoon_gg_tbl &lt;- yoon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\", \"전국지표조사\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\",\n         조사기간 &gt;= as.Date(\"2022-05-07\"))\n\nelection_interval &lt;- -interval(ymd(\"2024-04-10\"), ymd('2023-08-05'))\n\nelection_period   &lt;- as.period(election_interval, unit = \"month\") \n\nremaining_ymd &lt;- glue::glue(\"남은 기간:\\n {month(election_period)}월 {day(election_period)}일\")\n\nyoon_approval_gg &lt;- yoon_gg_tbl  |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = yoon_gg_tbl |&gt; filter(조사기간 == max(조사기간)), \n               aes(x = 조사기간, y = 지지율, color= 긍부정), size = 1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +\n    geom_vline(xintercept = as.Date(\"2024-04-10\"), linetype = 1, color = \"gray50\") +    \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"윤석열 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    expand_limits(x = c(as.Date(\"2022-05-10\"), as.Date(\"2027-05-09\"))) +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\")  +\n    geom_text(aes(x=as.Date(\"2023-12-01\"), y = 60, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2024-08-01\"), y = 65, label = \"제22대 총선\\n4월10일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n\nyoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/윤석열.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nyoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(rvest)\n\nmoon_url &lt;- 'https://namu.wiki/w/%EB%AC%B8%EC%9E%AC%EC%9D%B8/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nmoon_html &lt;- read_html(moon_url)\n\nmoon_list &lt;- moon_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nmoon_raw &lt;- moon_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(id = row_number(),\n         조사회사 = ifelse(id &gt;6, \"리얼미터\", \"한국갤럽\")) \n\nclean_tbl &lt;- function(dataframe) {\n  three_tbl &lt;- dataframe |&gt; \n    janitor::clean_names(ascii = FALSE) |&gt; \n    select(1:3) |&gt; \n    set_names(c(\"조사기간\", \"긍정\", \"부정\")) |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{4}년\"))\n}\n\nmoon_tbl &lt;- moon_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 250) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\nconvert_korean_date &lt;- function(korean_date) {\n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year, month, and week\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  week &lt;- as.numeric(gsub(\"주\", \"\", components[3]))\n  \n  # Construct the date - the first day of the month and year, then add weeks\n  date &lt;- make_date(year, month, 1) + weeks(week - 1)\n  \n  return(date)\n}\n  \nmoon_approval_gg &lt;- moon_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사회사 = factor(조사회사, levels = c(\"한국갤럽\", \"리얼미터\"))) |&gt; \n  filter(조사회사 == \"한국갤럽\") |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    # facet_wrap(~조사회사) +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"문재인 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nmoon_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/문재인.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nmoon_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\npark_url &lt;- 'https://namu.wiki/w/%EB%B0%95%EA%B7%BC%ED%98%9C/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\npark_html &lt;- read_html(park_url)\n\npark_list &lt;- park_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\npark_raw &lt;- park_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\npark_tbl &lt;- park_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 200) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") \n\npark_approval_gg &lt;- park_tbl |&gt; \n  mutate(조사기간 = map(조사기간, convert_korean_date)) |&gt; \n  unnest(조사기간) |&gt; \n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"박근혜 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\npark_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/박근혜.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\npark_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nlee_url &lt;- 'https://namu.wiki/w/%EC%9D%B4%EB%AA%85%EB%B0%95/%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nlee_html &lt;- read_html(lee_url)\n\nlee_list &lt;- lee_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nlee_raw &lt;- lee_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\nconvert_ym_date &lt;- function(korean_date) {\n  \n  # Split the input into components\n  components &lt;- strsplit(korean_date, \" \")[[1]]\n  \n  # Extract year and month\n  year &lt;- as.numeric(gsub(\"년\", \"\", components[1]))\n  month &lt;- as.numeric(gsub(\"월\", \"\", components[2]))\n  \n  # Construct the date - the first day of the month and year\n  date &lt;- make_date(year, month, 15)\n  \n  return(date)\n}\n\nlee_tbl &lt;- lee_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 90) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n\nprevious_date &lt;- ymd(\"2012-04-11\") - election_period\n\n\nlee_current_tbl &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt; \n  filter(조사기간 == previous_date+9)\n\nlee_approval_gg &lt;- lee_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_point(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_text(data = lee_current_tbl, aes(x = 조사기간, y = 지지율, color= 긍부정,\n                                          label = 지지율), vjust = -1.5) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"이명박 대통령 지지율 추세\") +\n    theme(legend.position = \"top\") +\n    scale_x_date(date_labels =  \"%Y\", breaks = \"1 year\") +\n    geom_vline(xintercept = as.Date(\"2012-04-11\"), linetype = 1, color = \"gray50\") +\n    geom_text(aes(x=as.Date(\"2011-12-01\"), y = 45, label = remaining_ymd), \n              color = \"gray10\", size = 3, family = \"MaruBrui\") +\n    geom_text(aes(x=as.Date(\"2012-08-01\"), y = 65, label = \"제19대 총선\\n4월11일\"), \n              color = \"gray10\", size = 3, family = \"MaruBrui\")  \n  \nlee_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/이명박.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nlee_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드\nrho_url &lt;- 'https://namu.wiki/w/%ED%8B%80:%ED%95%9C%EA%B5%AD%EA%B0%A4%EB%9F%BD%20%EB%85%B8%EB%AC%B4%ED%98%84%20%EB%8C%80%ED%86%B5%EB%A0%B9%20%EA%B5%AD%EC%A0%95%EC%A7%80%EC%A7%80%EC%9C%A8'\n\nrho_html &lt;- read_html(rho_url)\n\nrho_list &lt;- rho_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrho_raw &lt;- rho_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(nrow &gt; 30) |&gt; \n  mutate(조사회사 = \"한국갤럽\") \n\n\nrho_tbl &lt;- rho_raw |&gt; \n  mutate(data = map(value, clean_tbl)) |&gt; \n  filter(nrow &gt; 20) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt; \n  mutate(긍정 = parse_number(긍정),\n         부정 = parse_number(부정)) |&gt; \n  fill(긍정, .direction = \"down\") |&gt; \n  fill(부정, .direction = \"down\") |&gt; \n  separate(조사기간, into = c(\"시작\", \"끝\"), sep = \"-\") |&gt; \n  select(-끝) |&gt; \n  mutate(조사기간 = case_when(str_detect(시작, \"주$\") ~ map(시작, convert_korean_date), \n                              TRUE ~                    map(시작, convert_ym_date))) |&gt; \n  unnest(조사기간) |&gt; \n  mutate(조사기간 = as.Date(조사기간, origin = \"1970-01-01\"))\n  \n\nrho_approval_gg &lt;- rho_tbl |&gt; \n  pivot_longer(긍정:부정, names_to = \"긍부정\", values_to = \"지지율\") |&gt;\n  ggplot(aes(x = 조사기간, y = 지지율, color= 긍부정)) +\n    geom_hline(yintercept = 50, linetype = 2, color = \"gray50\") +  \n    geom_line() +\n    scale_color_manual(values = c(\"긍정\" = \"blue\", \"부정\" = \"red\")) +\n    labs(x = \"\",\n         y = \"지지율(%)\",\n         title = \"노무현 대통령 지지율 추세\") +\n    theme(legend.position = \"top\")\n\nrho_approval_gg\n\nragg::agg_jpeg(\"images/대통령지지율/노무현.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nrho_approval_gg\ndev.off()\n\n\n\n\n\n\n\n코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#결합",
    "href": "approval_rate.html#결합",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드rho_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\nlee_tbl |&gt; select(조사회사, 조사기간, 긍정, 부정)\n\npark_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\nmoon_tbl |&gt; pivot_wider(names_from = 긍부정, values_from = 지지율) |&gt; \n  filter(조사회사 == \"한국갤럽\")\n\n\n\n\n대통령 지지율\n이명박/윤석열\n\n\n\n\n코드library(patchwork)\n\nall_approval_gg &lt;- (rho_approval_gg + lee_approval_gg + park_approval_gg)  /\n(moon_approval_gg + yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/전체대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\nall_approval_gg\ndev.off()\n\n\n\n\n\n\n\n\n\n코드two_approval_gg &lt;- (lee_approval_gg)  / (yoon_approval_gg)\n\nragg::agg_jpeg(\"images/대통령지지율/두대통령.jpeg\",\n              width = 10, height = 7, units = \"in\", res = 600)\ntwo_approval_gg\ndev.off()"
  },
  {
    "objectID": "approval_rate.html#년-기준",
    "href": "approval_rate.html#년-기준",
    "title": "지도제작 대회",
    "section": "\n2.1 1년 기준",
    "text": "2.1 1년 기준\n\n코드\nrm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20{2006}%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8')\n\nrm_html &lt;- read_html(rm_url)\n\nrm_list &lt;- rm_html |&gt; \n  html_nodes('table') |&gt; \n  html_table(header = TRUE)\n\nrm_raw &lt;- rm_list |&gt; \n  enframe() |&gt; \n  mutate(nrow = map_int(value, nrow)) |&gt; \n  filter(name == 1) |&gt; \n  mutate(조사회사 = \"리얼미터\") \n\nremove_last &lt;- function(vector) {\n  if(vector[length(vector)] ==\"\") {\n    vector[1:(length(vector)-1)]\n  } else {\n    vector\n  }\n}\n\nmake_dataframe &lt;- function(x_vec, y_vec) {\n  data.frame(x_vec, y_vec)\n}\n\n## 정당명과 지지율\nrm_tbl &lt;- rm_raw |&gt; \n  mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n  select(조사회사, data) |&gt; \n  unnest(data) |&gt;\n  select(contains(\"정당지지율\"), x_2) |&gt; \n  set_names(c(\"조사기간\", \"지지율\")) |&gt; \n  mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                      str_split(지지율, \"●\"), NA)) |&gt; \n  mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n  mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n  fill(정당명, .direction = \"down\") |&gt; \n  filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n  mutate(지지율 = str_squish(지지율),\n         정당명 = str_squish(정당명)) |&gt; \n  mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n         지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n  mutate(지지율수 = map_int(지지율, length),\n         정당수   = map_int(정당명, length)) |&gt; \n  mutate(지지율 = ifelse(지지율수 == 정당수, 지지율,\n                      map(지지율, remove_last))) |&gt; \n  filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n  mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n  select(조사기간, data)\n  \nrm_tbl |&gt; \n  unnest(data)"
  },
  {
    "objectID": "approval_rate.html#함수",
    "href": "approval_rate.html#함수",
    "title": "지도제작 대회",
    "section": "\n2.2 함수",
    "text": "2.2 함수\n\n코드\nget_party_data &lt;- function(year = \"2012\") {\n  \n  rm_url &lt;- glue::glue('https://namu.wiki/w/%ED%8B%80:%EB%A6%AC%EC%96%BC%EB%AF%B8%ED%84%B0%20',\n                       '{year}',\n                       '%EB%85%84%20%EC%A0%95%EB%8B%B9%EC%A7%80%EC%A7%80%EC%9C%A8') |&gt; as.character()\n\n  rm_html &lt;- read_html(rm_url)\n  \n  rm_list &lt;- rm_html |&gt; \n    html_nodes('table') |&gt; \n    html_table(header = TRUE)\n  \n  rm_raw &lt;- rm_list |&gt; \n    enframe() |&gt; \n    mutate(nrow = map_int(value, nrow)) |&gt; \n    filter(name == 1) |&gt; \n    mutate(조사회사 = \"리얼미터\") \n  \n  remove_last &lt;- function(vector) {\n    \n    if(length(vector) &lt; 3){\n      vector\n    } else if(vector[length(vector)] ==\"\") {\n      vector[1:(length(vector)-1)]\n    } else {\n      vector\n    }\n  }\n  \n  make_dataframe &lt;- function(x_vec, y_vec) {\n    min_row &lt;- min(length(x_vec), length(y_vec))\n    data.frame(x_vec = x_vec[1:min_row], y_vec = y_vec[1:min_row])\n  }\n  \n  ## 정당명과 지지율\n  rm_tbl &lt;- rm_raw |&gt; \n    mutate(data = map(value, janitor::clean_names, ascii = FALSE)) |&gt; \n    select(조사회사, data) |&gt; \n    unnest(data) |&gt;\n    select(contains(\"정당지지율\"), x_2) |&gt; \n    set_names(c(\"조사기간\", \"지지율\")) |&gt; \n    mutate(정당명 = ifelse(str_detect(조사기간, \"●\"), \n                        str_split(지지율, \"●\"), NA)) |&gt; \n    mutate(정당명 = map_chr(정당명, paste0, collapse=\"\")) |&gt; \n    mutate(정당명 = ifelse(정당명 == \"NA\", NA, 정당명)) |&gt; \n    fill(정당명, .direction = \"down\") |&gt; \n    filter(str_detect(조사기간, \"^\\\\d{1,2}월\")) |&gt; \n    mutate(지지율 = str_squish(지지율),\n           정당명 = str_squish(정당명)) |&gt; \n    mutate(정당명 = str_split(정당명, pattern = \"\\\\s+/\\\\s+\"),\n           지지율 = str_split(지지율, pattern = \"%\"))  |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 == 정당수, 지지율, map(지지율, remove_last))) |&gt; \n    filter(abs(지지율수 - 정당수)  &lt; 2) |&gt; \n    mutate(지지율수 = map_int(지지율, length),\n           정당수   = map_int(정당명, length)) |&gt; \n    mutate(지지율 = ifelse(지지율수 != 정당수, NA, 지지율)) |&gt; \n    fill(지지율, .direction = \"up\") |&gt; \n    mutate(data = map2(지지율, 정당명, make_dataframe)) |&gt; \n    select(조사기간, data)\n\n  \n  rm_df &lt;- rm_tbl |&gt; unnest(data) |&gt; mutate(x_vec = parse_number(x_vec)) |&gt; \n    rename(지지율 = x_vec,\n           정당   = y_vec) |&gt; \n    mutate(연도 = year)\n  \n  return(rm_df)\n}\n\nget_party_data(\"2018\")"
  },
  {
    "objectID": "approval_rate.html#결합-1",
    "href": "approval_rate.html#결합-1",
    "title": "지도제작 대회",
    "section": "\n2.3 결합",
    "text": "2.3 결합\n\n코드\nsafely_get_party_data &lt;- safely(get_party_data, otherwise = \"오류\")\n\nyear &lt;- 2006:2023\n\nparty_raw &lt;- year |&gt; \n  enframe()  |&gt; \n  mutate(data = map(value, safely_get_party_data))\n\nparty_tbl &lt;- party_raw |&gt; \n  mutate(result = map(data, \"result\")) |&gt; \n  mutate(check = map_dbl(result, is_tibble)) |&gt; \n  unnest(result) |&gt; \n  select(연도, 조사기간, 정당, 지지율)\n\nparty_tbl |&gt; \n  write_csv(\"data/리얼미터_정당지지율.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 참고 웹사이트\n\n#30DayMapChallenge 🌎🌏🌎\n30 DAY MAP CHALLENGE IN R\nAbdoulMa/30DayMapChallenge\n\n2 원천 지도\n\n\n국토교통부\n\n\nLX 한국국토정보공사, 구 한국지적공사\n\n공간정보산업진흥원\n\nVWorld, 공간정보오픈플랫폼\n\n\n\n국토지리정보원\n\n국토정보플랫폼\n\n국가공간정보포털\n\n오픈마켓, 90m 표고 데이터: [국토지리정보원] 수치표고모델(DEM)_90M\n\n\n\n\n\n\n대한민국 행정동 경계: admdongkor\n대한민국 최신 행정구역(SHP) 다운로드\n\n3 세계지도\n출처: Fixing maps library data for Pacific centred (0°-360° longitude) display\n\n\n세계지도: giscoR\n세계지도: maps\n세계지도: rnaturalearth\n아시아\n대한민국\n태평양 중심\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\n\n# download.file(url = \"https://gisco-services.ec.europa.eu/distribution/v2/countries/geojson/CNTR_RG_01M_2016_4326.geojson\", destfile = \"data/world.geojson\", mode = \"w\")\n# \n# world_sf &lt;- giscoR::gisco_get_countries(\n#   epsg = \"4326\",\n#   region = \"Asia\",\n#   resolution = \"1\",\n#   cache = TRUE, \n#   update_cache = TRUE\n# )\n\nworld_sf &lt;- sf::st_read(\"data/world.geojson\")\n#&gt; Reading layer `world' from data source `D:\\tcs\\map_challenge\\data\\world.geojson' using driver `GeoJSON'\n#&gt; Simple feature collection with 257 features and 6 fields\n#&gt; Geometry type: MULTIPOLYGON\n#&gt; Dimension:     XY\n#&gt; Bounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.66498\n#&gt; Geodetic CRS:  WGS 84\n\nplot(st_geometry(world_sf))\n\n\n\n\n\n\n\n\n\n\n코드# 필요한 라이브러리를 불러옵니다.\nlibrary(ggplot2)\nlibrary(maps)\n\n# 월드맵 데이터를 불러옵니다.\nworld_map &lt;- map_data(\"world\")\n\n# ggplot2를 사용해 지도를 그립니다.\nggplot() +\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = \"white\", color = \"black\") +\n  coord_cartesian(xlim = c(-180, 180)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n코드library(rnaturalearth)\n\n# Get the world map data\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Shift the map to center on the Pacific Ocean\nworld_trans &lt;- st_transform(st_wrap_dateline(world, options = c(\"WRAPDATELINE=YES\", \"DATELINEOFFSET=-180\")), crs = \"+proj=robin\")\n\n# Plot the world map\nggplot(data = world_trans) +\n  geom_sf() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n코드asia_sf &lt;- giscoR::gisco_get_countries(\n  epsg = \"4326\",\n  region = \"Asia\",\n  resolution = \"60\",\n  cache = TRUE,\n  update_cache = TRUE\n)\n\nplot(st_geometry(asia_sf))\n\n\n\n\n\n\n\n\n\n\n코드library(tidyverse)\nlibrary(sf)\nlibrary(giscoR)\n\nkorea &lt;- giscoR::gisco_get_countries(\n    resolution = \"1\",\n    country = \"KOR\"\n) |&gt;\n    sf::st_transform(\"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\")\n\nplot(st_geometry(korea))\n\n\n\n\n\n\n\n\n\n\n코드library(maps)\n\nplot.map&lt;- function(database,center,...){\n    Obj &lt;- map(database,...,plot=F)\n    coord &lt;- cbind(Obj[[1]],Obj[[2]])\n\n    # split up the coordinates\n    id &lt;- rle(!is.na(coord[,1]))\n    id &lt;- matrix(c(1,cumsum(id$lengths)),ncol=2,byrow=T)\n    polygons &lt;- apply(id,1,function(i){coord[i[1]:i[2],]})\n\n    # split up polygons that differ too much\n    polygons &lt;- lapply(polygons,function(x){\n        x[,1] &lt;- x[,1] + center\n        x[,1] &lt;- ifelse(x[,1]&gt;180,x[,1]-360,x[,1])\n        if(sum(diff(x[,1])&gt;300,na.rm=T) &gt;0){\n          id &lt;- x[,1] &lt; 0\n          x &lt;- rbind(x[id,],c(NA,NA),x[!id,])\n       }\n       x\n    })\n    # reconstruct the object\n    polygons &lt;- do.call(rbind,polygons)\n    Obj[[1]] &lt;- polygons[,1]\n    Obj[[2]] &lt;- polygons[,2]\n\n    map(Obj,...)\n}\n\nplot.map(\"world\", center=210, col=\"white\",bg=\"gray\",\n         fill=TRUE, ylim=c(-60,90),mar=c(0,0,0,0))"
  },
  {
    "objectID": "km_BitGPT.html",
    "href": "km_BitGPT.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60\n\n\n\n\n\n\n\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0\n\n\n\n\n\n\n\n데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "realmeter_metro.html",
    "href": "realmeter_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))\n\n\n\n\n코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))\n\n\n\n\n코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)\n\n\n\n\n코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-링크",
    "href": "realmeter_metro.html#pdf-다운로드-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nrm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/1/')\n\nrm_html &lt;- read_html(rm_url)\n\n## PDF 다운로드 링크 ---------------\nrm_links_text &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_text()\n\nrm_links &lt;- rm_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr(\"href\")\n\nrm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n\nrm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n  filter(str_detect(text, \"주간통계표\")) |&gt; \n  mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n  mutate(filename = str_extract(link, '[^/]+\\\\.pdf'))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드",
    "href": "realmeter_metro.html#pdf-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드fs::dir_create(\"data/realmeter/\")\n\ndownload.file(url = rm_pdf_tbl$link[1], mode='wb', \n              destfile = glue::glue(\"data/realmeter/{rm_pdf_tbl$filename[1]}\"))"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-함수",
    "href": "realmeter_metro.html#pdf-다운로드-함수",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드link &lt;- rm_pdf_tbl$link[2]\nfilename &lt;- rm_pdf_tbl$filename[2]\n\ndownload_pdfs &lt;- function(link, filename) {\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\ndownload_pdfs(link, filename)"
  },
  {
    "objectID": "realmeter_metro.html#전체-다운로드",
    "href": "realmeter_metro.html#전체-다운로드",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\nget_reports &lt;- function(page=\"1\"){\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\nget_reports(157)\n\npdf_pages &lt;- 1:157\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  slice(156) |&gt; \n  mutate(data = map(page, get_reports)) \n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  pull(link)\n\npdf_report_raw |&gt; \n  unnest(data) |&gt; \n  mutate(report = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#다운로드-목록",
    "href": "realmeter_metro.html#다운로드-목록",
    "title": "지도제작 대회",
    "section": "\n2.1 다운로드 목록",
    "text": "2.1 다운로드 목록\n\n코드library(tidyverse)\nlibrary(rvest)\n\n## 함수\nget_reports &lt;- function(page=\"1\"){\n  \n  cat(\"\\n----------------------------\\n\", \n      \"     \", page, \" 페이지\",\n      \"\\n----------------------------\\n\")\n  \n  rm_url &lt;- glue::glue('http://www.realmeter.net/category/pdf/page/{page}/')\n\n  rm_html &lt;- read_html(rm_url)\n  \n  ## PDF 다운로드 링크 ---------------\n  rm_links_text &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_text()\n  \n  rm_links &lt;- rm_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr(\"href\")\n  \n  rm_pdf_raw &lt;- tibble('text' = rm_links_text, 'link' = rm_links)\n  \n  rm_pdf_tbl &lt;- rm_pdf_raw |&gt; \n    filter(str_detect(text, \"주간통계표\")) |&gt; \n    # mutate(text = str_extract(text, \"\\\\d{2}년\\\\s+\\\\d{1,2}월\\\\s+\\\\d{1}주\"))  |&gt; \n    mutate(filename = str_extract(link, '[^/]+\\\\.pdf')) |&gt; \n    mutate(link = ifelse(str_detect(link, \"^http\"), link, \n                         glue::glue(\"http://realmeter.cafe24.com{link}\")))\n  \n  return(rm_pdf_tbl)\n}\n\n## 다운로드 페이지\n\npdf_pages &lt;- 1:158\n\npdf_report_raw &lt;- pdf_pages |&gt; \n  enframe(value = \"page\")  |&gt; \n  mutate(data = map(page, get_reports))\n\npdf_report_tbl &lt;- pdf_report_raw |&gt; \n  select(data) |&gt; \n  mutate(nrow = map_int(data, nrow)) |&gt; \n  filter(nrow !=0) |&gt; \n  unnest(data)\n\npdf_report_tbl |&gt; \n  write_rds(\"data/realmeter/pdf_report_tbl.rds\")"
  },
  {
    "objectID": "realmeter_metro.html#pdf-다운로드-1",
    "href": "realmeter_metro.html#pdf-다운로드-1",
    "title": "지도제작 대회",
    "section": "\n2.2 PDF 다운로드",
    "text": "2.2 PDF 다운로드\n\n코드pdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\n\ndownload_pdfs &lt;- function(link, filename) {\n  cat(\"\\n----------------------------\\n\", \n      \"     \", filename, \": 파일명\",\n      \"\\n----------------------------\\n\")\n  download.file(url = link, mode='wb', \n              destfile = glue::glue(\"data/realmeter/{filename}\"))\n}\n\npdf_report_tbl |&gt; \n  mutate(pdfs = walk2(link, filename, download_pdfs))"
  },
  {
    "objectID": "realmeter_metro.html#윤석열-대통령-이후",
    "href": "realmeter_metro.html#윤석열-대통령-이후",
    "title": "지도제작 대회",
    "section": "\n3.1 윤석열 대통령 이후",
    "text": "3.1 윤석열 대통령 이후\n\n코드library(tidyverse)\nlibrary(fs)\n\npdf_report_tbl &lt;- \n  read_rds(\"data/realmeter/pdf_report_tbl.rds\")\n\nlocal_path_file &lt;- fs::dir_ls(\"data/realmeter/\") |&gt; \n  enframe(value = \"path_file\") |&gt; \n  mutate(filename = path_file(name)) |&gt; \n  select(path_file, filename)\n\n# 날짜 변환 함수\nconvert_to_date &lt;- function(d) {\n  year &lt;- as.numeric(sub(\"년.*\", \"\", d)) + 2000  # 2000을 더해서 4자리 연도를 만듭니다.\n  month &lt;- as.numeric(sub(\".* (\\\\d+)월.*\", \"\\\\1\", d))\n  week &lt;- as.numeric(sub(\".*월 (\\\\d+)주\", \"\\\\1\", d))\n  start_date &lt;- ymd(paste(year, month, 1, sep = \"-\"))\n  \n  return(start_date + days(7 * (week - 1)))\n}\n\n\nyoon_pdf &lt;- pdf_report_tbl |&gt; \n  left_join(local_path_file) |&gt; \n  select(text, path_file, filename) |&gt; \n  mutate(date = str_extract(text, pattern = '(\\\\d+년 \\\\d+월 \\\\d+주)')) |&gt; \n  mutate(date = convert_to_date(date)) |&gt; \n  filter(date &gt; as.Date(\"2022-05-01\"),\n         str_detect(filename, \"주간통계표\")) |&gt; \n  select(date, path_file, filename) |&gt; \n  arrange(date)\n\nyoon_pdf"
  },
  {
    "objectID": "realmeter_metro.html#응답자-특성",
    "href": "realmeter_metro.html#응답자-특성",
    "title": "지도제작 대회",
    "section": "\n3.2 응답자 특성",
    "text": "3.2 응답자 특성\n\n코드library(pdftools)\nlibrary(openai)\n\nraw_text &lt;- pdftools::pdf_text(pdf = \"data/realmeter/주간통계표22년5월2주최종_y51w.pdf\")\n\ndemo_text &lt;- raw_text |&gt; \n  enframe() |&gt; \n  mutate(value = str_squish(value)) |&gt; \n  # filter(str_detect(value, \"^(?=.*보수)(?=.*중도)(?=.*진보)\")) |&gt; \n  filter(str_detect(value, \"응답자\\\\s+특성\")) |&gt; \n  pull(value)\n\nsystem_task &lt;- glue::glue(\"당신은 통계 데이터 전문가입니다.\n                          당신에게 텍스트 형식의 표로 주어졌을 때,\n                          설명은 없이 텍스트를 표로 바꾸는 것입니다.\",\n                          \"텍스트 형식의 표는 다음과 같습니다.\",\n                          \"데이터의 상단에는 표의 칼럼명이 위치하고 첫번째 혹은 \n                          두번째 칼럼은 다차원표의 범주(Level)에 대한 정보를 담고 있고\n                          나머지 셀은 숫자로 구성됩니다.\")\n                          # \"'만18세 이상 29세 이하'는 하나의 값입니다.\")\n\ngpt_response &lt;- create_chat_completion(\n            # model = \"gpt-3.5-turbo\",\n            model = \"gpt-4\",\n            messages = list(\n              list(\n                \"role\" = \"system\",\n                \"content\" = system_task\n              ),\n              list(\n                \"role\" = \"user\",\n                \"content\" = demo_text\n              )\n            ),\n            temperature = 0,\n            top_p = 1,\n            n = 1,\n            openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),\n            openai_organization = NULL\n          )\n\n\ngpt_response |&gt; \n  write_rds(\"data/realmeter_deom.rds\")\n\n\n\n코드library(tidyverse)\nlibrary(openai)\n\ngpt_response &lt;- \n  read_rds(\"data/realmeter_deom.rds\")\n\nresult_md &lt;- gpt_response |&gt; \n  pluck('choices') |&gt; \n  pull('message.content')  |&gt; \n  str_split(\"\\n\") %&gt;%\n  .[[1]]\n  \nresult_md\n#&gt;  [1] \"| 구 분 | 사례수(명) | 비율(%) | 가중값 사례수(명) | 가중값 비율(%) | 배율 |\"\n#&gt;  [2] \"|---|---|---|---|---|---|\"                                                   \n#&gt;  [3] \"| 전 체 | 2526 | 100.0 | 2526 | 100.0 | 1.00 |\"                              \n#&gt;  [4] \"| 남 자 | 1566 | 62.0 | 1252 | 49.6 | 0.80 |\"                                \n#&gt;  [5] \"| 여 자 | 960 | 38.0 | 1274 | 50.4 | 1.33 |\"                                 \n#&gt;  [6] \"| 만18세이상 | 300 | 11.9 | 437 | 17.3 | 1.46 |\"                             \n#&gt;  [7] \"| 2 9 세 이 하 | 292 | 11.6 | 382 | 15.1 | 1.31 |\"                           \n#&gt;  [8] \"| 4 0 대 | 404 | 16.0 | 467 | 18.5 | 1.16 |\"                                 \n#&gt;  [9] \"| 5 0 대 | 626 | 24.8 | 493 | 19.5 | 0.79 |\"                                 \n#&gt; [10] \"| 6 0 대 | 545 | 21.6 | 410 | 16.2 | 0.75 |\"                                 \n#&gt; [11] \"| 7 0 세 이 상 | 359 | 14.2 | 337 | 13.3 | 0.94 |\"                           \n#&gt; [12] \"| 서 울 | 619 | 24.5 | 478 | 18.9 | 0.77 |\"                                  \n#&gt; [13] \"| 인 천 / 경 기 | 768 | 30.4 | 798 | 31.6 | 1.04 |\"                          \n#&gt; [14] \"| 대전/세종/충청 | 231 | 9.1 | 268 | 10.6 | 1.16 |\"                          \n#&gt; [15] \"| 강 원 | 79 | 3.1 | 74 | 2.9 | 0.94 |\"                                      \n#&gt; [16] \"| 부산/울산/경남 | 315 | 12.5 | 381 | 15.1 | 1.21 |\"                         \n#&gt; [17] \"| 대 구 / 경 북 | 223 | 8.8 | 248 | 9.8 | 1.11 |\"                            \n#&gt; [18] \"| 광 주 / 전 라 | 257 | 10.2 | 248 | 9.8 | 0.96 |\"                           \n#&gt; [19] \"| 제 주 | 34 | 1.3 | 31 | 1.2 | 0.91 |\"\n\n\nmarkdown_to_df &lt;- function(markdown_table) {\n  \n  # Remove rows with only dashes (assuming they're separator rows)\n  markdown_table &lt;- markdown_table[!str_detect(markdown_table, \"^\\\\|[-]+\\\\|\")]\n\n  # Split each line into its components based on the pipe delimiter\n  split_lines &lt;- str_split(markdown_table, \"\\\\|\")\n  \n  # Extract headers and data\n  headers &lt;- str_trim(unlist(split_lines[1]))\n  data &lt;- do.call(rbind, split_lines[-1])\n  \n  # Convert data to dataframe and assign column names\n  df &lt;- as.data.frame(data, stringsAsFactors = FALSE)\n  colnames(df) &lt;- headers\n  \n  return(df)\n}\n\ndemo_raw &lt;- markdown_to_df(result_md)\n\ndeom_tbl &lt;- demo_raw |&gt; \n  janitor::clean_names(ascii= FALSE) |&gt; \n  select(!starts_with(\"x\")) |&gt; \n  set_names(c(\"구분\", \"완료_사례\", \"완료_비율\", \"가중_사례\", \"가중_비율\", \"가중값\")) |&gt; \n  as_tibble() |&gt; \n  mutate_all(str_squish) |&gt; \n  mutate(구분 = str_remove_all(구분, \"\\\\s+\")) |&gt; \n  mutate(구분 = case_when(str_detect(구분, \"만18세이상\") ~ \"20대\",\n                          str_detect(구분, \"29세이하\") ~ \"30대\",\n                          TRUE ~ 구분))\n\ndeom_tbl |&gt; \n  gt::gt()\n\n\n\n\n\n구분\n      완료_사례\n      완료_비율\n      가중_사례\n      가중_비율\n      가중값\n    \n\n\n전체\n2526\n100.0\n2526\n100.0\n1.00\n\n\n남자\n1566\n62.0\n1252\n49.6\n0.80\n\n\n여자\n960\n38.0\n1274\n50.4\n1.33\n\n\n20대\n300\n11.9\n437\n17.3\n1.46\n\n\n30대\n292\n11.6\n382\n15.1\n1.31\n\n\n40대\n404\n16.0\n467\n18.5\n1.16\n\n\n50대\n626\n24.8\n493\n19.5\n0.79\n\n\n60대\n545\n21.6\n410\n16.2\n0.75\n\n\n70세이상\n359\n14.2\n337\n13.3\n0.94\n\n\n서울\n619\n24.5\n478\n18.9\n0.77\n\n\n인천/경기\n768\n30.4\n798\n31.6\n1.04\n\n\n대전/세종/충청\n231\n9.1\n268\n10.6\n1.16\n\n\n강원\n79\n3.1\n74\n2.9\n0.94\n\n\n부산/울산/경남\n315\n12.5\n381\n15.1\n1.21\n\n\n대구/경북\n223\n8.8\n248\n9.8\n1.11\n\n\n광주/전라\n257\n10.2\n248\n9.8\n0.96\n\n\n제주\n34\n1.3\n31\n1.2\n0.91"
  },
  {
    "objectID": "nbs_metro.html",
    "href": "nbs_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists\n\n\n\n\n코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links\n\n\n\n\n코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#자료실-목록",
    "href": "nbs_metro.html#자료실-목록",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\nlibrary(rvest)\n\nnbs_url &lt;- \"http://nbsurvey.kr/files\"\n\nnbs_bbs &lt;- read_html(nbs_url)\n\nnbs_bbs_raw &lt;- nbs_bbs |&gt; \n  html_nodes('.pagination-large') |&gt; \n  html_nodes('.btn-page') |&gt; \n  html_nodes('a') |&gt; \n  html_attr('href')\n\nnbs_bbs_lists &lt;- c('http://nbsurvey.kr/files?mode=list', nbs_bbs_raw[2:length(nbs_bbs_raw)], 'http://nbsurvey.kr/files?mode=list&board_page=11')\n\nnbs_bbs_lists"
  },
  {
    "objectID": "nbs_metro.html#페이지별-보고서-링크",
    "href": "nbs_metro.html#페이지별-보고서-링크",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드\npage_html &lt;- read_html(nbs_bbs_list[2])\n\npage_links &lt;- page_html |&gt; \n  html_nodes(\"a\") |&gt; \n  html_attr('href') \n\npage_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n\npage_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n\npage_report_links"
  },
  {
    "objectID": "nbs_metro.html#보고서-파일",
    "href": "nbs_metro.html#보고서-파일",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(httr)\n\nreport_html &lt;- read_html(page_report_links[1])\n\nreport_filename &lt;- report_html |&gt; \n  html_nodes('a.file-download') |&gt; \n  html_text() |&gt; \n  str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n\n\nreport_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                  \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                  \"&type=download\",\n                                  \"&file_name={I(report_filename)}\")\n\n# fs::dir_create(\"data/NBS\")\n\ndownload.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))"
  },
  {
    "objectID": "nbs_metro.html#한-페이지",
    "href": "nbs_metro.html#한-페이지",
    "title": "지도제작 대회",
    "section": "\n2.1 한 페이지",
    "text": "2.1 한 페이지\n\n코드\n# for(i in 1:length(page_report_links)) {\n#   cat(\"\\n\", i, \"----------\", page_report_links[i], \"\\n\")\n#   download_zip_report(page_report_links[i])\n# }\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "nbs_metro.html#젠체-페이지",
    "href": "nbs_metro.html#젠체-페이지",
    "title": "지도제작 대회",
    "section": "\n2.2 젠체 페이지",
    "text": "2.2 젠체 페이지\n\n코드\nnbs_bbs_lists\n\nget_page_links &lt;- function(nbs_bbs_list) {\n  \n  page_html &lt;- read_html(nbs_bbs_list)\n\n  page_links &lt;- page_html |&gt; \n    html_nodes(\"a\") |&gt; \n    html_attr('href') \n  \n  page_report_links_raw &lt;- page_links[str_detect(page_links, \"vid=\")] \n  \n  page_report_links &lt;- page_report_links_raw[!is.na(page_report_links_raw)]\n  \n  page_report_links\n}\n\nnbs_bbs_tbl &lt;- nbs_bbs_lists |&gt; \n  enframe(value = \"page_url\") |&gt; \n  mutate(data = map(page_url, get_page_links))\n\nnbs_bbs_tbl |&gt; \n  unnest(data)\n\n\ndownload_zip_report &lt;- function(page_report_link) {\n  \n  report_html &lt;- read_html(page_report_link)\n\n  report_filename &lt;- report_html |&gt; \n    html_nodes('a.file-download') |&gt; \n    html_text() |&gt; \n    str_extract(pattern = \"\\\\((NBS)\\\\)_\\\\d+차_결과\\\\.zip\")\n  \n  \n  report_download_url &lt;- glue::glue(\"http://nbsurvey.kr/wp-content/plugins/mangboard/includes/mb-file.php\",\n                                    \"?path=MjAyMy8wMy8zMC9GMjc1XyhOQlMpXzkz7LCoX%2BqysOqzvC56aXA%3D\",\n                                    \"&type=download\",\n                                    \"&file_name={I(report_filename)}\")\n  \n  download.file(report_download_url, mode='wb', destfile = glue::glue(\"data/NBS/{report_filename}\"))\n}\n\nwalk(page_report_links, download_zip_report)"
  },
  {
    "objectID": "gallop_metro.html",
    "href": "gallop_metro.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "1 데이터"
  },
  {
    "objectID": "km_BitGPT.html#원본-데이터",
    "href": "km_BitGPT.html#원본-데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "행정안전부 주민등록 인구 및 세대현황 웹사이트에서 광명시 최근 데이터를 가져온다.\n\n코드library(tidyverse)\nlibrary(readxl)\n\nraw_data &lt;- read_excel(\"data/202307_202307_연령별인구현황_월간.xlsx\", skip =3) \n\nraw_data |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(1:10) |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n행정기관코드\n      행정기관\n      총_인구수\n      연령구간인구수_4\n      x0세_5\n      x1세_6\n      x2세_7\n      x3세_8\n      x4세_9\n      x5세_10\n    \n\n\n4121000000\n경기도 경기도 광명시\n280,986\n280,986\n1,373\n1,470\n1,582\n1,588\n1,729\n1,924\n\n\n4121051000\n경기도 광명시 광명1동\n56\n56\n0\n0\n0\n0\n0\n0\n\n\n4121052000\n경기도 광명시 광명2동\n2,953\n2,953\n9\n7\n11\n5\n5\n8\n\n\n4121054000\n경기도 광명시 광명3동\n9,869\n9,869\n29\n21\n20\n20\n23\n24\n\n\n4121055000\n경기도 광명시 광명4동\n8,114\n8,114\n35\n29\n44\n27\n28\n35\n\n\n4121056000\n경기도 광명시 광명5동\n12,206\n12,206\n41\n40\n64\n51\n49\n60"
  },
  {
    "objectID": "km_BitGPT.html#가공데이터",
    "href": "km_BitGPT.html#가공데이터",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  head() |&gt; \n  gt::gt()\n\n\n\n\n\n시점\n      행정동\n      성별\n      나이\n      인구수\n    \n\n\n2023-07-15\n광명1동\n남자\n0\n0\n\n\n2023-07-15\n광명1동\n남자\n1\n0\n\n\n2023-07-15\n광명1동\n남자\n2\n0\n\n\n2023-07-15\n광명1동\n남자\n3\n0\n\n\n2023-07-15\n광명1동\n남자\n4\n0\n\n\n2023-07-15\n광명1동\n남자\n5\n0"
  },
  {
    "objectID": "km_BitGPT.html#챗gpt-데이터-변환",
    "href": "km_BitGPT.html#챗gpt-데이터-변환",
    "title": "지도제작 대회",
    "section": "",
    "text": "데이터를 가공한 후 챗GPT Code Interpreter 분석용으로 변환시켜 데이터를 전송한다.\n\n코드pop_tbl |&gt; \n  write_csv(\"data/kwangmyung_pop.csv\")\n\n\n\n\n\n\nCSV 파일 다운로드"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수",
    "href": "km_BitGPT.html#연도별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.1 연도별 인구수",
    "text": "4.1 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#연도별-인구수-1",
    "href": "km_BitGPT.html#연도별-인구수-1",
    "title": "지도제작 대회",
    "section": "\n4.2 연도별 인구수",
    "text": "4.2 연도별 인구수\n\n코드library(tidyverse)\n\npop_tbl &lt;- \n  read_rds(\"data/kwangmyung_pop.rds\")\n\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수)) +\n    geom_line(color=\"skyblue\", size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#동별-인구수",
    "href": "km_BitGPT.html#동별-인구수",
    "title": "지도제작 대회",
    "section": "\n4.3 동별 인구수",
    "text": "4.3 동별 인구수\n\n코드\npop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  group_by(연도, 행정동) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=연도, y=인구수, color = 행정동, group=행정동)) +\n    geom_line(size=1.5) +\n    geom_point(color=\"blue\", size=3) +\n    labs(title=\"광명시 동별 인구수 변화\", x=\"\", y=\"인구수(명)\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma)"
  },
  {
    "objectID": "km_BitGPT.html#유권자-비율-1",
    "href": "km_BitGPT.html#유권자-비율-1",
    "title": "지도제작 대회",
    "section": "\n4.4 유권자 비율",
    "text": "4.4 유권자 비율\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  ggplot(aes(x=\"\", y=인구수, fill = 유권자)) +\n    geom_bar(width = 1, stat = \"identity\") +\n    coord_polar(\"y\")  +\n    labs(title=\"광명시 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::comma) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\"))"
  },
  {
    "objectID": "km_BitGPT.html#내림차순-유권자수",
    "href": "km_BitGPT.html#내림차순-유권자수",
    "title": "지도제작 대회",
    "section": "\n4.5 내림차순 유권자수",
    "text": "4.5 내림차순 유권자수\n\n코드pop_tbl |&gt; \n  mutate(시점 = ymd(시점)) |&gt; \n  mutate(연도 = year(시점)) |&gt; \n  filter(연도 == max(연도)) |&gt; \n  mutate(유권자 = ifelse(나이 &gt;=18, \"유권자\", \"비유권자\"),\n         유권자 = factor(유권자, levels = c(\"비유권자\", '유권자'))) |&gt; \n  group_by(행정동, 유권자) |&gt; \n  summarise(인구수 = sum(인구수)) |&gt; \n  mutate(유권자비율 = 인구수/sum(인구수)) |&gt; \n  ungroup() |&gt; \n    \n  # pivot_wider(names_from = 유권자, values_from = 인구수) |&gt; \n  # mutate(유권자비율 = 유권자/(비유권자+유권자)) |&gt; \n  # arrange(desc(유권자비율))\n\n  # 시각화 -----------------\n  ggplot(aes(x=fct_reorder2(행정동, 유권자, 유권자비율), y=유권자비율, fill = 유권자)) +\n    geom_col() +\n    coord_flip() +\n    labs(title=\"광명시 동별 유권자 비율\",\n         caption = \"데이터 출처: 행정안전부 주민등록 인구 및 세대현황\",\n         fill = \"구분\",\n         x = \"\") +\n    theme_minimal() +\n    scale_y_continuous(labels = scales::percent) +\n    scale_fill_manual(values = c(유권자 = \"blue\", 비유권자=\"red\")) +\n    theme(legend.position = \"top\")"
  },
  {
    "objectID": "minju_party.html",
    "href": "minju_party.html",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드library(gt)\nlibrary(gtExtras)\nlibrary(tidyverse)\n\n# Creating the tibble using tribble\nage_raw &lt;- tribble(\n  ~`연령대`, ~비율,\n  \"10대후반\", \"0.1%\",\n  \"20_24\", \"1.7%\",\n  \"25_29\", \"4.2%\",\n  \"30_34\", \"5.3%\",\n  \"35_39\", \"6.3%\",\n  \"40_45\", \"9.8%\",\n  \"45_49\", \"12.2%\",\n  \"50_54\", \"15.8%\",\n  \"55_59\", \"13.8%\",\n  \"60_64\", \"12.8%\",\n  \"65_69\", \"8.1%\",\n  \"70+\", \"10.0%\"\n)\n\nage_tbl &lt;- age_raw |&gt; \n  mutate(비율 = parse_number(비율)/100) |&gt; \n  mutate(당원수 = 비율 * 2454332)\n\nage_tbl |&gt; \n  gt::gt() |&gt; \n  fmt_percent(columns = 비율, decimals = 1) |&gt; \n  fmt_integer(columns = 당원수) |&gt; \n  cols_align(\"center\") |&gt; \n  ## 표 전체 합계 -------------------------------------\n  grand_summary_rows(\n    columns = 당원수,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_integer(.),\n    side = \"top\"\n  )  |&gt; \n  grand_summary_rows(\n    columns = 비율,\n    fns =  list(label = \"합계\", fn = \"sum\"),\n    fmt = ~ fmt_percent(., decimals = 0),\n    side = \"top\"\n  ) |&gt; \n  gt_theme_538()\n\n\n\n\n\n\n      연령대\n      비율\n      당원수\n    \n\n\n합계\n—\n100%\n2,456,786\n\n\n\n10대후반\n0.1%\n2,454\n\n\n\n20_24\n1.7%\n41,724\n\n\n\n25_29\n4.2%\n103,082\n\n\n\n30_34\n5.3%\n130,080\n\n\n\n35_39\n6.3%\n154,623\n\n\n\n40_45\n9.8%\n240,525\n\n\n\n45_49\n12.2%\n299,429\n\n\n\n50_54\n15.8%\n387,784\n\n\n\n55_59\n13.8%\n338,698\n\n\n\n60_64\n12.8%\n314,154\n\n\n\n65_69\n8.1%\n198,801\n\n\n\n70+\n10.0%\n245,433\n\n\n\n\n\n\n\n\n코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()"
  },
  {
    "objectID": "minju_party.html#시도별",
    "href": "minju_party.html#시도별",
    "title": "지도제작 대회",
    "section": "",
    "text": "코드# tribble을 사용하여 tibble 생성\nsido_raw &lt;- tribble(\n  ~`권리당원`, ~`당원수`, ~`비중`, ~`선거인수`, ~`비중`,\n  \"서울\", 444775, \"18.1%\", 8378339, \"18.9%\",\n  \"부산\", 54950, \"2.2%\", 2916832, \"6.6%\",\n  \"대구\", 21011, \"0.9%\", 2044579, \"4.6%\",\n  \"인천\", 88387, \"3.6%\", 2534338, \"5.7%\",\n  \"광주\", 185858, \"7.6%\", 1206886, \"2.7%\",\n  \"대전\", 67016, \"2.7%\", 1233557, \"2.8%\",\n  \"울산\", 36175, \"1.5%\", 941189, \"2.1%\",\n  \"세종\", 12459, \"0.5%\", 292259, \"0.7%\",\n  \"경기\", 500892, \"20.4%\", 11497206, \"26.0%\",\n  \"강원\", 61088, \"2.5%\", 1336080, \"3.0%\",\n  \"충북\", 67330, \"2.7%\", 1368779, \"3.1%\",\n  \"충남\", 121512, \"5.0%\", 1803096, \"4.1%\",\n  \"전북\", 326518, \"13.3%\", 1532133, \"3.5%\",\n  \"전남\", 304151, \"12.4%\", 1580098, \"3.6%\",\n  \"경북\", 22126, \"0.9%\", 2268707, \"5.1%\",\n  \"경남\", 77845, \"3.2%\", 2804287, \"6.3%\",\n  \"제주\", 60667, \"2.5%\", 565084, \"1.3%\"\n)\n\nsido_raw |&gt; \n  janitor::clean_names(ascii = FALSE) |&gt; \n  select(시도명 = 권리당원, 당원수, 선거인수) |&gt; \n  pivot_longer(당원수:선거인수, names_to = \"구분\", values_to = \"인구수\") |&gt; \n  group_by(구분) |&gt; \n  mutate(비율 = 인구수/sum(인구수)) |&gt; \n  # 시각화\n  ggplot(aes(x = fct_reorder(시도명, -비율), y = 비율, color = 구분, group = 구분)) +\n    geom_point() +\n    geom_line()"
  }
]